                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Tue Feb 27 00:22:22 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _triframes
                             41 	.globl _tripaltick
                             42 	.globl _tripal
                             43 	.globl _tri_inited
                             44 	.globl _pbt
                             45 	.globl _pbx
                             46 	.globl _bonc
                             47 	.globl _bo
                             48 	.globl _byy
                             49 	.globl _bxx
                             50 	.globl _bt
                             51 	.globl _by
                             52 	.globl _bx
                             53 	.globl _prevby
                             54 	.globl _prevbx
                             55 	.globl _prevy
                             56 	.globl _prevx
                             57 	.globl _dbly
                             58 	.globl _buffer
                             59 	.globl _boxes_init
                             60 	.globl _anim_init
                             61 	.globl _enderdir
                             62 	.globl _ender
                             63 	.globl _ff2
                             64 	.globl _ff1
                             65 	.globl _bulbflipper
                             66 	.globl _twinited
                             67 	.globl _ff
                             68 	.globl _ly
                             69 	.globl _lx
                             70 	.globl _linenum
                             71 	.globl _flof
                             72 	.globl _btab
                             73 	.globl _bty
                             74 	.globl _btx
                             75 	.globl _bsy
                             76 	.globl _bsx
                             77 	.globl _block_init
                             78 	.globl _cc
                             79 	.globl _yofff
                             80 	.globl _cmd
                             81 	.globl _tick
                             82 	.globl _vbicount
                             83 	.globl _boxes_palette
                             84 	.globl _tf_palette
                             85 	.globl _twister_palette
                             86 	.globl _block_palette
                             87 	.globl _cur_palette
                             88 	.globl _scratch
                             89 	.globl _packbuffer
                             90 	.globl _tri_lookup_y
                             91 	.globl _tri_lookup_x
                             92 	.globl _sintab
                             93 	.globl _font_w
                             94 	.globl _font_y
                             95 	.globl _font_x
                             96 	.globl _tri_side2
                             97 	.globl _tri_side1
                             98 	.globl _tri_dia
                             99 	.globl _tri_up
                            100 	.globl _tri_center
                            101 	.globl _sintabx
                            102 ;--------------------------------------------------------
                            103 ; special function registers
                            104 ;--------------------------------------------------------
                            105 ;--------------------------------------------------------
                            106 ;  ram data
                            107 ;--------------------------------------------------------
                            108 	.area _DATA
   0000                     109 _sintab::
   0000                     110 	.ds 256
   0100                     111 _tri_lookup_x::
   0100                     112 	.ds 32
   0120                     113 _tri_lookup_y::
   0120                     114 	.ds 64
   0160                     115 _packbuffer::
   0160                     116 	.ds 12000
   3040                     117 _scratch::
   3040                     118 	.ds 128
   30C0                     119 _cur_palette::
   30C0                     120 	.ds 32
   30E0                     121 _block_palette::
   30E0                     122 	.ds 32
   3100                     123 _twister_palette::
   3100                     124 	.ds 32
   3120                     125 _tf_palette::
   3120                     126 	.ds 32
   3140                     127 _boxes_palette::
   3140                     128 	.ds 32
   3160                     129 _vbicount::
   3160                     130 	.ds 2
   3162                     131 _tick::
   3162                     132 	.ds 2
   3164                     133 _cmd::
   3164                     134 	.ds 15
   3173                     135 _isNthBitSet_mask_1_1:
   3173                     136 	.ds 8
   317B                     137 _yofff::
   317B                     138 	.ds 1
   317C                     139 _cc::
   317C                     140 	.ds 1
   317D                     141 _flipper:
   317D                     142 	.ds 2
   317F                     143 _ymmmf:
   317F                     144 	.ds 2
   3181                     145 _block_init::
   3181                     146 	.ds 1
   3182                     147 _bsx::
   3182                     148 	.ds 2
   3184                     149 _bsy::
   3184                     150 	.ds 2
   3186                     151 _btx::
   3186                     152 	.ds 2
   3188                     153 _bty::
   3188                     154 	.ds 2
   318A                     155 _btab::
   318A                     156 	.ds 32
   31AA                     157 _flof::
   31AA                     158 	.ds 2
   31AC                     159 _linenum::
   31AC                     160 	.ds 2
   31AE                     161 _lx::
   31AE                     162 	.ds 1
   31AF                     163 _ly::
   31AF                     164 	.ds 1
   31B0                     165 _ff::
   31B0                     166 	.ds 2
   31B2                     167 _twinited::
   31B2                     168 	.ds 2
   31B4                     169 _bulbflipper::
   31B4                     170 	.ds 2
   31B6                     171 _ff1::
   31B6                     172 	.ds 2
   31B8                     173 _ff2::
   31B8                     174 	.ds 2
   31BA                     175 _ender::
   31BA                     176 	.ds 2
   31BC                     177 _enderdir::
   31BC                     178 	.ds 2
   31BE                     179 _xo:
   31BE                     180 	.ds 2
   31C0                     181 _yo:
   31C0                     182 	.ds 2
   31C2                     183 _po:
   31C2                     184 	.ds 2
   31C4                     185 _fffaaa:
   31C4                     186 	.ds 2
   31C6                     187 _anim_init::
   31C6                     188 	.ds 2
   31C8                     189 _boxes_init::
   31C8                     190 	.ds 1
   31C9                     191 _buffer::
   31C9                     192 	.ds 2
   31CB                     193 _dbly::
   31CB                     194 	.ds 2
   31CD                     195 _prevx::
   31CD                     196 	.ds 2
   31CF                     197 _prevy::
   31CF                     198 	.ds 2
   31D1                     199 _prevbx::
   31D1                     200 	.ds 2
   31D3                     201 _prevby::
   31D3                     202 	.ds 2
   31D5                     203 _bx::
   31D5                     204 	.ds 2
   31D7                     205 _by::
   31D7                     206 	.ds 2
   31D9                     207 _bt::
   31D9                     208 	.ds 2
   31DB                     209 _bxx::
   31DB                     210 	.ds 2
   31DD                     211 _byy::
   31DD                     212 	.ds 2
   31DF                     213 _bo::
   31DF                     214 	.ds 2
   31E1                     215 _bonc::
   31E1                     216 	.ds 2
   31E3                     217 _pbx::
   31E3                     218 	.ds 2
   31E5                     219 _pbt::
   31E5                     220 	.ds 2
   31E7                     221 _tri_inited::
   31E7                     222 	.ds 1
   31E8                     223 _tripal::
   31E8                     224 	.ds 9
   31F1                     225 _tripaltick::
   31F1                     226 	.ds 1
   31F2                     227 _triframes::
   31F2                     228 	.ds 2
                            229 ;--------------------------------------------------------
                            230 ; overlayable items in  ram 
                            231 ;--------------------------------------------------------
                            232 	.area _OVERLAY
                            233 ;--------------------------------------------------------
                            234 ; external initialized ram data
                            235 ;--------------------------------------------------------
                            236 ;--------------------------------------------------------
                            237 ; global & static initialisations
                            238 ;--------------------------------------------------------
                            239 	.area _HOME
                            240 	.area _GSINIT
                            241 	.area _GSFINAL
                            242 	.area _GSINIT
                            243 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r73s31            244 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            245 	call	__initrleblock
   0006 08                  246 	.db	8
   0007 01 02 04 08 10 20   247 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  248 	.db	0
                            249 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            250 	ld	hl,#_sintab
   0013 CDr00s00            251 	call	__initrleblock
   0016 3B                  252 	.db	59
   0017 00 03 06 09 0C 0F   253 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   254 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   255 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   256 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   257 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   258 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   259 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            260 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               261 	.db	#-5,#0x7E
   0054 01                  262 	.db	1
   0055 7F                  263 	.db	0x7F
   0056 FB 7E               264 	.db	#-5,#0x7E
   0058 75                  265 	.db	117
   0059 7D 7D 7C 7B 7B 7A   266 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   267 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   268 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   269 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   270 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   271 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   272 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   273 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   274 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   275 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   276 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   277 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   278 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   279 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      280 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               281 	.db	#-5,#0x82
   00D0 01                  282 	.db	1
   00D1 81                  283 	.db	0x81
   00D2 FB 82               284 	.db	#-5,#0x82
   00D4 3A                  285 	.db	58
   00D5 83 83 84 85 85 86   286 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   287 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   288 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   289 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   290 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   291 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   292 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               293 	.db	0xFA, 0xFD
   010F 00                  294 	.db	0
                            295 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            296 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            297 	call	__initrleblock
   0116 E0 00               298 	.db	#-32,#0x00
   0118 00                  299 	.db	0
                            300 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            301 	ld	hl,#_tri_lookup_y
   011C CDr00s00            302 	call	__initrleblock
   011F C0 00               303 	.db	#-64,#0x00
   0121 00                  304 	.db	0
                            305 ;demo.c:116: uint8_t packbuffer[12000] = {0};
   0122 21r60s01            306 	ld	hl,#_packbuffer
   0125 CDr00s00            307 	call	__initrleblock
   0128 81 00               308 	.db	#-127,#0x00
   012A 81 00               309 	.db	#-127,#0x00
   012C 81 00               310 	.db	#-127,#0x00
   012E 81 00               311 	.db	#-127,#0x00
   0130 81 00               312 	.db	#-127,#0x00
   0132 81 00               313 	.db	#-127,#0x00
   0134 81 00               314 	.db	#-127,#0x00
   0136 81 00               315 	.db	#-127,#0x00
   0138 81 00               316 	.db	#-127,#0x00
   013A 81 00               317 	.db	#-127,#0x00
   013C 81 00               318 	.db	#-127,#0x00
   013E 81 00               319 	.db	#-127,#0x00
   0140 81 00               320 	.db	#-127,#0x00
   0142 81 00               321 	.db	#-127,#0x00
   0144 81 00               322 	.db	#-127,#0x00
   0146 81 00               323 	.db	#-127,#0x00
   0148 81 00               324 	.db	#-127,#0x00
   014A 81 00               325 	.db	#-127,#0x00
   014C 81 00               326 	.db	#-127,#0x00
   014E 81 00               327 	.db	#-127,#0x00
   0150 81 00               328 	.db	#-127,#0x00
   0152 81 00               329 	.db	#-127,#0x00
   0154 81 00               330 	.db	#-127,#0x00
   0156 81 00               331 	.db	#-127,#0x00
   0158 81 00               332 	.db	#-127,#0x00
   015A 81 00               333 	.db	#-127,#0x00
   015C 81 00               334 	.db	#-127,#0x00
   015E 81 00               335 	.db	#-127,#0x00
   0160 81 00               336 	.db	#-127,#0x00
   0162 81 00               337 	.db	#-127,#0x00
   0164 81 00               338 	.db	#-127,#0x00
   0166 81 00               339 	.db	#-127,#0x00
   0168 81 00               340 	.db	#-127,#0x00
   016A 81 00               341 	.db	#-127,#0x00
   016C 81 00               342 	.db	#-127,#0x00
   016E 81 00               343 	.db	#-127,#0x00
   0170 81 00               344 	.db	#-127,#0x00
   0172 81 00               345 	.db	#-127,#0x00
   0174 81 00               346 	.db	#-127,#0x00
   0176 81 00               347 	.db	#-127,#0x00
   0178 81 00               348 	.db	#-127,#0x00
   017A 81 00               349 	.db	#-127,#0x00
   017C 81 00               350 	.db	#-127,#0x00
   017E 81 00               351 	.db	#-127,#0x00
   0180 81 00               352 	.db	#-127,#0x00
   0182 81 00               353 	.db	#-127,#0x00
   0184 81 00               354 	.db	#-127,#0x00
   0186 81 00               355 	.db	#-127,#0x00
   0188 81 00               356 	.db	#-127,#0x00
   018A 81 00               357 	.db	#-127,#0x00
   018C 81 00               358 	.db	#-127,#0x00
   018E 81 00               359 	.db	#-127,#0x00
   0190 81 00               360 	.db	#-127,#0x00
   0192 81 00               361 	.db	#-127,#0x00
   0194 81 00               362 	.db	#-127,#0x00
   0196 81 00               363 	.db	#-127,#0x00
   0198 81 00               364 	.db	#-127,#0x00
   019A 81 00               365 	.db	#-127,#0x00
   019C 81 00               366 	.db	#-127,#0x00
   019E 81 00               367 	.db	#-127,#0x00
   01A0 81 00               368 	.db	#-127,#0x00
   01A2 81 00               369 	.db	#-127,#0x00
   01A4 81 00               370 	.db	#-127,#0x00
   01A6 81 00               371 	.db	#-127,#0x00
   01A8 81 00               372 	.db	#-127,#0x00
   01AA 81 00               373 	.db	#-127,#0x00
   01AC 81 00               374 	.db	#-127,#0x00
   01AE 81 00               375 	.db	#-127,#0x00
   01B0 81 00               376 	.db	#-127,#0x00
   01B2 81 00               377 	.db	#-127,#0x00
   01B4 81 00               378 	.db	#-127,#0x00
   01B6 81 00               379 	.db	#-127,#0x00
   01B8 81 00               380 	.db	#-127,#0x00
   01BA 81 00               381 	.db	#-127,#0x00
   01BC 81 00               382 	.db	#-127,#0x00
   01BE 81 00               383 	.db	#-127,#0x00
   01C0 81 00               384 	.db	#-127,#0x00
   01C2 81 00               385 	.db	#-127,#0x00
   01C4 81 00               386 	.db	#-127,#0x00
   01C6 81 00               387 	.db	#-127,#0x00
   01C8 81 00               388 	.db	#-127,#0x00
   01CA 81 00               389 	.db	#-127,#0x00
   01CC 81 00               390 	.db	#-127,#0x00
   01CE 81 00               391 	.db	#-127,#0x00
   01D0 81 00               392 	.db	#-127,#0x00
   01D2 81 00               393 	.db	#-127,#0x00
   01D4 81 00               394 	.db	#-127,#0x00
   01D6 81 00               395 	.db	#-127,#0x00
   01D8 81 00               396 	.db	#-127,#0x00
   01DA 81 00               397 	.db	#-127,#0x00
   01DC 81 00               398 	.db	#-127,#0x00
   01DE 81 00               399 	.db	#-127,#0x00
   01E0 81 00               400 	.db	#-127,#0x00
   01E2 81 00               401 	.db	#-127,#0x00
   01E4 C2 00               402 	.db	#-62,#0x00
   01E6 00                  403 	.db	0
                            404 ;demo.c:125: volatile int vbicount=0;
   01E7 FD 21r60s31         405 	ld	iy,#_vbicount
   01EB FD 36 00 00         406 	ld	0 (iy),#0x00
   01EF FD 21r60s31         407 	ld	iy,#_vbicount
   01F3 FD 36 01 00         408 	ld	1 (iy),#0x00
                            409 ;demo.c:126: volatile int tick=0;
   01F7 FD 21r62s31         410 	ld	iy,#_tick
   01FB FD 36 00 00         411 	ld	0 (iy),#0x00
   01FF FD 21r62s31         412 	ld	iy,#_tick
   0203 FD 36 01 00         413 	ld	1 (iy),#0x00
                            414 ;demo.c:326: uint8_t yofff = 0;
   0207 FD 21r7Bs31         415 	ld	iy,#_yofff
   020B FD 36 00 00         416 	ld	0 (iy),#0x00
                            417 ;demo.c:327: uint8_t cc = 0;
   020F FD 21r7Cs31         418 	ld	iy,#_cc
   0213 FD 36 00 00         419 	ld	0 (iy),#0x00
                            420 ;demo.c:328: static int flipper = 0;
   0217 FD 21r7Ds31         421 	ld	iy,#_flipper
   021B FD 36 00 00         422 	ld	0 (iy),#0x00
   021F FD 21r7Ds31         423 	ld	iy,#_flipper
   0223 FD 36 01 00         424 	ld	1 (iy),#0x00
                            425 ;demo.c:329: static int ymmmf = 0;
   0227 FD 21r7Fs31         426 	ld	iy,#_ymmmf
   022B FD 36 00 00         427 	ld	0 (iy),#0x00
   022F FD 21r7Fs31         428 	ld	iy,#_ymmmf
   0233 FD 36 01 00         429 	ld	1 (iy),#0x00
                            430 ;demo.c:360: char block_init = 0;
   0237 FD 21r81s31         431 	ld	iy,#_block_init
   023B FD 36 00 00         432 	ld	0 (iy),#0x00
                            433 ;demo.c:362: int bsx = 0;
   023F FD 21r82s31         434 	ld	iy,#_bsx
   0243 FD 36 00 00         435 	ld	0 (iy),#0x00
   0247 FD 21r82s31         436 	ld	iy,#_bsx
   024B FD 36 01 00         437 	ld	1 (iy),#0x00
                            438 ;demo.c:363: int bsy = 0;
   024F FD 21r84s31         439 	ld	iy,#_bsy
   0253 FD 36 00 00         440 	ld	0 (iy),#0x00
   0257 FD 21r84s31         441 	ld	iy,#_bsy
   025B FD 36 01 00         442 	ld	1 (iy),#0x00
                            443 ;demo.c:364: int btx = 0;
   025F FD 21r86s31         444 	ld	iy,#_btx
   0263 FD 36 00 00         445 	ld	0 (iy),#0x00
   0267 FD 21r86s31         446 	ld	iy,#_btx
   026B FD 36 01 00         447 	ld	1 (iy),#0x00
                            448 ;demo.c:365: int bty = 0;
   026F FD 21r88s31         449 	ld	iy,#_bty
   0273 FD 36 00 00         450 	ld	0 (iy),#0x00
   0277 FD 21r88s31         451 	ld	iy,#_bty
   027B FD 36 01 00         452 	ld	1 (iy),#0x00
                            453 ;demo.c:367: int btab[16] = {0};
   027F 21r8As31            454 	ld	hl,#_btab
   0282 CDr00s00            455 	call	__initrleblock
   0285 E0 00               456 	.db	#-32,#0x00
   0287 00                  457 	.db	0
                            458 ;demo.c:369: int flof = 0;
   0288 FD 21rAAs31         459 	ld	iy,#_flof
   028C FD 36 00 00         460 	ld	0 (iy),#0x00
   0290 FD 21rAAs31         461 	ld	iy,#_flof
   0294 FD 36 01 00         462 	ld	1 (iy),#0x00
                            463 ;demo.c:418: int linenum = 0;
   0298 FD 21rACs31         464 	ld	iy,#_linenum
   029C FD 36 00 00         465 	ld	0 (iy),#0x00
   02A0 FD 21rACs31         466 	ld	iy,#_linenum
   02A4 FD 36 01 00         467 	ld	1 (iy),#0x00
                            468 ;demo.c:476: uint8_t lx = 0;
   02A8 FD 21rAEs31         469 	ld	iy,#_lx
   02AC FD 36 00 00         470 	ld	0 (iy),#0x00
                            471 ;demo.c:477: uint8_t ly = 0;
   02B0 FD 21rAFs31         472 	ld	iy,#_ly
   02B4 FD 36 00 00         473 	ld	0 (iy),#0x00
                            474 ;demo.c:540: int ff = 0;
   02B8 FD 21rB0s31         475 	ld	iy,#_ff
   02BC FD 36 00 00         476 	ld	0 (iy),#0x00
   02C0 FD 21rB0s31         477 	ld	iy,#_ff
   02C4 FD 36 01 00         478 	ld	1 (iy),#0x00
                            479 ;demo.c:541: int twinited = 0;
   02C8 FD 21rB2s31         480 	ld	iy,#_twinited
   02CC FD 36 00 00         481 	ld	0 (iy),#0x00
   02D0 FD 21rB2s31         482 	ld	iy,#_twinited
   02D4 FD 36 01 00         483 	ld	1 (iy),#0x00
                            484 ;demo.c:591: int bulbflipper = 1;
   02D8 FD 21rB4s31         485 	ld	iy,#_bulbflipper
   02DC FD 36 00 01         486 	ld	0 (iy),#0x01
   02E0 FD 21rB4s31         487 	ld	iy,#_bulbflipper
   02E4 FD 36 01 00         488 	ld	1 (iy),#0x00
                            489 ;demo.c:593: int ff1,ff2 = 0;
   02E8 FD 21rB8s31         490 	ld	iy,#_ff2
   02EC FD 36 00 00         491 	ld	0 (iy),#0x00
   02F0 FD 21rB8s31         492 	ld	iy,#_ff2
   02F4 FD 36 01 00         493 	ld	1 (iy),#0x00
                            494 ;demo.c:594: int ender = 212;
   02F8 FD 21rBAs31         495 	ld	iy,#_ender
   02FC FD 36 00 D4         496 	ld	0 (iy),#0xD4
   0300 FD 21rBAs31         497 	ld	iy,#_ender
   0304 FD 36 01 00         498 	ld	1 (iy),#0x00
                            499 ;demo.c:595: int enderdir = -1;
   0308 FD 21rBCs31         500 	ld	iy,#_enderdir
   030C FD 36 00 FF         501 	ld	0 (iy),#0xFF
   0310 FD 21rBCs31         502 	ld	iy,#_enderdir
   0314 FD 36 01 FF         503 	ld	1 (iy),#0xFF
                            504 ;demo.c:650: static int xo = 0;
   0318 FD 21rBEs31         505 	ld	iy,#_xo
   031C FD 36 00 00         506 	ld	0 (iy),#0x00
   0320 FD 21rBEs31         507 	ld	iy,#_xo
   0324 FD 36 01 00         508 	ld	1 (iy),#0x00
                            509 ;demo.c:651: static int yo = 0;
   0328 FD 21rC0s31         510 	ld	iy,#_yo
   032C FD 36 00 00         511 	ld	0 (iy),#0x00
   0330 FD 21rC0s31         512 	ld	iy,#_yo
   0334 FD 36 01 00         513 	ld	1 (iy),#0x00
                            514 ;demo.c:652: static int po = 0;
   0338 FD 21rC2s31         515 	ld	iy,#_po
   033C FD 36 00 00         516 	ld	0 (iy),#0x00
   0340 FD 21rC2s31         517 	ld	iy,#_po
   0344 FD 36 01 00         518 	ld	1 (iy),#0x00
                            519 ;demo.c:653: static int fffaaa = 0;
   0348 FD 21rC4s31         520 	ld	iy,#_fffaaa
   034C FD 36 00 00         521 	ld	0 (iy),#0x00
   0350 FD 21rC4s31         522 	ld	iy,#_fffaaa
   0354 FD 36 01 00         523 	ld	1 (iy),#0x00
                            524 ;demo.c:655: int anim_init = 0;
   0358 FD 21rC6s31         525 	ld	iy,#_anim_init
   035C FD 36 00 00         526 	ld	0 (iy),#0x00
   0360 FD 21rC6s31         527 	ld	iy,#_anim_init
   0364 FD 36 01 00         528 	ld	1 (iy),#0x00
                            529 ;demo.c:709: uint8_t boxes_init = 0;
   0368 FD 21rC8s31         530 	ld	iy,#_boxes_init
   036C FD 36 00 00         531 	ld	0 (iy),#0x00
                            532 ;demo.c:710: int buffer = 1;
   0370 FD 21rC9s31         533 	ld	iy,#_buffer
   0374 FD 36 00 01         534 	ld	0 (iy),#0x01
   0378 FD 21rC9s31         535 	ld	iy,#_buffer
   037C FD 36 01 00         536 	ld	1 (iy),#0x00
                            537 ;demo.c:711: int dbly = 0;
   0380 FD 21rCBs31         538 	ld	iy,#_dbly
   0384 FD 36 00 00         539 	ld	0 (iy),#0x00
   0388 FD 21rCBs31         540 	ld	iy,#_dbly
   038C FD 36 01 00         541 	ld	1 (iy),#0x00
                            542 ;demo.c:712: int prevx = -1;
   0390 FD 21rCDs31         543 	ld	iy,#_prevx
   0394 FD 36 00 FF         544 	ld	0 (iy),#0xFF
   0398 FD 21rCDs31         545 	ld	iy,#_prevx
   039C FD 36 01 FF         546 	ld	1 (iy),#0xFF
                            547 ;demo.c:737: int bx = 256-42;
   03A0 FD 21rD5s31         548 	ld	iy,#_bx
   03A4 FD 36 00 D6         549 	ld	0 (iy),#0xD6
   03A8 FD 21rD5s31         550 	ld	iy,#_bx
   03AC FD 36 01 00         551 	ld	1 (iy),#0x00
                            552 ;demo.c:738: int by = 84;
   03B0 FD 21rD7s31         553 	ld	iy,#_by
   03B4 FD 36 00 54         554 	ld	0 (iy),#0x54
   03B8 FD 21rD7s31         555 	ld	iy,#_by
   03BC FD 36 01 00         556 	ld	1 (iy),#0x00
                            557 ;demo.c:739: int bt = 0;
   03C0 FD 21rD9s31         558 	ld	iy,#_bt
   03C4 FD 36 00 00         559 	ld	0 (iy),#0x00
   03C8 FD 21rD9s31         560 	ld	iy,#_bt
   03CC FD 36 01 00         561 	ld	1 (iy),#0x00
                            562 ;demo.c:740: int bxx = 0;
   03D0 FD 21rDBs31         563 	ld	iy,#_bxx
   03D4 FD 36 00 00         564 	ld	0 (iy),#0x00
   03D8 FD 21rDBs31         565 	ld	iy,#_bxx
   03DC FD 36 01 00         566 	ld	1 (iy),#0x00
                            567 ;demo.c:741: int byy = 0;
   03E0 FD 21rDDs31         568 	ld	iy,#_byy
   03E4 FD 36 00 00         569 	ld	0 (iy),#0x00
   03E8 FD 21rDDs31         570 	ld	iy,#_byy
   03EC FD 36 01 00         571 	ld	1 (iy),#0x00
                            572 ;demo.c:742: int bo = 0;
   03F0 FD 21rDFs31         573 	ld	iy,#_bo
   03F4 FD 36 00 00         574 	ld	0 (iy),#0x00
   03F8 FD 21rDFs31         575 	ld	iy,#_bo
   03FC FD 36 01 00         576 	ld	1 (iy),#0x00
                            577 ;demo.c:744: int bonc = 0;
   0400 FD 21rE1s31         578 	ld	iy,#_bonc
   0404 FD 36 00 00         579 	ld	0 (iy),#0x00
   0408 FD 21rE1s31         580 	ld	iy,#_bonc
   040C FD 36 01 00         581 	ld	1 (iy),#0x00
                            582 ;demo.c:745: int pbx = 0;
   0410 FD 21rE3s31         583 	ld	iy,#_pbx
   0414 FD 36 00 00         584 	ld	0 (iy),#0x00
   0418 FD 21rE3s31         585 	ld	iy,#_pbx
   041C FD 36 01 00         586 	ld	1 (iy),#0x00
                            587 ;demo.c:746: int pbt = 0;
   0420 FD 21rE5s31         588 	ld	iy,#_pbt
   0424 FD 36 00 00         589 	ld	0 (iy),#0x00
   0428 FD 21rE5s31         590 	ld	iy,#_pbt
   042C FD 36 01 00         591 	ld	1 (iy),#0x00
                            592 ;demo.c:848: uint8_t tri_inited = 0;
   0430 FD 21rE7s31         593 	ld	iy,#_tri_inited
   0434 FD 36 00 00         594 	ld	0 (iy),#0x00
                            595 ;demo.c:876: char tripal[9] = {
   0438 21rE8s31            596 	ld	hl,#_tripal
   043B CDr00s00            597 	call	__initrleblock
   043E 09                  598 	.db	9
   043F 02 02 01 01 02 03   599 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0447 02                  600 	.db	0x02
   0448 00                  601 	.db	0
                            602 ;demo.c:882: uint8_t tripaltick = 0;
   0449 FD 21rF1s31         603 	ld	iy,#_tripaltick
   044D FD 36 00 00         604 	ld	0 (iy),#0x00
                            605 ;demo.c:884: int triframes = 0;
   0451 FD 21rF2s31         606 	ld	iy,#_triframes
   0455 FD 36 00 00         607 	ld	0 (iy),#0x00
   0459 FD 21rF2s31         608 	ld	iy,#_triframes
   045D FD 36 01 00         609 	ld	1 (iy),#0x00
                            610 ;--------------------------------------------------------
                            611 ; Home
                            612 ;--------------------------------------------------------
                            613 	.area _HOME
                            614 	.area _HOME
                            615 ;--------------------------------------------------------
                            616 ; code
                            617 ;--------------------------------------------------------
                            618 	.area _CODE
                            619 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            620 ;	---------------------------------
                            621 ; Function isNthBitSet
                            622 ; ---------------------------------
   0000                     623 _isNthBitSet_start::
   0000                     624 _isNthBitSet:
   0000 DD E5               625 	push	ix
   0002 DD 21 00 00         626 	ld	ix,#0
   0006 DD 39               627 	add	ix,sp
                            628 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er73               629 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            630 	add	a,5 (ix)
   000D 4F                  631 	ld	c,a
   000E 3Es31               632 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            633 	adc	a,6 (ix)
   0013 47                  634 	ld	b,a
   0014 0A                  635 	ld	a,(bc)
   0015 DD A6 04            636 	and	a,4 (ix)
   0018 20 04               637 	jr	NZ,00103$
   001A 3E 01               638 	ld	a,#0x01
   001C 18 01               639 	jr	00104$
   001E                     640 00103$:
   001E AF                  641 	xor	a,a
   001F                     642 00104$:
   001F B7                  643 	or	a,a
   0020 D6 01               644 	sub	a,#0x01
   0022 3E 00               645 	ld	a,#0x00
   0024 17                  646 	rla
   0025 4F                  647 	ld	c,a
   0026 69                  648 	ld	l,c
   0027 26 00               649 	ld	h,#0x00
   0029 DD E1               650 	pop	ix
   002B C9                  651 	ret
   002C                     652 _isNthBitSet_end::
   002C                     653 _sintabx:
   002C 78 00               654 	.dw #0x0078
   002E 7A 00               655 	.dw #0x007A
   0030 7D 00               656 	.dw #0x007D
   0032 80 00               657 	.dw #0x0080
   0034 83 00               658 	.dw #0x0083
   0036 86 00               659 	.dw #0x0086
   0038 89 00               660 	.dw #0x0089
   003A 8C 00               661 	.dw #0x008C
   003C 8F 00               662 	.dw #0x008F
   003E 92 00               663 	.dw #0x0092
   0040 95 00               664 	.dw #0x0095
   0042 98 00               665 	.dw #0x0098
   0044 9A 00               666 	.dw #0x009A
   0046 9D 00               667 	.dw #0x009D
   0048 A0 00               668 	.dw #0x00A0
   004A A3 00               669 	.dw #0x00A3
   004C A5 00               670 	.dw #0x00A5
   004E A8 00               671 	.dw #0x00A8
   0050 AB 00               672 	.dw #0x00AB
   0052 AD 00               673 	.dw #0x00AD
   0054 B0 00               674 	.dw #0x00B0
   0056 B3 00               675 	.dw #0x00B3
   0058 B5 00               676 	.dw #0x00B5
   005A B8 00               677 	.dw #0x00B8
   005C BA 00               678 	.dw #0x00BA
   005E BD 00               679 	.dw #0x00BD
   0060 BF 00               680 	.dw #0x00BF
   0062 C1 00               681 	.dw #0x00C1
   0064 C4 00               682 	.dw #0x00C4
   0066 C6 00               683 	.dw #0x00C6
   0068 C8 00               684 	.dw #0x00C8
   006A CA 00               685 	.dw #0x00CA
   006C CC 00               686 	.dw #0x00CC
   006E CE 00               687 	.dw #0x00CE
   0070 D0 00               688 	.dw #0x00D0
   0072 D2 00               689 	.dw #0x00D2
   0074 D4 00               690 	.dw #0x00D4
   0076 D6 00               691 	.dw #0x00D6
   0078 D8 00               692 	.dw #0x00D8
   007A DA 00               693 	.dw #0x00DA
   007C DB 00               694 	.dw #0x00DB
   007E DD 00               695 	.dw #0x00DD
   0080 DE 00               696 	.dw #0x00DE
   0082 E0 00               697 	.dw #0x00E0
   0084 E1 00               698 	.dw #0x00E1
   0086 E3 00               699 	.dw #0x00E3
   0088 E4 00               700 	.dw #0x00E4
   008A E5 00               701 	.dw #0x00E5
   008C E6 00               702 	.dw #0x00E6
   008E E7 00               703 	.dw #0x00E7
   0090 E8 00               704 	.dw #0x00E8
   0092 E9 00               705 	.dw #0x00E9
   0094 EA 00               706 	.dw #0x00EA
   0096 EB 00               707 	.dw #0x00EB
   0098 EC 00               708 	.dw #0x00EC
   009A ED 00               709 	.dw #0x00ED
   009C ED 00               710 	.dw #0x00ED
   009E EE 00               711 	.dw #0x00EE
   00A0 EE 00               712 	.dw #0x00EE
   00A2 EF 00               713 	.dw #0x00EF
   00A4 EF 00               714 	.dw #0x00EF
   00A6 EF 00               715 	.dw #0x00EF
   00A8 EF 00               716 	.dw #0x00EF
   00AA EF 00               717 	.dw #0x00EF
   00AC F0 00               718 	.dw #0x00F0
   00AE EF 00               719 	.dw #0x00EF
   00B0 EF 00               720 	.dw #0x00EF
   00B2 EF 00               721 	.dw #0x00EF
   00B4 EF 00               722 	.dw #0x00EF
   00B6 EF 00               723 	.dw #0x00EF
   00B8 EE 00               724 	.dw #0x00EE
   00BA EE 00               725 	.dw #0x00EE
   00BC ED 00               726 	.dw #0x00ED
   00BE ED 00               727 	.dw #0x00ED
   00C0 EC 00               728 	.dw #0x00EC
   00C2 EB 00               729 	.dw #0x00EB
   00C4 EA 00               730 	.dw #0x00EA
   00C6 E9 00               731 	.dw #0x00E9
   00C8 E8 00               732 	.dw #0x00E8
   00CA E7 00               733 	.dw #0x00E7
   00CC E6 00               734 	.dw #0x00E6
   00CE E5 00               735 	.dw #0x00E5
   00D0 E4 00               736 	.dw #0x00E4
   00D2 E3 00               737 	.dw #0x00E3
   00D4 E1 00               738 	.dw #0x00E1
   00D6 E0 00               739 	.dw #0x00E0
   00D8 DE 00               740 	.dw #0x00DE
   00DA DD 00               741 	.dw #0x00DD
   00DC DB 00               742 	.dw #0x00DB
   00DE DA 00               743 	.dw #0x00DA
   00E0 D8 00               744 	.dw #0x00D8
   00E2 D6 00               745 	.dw #0x00D6
   00E4 D4 00               746 	.dw #0x00D4
   00E6 D2 00               747 	.dw #0x00D2
   00E8 D0 00               748 	.dw #0x00D0
   00EA CE 00               749 	.dw #0x00CE
   00EC CC 00               750 	.dw #0x00CC
   00EE CA 00               751 	.dw #0x00CA
   00F0 C8 00               752 	.dw #0x00C8
   00F2 C6 00               753 	.dw #0x00C6
   00F4 C4 00               754 	.dw #0x00C4
   00F6 C1 00               755 	.dw #0x00C1
   00F8 BF 00               756 	.dw #0x00BF
   00FA BD 00               757 	.dw #0x00BD
   00FC BA 00               758 	.dw #0x00BA
   00FE B8 00               759 	.dw #0x00B8
   0100 B5 00               760 	.dw #0x00B5
   0102 B3 00               761 	.dw #0x00B3
   0104 B0 00               762 	.dw #0x00B0
   0106 AD 00               763 	.dw #0x00AD
   0108 AB 00               764 	.dw #0x00AB
   010A A8 00               765 	.dw #0x00A8
   010C A5 00               766 	.dw #0x00A5
   010E A3 00               767 	.dw #0x00A3
   0110 A0 00               768 	.dw #0x00A0
   0112 9D 00               769 	.dw #0x009D
   0114 9A 00               770 	.dw #0x009A
   0116 98 00               771 	.dw #0x0098
   0118 95 00               772 	.dw #0x0095
   011A 92 00               773 	.dw #0x0092
   011C 8F 00               774 	.dw #0x008F
   011E 8C 00               775 	.dw #0x008C
   0120 89 00               776 	.dw #0x0089
   0122 86 00               777 	.dw #0x0086
   0124 83 00               778 	.dw #0x0083
   0126 80 00               779 	.dw #0x0080
   0128 7D 00               780 	.dw #0x007D
   012A 7A 00               781 	.dw #0x007A
   012C 78 00               782 	.dw #0x0078
   012E 75 00               783 	.dw #0x0075
   0130 72 00               784 	.dw #0x0072
   0132 6F 00               785 	.dw #0x006F
   0134 6C 00               786 	.dw #0x006C
   0136 69 00               787 	.dw #0x0069
   0138 66 00               788 	.dw #0x0066
   013A 63 00               789 	.dw #0x0063
   013C 60 00               790 	.dw #0x0060
   013E 5D 00               791 	.dw #0x005D
   0140 5A 00               792 	.dw #0x005A
   0142 57 00               793 	.dw #0x0057
   0144 55 00               794 	.dw #0x0055
   0146 52 00               795 	.dw #0x0052
   0148 4F 00               796 	.dw #0x004F
   014A 4C 00               797 	.dw #0x004C
   014C 4A 00               798 	.dw #0x004A
   014E 47 00               799 	.dw #0x0047
   0150 44 00               800 	.dw #0x0044
   0152 42 00               801 	.dw #0x0042
   0154 3F 00               802 	.dw #0x003F
   0156 3C 00               803 	.dw #0x003C
   0158 3A 00               804 	.dw #0x003A
   015A 37 00               805 	.dw #0x0037
   015C 35 00               806 	.dw #0x0035
   015E 32 00               807 	.dw #0x0032
   0160 30 00               808 	.dw #0x0030
   0162 2E 00               809 	.dw #0x002E
   0164 2B 00               810 	.dw #0x002B
   0166 29 00               811 	.dw #0x0029
   0168 27 00               812 	.dw #0x0027
   016A 25 00               813 	.dw #0x0025
   016C 23 00               814 	.dw #0x0023
   016E 21 00               815 	.dw #0x0021
   0170 1F 00               816 	.dw #0x001F
   0172 1D 00               817 	.dw #0x001D
   0174 1B 00               818 	.dw #0x001B
   0176 19 00               819 	.dw #0x0019
   0178 17 00               820 	.dw #0x0017
   017A 15 00               821 	.dw #0x0015
   017C 14 00               822 	.dw #0x0014
   017E 12 00               823 	.dw #0x0012
   0180 11 00               824 	.dw #0x0011
   0182 0F 00               825 	.dw #0x000F
   0184 0E 00               826 	.dw #0x000E
   0186 0C 00               827 	.dw #0x000C
   0188 0B 00               828 	.dw #0x000B
   018A 0A 00               829 	.dw #0x000A
   018C 09 00               830 	.dw #0x0009
   018E 08 00               831 	.dw #0x0008
   0190 07 00               832 	.dw #0x0007
   0192 06 00               833 	.dw #0x0006
   0194 05 00               834 	.dw #0x0005
   0196 04 00               835 	.dw #0x0004
   0198 03 00               836 	.dw #0x0003
   019A 02 00               837 	.dw #0x0002
   019C 02 00               838 	.dw #0x0002
   019E 01 00               839 	.dw #0x0001
   01A0 01 00               840 	.dw #0x0001
   01A2 00 00               841 	.dw #0x0000
   01A4 00 00               842 	.dw #0x0000
   01A6 00 00               843 	.dw #0x0000
   01A8 00 00               844 	.dw #0x0000
   01AA 00 00               845 	.dw #0x0000
   01AC 00 00               846 	.dw #0x0000
   01AE 00 00               847 	.dw #0x0000
   01B0 00 00               848 	.dw #0x0000
   01B2 00 00               849 	.dw #0x0000
   01B4 00 00               850 	.dw #0x0000
   01B6 00 00               851 	.dw #0x0000
   01B8 01 00               852 	.dw #0x0001
   01BA 01 00               853 	.dw #0x0001
   01BC 02 00               854 	.dw #0x0002
   01BE 02 00               855 	.dw #0x0002
   01C0 03 00               856 	.dw #0x0003
   01C2 04 00               857 	.dw #0x0004
   01C4 05 00               858 	.dw #0x0005
   01C6 06 00               859 	.dw #0x0006
   01C8 07 00               860 	.dw #0x0007
   01CA 08 00               861 	.dw #0x0008
   01CC 09 00               862 	.dw #0x0009
   01CE 0A 00               863 	.dw #0x000A
   01D0 0B 00               864 	.dw #0x000B
   01D2 0C 00               865 	.dw #0x000C
   01D4 0E 00               866 	.dw #0x000E
   01D6 0F 00               867 	.dw #0x000F
   01D8 11 00               868 	.dw #0x0011
   01DA 12 00               869 	.dw #0x0012
   01DC 14 00               870 	.dw #0x0014
   01DE 15 00               871 	.dw #0x0015
   01E0 17 00               872 	.dw #0x0017
   01E2 19 00               873 	.dw #0x0019
   01E4 1B 00               874 	.dw #0x001B
   01E6 1D 00               875 	.dw #0x001D
   01E8 1F 00               876 	.dw #0x001F
   01EA 21 00               877 	.dw #0x0021
   01EC 23 00               878 	.dw #0x0023
   01EE 25 00               879 	.dw #0x0025
   01F0 27 00               880 	.dw #0x0027
   01F2 29 00               881 	.dw #0x0029
   01F4 2B 00               882 	.dw #0x002B
   01F6 2E 00               883 	.dw #0x002E
   01F8 30 00               884 	.dw #0x0030
   01FA 32 00               885 	.dw #0x0032
   01FC 35 00               886 	.dw #0x0035
   01FE 37 00               887 	.dw #0x0037
   0200 3A 00               888 	.dw #0x003A
   0202 3C 00               889 	.dw #0x003C
   0204 3F 00               890 	.dw #0x003F
   0206 42 00               891 	.dw #0x0042
   0208 44 00               892 	.dw #0x0044
   020A 47 00               893 	.dw #0x0047
   020C 4A 00               894 	.dw #0x004A
   020E 4C 00               895 	.dw #0x004C
   0210 4F 00               896 	.dw #0x004F
   0212 52 00               897 	.dw #0x0052
   0214 55 00               898 	.dw #0x0055
   0216 57 00               899 	.dw #0x0057
   0218 5A 00               900 	.dw #0x005A
   021A 5D 00               901 	.dw #0x005D
   021C 60 00               902 	.dw #0x0060
   021E 63 00               903 	.dw #0x0063
   0220 66 00               904 	.dw #0x0066
   0222 69 00               905 	.dw #0x0069
   0224 6C 00               906 	.dw #0x006C
   0226 6F 00               907 	.dw #0x006F
   0228 72 00               908 	.dw #0x0072
   022A 75 00               909 	.dw #0x0075
   022C                     910 _tri_center:
   022C 08                  911 	.db #0x08
   022D 0A                  912 	.db #0x0A
   022E 12                  913 	.db #0x12
   022F 10                  914 	.db #0x10
   0230 00                  915 	.db #0x00
   0231 02                  916 	.db #0x02
   0232 08                  917 	.db #0x08
   0233 0A                  918 	.db #0x0A
   0234 0B                  919 	.db #0x0B
   0235 09                  920 	.db #0x09
   0236 03                  921 	.db #0x03
   0237 01                  922 	.db #0x01
   0238 11                  923 	.db #0x11
   0239 13                  924 	.db #0x13
   023A 0B                  925 	.db #0x0B
   023B 09                  926 	.db #0x09
   023C 0A                  927 	.db #0x0A
   023D 12                  928 	.db #0x12
   023E 10                  929 	.db #0x10
   023F 00                  930 	.db #0x00
   0240 02                  931 	.db #0x02
   0241 08                  932 	.db #0x08
   0242 0A                  933 	.db #0x0A
   0243 12                  934 	.db #0x12
   0244 13                  935 	.db #0x13
   0245 0B                  936 	.db #0x0B
   0246 09                  937 	.db #0x09
   0247 03                  938 	.db #0x03
   0248 01                  939 	.db #0x01
   0249 11                  940 	.db #0x11
   024A 13                  941 	.db #0x13
   024B 0B                  942 	.db #0x0B
   024C 12                  943 	.db #0x12
   024D 10                  944 	.db #0x10
   024E 00                  945 	.db #0x00
   024F 02                  946 	.db #0x02
   0250 08                  947 	.db #0x08
   0251 0A                  948 	.db #0x0A
   0252 12                  949 	.db #0x12
   0253 10                  950 	.db #0x10
   0254 11                  951 	.db #0x11
   0255 13                  952 	.db #0x13
   0256 0B                  953 	.db #0x0B
   0257 09                  954 	.db #0x09
   0258 03                  955 	.db #0x03
   0259 01                  956 	.db #0x01
   025A 11                  957 	.db #0x11
   025B 13                  958 	.db #0x13
   025C 10                  959 	.db #0x10
   025D 00                  960 	.db #0x00
   025E 02                  961 	.db #0x02
   025F 08                  962 	.db #0x08
   0260 0A                  963 	.db #0x0A
   0261 12                  964 	.db #0x12
   0262 10                  965 	.db #0x10
   0263 00                  966 	.db #0x00
   0264 01                  967 	.db #0x01
   0265 11                  968 	.db #0x11
   0266 13                  969 	.db #0x13
   0267 0B                  970 	.db #0x0B
   0268 09                  971 	.db #0x09
   0269 03                  972 	.db #0x03
   026A 01                  973 	.db #0x01
   026B 11                  974 	.db #0x11
   026C 00                  975 	.db #0x00
   026D 02                  976 	.db #0x02
   026E 08                  977 	.db #0x08
   026F 0A                  978 	.db #0x0A
   0270 12                  979 	.db #0x12
   0271 10                  980 	.db #0x10
   0272 00                  981 	.db #0x00
   0273 02                  982 	.db #0x02
   0274 03                  983 	.db #0x03
   0275 01                  984 	.db #0x01
   0276 11                  985 	.db #0x11
   0277 13                  986 	.db #0x13
   0278 0B                  987 	.db #0x0B
   0279 09                  988 	.db #0x09
   027A 03                  989 	.db #0x03
   027B 01                  990 	.db #0x01
   027C 02                  991 	.db #0x02
   027D 08                  992 	.db #0x08
   027E 0A                  993 	.db #0x0A
   027F 12                  994 	.db #0x12
   0280 10                  995 	.db #0x10
   0281 00                  996 	.db #0x00
   0282 02                  997 	.db #0x02
   0283 08                  998 	.db #0x08
   0284 09                  999 	.db #0x09
   0285 03                 1000 	.db #0x03
   0286 01                 1001 	.db #0x01
   0287 11                 1002 	.db #0x11
   0288 13                 1003 	.db #0x13
   0289 0B                 1004 	.db #0x0B
   028A 09                 1005 	.db #0x09
   028B 03                 1006 	.db #0x03
   028C 01                 1007 	.db #0x01
   028D 0B                 1008 	.db #0x0B
   028E 09                 1009 	.db #0x09
   028F 11                 1010 	.db #0x11
   0290 13                 1011 	.db #0x13
   0291 03                 1012 	.db #0x03
   0292 01                 1013 	.db #0x01
   0293 0B                 1014 	.db #0x0B
   0294 0A                 1015 	.db #0x0A
   0295 00                 1016 	.db #0x00
   0296 02                 1017 	.db #0x02
   0297 12                 1018 	.db #0x12
   0298 10                 1019 	.db #0x10
   0299 08                 1020 	.db #0x08
   029A 0A                 1021 	.db #0x0A
   029B 00                 1022 	.db #0x00
   029C 03                 1023 	.db #0x03
   029D 01                 1024 	.db #0x01
   029E 0B                 1025 	.db #0x0B
   029F 09                 1026 	.db #0x09
   02A0 11                 1027 	.db #0x11
   02A1 13                 1028 	.db #0x13
   02A2 03                 1029 	.db #0x03
   02A3 01                 1030 	.db #0x01
   02A4 00                 1031 	.db #0x00
   02A5 02                 1032 	.db #0x02
   02A6 12                 1033 	.db #0x12
   02A7 10                 1034 	.db #0x10
   02A8 08                 1035 	.db #0x08
   02A9 0A                 1036 	.db #0x0A
   02AA 00                 1037 	.db #0x00
   02AB 02                 1038 	.db #0x02
   02AC 13                 1039 	.db #0x13
   02AD 03                 1040 	.db #0x03
   02AE 01                 1041 	.db #0x01
   02AF 0B                 1042 	.db #0x0B
   02B0 09                 1043 	.db #0x09
   02B1 11                 1044 	.db #0x11
   02B2 13                 1045 	.db #0x13
   02B3 03                 1046 	.db #0x03
   02B4 02                 1047 	.db #0x02
   02B5 12                 1048 	.db #0x12
   02B6 10                 1049 	.db #0x10
   02B7 08                 1050 	.db #0x08
   02B8 0A                 1051 	.db #0x0A
   02B9 00                 1052 	.db #0x00
   02BA 02                 1053 	.db #0x02
   02BB 12                 1054 	.db #0x12
   02BC 11                 1055 	.db #0x11
   02BD 13                 1056 	.db #0x13
   02BE 03                 1057 	.db #0x03
   02BF 01                 1058 	.db #0x01
   02C0 0B                 1059 	.db #0x0B
   02C1 09                 1060 	.db #0x09
   02C2 11                 1061 	.db #0x11
   02C3 13                 1062 	.db #0x13
   02C4 12                 1063 	.db #0x12
   02C5 10                 1064 	.db #0x10
   02C6 08                 1065 	.db #0x08
   02C7 0A                 1066 	.db #0x0A
   02C8 00                 1067 	.db #0x00
   02C9 02                 1068 	.db #0x02
   02CA 12                 1069 	.db #0x12
   02CB 10                 1070 	.db #0x10
   02CC 09                 1071 	.db #0x09
   02CD 11                 1072 	.db #0x11
   02CE 13                 1073 	.db #0x13
   02CF 03                 1074 	.db #0x03
   02D0 01                 1075 	.db #0x01
   02D1 0B                 1076 	.db #0x0B
   02D2 09                 1077 	.db #0x09
   02D3 11                 1078 	.db #0x11
   02D4 10                 1079 	.db #0x10
   02D5 08                 1080 	.db #0x08
   02D6 0A                 1081 	.db #0x0A
   02D7 00                 1082 	.db #0x00
   02D8 02                 1083 	.db #0x02
   02D9 12                 1084 	.db #0x12
   02DA 10                 1085 	.db #0x10
   02DB 08                 1086 	.db #0x08
   02DC 0B                 1087 	.db #0x0B
   02DD 09                 1088 	.db #0x09
   02DE 11                 1089 	.db #0x11
   02DF 13                 1090 	.db #0x13
   02E0 03                 1091 	.db #0x03
   02E1 01                 1092 	.db #0x01
   02E2 0B                 1093 	.db #0x0B
   02E3 09                 1094 	.db #0x09
   02E4 08                 1095 	.db #0x08
   02E5 0A                 1096 	.db #0x0A
   02E6 00                 1097 	.db #0x00
   02E7 02                 1098 	.db #0x02
   02E8 12                 1099 	.db #0x12
   02E9 10                 1100 	.db #0x10
   02EA 08                 1101 	.db #0x08
   02EB 0A                 1102 	.db #0x0A
   02EC                    1103 _tri_up:
   02EC 0A                 1104 	.db #0x0A
   02ED 12                 1105 	.db #0x12
   02EE 10                 1106 	.db #0x10
   02EF 00                 1107 	.db #0x00
   02F0 02                 1108 	.db #0x02
   02F1 08                 1109 	.db #0x08
   02F2 0A                 1110 	.db #0x0A
   02F3 12                 1111 	.db #0x12
   02F4 13                 1112 	.db #0x13
   02F5 0B                 1113 	.db #0x0B
   02F6 09                 1114 	.db #0x09
   02F7 03                 1115 	.db #0x03
   02F8 01                 1116 	.db #0x01
   02F9 11                 1117 	.db #0x11
   02FA 13                 1118 	.db #0x13
   02FB 0B                 1119 	.db #0x0B
   02FC 12                 1120 	.db #0x12
   02FD 10                 1121 	.db #0x10
   02FE 00                 1122 	.db #0x00
   02FF 02                 1123 	.db #0x02
   0300 08                 1124 	.db #0x08
   0301 0A                 1125 	.db #0x0A
   0302 12                 1126 	.db #0x12
   0303 10                 1127 	.db #0x10
   0304 11                 1128 	.db #0x11
   0305 13                 1129 	.db #0x13
   0306 0B                 1130 	.db #0x0B
   0307 09                 1131 	.db #0x09
   0308 03                 1132 	.db #0x03
   0309 01                 1133 	.db #0x01
   030A 11                 1134 	.db #0x11
   030B 13                 1135 	.db #0x13
   030C 10                 1136 	.db #0x10
   030D 00                 1137 	.db #0x00
   030E 02                 1138 	.db #0x02
   030F 08                 1139 	.db #0x08
   0310 0A                 1140 	.db #0x0A
   0311 12                 1141 	.db #0x12
   0312 10                 1142 	.db #0x10
   0313 00                 1143 	.db #0x00
   0314 01                 1144 	.db #0x01
   0315 11                 1145 	.db #0x11
   0316 13                 1146 	.db #0x13
   0317 0B                 1147 	.db #0x0B
   0318 09                 1148 	.db #0x09
   0319 03                 1149 	.db #0x03
   031A 01                 1150 	.db #0x01
   031B 11                 1151 	.db #0x11
   031C 00                 1152 	.db #0x00
   031D 02                 1153 	.db #0x02
   031E 08                 1154 	.db #0x08
   031F 0A                 1155 	.db #0x0A
   0320 12                 1156 	.db #0x12
   0321 10                 1157 	.db #0x10
   0322 00                 1158 	.db #0x00
   0323 02                 1159 	.db #0x02
   0324 03                 1160 	.db #0x03
   0325 01                 1161 	.db #0x01
   0326 11                 1162 	.db #0x11
   0327 13                 1163 	.db #0x13
   0328 0B                 1164 	.db #0x0B
   0329 09                 1165 	.db #0x09
   032A 03                 1166 	.db #0x03
   032B 01                 1167 	.db #0x01
   032C 02                 1168 	.db #0x02
   032D 08                 1169 	.db #0x08
   032E 0A                 1170 	.db #0x0A
   032F 12                 1171 	.db #0x12
   0330 10                 1172 	.db #0x10
   0331 00                 1173 	.db #0x00
   0332 02                 1174 	.db #0x02
   0333 08                 1175 	.db #0x08
   0334 09                 1176 	.db #0x09
   0335 03                 1177 	.db #0x03
   0336 01                 1178 	.db #0x01
   0337 11                 1179 	.db #0x11
   0338 13                 1180 	.db #0x13
   0339 0B                 1181 	.db #0x0B
   033A 09                 1182 	.db #0x09
   033B 03                 1183 	.db #0x03
   033C 08                 1184 	.db #0x08
   033D 0A                 1185 	.db #0x0A
   033E 12                 1186 	.db #0x12
   033F 10                 1187 	.db #0x10
   0340 00                 1188 	.db #0x00
   0341 02                 1189 	.db #0x02
   0342 08                 1190 	.db #0x08
   0343 0A                 1191 	.db #0x0A
   0344 0B                 1192 	.db #0x0B
   0345 09                 1193 	.db #0x09
   0346 03                 1194 	.db #0x03
   0347 01                 1195 	.db #0x01
   0348 11                 1196 	.db #0x11
   0349 13                 1197 	.db #0x13
   034A 0B                 1198 	.db #0x0B
   034B 09                 1199 	.db #0x09
   034C 0A                 1200 	.db #0x0A
   034D 12                 1201 	.db #0x12
   034E 10                 1202 	.db #0x10
   034F 00                 1203 	.db #0x00
   0350 02                 1204 	.db #0x02
   0351 08                 1205 	.db #0x08
   0352 0A                 1206 	.db #0x0A
   0353 12                 1207 	.db #0x12
   0354 13                 1208 	.db #0x13
   0355 0B                 1209 	.db #0x0B
   0356 09                 1210 	.db #0x09
   0357 03                 1211 	.db #0x03
   0358 01                 1212 	.db #0x01
   0359 11                 1213 	.db #0x11
   035A 13                 1214 	.db #0x13
   035B 0B                 1215 	.db #0x0B
   035C 12                 1216 	.db #0x12
   035D 10                 1217 	.db #0x10
   035E 00                 1218 	.db #0x00
   035F 02                 1219 	.db #0x02
   0360 08                 1220 	.db #0x08
   0361 0A                 1221 	.db #0x0A
   0362 12                 1222 	.db #0x12
   0363 10                 1223 	.db #0x10
   0364 11                 1224 	.db #0x11
   0365 13                 1225 	.db #0x13
   0366 0B                 1226 	.db #0x0B
   0367 09                 1227 	.db #0x09
   0368 03                 1228 	.db #0x03
   0369 01                 1229 	.db #0x01
   036A 11                 1230 	.db #0x11
   036B 13                 1231 	.db #0x13
   036C 10                 1232 	.db #0x10
   036D 00                 1233 	.db #0x00
   036E 02                 1234 	.db #0x02
   036F 08                 1235 	.db #0x08
   0370 0A                 1236 	.db #0x0A
   0371 12                 1237 	.db #0x12
   0372 10                 1238 	.db #0x10
   0373 00                 1239 	.db #0x00
   0374 01                 1240 	.db #0x01
   0375 11                 1241 	.db #0x11
   0376 13                 1242 	.db #0x13
   0377 0B                 1243 	.db #0x0B
   0378 09                 1244 	.db #0x09
   0379 03                 1245 	.db #0x03
   037A 01                 1246 	.db #0x01
   037B 11                 1247 	.db #0x11
   037C 00                 1248 	.db #0x00
   037D 02                 1249 	.db #0x02
   037E 08                 1250 	.db #0x08
   037F 0A                 1251 	.db #0x0A
   0380 12                 1252 	.db #0x12
   0381 10                 1253 	.db #0x10
   0382 00                 1254 	.db #0x00
   0383 02                 1255 	.db #0x02
   0384 03                 1256 	.db #0x03
   0385 01                 1257 	.db #0x01
   0386 11                 1258 	.db #0x11
   0387 13                 1259 	.db #0x13
   0388 0B                 1260 	.db #0x0B
   0389 09                 1261 	.db #0x09
   038A 03                 1262 	.db #0x03
   038B 01                 1263 	.db #0x01
   038C 02                 1264 	.db #0x02
   038D 08                 1265 	.db #0x08
   038E 0A                 1266 	.db #0x0A
   038F 12                 1267 	.db #0x12
   0390 10                 1268 	.db #0x10
   0391 00                 1269 	.db #0x00
   0392 02                 1270 	.db #0x02
   0393 08                 1271 	.db #0x08
   0394 09                 1272 	.db #0x09
   0395 03                 1273 	.db #0x03
   0396 01                 1274 	.db #0x01
   0397 11                 1275 	.db #0x11
   0398 13                 1276 	.db #0x13
   0399 0B                 1277 	.db #0x0B
   039A 09                 1278 	.db #0x09
   039B 03                 1279 	.db #0x03
   039C 08                 1280 	.db #0x08
   039D 0A                 1281 	.db #0x0A
   039E 12                 1282 	.db #0x12
   039F 10                 1283 	.db #0x10
   03A0 00                 1284 	.db #0x00
   03A1 02                 1285 	.db #0x02
   03A2 08                 1286 	.db #0x08
   03A3 0A                 1287 	.db #0x0A
   03A4 0B                 1288 	.db #0x0B
   03A5 09                 1289 	.db #0x09
   03A6 03                 1290 	.db #0x03
   03A7 01                 1291 	.db #0x01
   03A8 11                 1292 	.db #0x11
   03A9 13                 1293 	.db #0x13
   03AA 0B                 1294 	.db #0x0B
   03AB 09                 1295 	.db #0x09
   03AC                    1296 _tri_dia:
   03AC 05                 1297 	.db #0x05
   03AD 1B                 1298 	.db #0x1B
   03AE 0F                 1299 	.db #0x0F
   03AF 1D                 1300 	.db #0x1D
   03B0 15                 1301 	.db #0x15
   03B1 19                 1302 	.db #0x19
   03B2 05                 1303 	.db #0x05
   03B3 1B                 1304 	.db #0x1B
   03B4 0F                 1305 	.db #0x0F
   03B5 1D                 1306 	.db #0x1D
   03B6 15                 1307 	.db #0x15
   03B7 19                 1308 	.db #0x19
   03B8 05                 1309 	.db #0x05
   03B9 1B                 1310 	.db #0x1B
   03BA 0F                 1311 	.db #0x0F
   03BB 1D                 1312 	.db #0x1D
   03BC 1D                 1313 	.db #0x1D
   03BD 05                 1314 	.db #0x05
   03BE 19                 1315 	.db #0x19
   03BF 0F                 1316 	.db #0x0F
   03C0 1B                 1317 	.db #0x1B
   03C1 15                 1318 	.db #0x15
   03C2 1D                 1319 	.db #0x1D
   03C3 05                 1320 	.db #0x05
   03C4 19                 1321 	.db #0x19
   03C5 0F                 1322 	.db #0x0F
   03C6 1B                 1323 	.db #0x1B
   03C7 15                 1324 	.db #0x15
   03C8 1D                 1325 	.db #0x1D
   03C9 05                 1326 	.db #0x05
   03CA 19                 1327 	.db #0x19
   03CB 0F                 1328 	.db #0x0F
   03CC 0F                 1329 	.db #0x0F
   03CD 1D                 1330 	.db #0x1D
   03CE 15                 1331 	.db #0x15
   03CF 19                 1332 	.db #0x19
   03D0 05                 1333 	.db #0x05
   03D1 1B                 1334 	.db #0x1B
   03D2 0F                 1335 	.db #0x0F
   03D3 1D                 1336 	.db #0x1D
   03D4 15                 1337 	.db #0x15
   03D5 19                 1338 	.db #0x19
   03D6 05                 1339 	.db #0x05
   03D7 1B                 1340 	.db #0x1B
   03D8 0F                 1341 	.db #0x0F
   03D9 1D                 1342 	.db #0x1D
   03DA 15                 1343 	.db #0x15
   03DB 19                 1344 	.db #0x19
   03DC 19                 1345 	.db #0x19
   03DD 0F                 1346 	.db #0x0F
   03DE 1B                 1347 	.db #0x1B
   03DF 15                 1348 	.db #0x15
   03E0 1D                 1349 	.db #0x1D
   03E1 05                 1350 	.db #0x05
   03E2 19                 1351 	.db #0x19
   03E3 0F                 1352 	.db #0x0F
   03E4 1B                 1353 	.db #0x1B
   03E5 15                 1354 	.db #0x15
   03E6 1D                 1355 	.db #0x1D
   03E7 05                 1356 	.db #0x05
   03E8 19                 1357 	.db #0x19
   03E9 0F                 1358 	.db #0x0F
   03EA 1B                 1359 	.db #0x1B
   03EB 15                 1360 	.db #0x15
   03EC 15                 1361 	.db #0x15
   03ED 19                 1362 	.db #0x19
   03EE 05                 1363 	.db #0x05
   03EF 1B                 1364 	.db #0x1B
   03F0 0F                 1365 	.db #0x0F
   03F1 1D                 1366 	.db #0x1D
   03F2 15                 1367 	.db #0x15
   03F3 19                 1368 	.db #0x19
   03F4 05                 1369 	.db #0x05
   03F5 1B                 1370 	.db #0x1B
   03F6 0F                 1371 	.db #0x0F
   03F7 1D                 1372 	.db #0x1D
   03F8 15                 1373 	.db #0x15
   03F9 19                 1374 	.db #0x19
   03FA 05                 1375 	.db #0x05
   03FB 1B                 1376 	.db #0x1B
   03FC 1B                 1377 	.db #0x1B
   03FD 15                 1378 	.db #0x15
   03FE 1D                 1379 	.db #0x1D
   03FF 05                 1380 	.db #0x05
   0400 19                 1381 	.db #0x19
   0401 0F                 1382 	.db #0x0F
   0402 1B                 1383 	.db #0x1B
   0403 15                 1384 	.db #0x15
   0404 1D                 1385 	.db #0x1D
   0405 05                 1386 	.db #0x05
   0406 19                 1387 	.db #0x19
   0407 0F                 1388 	.db #0x0F
   0408 1B                 1389 	.db #0x1B
   0409 15                 1390 	.db #0x15
   040A 1D                 1391 	.db #0x1D
   040B 05                 1392 	.db #0x05
   040C 05                 1393 	.db #0x05
   040D 1B                 1394 	.db #0x1B
   040E 0F                 1395 	.db #0x0F
   040F 1D                 1396 	.db #0x1D
   0410 15                 1397 	.db #0x15
   0411 19                 1398 	.db #0x19
   0412 05                 1399 	.db #0x05
   0413 1B                 1400 	.db #0x1B
   0414 0F                 1401 	.db #0x0F
   0415 1D                 1402 	.db #0x1D
   0416 15                 1403 	.db #0x15
   0417 19                 1404 	.db #0x19
   0418 05                 1405 	.db #0x05
   0419 1B                 1406 	.db #0x1B
   041A 0F                 1407 	.db #0x0F
   041B 1D                 1408 	.db #0x1D
   041C 1D                 1409 	.db #0x1D
   041D 05                 1410 	.db #0x05
   041E 19                 1411 	.db #0x19
   041F 0F                 1412 	.db #0x0F
   0420 1B                 1413 	.db #0x1B
   0421 15                 1414 	.db #0x15
   0422 1D                 1415 	.db #0x1D
   0423 05                 1416 	.db #0x05
   0424 19                 1417 	.db #0x19
   0425 0F                 1418 	.db #0x0F
   0426 1B                 1419 	.db #0x1B
   0427 15                 1420 	.db #0x15
   0428 1D                 1421 	.db #0x1D
   0429 05                 1422 	.db #0x05
   042A 19                 1423 	.db #0x19
   042B 0F                 1424 	.db #0x0F
   042C 0F                 1425 	.db #0x0F
   042D 1D                 1426 	.db #0x1D
   042E 15                 1427 	.db #0x15
   042F 19                 1428 	.db #0x19
   0430 05                 1429 	.db #0x05
   0431 1B                 1430 	.db #0x1B
   0432 0F                 1431 	.db #0x0F
   0433 1D                 1432 	.db #0x1D
   0434 15                 1433 	.db #0x15
   0435 19                 1434 	.db #0x19
   0436 05                 1435 	.db #0x05
   0437 1B                 1436 	.db #0x1B
   0438 0F                 1437 	.db #0x0F
   0439 1D                 1438 	.db #0x1D
   043A 15                 1439 	.db #0x15
   043B 19                 1440 	.db #0x19
   043C 19                 1441 	.db #0x19
   043D 0F                 1442 	.db #0x0F
   043E 1B                 1443 	.db #0x1B
   043F 15                 1444 	.db #0x15
   0440 1D                 1445 	.db #0x1D
   0441 05                 1446 	.db #0x05
   0442 19                 1447 	.db #0x19
   0443 0F                 1448 	.db #0x0F
   0444 1B                 1449 	.db #0x1B
   0445 15                 1450 	.db #0x15
   0446 1D                 1451 	.db #0x1D
   0447 05                 1452 	.db #0x05
   0448 19                 1453 	.db #0x19
   0449 0F                 1454 	.db #0x0F
   044A 1B                 1455 	.db #0x1B
   044B 15                 1456 	.db #0x15
   044C 15                 1457 	.db #0x15
   044D 19                 1458 	.db #0x19
   044E 05                 1459 	.db #0x05
   044F 1B                 1460 	.db #0x1B
   0450 0F                 1461 	.db #0x0F
   0451 1D                 1462 	.db #0x1D
   0452 15                 1463 	.db #0x15
   0453 19                 1464 	.db #0x19
   0454 05                 1465 	.db #0x05
   0455 1B                 1466 	.db #0x1B
   0456 0F                 1467 	.db #0x0F
   0457 1D                 1468 	.db #0x1D
   0458 15                 1469 	.db #0x15
   0459 19                 1470 	.db #0x19
   045A 05                 1471 	.db #0x05
   045B 1B                 1472 	.db #0x1B
   045C 1B                 1473 	.db #0x1B
   045D 15                 1474 	.db #0x15
   045E 1D                 1475 	.db #0x1D
   045F 05                 1476 	.db #0x05
   0460 19                 1477 	.db #0x19
   0461 0F                 1478 	.db #0x0F
   0462 1B                 1479 	.db #0x1B
   0463 15                 1480 	.db #0x15
   0464 1D                 1481 	.db #0x1D
   0465 05                 1482 	.db #0x05
   0466 19                 1483 	.db #0x19
   0467 0F                 1484 	.db #0x0F
   0468 1B                 1485 	.db #0x1B
   0469 15                 1486 	.db #0x15
   046A 1D                 1487 	.db #0x1D
   046B 05                 1488 	.db #0x05
   046C                    1489 _tri_side1:
   046C 0A                 1490 	.db #0x0A
   046D 12                 1491 	.db #0x12
   046E 10                 1492 	.db #0x10
   046F 00                 1493 	.db #0x00
   0470 02                 1494 	.db #0x02
   0471 08                 1495 	.db #0x08
   0472 0A                 1496 	.db #0x0A
   0473 12                 1497 	.db #0x12
   0474 10                 1498 	.db #0x10
   0475 00                 1499 	.db #0x00
   0476 02                 1500 	.db #0x02
   0477 08                 1501 	.db #0x08
   0478 0A                 1502 	.db #0x0A
   0479 12                 1503 	.db #0x12
   047A 10                 1504 	.db #0x10
   047B 00                 1505 	.db #0x00
   047C 12                 1506 	.db #0x12
   047D 10                 1507 	.db #0x10
   047E 00                 1508 	.db #0x00
   047F 02                 1509 	.db #0x02
   0480 08                 1510 	.db #0x08
   0481 0A                 1511 	.db #0x0A
   0482 12                 1512 	.db #0x12
   0483 10                 1513 	.db #0x10
   0484 00                 1514 	.db #0x00
   0485 02                 1515 	.db #0x02
   0486 08                 1516 	.db #0x08
   0487 0A                 1517 	.db #0x0A
   0488 12                 1518 	.db #0x12
   0489 10                 1519 	.db #0x10
   048A 00                 1520 	.db #0x00
   048B 02                 1521 	.db #0x02
   048C 10                 1522 	.db #0x10
   048D 00                 1523 	.db #0x00
   048E 02                 1524 	.db #0x02
   048F 08                 1525 	.db #0x08
   0490 0A                 1526 	.db #0x0A
   0491 12                 1527 	.db #0x12
   0492 10                 1528 	.db #0x10
   0493 00                 1529 	.db #0x00
   0494 02                 1530 	.db #0x02
   0495 08                 1531 	.db #0x08
   0496 0A                 1532 	.db #0x0A
   0497 12                 1533 	.db #0x12
   0498 10                 1534 	.db #0x10
   0499 00                 1535 	.db #0x00
   049A 02                 1536 	.db #0x02
   049B 08                 1537 	.db #0x08
   049C 00                 1538 	.db #0x00
   049D 02                 1539 	.db #0x02
   049E 08                 1540 	.db #0x08
   049F 0A                 1541 	.db #0x0A
   04A0 12                 1542 	.db #0x12
   04A1 10                 1543 	.db #0x10
   04A2 00                 1544 	.db #0x00
   04A3 02                 1545 	.db #0x02
   04A4 08                 1546 	.db #0x08
   04A5 0A                 1547 	.db #0x0A
   04A6 12                 1548 	.db #0x12
   04A7 10                 1549 	.db #0x10
   04A8 00                 1550 	.db #0x00
   04A9 02                 1551 	.db #0x02
   04AA 08                 1552 	.db #0x08
   04AB 0A                 1553 	.db #0x0A
   04AC 02                 1554 	.db #0x02
   04AD 08                 1555 	.db #0x08
   04AE 0A                 1556 	.db #0x0A
   04AF 12                 1557 	.db #0x12
   04B0 10                 1558 	.db #0x10
   04B1 00                 1559 	.db #0x00
   04B2 02                 1560 	.db #0x02
   04B3 08                 1561 	.db #0x08
   04B4 0A                 1562 	.db #0x0A
   04B5 12                 1563 	.db #0x12
   04B6 10                 1564 	.db #0x10
   04B7 00                 1565 	.db #0x00
   04B8 02                 1566 	.db #0x02
   04B9 08                 1567 	.db #0x08
   04BA 0A                 1568 	.db #0x0A
   04BB 12                 1569 	.db #0x12
   04BC 08                 1570 	.db #0x08
   04BD 0A                 1571 	.db #0x0A
   04BE 12                 1572 	.db #0x12
   04BF 10                 1573 	.db #0x10
   04C0 00                 1574 	.db #0x00
   04C1 02                 1575 	.db #0x02
   04C2 08                 1576 	.db #0x08
   04C3 0A                 1577 	.db #0x0A
   04C4 12                 1578 	.db #0x12
   04C5 10                 1579 	.db #0x10
   04C6 00                 1580 	.db #0x00
   04C7 02                 1581 	.db #0x02
   04C8 08                 1582 	.db #0x08
   04C9 0A                 1583 	.db #0x0A
   04CA 12                 1584 	.db #0x12
   04CB 10                 1585 	.db #0x10
   04CC 0A                 1586 	.db #0x0A
   04CD 12                 1587 	.db #0x12
   04CE 10                 1588 	.db #0x10
   04CF 00                 1589 	.db #0x00
   04D0 02                 1590 	.db #0x02
   04D1 08                 1591 	.db #0x08
   04D2 0A                 1592 	.db #0x0A
   04D3 12                 1593 	.db #0x12
   04D4 10                 1594 	.db #0x10
   04D5 00                 1595 	.db #0x00
   04D6 02                 1596 	.db #0x02
   04D7 08                 1597 	.db #0x08
   04D8 0A                 1598 	.db #0x0A
   04D9 12                 1599 	.db #0x12
   04DA 10                 1600 	.db #0x10
   04DB 00                 1601 	.db #0x00
   04DC 12                 1602 	.db #0x12
   04DD 10                 1603 	.db #0x10
   04DE 00                 1604 	.db #0x00
   04DF 02                 1605 	.db #0x02
   04E0 08                 1606 	.db #0x08
   04E1 0A                 1607 	.db #0x0A
   04E2 12                 1608 	.db #0x12
   04E3 10                 1609 	.db #0x10
   04E4 00                 1610 	.db #0x00
   04E5 02                 1611 	.db #0x02
   04E6 08                 1612 	.db #0x08
   04E7 0A                 1613 	.db #0x0A
   04E8 12                 1614 	.db #0x12
   04E9 10                 1615 	.db #0x10
   04EA 00                 1616 	.db #0x00
   04EB 02                 1617 	.db #0x02
   04EC 10                 1618 	.db #0x10
   04ED 00                 1619 	.db #0x00
   04EE 02                 1620 	.db #0x02
   04EF 08                 1621 	.db #0x08
   04F0 0A                 1622 	.db #0x0A
   04F1 12                 1623 	.db #0x12
   04F2 10                 1624 	.db #0x10
   04F3 00                 1625 	.db #0x00
   04F4 02                 1626 	.db #0x02
   04F5 08                 1627 	.db #0x08
   04F6 0A                 1628 	.db #0x0A
   04F7 12                 1629 	.db #0x12
   04F8 10                 1630 	.db #0x10
   04F9 00                 1631 	.db #0x00
   04FA 02                 1632 	.db #0x02
   04FB 08                 1633 	.db #0x08
   04FC 00                 1634 	.db #0x00
   04FD 02                 1635 	.db #0x02
   04FE 08                 1636 	.db #0x08
   04FF 0A                 1637 	.db #0x0A
   0500 12                 1638 	.db #0x12
   0501 10                 1639 	.db #0x10
   0502 00                 1640 	.db #0x00
   0503 02                 1641 	.db #0x02
   0504 08                 1642 	.db #0x08
   0505 0A                 1643 	.db #0x0A
   0506 12                 1644 	.db #0x12
   0507 10                 1645 	.db #0x10
   0508 00                 1646 	.db #0x00
   0509 02                 1647 	.db #0x02
   050A 08                 1648 	.db #0x08
   050B 0A                 1649 	.db #0x0A
   050C 02                 1650 	.db #0x02
   050D 08                 1651 	.db #0x08
   050E 0A                 1652 	.db #0x0A
   050F 12                 1653 	.db #0x12
   0510 10                 1654 	.db #0x10
   0511 00                 1655 	.db #0x00
   0512 02                 1656 	.db #0x02
   0513 08                 1657 	.db #0x08
   0514 0A                 1658 	.db #0x0A
   0515 12                 1659 	.db #0x12
   0516 10                 1660 	.db #0x10
   0517 00                 1661 	.db #0x00
   0518 02                 1662 	.db #0x02
   0519 08                 1663 	.db #0x08
   051A 0A                 1664 	.db #0x0A
   051B 12                 1665 	.db #0x12
   051C 08                 1666 	.db #0x08
   051D 0A                 1667 	.db #0x0A
   051E 12                 1668 	.db #0x12
   051F 10                 1669 	.db #0x10
   0520 00                 1670 	.db #0x00
   0521 02                 1671 	.db #0x02
   0522 08                 1672 	.db #0x08
   0523 0A                 1673 	.db #0x0A
   0524 12                 1674 	.db #0x12
   0525 10                 1675 	.db #0x10
   0526 00                 1676 	.db #0x00
   0527 02                 1677 	.db #0x02
   0528 08                 1678 	.db #0x08
   0529 0A                 1679 	.db #0x0A
   052A 12                 1680 	.db #0x12
   052B 10                 1681 	.db #0x10
   052C                    1682 _tri_side2:
   052C 00                 1683 	.db #0x00
   052D 10                 1684 	.db #0x10
   052E 12                 1685 	.db #0x12
   052F 0A                 1686 	.db #0x0A
   0530 08                 1687 	.db #0x08
   0531 02                 1688 	.db #0x02
   0532 00                 1689 	.db #0x00
   0533 10                 1690 	.db #0x10
   0534 12                 1691 	.db #0x12
   0535 0A                 1692 	.db #0x0A
   0536 08                 1693 	.db #0x08
   0537 02                 1694 	.db #0x02
   0538 00                 1695 	.db #0x00
   0539 10                 1696 	.db #0x10
   053A 12                 1697 	.db #0x12
   053B 0A                 1698 	.db #0x0A
   053C 02                 1699 	.db #0x02
   053D 00                 1700 	.db #0x00
   053E 10                 1701 	.db #0x10
   053F 12                 1702 	.db #0x12
   0540 0A                 1703 	.db #0x0A
   0541 08                 1704 	.db #0x08
   0542 02                 1705 	.db #0x02
   0543 00                 1706 	.db #0x00
   0544 10                 1707 	.db #0x10
   0545 12                 1708 	.db #0x12
   0546 0A                 1709 	.db #0x0A
   0547 08                 1710 	.db #0x08
   0548 02                 1711 	.db #0x02
   0549 00                 1712 	.db #0x00
   054A 10                 1713 	.db #0x10
   054B 12                 1714 	.db #0x12
   054C 08                 1715 	.db #0x08
   054D 02                 1716 	.db #0x02
   054E 00                 1717 	.db #0x00
   054F 10                 1718 	.db #0x10
   0550 12                 1719 	.db #0x12
   0551 0A                 1720 	.db #0x0A
   0552 08                 1721 	.db #0x08
   0553 02                 1722 	.db #0x02
   0554 00                 1723 	.db #0x00
   0555 10                 1724 	.db #0x10
   0556 12                 1725 	.db #0x12
   0557 0A                 1726 	.db #0x0A
   0558 08                 1727 	.db #0x08
   0559 02                 1728 	.db #0x02
   055A 00                 1729 	.db #0x00
   055B 10                 1730 	.db #0x10
   055C 0A                 1731 	.db #0x0A
   055D 08                 1732 	.db #0x08
   055E 02                 1733 	.db #0x02
   055F 00                 1734 	.db #0x00
   0560 10                 1735 	.db #0x10
   0561 12                 1736 	.db #0x12
   0562 0A                 1737 	.db #0x0A
   0563 08                 1738 	.db #0x08
   0564 02                 1739 	.db #0x02
   0565 00                 1740 	.db #0x00
   0566 10                 1741 	.db #0x10
   0567 12                 1742 	.db #0x12
   0568 0A                 1743 	.db #0x0A
   0569 08                 1744 	.db #0x08
   056A 02                 1745 	.db #0x02
   056B 00                 1746 	.db #0x00
   056C 12                 1747 	.db #0x12
   056D 0A                 1748 	.db #0x0A
   056E 08                 1749 	.db #0x08
   056F 02                 1750 	.db #0x02
   0570 00                 1751 	.db #0x00
   0571 10                 1752 	.db #0x10
   0572 12                 1753 	.db #0x12
   0573 0A                 1754 	.db #0x0A
   0574 08                 1755 	.db #0x08
   0575 02                 1756 	.db #0x02
   0576 00                 1757 	.db #0x00
   0577 10                 1758 	.db #0x10
   0578 12                 1759 	.db #0x12
   0579 0A                 1760 	.db #0x0A
   057A 08                 1761 	.db #0x08
   057B 02                 1762 	.db #0x02
   057C 10                 1763 	.db #0x10
   057D 12                 1764 	.db #0x12
   057E 0A                 1765 	.db #0x0A
   057F 08                 1766 	.db #0x08
   0580 02                 1767 	.db #0x02
   0581 00                 1768 	.db #0x00
   0582 10                 1769 	.db #0x10
   0583 12                 1770 	.db #0x12
   0584 0A                 1771 	.db #0x0A
   0585 08                 1772 	.db #0x08
   0586 02                 1773 	.db #0x02
   0587 00                 1774 	.db #0x00
   0588 10                 1775 	.db #0x10
   0589 12                 1776 	.db #0x12
   058A 0A                 1777 	.db #0x0A
   058B 08                 1778 	.db #0x08
   058C 00                 1779 	.db #0x00
   058D 10                 1780 	.db #0x10
   058E 12                 1781 	.db #0x12
   058F 0A                 1782 	.db #0x0A
   0590 08                 1783 	.db #0x08
   0591 02                 1784 	.db #0x02
   0592 00                 1785 	.db #0x00
   0593 10                 1786 	.db #0x10
   0594 12                 1787 	.db #0x12
   0595 0A                 1788 	.db #0x0A
   0596 08                 1789 	.db #0x08
   0597 02                 1790 	.db #0x02
   0598 00                 1791 	.db #0x00
   0599 10                 1792 	.db #0x10
   059A 12                 1793 	.db #0x12
   059B 0A                 1794 	.db #0x0A
   059C 02                 1795 	.db #0x02
   059D 00                 1796 	.db #0x00
   059E 10                 1797 	.db #0x10
   059F 12                 1798 	.db #0x12
   05A0 0A                 1799 	.db #0x0A
   05A1 08                 1800 	.db #0x08
   05A2 02                 1801 	.db #0x02
   05A3 00                 1802 	.db #0x00
   05A4 10                 1803 	.db #0x10
   05A5 12                 1804 	.db #0x12
   05A6 0A                 1805 	.db #0x0A
   05A7 08                 1806 	.db #0x08
   05A8 02                 1807 	.db #0x02
   05A9 00                 1808 	.db #0x00
   05AA 10                 1809 	.db #0x10
   05AB 12                 1810 	.db #0x12
   05AC 08                 1811 	.db #0x08
   05AD 02                 1812 	.db #0x02
   05AE 00                 1813 	.db #0x00
   05AF 10                 1814 	.db #0x10
   05B0 12                 1815 	.db #0x12
   05B1 0A                 1816 	.db #0x0A
   05B2 08                 1817 	.db #0x08
   05B3 02                 1818 	.db #0x02
   05B4 00                 1819 	.db #0x00
   05B5 10                 1820 	.db #0x10
   05B6 12                 1821 	.db #0x12
   05B7 0A                 1822 	.db #0x0A
   05B8 08                 1823 	.db #0x08
   05B9 02                 1824 	.db #0x02
   05BA 00                 1825 	.db #0x00
   05BB 10                 1826 	.db #0x10
   05BC 0A                 1827 	.db #0x0A
   05BD 08                 1828 	.db #0x08
   05BE 02                 1829 	.db #0x02
   05BF 00                 1830 	.db #0x00
   05C0 10                 1831 	.db #0x10
   05C1 12                 1832 	.db #0x12
   05C2 0A                 1833 	.db #0x0A
   05C3 08                 1834 	.db #0x08
   05C4 02                 1835 	.db #0x02
   05C5 00                 1836 	.db #0x00
   05C6 10                 1837 	.db #0x10
   05C7 12                 1838 	.db #0x12
   05C8 0A                 1839 	.db #0x0A
   05C9 08                 1840 	.db #0x08
   05CA 02                 1841 	.db #0x02
   05CB 00                 1842 	.db #0x00
   05CC 12                 1843 	.db #0x12
   05CD 0A                 1844 	.db #0x0A
   05CE 08                 1845 	.db #0x08
   05CF 02                 1846 	.db #0x02
   05D0 00                 1847 	.db #0x00
   05D1 10                 1848 	.db #0x10
   05D2 12                 1849 	.db #0x12
   05D3 0A                 1850 	.db #0x0A
   05D4 08                 1851 	.db #0x08
   05D5 02                 1852 	.db #0x02
   05D6 00                 1853 	.db #0x00
   05D7 10                 1854 	.db #0x10
   05D8 12                 1855 	.db #0x12
   05D9 0A                 1856 	.db #0x0A
   05DA 08                 1857 	.db #0x08
   05DB 02                 1858 	.db #0x02
   05DC 10                 1859 	.db #0x10
   05DD 12                 1860 	.db #0x12
   05DE 0A                 1861 	.db #0x0A
   05DF 08                 1862 	.db #0x08
   05E0 02                 1863 	.db #0x02
   05E1 00                 1864 	.db #0x00
   05E2 10                 1865 	.db #0x10
   05E3 12                 1866 	.db #0x12
   05E4 0A                 1867 	.db #0x0A
   05E5 08                 1868 	.db #0x08
   05E6 02                 1869 	.db #0x02
   05E7 00                 1870 	.db #0x00
   05E8 10                 1871 	.db #0x10
   05E9 12                 1872 	.db #0x12
   05EA 0A                 1873 	.db #0x0A
   05EB 08                 1874 	.db #0x08
                           1875 ;demo.c:139: void my_isr(void) interrupt
                           1876 ;	---------------------------------
                           1877 ; Function my_isr
                           1878 ; ---------------------------------
   05EC                    1879 _my_isr_start::
   05EC                    1880 _my_isr:
   05EC F5                 1881 	push	af
   05ED C5                 1882 	push	bc
   05EE D5                 1883 	push	de
   05EF E5                 1884 	push	hl
   05F0 FD E5              1885 	push	iy
                           1886 ;demo.c:141: DI;
   05F2 F3                 1887 		di 
                           1888 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              1889 		in a,(#0x99) 
                           1890 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           1891 	call	_PLY_Play
                           1892 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           1893 	call	_PLY_SendRegisters
                           1894 ;demo.c:148: vbicount+=1;
   05FB FD 21r60s31        1895 	ld	iy,#_vbicount
   05FF FD 34 00           1896 	inc	0 (iy)
   0602 20 07              1897 	jr	NZ,00103$
   0604 FD 21r60s31        1898 	ld	iy,#_vbicount
   0608 FD 34 01           1899 	inc	1 (iy)
   060B                    1900 00103$:
                           1901 ;demo.c:149: tick++;
   060B FD 21r62s31        1902 	ld	iy,#_tick
   060F FD 34 00           1903 	inc	0 (iy)
   0612 20 07              1904 	jr	NZ,00104$
   0614 FD 21r62s31        1905 	ld	iy,#_tick
   0618 FD 34 01           1906 	inc	1 (iy)
   061B                    1907 00104$:
                           1908 ;demo.c:151: EI;
   061B FB                 1909 		ei 
   061C FD E1              1910 	pop	iy
   061E E1                 1911 	pop	hl
   061F D1                 1912 	pop	de
   0620 C1                 1913 	pop	bc
   0621 F1                 1914 	pop	af
   0622 ED 4D              1915 	reti
   0624                    1916 _my_isr_end::
                           1917 ;demo.c:154: void color_isr(void) interrupt
                           1918 ;	---------------------------------
                           1919 ; Function color_isr
                           1920 ; ---------------------------------
   0624                    1921 _color_isr_start::
   0624                    1922 _color_isr:
   0624 F5                 1923 	push	af
   0625 C5                 1924 	push	bc
   0626 D5                 1925 	push	de
   0627 E5                 1926 	push	hl
   0628 FD E5              1927 	push	iy
                           1928 ;demo.c:156: DI;
   062A F3                 1929 		di 
                           1930 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              1931 	ld	a,#0x01
   062D F5                 1932 	push	af
   062E 33                 1933 	inc	sp
   062F CDr00s00           1934 	call	_vdp2_status
   0632 33                 1935 	inc	sp
   0633 4D                 1936 	ld	c,l
   0634 21 00 00           1937 	ld	hl,#0x0000
   0637 E5                 1938 	push	hl
   0638 79                 1939 	ld	a,c
   0639 F5                 1940 	push	af
   063A 33                 1941 	inc	sp
   063B CDr00s00           1942 	call	_isNthBitSet
   063E F1                 1943 	pop	af
   063F 33                 1944 	inc	sp
   0640 44                 1945 	ld	b,h
   0641 4D                 1946 	ld	c,l
   0642 79                 1947 	ld	a,c
   0643 B0                 1948 	or	a,b
   0644 28 19              1949 	jr	Z,00102$
                           1950 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r60s31           1951 	ld	hl,#_vbicount + 0
   0649 4E                 1952 	ld	c,(hl)
   064A 06 00              1953 	ld	b,#0x00
   064C 21r00s00           1954 	ld	hl,#_sintab
   064F 09                 1955 	add	hl,bc
   0650 7E                 1956 	ld	a,(hl)
   0651 F5                 1957 	push	af
   0652 33                 1958 	inc	sp
   0653 3E 17              1959 	ld	a,#0x17
   0655 F5                 1960 	push	af
   0656 33                 1961 	inc	sp
   0657 CDr00s00           1962 	call	_vdp_register
   065A F1                 1963 	pop	af
                           1964 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              1965 		in a,(#0x99) 
   065D 18 18              1966 	jr	00103$
   065F                    1967 00102$:
                           1968 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              1969 		in a,(#0x99) 
                           1970 ;demo.c:164: vbicount++;
   0661 FD 21r60s31        1971 	ld	iy,#_vbicount
   0665 FD 34 00           1972 	inc	0 (iy)
   0668 20 07              1973 	jr	NZ,00107$
   066A FD 21r60s31        1974 	ld	iy,#_vbicount
   066E FD 34 01           1975 	inc	1 (iy)
   0671                    1976 00107$:
                           1977 ;demo.c:167: PLY_Play();
   0671 CDr00s00           1978 	call	_PLY_Play
                           1979 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           1980 	call	_PLY_SendRegisters
   0677                    1981 00103$:
                           1982 ;demo.c:171: EI;
   0677 FB                 1983 		ei 
   0678 FD E1              1984 	pop	iy
   067A E1                 1985 	pop	hl
   067B D1                 1986 	pop	de
   067C C1                 1987 	pop	bc
   067D F1                 1988 	pop	af
   067E ED 4D              1989 	reti
   0680                    1990 _color_isr_end::
                           1991 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           1992 ;	---------------------------------
                           1993 ; Function ge5_load
                           1994 ; ---------------------------------
   0680                    1995 _ge5_load_start::
   0680                    1996 _ge5_load:
   0680 DD E5              1997 	push	ix
   0682 DD 21 00 00        1998 	ld	ix,#0
   0686 DD 39              1999 	add	ix,sp
   0688 21 D2 FF           2000 	ld	hl,#-46
   068B 39                 2001 	add	hl,sp
   068C F9                 2002 	ld	sp,hl
                           2003 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2004 	ld	a,9 (ix)
   0690 D6 01              2005 	sub	a,#0x01
   0692 20 06              2006 	jr	NZ,00125$
   0694 DD 7E 0A           2007 	ld	a,10 (ix)
   0697 B7                 2008 	or	a,a
   0698 28 02              2009 	jr	Z,00126$
   069A                    2010 00125$:
   069A 18 1B              2011 	jr	00102$
   069C                    2012 00126$:
                           2013 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2014 	ld	hl,#__str_0
   069F E5                 2015 	push	hl
   06A0 CDr00s00           2016 	call	_puts
   06A3 F1                 2017 	pop	af
                           2018 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2019 	ld	l,4 (ix)
   06A7 DD 66 05           2020 	ld	h,5 (ix)
   06AA E5                 2021 	push	hl
   06AB CDr00s00           2022 	call	_puts
   06AE F1                 2023 	pop	af
                           2024 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2025 	ld	hl,#__str_1
   06B2 E5                 2026 	push	hl
   06B3 CDr00s00           2027 	call	_puts
   06B6 F1                 2028 	pop	af
   06B7                    2029 00102$:
                           2030 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2031 	ld	hl,#0x0000
   06BA 39                 2032 	add	hl,sp
   06BB 4D                 2033 	ld	c,l
   06BC 44                 2034 	ld	b,h
   06BD 21 2E 00           2035 	ld	hl,#0x002E
   06C0 E5                 2036 	push	hl
   06C1 3E 00              2037 	ld	a,#0x00
   06C3 F5                 2038 	push	af
   06C4 33                 2039 	inc	sp
   06C5 C5                 2040 	push	bc
   06C6 CDr00s00           2041 	call	_memset
   06C9 F1                 2042 	pop	af
   06CA F1                 2043 	pop	af
   06CB 33                 2044 	inc	sp
                           2045 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2046 	ld	hl,#0x0000
   06CF 39                 2047 	add	hl,sp
   06D0 4D                 2048 	ld	c,l
   06D1 44                 2049 	ld	b,h
   06D2 21 0F 00           2050 	ld	hl,#0x000F
   06D5 09                 2051 	add	hl,bc
   06D6 EB                 2052 	ex	de,hl
   06D7 3E 80              2053 	ld	a,#0x80
   06D9 12                 2054 	ld	(de),a
                           2055 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2056 	ld	a,#0x00
   06DC 02                 2057 	ld	(bc),a
                           2058 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2059 	ld	e,4 (ix)
   06E0 DD 56 05           2060 	ld	d,5 (ix)
   06E3 03                 2061 	inc	bc
   06E4 21 0B 00           2062 	ld	hl,#0x000B
   06E7 E5                 2063 	push	hl
   06E8 D5                 2064 	push	de
   06E9 C5                 2065 	push	bc
   06EA CDr00s00           2066 	call	_memcpy
   06ED F1                 2067 	pop	af
   06EE F1                 2068 	pop	af
   06EF F1                 2069 	pop	af
                           2070 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2071 	ld	hl,#0x0000
   06F3 39                 2072 	add	hl,sp
   06F4 E5                 2073 	push	hl
   06F5 CDr00s00           2074 	call	_open
   06F8 F1                 2075 	pop	af
   06F9 AF                 2076 	xor	a,a
   06FA B5                 2077 	or	a,l
   06FB 28 05              2078 	jr	Z,00104$
   06FD 2E 00              2079 	ld	l,#0x00
   06FF C3r76s07           2080 	jp	00116$
   0702                    2081 00104$:
                           2082 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2083 	ld	l,7 (ix)
   0705 DD 66 08           2084 	ld	h,8 (ix)
   0708 E5                 2085 	push	hl
   0709 DD 7E 06           2086 	ld	a,6 (ix)
   070C F5                 2087 	push	af
   070D 33                 2088 	inc	sp
   070E CDr00s00           2089 	call	_vdp_set_write_address
   0711 F1                 2090 	pop	af
   0712 33                 2091 	inc	sp
                           2092 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2093 	ld	c,#0x00
   0715                    2094 00112$:
   0715 79                 2095 	ld	a,c
   0716 D6 D5              2096 	sub	a,#0xD5
   0718 D2r6Bs07           2097 	jp	NC,00115$
                           2098 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2099 	push	bc
   071C 21r40s30           2100 	ld	hl,#_scratch
   071F E5                 2101 	push	hl
   0720 CDr00s00           2102 	call	_block_set_data_ptr
   0723 F1                 2103 	pop	af
   0724 7D                 2104 	ld	a,l
   0725 C1                 2105 	pop	bc
   0726 47                 2106 	ld	b,a
   0727 B7                 2107 	or	a,a
   0728 28 05              2108 	jr	Z,00106$
   072A 2E 00              2109 	ld	l,#0x00
   072C C3r76s07           2110 	jp	00116$
   072F                    2111 00106$:
                           2112 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2113 	ld	hl,#0x0000
   0732 39                 2114 	add	hl,sp
   0733 C5                 2115 	push	bc
   0734 E5                 2116 	push	hl
   0735 CDr00s00           2117 	call	_block_read
   0738 F1                 2118 	pop	af
   0739 7D                 2119 	ld	a,l
   073A C1                 2120 	pop	bc
   073B 47                 2121 	ld	b,a
   073C B7                 2122 	or	a,a
   073D 28 04              2123 	jr	Z,00108$
   073F 2E 00              2124 	ld	l,#0x00
   0741 18 33              2125 	jr	00116$
   0743                    2126 00108$:
                           2127 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2128 	xor	a,a
   0744 B1                 2129 	or	a,c
   0745 20 11              2130 	jr	NZ,00110$
   0747 11r47s30           2131 	ld	de,#_scratch + 7
   074A C5                 2132 	push	bc
   074B 3E 79              2133 	ld	a,#0x79
   074D F5                 2134 	push	af
   074E 33                 2135 	inc	sp
   074F D5                 2136 	push	de
   0750 CDr00s00           2137 	call	_vdp_load_screen
   0753 F1                 2138 	pop	af
   0754 33                 2139 	inc	sp
   0755 C1                 2140 	pop	bc
   0756 18 0F              2141 	jr	00114$
   0758                    2142 00110$:
                           2143 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2144 	push	bc
   0759 3E 80              2145 	ld	a,#0x80
   075B F5                 2146 	push	af
   075C 33                 2147 	inc	sp
   075D 21r40s30           2148 	ld	hl,#_scratch
   0760 E5                 2149 	push	hl
   0761 CDr00s00           2150 	call	_vdp_load_screen
   0764 F1                 2151 	pop	af
   0765 33                 2152 	inc	sp
   0766 C1                 2153 	pop	bc
   0767                    2154 00114$:
                           2155 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2156 	inc	c
   0768 C3r15s07           2157 	jp	00112$
   076B                    2158 00115$:
                           2159 ;demo.c:206: close(&f);
   076B 21 00 00           2160 	ld	hl,#0x0000
   076E 39                 2161 	add	hl,sp
   076F E5                 2162 	push	hl
   0770 CDr00s00           2163 	call	_close
   0773 F1                 2164 	pop	af
                           2165 ;demo.c:208: return 1;
   0774 2E 01              2166 	ld	l,#0x01
   0776                    2167 00116$:
   0776 DD F9              2168 	ld	sp,ix
   0778 DD E1              2169 	pop	ix
   077A C9                 2170 	ret
   077B                    2171 _ge5_load_end::
   077B                    2172 __str_0:
   077B 6C 6F 61 64 69 6E  2173 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2174 	.db 0x00
   078D                    2175 __str_1:
   078D 0D                 2176 	.db 0x0D
   078E 0A                 2177 	.db 0x0A
   078F 00                 2178 	.db 0x00
                           2179 ;demo.c:211: void scratch_clear() {
                           2180 ;	---------------------------------
                           2181 ; Function scratch_clear
                           2182 ; ---------------------------------
   0790                    2183 _scratch_clear_start::
   0790                    2184 _scratch_clear:
                           2185 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2186 	ld	hl,#0x0080
   0793 E5                 2187 	push	hl
   0794 3E 00              2188 	ld	a,#0x00
   0796 F5                 2189 	push	af
   0797 33                 2190 	inc	sp
   0798 21r40s30           2191 	ld	hl,#_scratch
   079B E5                 2192 	push	hl
   079C CDr00s00           2193 	call	_memset
   079F F1                 2194 	pop	af
   07A0 F1                 2195 	pop	af
   07A1 33                 2196 	inc	sp
   07A2 C9                 2197 	ret
   07A3                    2198 _scratch_clear_end::
                           2199 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2200 ;	---------------------------------
                           2201 ; Function pal_load
                           2202 ; ---------------------------------
   07A3                    2203 _pal_load_start::
   07A3                    2204 _pal_load:
   07A3 DD E5              2205 	push	ix
   07A5 DD 21 00 00        2206 	ld	ix,#0
   07A9 DD 39              2207 	add	ix,sp
   07AB 21 D2 FF           2208 	ld	hl,#-46
   07AE 39                 2209 	add	hl,sp
   07AF F9                 2210 	ld	sp,hl
                           2211 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2212 	ld	a,7 (ix)
   07B3 D6 01              2213 	sub	a,#0x01
   07B5 20 06              2214 	jr	NZ,00115$
   07B7 DD 7E 08           2215 	ld	a,8 (ix)
   07BA B7                 2216 	or	a,a
   07BB 28 02              2217 	jr	Z,00116$
   07BD                    2218 00115$:
   07BD 18 1B              2219 	jr	00102$
   07BF                    2220 00116$:
                           2221 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2222 	ld	hl,#__str_2
   07C2 E5                 2223 	push	hl
   07C3 CDr00s00           2224 	call	_puts
   07C6 F1                 2225 	pop	af
                           2226 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2227 	ld	l,4 (ix)
   07CA DD 66 05           2228 	ld	h,5 (ix)
   07CD E5                 2229 	push	hl
   07CE CDr00s00           2230 	call	_puts
   07D1 F1                 2231 	pop	af
                           2232 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2233 	ld	hl,#__str_3
   07D5 E5                 2234 	push	hl
   07D6 CDr00s00           2235 	call	_puts
   07D9 F1                 2236 	pop	af
   07DA                    2237 00102$:
                           2238 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2239 	ld	hl,#0x0000
   07DD 39                 2240 	add	hl,sp
   07DE 4D                 2241 	ld	c,l
   07DF 44                 2242 	ld	b,h
   07E0 21 2E 00           2243 	ld	hl,#0x002E
   07E3 E5                 2244 	push	hl
   07E4 3E 00              2245 	ld	a,#0x00
   07E6 F5                 2246 	push	af
   07E7 33                 2247 	inc	sp
   07E8 C5                 2248 	push	bc
   07E9 CDr00s00           2249 	call	_memset
   07EC F1                 2250 	pop	af
   07ED F1                 2251 	pop	af
   07EE 33                 2252 	inc	sp
                           2253 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2254 	call	_scratch_clear
                           2255 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2256 	ld	hl,#0x0000
   07F5 39                 2257 	add	hl,sp
   07F6 4D                 2258 	ld	c,l
   07F7 44                 2259 	ld	b,h
   07F8 21 0F 00           2260 	ld	hl,#0x000F
   07FB 09                 2261 	add	hl,bc
   07FC EB                 2262 	ex	de,hl
   07FD DD 7E 06           2263 	ld	a,6 (ix)
   0800 12                 2264 	ld	(de),a
                           2265 ;demo.c:228: f.drive = 0;
   0801 3E 00              2266 	ld	a,#0x00
   0803 02                 2267 	ld	(bc),a
                           2268 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2269 	ld	e,4 (ix)
   0807 DD 56 05           2270 	ld	d,5 (ix)
   080A 03                 2271 	inc	bc
   080B 21 0B 00           2272 	ld	hl,#0x000B
   080E E5                 2273 	push	hl
   080F D5                 2274 	push	de
   0810 C5                 2275 	push	bc
   0811 CDr00s00           2276 	call	_memcpy
   0814 F1                 2277 	pop	af
   0815 F1                 2278 	pop	af
   0816 F1                 2279 	pop	af
                           2280 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2281 	ld	hl,#0x0000
   081A 39                 2282 	add	hl,sp
   081B E5                 2283 	push	hl
   081C CDr00s00           2284 	call	_open
   081F F1                 2285 	pop	af
   0820 AF                 2286 	xor	a,a
   0821 B5                 2287 	or	a,l
   0822 28 04              2288 	jr	Z,00104$
   0824 2E 00              2289 	ld	l,#0x00
   0826 18 40              2290 	jr	00109$
   0828                    2291 00104$:
                           2292 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21r40s30           2293 	ld	hl,#_scratch
   082B E5                 2294 	push	hl
   082C CDr00s00           2295 	call	_block_set_data_ptr
   082F F1                 2296 	pop	af
   0830 AF                 2297 	xor	a,a
   0831 B5                 2298 	or	a,l
   0832 28 04              2299 	jr	Z,00106$
   0834 2E 00              2300 	ld	l,#0x00
   0836 18 30              2301 	jr	00109$
   0838                    2302 00106$:
                           2303 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2304 	ld	hl,#0x0000
   083B 39                 2305 	add	hl,sp
   083C E5                 2306 	push	hl
   083D CDr00s00           2307 	call	_block_read
   0840 F1                 2308 	pop	af
   0841 AF                 2309 	xor	a,a
   0842 B5                 2310 	or	a,l
   0843 28 04              2311 	jr	Z,00108$
   0845 2E 00              2312 	ld	l,#0x00
   0847 18 1F              2313 	jr	00109$
   0849                    2314 00108$:
                           2315 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2316 	ld	c,6 (ix)
   084C 06 00              2317 	ld	b,#0x00
   084E 11r47s30           2318 	ld	de,#_scratch + 7
   0851 C5                 2319 	push	bc
   0852 D5                 2320 	push	de
   0853 21rC0s30           2321 	ld	hl,#_cur_palette
   0856 E5                 2322 	push	hl
   0857 CDr00s00           2323 	call	_memcpy
   085A F1                 2324 	pop	af
   085B F1                 2325 	pop	af
   085C F1                 2326 	pop	af
                           2327 ;demo.c:238: close(&f);
   085D 21 00 00           2328 	ld	hl,#0x0000
   0860 39                 2329 	add	hl,sp
   0861 E5                 2330 	push	hl
   0862 CDr00s00           2331 	call	_close
   0865 F1                 2332 	pop	af
                           2333 ;demo.c:239: return 1;
   0866 2E 01              2334 	ld	l,#0x01
   0868                    2335 00109$:
   0868 DD F9              2336 	ld	sp,ix
   086A DD E1              2337 	pop	ix
   086C C9                 2338 	ret
   086D                    2339 _pal_load_end::
   086D                    2340 __str_2:
   086D 6C 6F 61 64 69 6E  2341 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2342 	.db 0x00
   087F                    2343 __str_3:
   087F 0D                 2344 	.db 0x0D
   0880 0A                 2345 	.db 0x0A
   0881 00                 2346 	.db 0x00
                           2347 ;demo.c:243: void pause() {
                           2348 ;	---------------------------------
                           2349 ; Function pause
                           2350 ; ---------------------------------
   0882                    2351 _pause_start::
   0882                    2352 _pause:
                           2353 ;demo.c:244: uint8_t i,j,k = 0;
                           2354 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2355 	ld	bc,#0x0000
   0885                    2356 00104$:
   0885 78                 2357 	ld	a,b
   0886 D6 FF              2358 	sub	a,#0xFF
   0888 D0                 2359 	ret	NC
                           2360 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2361 	ld	e,c
   088A 16 FF              2362 	ld	d,#0xFF
   088C                    2363 00103$:
                           2364 ;demo.c:247: k++;
   088C 1C                 2365 	inc	e
   088D 15                 2366 	dec	d
                           2367 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2368 	xor	a,a
   088F B2                 2369 	or	a,d
   0890 20 FA              2370 	jr	NZ,00103$
                           2371 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2372 	ld	c,e
   0893 04                 2373 	inc	b
   0894 18 EF              2374 	jr	00104$
   0896                    2375 _pause_end::
                           2376 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2377 ;	---------------------------------
                           2378 ; Function raw_load
                           2379 ; ---------------------------------
   0896                    2380 _raw_load_start::
   0896                    2381 _raw_load:
   0896 DD E5              2382 	push	ix
   0898 DD 21 00 00        2383 	ld	ix,#0
   089C DD 39              2384 	add	ix,sp
   089E 21 D2 FF           2385 	ld	hl,#-46
   08A1 39                 2386 	add	hl,sp
   08A2 F9                 2387 	ld	sp,hl
                           2388 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2389 	ld	a,10 (ix)
   08A6 D6 01              2390 	sub	a,#0x01
   08A8 20 06              2391 	jr	NZ,00120$
   08AA DD 7E 0B           2392 	ld	a,11 (ix)
   08AD B7                 2393 	or	a,a
   08AE 28 02              2394 	jr	Z,00121$
   08B0                    2395 00120$:
   08B0 18 1B              2396 	jr	00102$
   08B2                    2397 00121$:
                           2398 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2399 	ld	hl,#__str_4
   08B5 E5                 2400 	push	hl
   08B6 CDr00s00           2401 	call	_puts
   08B9 F1                 2402 	pop	af
                           2403 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2404 	ld	l,4 (ix)
   08BD DD 66 05           2405 	ld	h,5 (ix)
   08C0 E5                 2406 	push	hl
   08C1 CDr00s00           2407 	call	_puts
   08C4 F1                 2408 	pop	af
                           2409 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2410 	ld	hl,#__str_5
   08C8 E5                 2411 	push	hl
   08C9 CDr00s00           2412 	call	_puts
   08CC F1                 2413 	pop	af
   08CD                    2414 00102$:
                           2415 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2416 	ld	hl,#0x0000
   08D0 39                 2417 	add	hl,sp
   08D1 4D                 2418 	ld	c,l
   08D2 44                 2419 	ld	b,h
   08D3 21 2E 00           2420 	ld	hl,#0x002E
   08D6 E5                 2421 	push	hl
   08D7 3E 00              2422 	ld	a,#0x00
   08D9 F5                 2423 	push	af
   08DA 33                 2424 	inc	sp
   08DB C5                 2425 	push	bc
   08DC CDr00s00           2426 	call	_memset
   08DF F1                 2427 	pop	af
   08E0 F1                 2428 	pop	af
   08E1 33                 2429 	inc	sp
                           2430 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2431 	call	_scratch_clear
                           2432 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2433 	ld	hl,#0x0000
   08E8 39                 2434 	add	hl,sp
   08E9 4D                 2435 	ld	c,l
   08EA 44                 2436 	ld	b,h
   08EB 21 0F 00           2437 	ld	hl,#0x000F
   08EE 09                 2438 	add	hl,bc
   08EF EB                 2439 	ex	de,hl
   08F0 3E 80              2440 	ld	a,#0x80
   08F2 12                 2441 	ld	(de),a
                           2442 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2443 	ld	a,#0x00
   08F5 02                 2444 	ld	(bc),a
                           2445 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2446 	ld	e,4 (ix)
   08F9 DD 56 05           2447 	ld	d,5 (ix)
   08FC 03                 2448 	inc	bc
   08FD 21 0B 00           2449 	ld	hl,#0x000B
   0900 E5                 2450 	push	hl
   0901 D5                 2451 	push	de
   0902 C5                 2452 	push	bc
   0903 CDr00s00           2453 	call	_memcpy
   0906 F1                 2454 	pop	af
   0907 F1                 2455 	pop	af
   0908 F1                 2456 	pop	af
                           2457 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2458 	ld	hl,#0x0000
   090C 39                 2459 	add	hl,sp
   090D E5                 2460 	push	hl
   090E CDr00s00           2461 	call	_open
   0911 F1                 2462 	pop	af
   0912 AF                 2463 	xor	a,a
   0913 B5                 2464 	or	a,l
   0914 28 05              2465 	jr	Z,00119$
   0916 2E 00              2466 	ld	l,#0x00
   0918 C3r7Fs09           2467 	jp	00112$
                           2468 ;demo.c:274: while(total < size) {
   091B                    2469 00119$:
   091B 01 00 00           2470 	ld	bc,#0x0000
   091E                    2471 00109$:
   091E 79                 2472 	ld	a,c
   091F DD 96 06           2473 	sub	a,6 (ix)
   0922 78                 2474 	ld	a,b
   0923 DD 9E 07           2475 	sbc	a,7 (ix)
   0926 F2r74s09           2476 	jp	P,00111$
                           2477 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2478 	push	bc
   092A 21r40s30           2479 	ld	hl,#_scratch
   092D E5                 2480 	push	hl
   092E CDr00s00           2481 	call	_block_set_data_ptr
   0931 F1                 2482 	pop	af
   0932 5D                 2483 	ld	e,l
   0933 C1                 2484 	pop	bc
   0934 AF                 2485 	xor	a,a
   0935 B3                 2486 	or	a,e
   0936 28 04              2487 	jr	Z,00106$
   0938 2E 00              2488 	ld	l,#0x00
   093A 18 43              2489 	jr	00112$
   093C                    2490 00106$:
                           2491 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2492 	ld	hl,#0x0000
   093F 39                 2493 	add	hl,sp
   0940 C5                 2494 	push	bc
   0941 E5                 2495 	push	hl
   0942 CDr00s00           2496 	call	_block_read
   0945 F1                 2497 	pop	af
   0946 5D                 2498 	ld	e,l
   0947 C1                 2499 	pop	bc
   0948 AF                 2500 	xor	a,a
   0949 B3                 2501 	or	a,e
   094A 28 04              2502 	jr	Z,00108$
   094C 2E 00              2503 	ld	l,#0x00
   094E 18 2F              2504 	jr	00112$
   0950                    2505 00108$:
                           2506 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2507 	ld	a,8 (ix)
   0953 81                 2508 	add	a,c
   0954 5F                 2509 	ld	e,a
   0955 DD 7E 09           2510 	ld	a,9 (ix)
   0958 88                 2511 	adc	a,b
   0959 57                 2512 	ld	d,a
   095A C5                 2513 	push	bc
   095B 21 80 00           2514 	ld	hl,#0x0080
   095E E5                 2515 	push	hl
   095F 21r40s30           2516 	ld	hl,#_scratch
   0962 E5                 2517 	push	hl
   0963 D5                 2518 	push	de
   0964 CDr00s00           2519 	call	_memcpy
   0967 F1                 2520 	pop	af
   0968 F1                 2521 	pop	af
   0969 F1                 2522 	pop	af
   096A C1                 2523 	pop	bc
                           2524 ;demo.c:280: total+=incr;
   096B 21 80 00           2525 	ld	hl,#0x0080
   096E 09                 2526 	add	hl,bc
   096F 4D                 2527 	ld	c,l
   0970 44                 2528 	ld	b,h
   0971 C3r1Es09           2529 	jp	00109$
   0974                    2530 00111$:
                           2531 ;demo.c:283: close(&f);
   0974 21 00 00           2532 	ld	hl,#0x0000
   0977 39                 2533 	add	hl,sp
   0978 E5                 2534 	push	hl
   0979 CDr00s00           2535 	call	_close
   097C F1                 2536 	pop	af
                           2537 ;demo.c:285: return 1;
   097D 2E 01              2538 	ld	l,#0x01
   097F                    2539 00112$:
   097F DD F9              2540 	ld	sp,ix
   0981 DD E1              2541 	pop	ix
   0983 C9                 2542 	ret
   0984                    2543 _raw_load_end::
   0984                    2544 __str_4:
   0984 6C 6F 61 64 69 6E  2545 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2546 	.db 0x00
   0996                    2547 __str_5:
   0996 0D                 2548 	.db 0x0D
   0997 0A                 2549 	.db 0x0A
   0998 00                 2550 	.db 0x00
                           2551 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2552 ;	---------------------------------
                           2553 ; Function pck_load
                           2554 ; ---------------------------------
   0999                    2555 _pck_load_start::
   0999                    2556 _pck_load:
   0999 DD E5              2557 	push	ix
   099B DD 21 00 00        2558 	ld	ix,#0
   099F DD 39              2559 	add	ix,sp
                           2560 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2561 	ld	a,12 (ix)
   09A4 D6 01              2562 	sub	a,#0x01
   09A6 20 06              2563 	jr	NZ,00106$
   09A8 DD 7E 0D           2564 	ld	a,13 (ix)
   09AB B7                 2565 	or	a,a
   09AC 28 02              2566 	jr	Z,00107$
   09AE                    2567 00106$:
   09AE 18 1B              2568 	jr	00102$
   09B0                    2569 00107$:
                           2570 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2571 	ld	hl,#__str_6
   09B3 E5                 2572 	push	hl
   09B4 CDr00s00           2573 	call	_puts
   09B7 F1                 2574 	pop	af
                           2575 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2576 	ld	l,4 (ix)
   09BB DD 66 05           2577 	ld	h,5 (ix)
   09BE E5                 2578 	push	hl
   09BF CDr00s00           2579 	call	_puts
   09C2 F1                 2580 	pop	af
                           2581 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2582 	ld	hl,#__str_7
   09C6 E5                 2583 	push	hl
   09C7 CDr00s00           2584 	call	_puts
   09CA F1                 2585 	pop	af
   09CB                    2586 00102$:
                           2587 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2588 	ld	c,6 (ix)
   09CE DD 46 07           2589 	ld	b,7 (ix)
   09D1 C5                 2590 	push	bc
   09D2 C5                 2591 	push	bc
   09D3 3E 00              2592 	ld	a,#0x00
   09D5 F5                 2593 	push	af
   09D6 33                 2594 	inc	sp
   09D7 21r60s01           2595 	ld	hl,#_packbuffer
   09DA E5                 2596 	push	hl
   09DB CDr00s00           2597 	call	_memset
   09DE F1                 2598 	pop	af
   09DF F1                 2599 	pop	af
   09E0 33                 2600 	inc	sp
   09E1 C1                 2601 	pop	bc
                           2602 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2603 	ld	hl,#0x0000
   09E5 E5                 2604 	push	hl
   09E6 21r60s01           2605 	ld	hl,#_packbuffer
   09E9 E5                 2606 	push	hl
   09EA C5                 2607 	push	bc
   09EB DD 6E 04           2608 	ld	l,4 (ix)
   09EE DD 66 05           2609 	ld	h,5 (ix)
   09F1 E5                 2610 	push	hl
   09F2 CDr96s08           2611 	call	_raw_load
   09F5 F1                 2612 	pop	af
   09F6 F1                 2613 	pop	af
   09F7 F1                 2614 	pop	af
   09F8 F1                 2615 	pop	af
                           2616 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2617 	ld	a,10 (ix)
   09FC F5                 2618 	push	af
   09FD 33                 2619 	inc	sp
   09FE DD 6E 08           2620 	ld	l,8 (ix)
   0A01 DD 66 09           2621 	ld	h,9 (ix)
   0A04 E5                 2622 	push	hl
   0A05 21r60s01           2623 	ld	hl,#_packbuffer
   0A08 E5                 2624 	push	hl
   0A09 CDr00s00           2625 	call	_bitbuster
   0A0C F1                 2626 	pop	af
   0A0D F1                 2627 	pop	af
   0A0E 33                 2628 	inc	sp
   0A0F DD E1              2629 	pop	ix
   0A11 C9                 2630 	ret
   0A12                    2631 _pck_load_end::
   0A12                    2632 __str_6:
   0A12 6C 6F 61 64 69 6E  2633 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2634 	.db 0x00
   0A24                    2635 __str_7:
   0A24 0D                 2636 	.db 0x0D
   0A25 0A                 2637 	.db 0x0A
   0A26 00                 2638 	.db 0x00
                           2639 ;demo.c:299: void fadein() {
                           2640 ;	---------------------------------
                           2641 ; Function fadein
                           2642 ; ---------------------------------
   0A27                    2643 _fadein_start::
   0A27                    2644 _fadein:
   0A27 DD E5              2645 	push	ix
   0A29 DD 21 00 00        2646 	ld	ix,#0
   0A2D DD 39              2647 	add	ix,sp
   0A2F F5                 2648 	push	af
                           2649 ;demo.c:302: if (tick < 4) return;
   0A30 3Ar62s31           2650 	ld	a,(#_tick+0)
   0A33 D6 04              2651 	sub	a,#0x04
   0A35 3Ar63s31           2652 	ld	a,(#_tick+1)
   0A38 DE 00              2653 	sbc	a,#0x00
   0A3A F2r40s0A           2654 	jp	P,00102$
   0A3D C3rEEs0A           2655 	jp	00113$
   0A40                    2656 00102$:
                           2657 ;demo.c:304: tick = 0;
   0A40 21r62s31           2658 	ld	hl,#_tick + 0
   0A43 36 00              2659 	ld	(hl), #0x00
   0A45 21r63s31           2660 	ld	hl,#_tick + 1
   0A48 36 00              2661 	ld	(hl), #0x00
                           2662 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2663 	ld	c,#0x00
   0A4C                    2664 00109$:
   0A4C 79                 2665 	ld	a,c
   0A4D D6 20              2666 	sub	a,#0x20
   0A4F D2rE6s0A           2667 	jp	NC,00112$
                           2668 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3Er40              2669 	ld	a,#<_scratch
   0A54 81                 2670 	add	a,c
   0A55 5F                 2671 	ld	e,a
   0A56 3Es30              2672 	ld	a,#>_scratch
   0A58 CE 00              2673 	adc	a,#0x00
   0A5A 57                 2674 	ld	d,a
   0A5B 1A                 2675 	ld	a,(de)
   0A5C 47                 2676 	ld	b,a
   0A5D 58                 2677 	ld	e,b
   0A5E CB 3B              2678 	srl	e
   0A60 CB 3B              2679 	srl	e
   0A62 CB 3B              2680 	srl	e
   0A64 CB 3B              2681 	srl	e
                           2682 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2683 	ld	a,b
   0A67 E6 0F              2684 	and	a,#0x0F
   0A69 DD 77 FF           2685 	ld	-1 (ix),a
                           2686 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2687 	ld	d,c
   0A6D 14                 2688 	inc	d
   0A6E 3Er40              2689 	ld	a,#<_scratch
   0A70 82                 2690 	add	a,d
   0A71 6F                 2691 	ld	l,a
   0A72 3Es30              2692 	ld	a,#>_scratch
   0A74 CE 00              2693 	adc	a,#0x00
   0A76 67                 2694 	ld	h,a
   0A77 56                 2695 	ld	d,(hl)
   0A78 DD 72 FE           2696 	ld	-2 (ix),d
                           2697 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3ErC0              2698 	ld	a,#<_cur_palette
   0A7D 81                 2699 	add	a,c
   0A7E 6F                 2700 	ld	l,a
   0A7F 3Es30              2701 	ld	a,#>_cur_palette
   0A81 CE 00              2702 	adc	a,#0x00
   0A83 67                 2703 	ld	h,a
   0A84 56                 2704 	ld	d,(hl)
   0A85 CB 3A              2705 	srl	d
   0A87 CB 3A              2706 	srl	d
   0A89 CB 3A              2707 	srl	d
   0A8B CB 3A              2708 	srl	d
   0A8D 7B                 2709 	ld	a,e
   0A8E 92                 2710 	sub	a,d
   0A8F 30 01              2711 	jr	NC,00104$
   0A91 1C                 2712 	inc	e
   0A92                    2713 00104$:
                           2714 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3ErC0              2715 	ld	a,#<_cur_palette
   0A94 81                 2716 	add	a,c
   0A95 6F                 2717 	ld	l,a
   0A96 3Es30              2718 	ld	a,#>_cur_palette
   0A98 CE 00              2719 	adc	a,#0x00
   0A9A 67                 2720 	ld	h,a
   0A9B 7E                 2721 	ld	a,(hl)
   0A9C E6 0F              2722 	and	a,#0x0F
   0A9E 47                 2723 	ld	b,a
   0A9F DD 7E FF           2724 	ld	a,-1 (ix)
   0AA2 90                 2725 	sub	a,b
   0AA3 30 03              2726 	jr	NC,00106$
   0AA5 DD 34 FF           2727 	inc	-1 (ix)
   0AA8                    2728 00106$:
                           2729 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3Er40              2730 	ld	a,#<_scratch
   0AAA 81                 2731 	add	a,c
   0AAB 47                 2732 	ld	b,a
   0AAC 3Es30              2733 	ld	a,#>_scratch
   0AAE CE 00              2734 	adc	a,#0x00
   0AB0 57                 2735 	ld	d,a
   0AB1 7B                 2736 	ld	a,e
   0AB2 07                 2737 	rlca
   0AB3 07                 2738 	rlca
   0AB4 07                 2739 	rlca
   0AB5 07                 2740 	rlca
   0AB6 E6 F0              2741 	and	a,#0xF0
   0AB8 DD B6 FF           2742 	or	a,-1 (ix)
   0ABB 68                 2743 	ld	l,b
   0ABC 62                 2744 	ld	h,d
   0ABD 77                 2745 	ld	(hl),a
                           2746 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2747 	ld	b,c
   0ABF 04                 2748 	inc	b
   0AC0 3ErC0              2749 	ld	a,#<_cur_palette
   0AC2 80                 2750 	add	a,b
   0AC3 5F                 2751 	ld	e,a
   0AC4 3Es30              2752 	ld	a,#>_cur_palette
   0AC6 CE 00              2753 	adc	a,#0x00
   0AC8 57                 2754 	ld	d,a
   0AC9 1A                 2755 	ld	a,(de)
   0ACA 5F                 2756 	ld	e,a
   0ACB DD 7E FE           2757 	ld	a,-2 (ix)
   0ACE 93                 2758 	sub	a,e
   0ACF 30 10              2759 	jr	NC,00111$
   0AD1 3Er40              2760 	ld	a,#<_scratch
   0AD3 80                 2761 	add	a,b
   0AD4 47                 2762 	ld	b,a
   0AD5 3Es30              2763 	ld	a,#>_scratch
   0AD7 CE 00              2764 	adc	a,#0x00
   0AD9 5F                 2765 	ld	e,a
   0ADA 68                 2766 	ld	l,b
   0ADB 67                 2767 	ld	h,a
   0ADC 7E                 2768 	ld	a,(hl)
   0ADD 3C                 2769 	inc	a
   0ADE 68                 2770 	ld	l,b
   0ADF 63                 2771 	ld	h,e
   0AE0 77                 2772 	ld	(hl),a
   0AE1                    2773 00111$:
                           2774 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2775 	inc	c
   0AE2 0C                 2776 	inc	c
   0AE3 C3r4Cs0A           2777 	jp	00109$
   0AE6                    2778 00112$:
                           2779 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21r40s30           2780 	ld	hl,#_scratch
   0AE9 E5                 2781 	push	hl
   0AEA CDr00s00           2782 	call	_vdp_load_palette
   0AED F1                 2783 	pop	af
   0AEE                    2784 00113$:
   0AEE DD F9              2785 	ld	sp,ix
   0AF0 DD E1              2786 	pop	ix
   0AF2 C9                 2787 	ret
   0AF3                    2788 _fadein_end::
                           2789 ;demo.c:331: void do_ymmm() {
                           2790 ;	---------------------------------
                           2791 ; Function do_ymmm
                           2792 ; ---------------------------------
   0AF3                    2793 _do_ymmm_start::
   0AF3                    2794 _do_ymmm:
   0AF3 DD E5              2795 	push	ix
   0AF5 DD 21 00 00        2796 	ld	ix,#0
   0AF9 DD 39              2797 	add	ix,sp
   0AFB F5                 2798 	push	af
                           2799 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2800 	ld	a,#0x20
   0AFE FD 21r62s31        2801 	ld	iy,#_tick
   0B02 FD 96 00           2802 	sub	a,0 (iy)
   0B05 3E 00              2803 	ld	a,#0x00
   0B07 FD 21r62s31        2804 	ld	iy,#_tick
   0B0B FD 9E 01           2805 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2806 	jp	P,00102$
   0B11 21r62s31           2807 	ld	hl,#_tick + 0
   0B14 36 00              2808 	ld	(hl), #0x00
   0B16 21r63s31           2809 	ld	hl,#_tick + 1
   0B19 36 00              2810 	ld	(hl), #0x00
   0B1B FD 21r7Ds31        2811 	ld	iy,#_flipper
   0B1F FD 34 00           2812 	inc	0 (iy)
   0B22 20 07              2813 	jr	NZ,00115$
   0B24 FD 21r7Ds31        2814 	ld	iy,#_flipper
   0B28 FD 34 01           2815 	inc	1 (iy)
   0B2B                    2816 00115$:
   0B2B                    2817 00102$:
                           2818 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2819 	ld	a,#0x0A
   0B2D FD 21r7Ds31        2820 	ld	iy,#_flipper
   0B31 FD 96 00           2821 	sub	a,0 (iy)
   0B34 3E 00              2822 	ld	a,#0x00
   0B36 FD 21r7Ds31        2823 	ld	iy,#_flipper
   0B3A FD 9E 01           2824 	sbc	a,1 (iy)
   0B3D F2r4As0B           2825 	jp	P,00104$
   0B40 21r7Ds31           2826 	ld	hl,#_flipper + 0
   0B43 36 00              2827 	ld	(hl), #0x00
   0B45 21r7Es31           2828 	ld	hl,#_flipper + 1
   0B48 36 00              2829 	ld	(hl), #0x00
   0B4A                    2830 00104$:
                           2831 ;demo.c:338: ymmmf++;
   0B4A FD 21r7Fs31        2832 	ld	iy,#_ymmmf
   0B4E FD 34 00           2833 	inc	0 (iy)
   0B51 20 07              2834 	jr	NZ,00116$
   0B53 FD 21r7Fs31        2835 	ld	iy,#_ymmmf
   0B57 FD 34 01           2836 	inc	1 (iy)
   0B5A                    2837 00116$:
                           2838 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r7Bs31           2839 	ld	hl,#_yofff + 0
   0B5D 36 00              2840 	ld	(hl), #0x00
   0B5F                    2841 00105$:
   0B5F 21r7Bs31           2842 	ld	hl,#_yofff + 0
   0B62 4E                 2843 	ld	c,(hl)
   0B63 06 00              2844 	ld	b,#0x00
   0B65 79                 2845 	ld	a,c
   0B66 D6 D2              2846 	sub	a,#0xD2
   0B68 78                 2847 	ld	a,b
   0B69 DE 00              2848 	sbc	a,#0x00
   0B6B F2rE4s0B           2849 	jp	P,00109$
                           2850 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r7Fs31           2851 	ld	hl,#_ymmmf
   0B71 79                 2852 	ld	a,c
   0B72 86                 2853 	add	a,(hl)
   0B73 5F                 2854 	ld	e,a
   0B74 78                 2855 	ld	a,b
   0B75 23                 2856 	inc	hl
   0B76 8E                 2857 	adc	a,(hl)
   0B77 16 00              2858 	ld	d,#0x00
   0B79 CB 23              2859 	sla	e
   0B7B CB 12              2860 	rl	d
   0B7D 21r2Cs00           2861 	ld	hl,#_sintabx
   0B80 19                 2862 	add	hl,de
   0B81 5E                 2863 	ld	e,(hl)
   0B82 23                 2864 	inc	hl
   0B83 56                 2865 	ld	d,(hl)
   0B84 DD 73 FE           2866 	ld	-2 (ix),e
   0B87 DD 72 FF           2867 	ld	-1 (ix),d
                           2868 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r64s31           2869 	ld	hl,#_cmd
   0B8D 36 00              2870 	ld	(hl),#0x00
   0B8F 23                 2871 	inc	hl
   0B90 36 00              2872 	ld	(hl),#0x00
                           2873 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r66s31           2874 	ld	de,#_cmd + 2
   0B95 EB                 2875 	ex	de,hl
   0B96 71                 2876 	ld	(hl),c
   0B97 23                 2877 	inc	hl
   0B98 70                 2878 	ld	(hl),b
                           2879 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r68s31           2880 	ld	de,#_cmd + 4
   0B9C EB                 2881 	ex	de,hl
   0B9D DD 7E FE           2882 	ld	a,-2 (ix)
   0BA0 77                 2883 	ld	(hl),a
   0BA1 23                 2884 	inc	hl
   0BA2 DD 7E FF           2885 	ld	a,-1 (ix)
   0BA5 77                 2886 	ld	(hl),a
                           2887 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r6As31           2888 	ld	de,#_cmd + 6
   0BA9 03                 2889 	inc	bc
   0BAA 03                 2890 	inc	bc
   0BAB 03                 2891 	inc	bc
   0BAC 6B                 2892 	ld	l,e
   0BAD 62                 2893 	ld	h,d
   0BAE 71                 2894 	ld	(hl),c
   0BAF 23                 2895 	inc	hl
   0BB0 70                 2896 	ld	(hl),b
                           2897 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r6Cs31           2898 	ld	hl, #_cmd + 8
   0BB4 36 00              2899 	ld	(hl),#0x00
   0BB6 23                 2900 	inc	hl
   0BB7 36 01              2901 	ld	(hl),#0x01
                           2902 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r6Es31           2903 	ld	hl, #_cmd + 10
   0BBC 36 01              2904 	ld	(hl),#0x01
   0BBE 23                 2905 	inc	hl
   0BBF 36 00              2906 	ld	(hl),#0x00
                           2907 ;demo.c:349: cmd.data = 0;
                           2908 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              2909 	ld	a,#0x00
   0BC3 32r70s31           2910 	ld	(#_cmd + 12),a
   0BC6 32r71s31           2911 	ld	(#_cmd + 13),a
                           2912 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              2913 	ld	a,#0xD0
   0BCB 32r72s31           2914 	ld	(#_cmd + 14),a
                           2915 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r64s31           2916 	ld	hl,#_cmd
   0BD1 E5                 2917 	push	hl
   0BD2 CDr00s00           2918 	call	_vdp_copier
   0BD5 F1                 2919 	pop	af
                           2920 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r7Bs31           2921 	ld	hl,#_yofff + 0
   0BD9 4E                 2922 	ld	c,(hl)
   0BDA 21r7Bs31           2923 	ld	hl,#_yofff
   0BDD 79                 2924 	ld	a,c
   0BDE C6 02              2925 	add	a,#0x02
   0BE0 77                 2926 	ld	(hl),a
   0BE1 C3r5Fs0B           2927 	jp	00105$
   0BE4                    2928 00109$:
   0BE4 DD F9              2929 	ld	sp,ix
   0BE6 DD E1              2930 	pop	ix
   0BE8 C9                 2931 	ret
   0BE9                    2932 _do_ymmm_end::
                           2933 ;demo.c:371: void do_blocks() {
                           2934 ;	---------------------------------
                           2935 ; Function do_blocks
                           2936 ; ---------------------------------
   0BE9                    2937 _do_blocks_start::
   0BE9                    2938 _do_blocks:
   0BE9 DD E5              2939 	push	ix
   0BEB DD 21 00 00        2940 	ld	ix,#0
   0BEF DD 39              2941 	add	ix,sp
   0BF1 21 FA FF           2942 	ld	hl,#-6
   0BF4 39                 2943 	add	hl,sp
   0BF5 F9                 2944 	ld	sp,hl
                           2945 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        2946 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        2947 	ld	-3 (ix),#0x00
                           2948 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        2949 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        2950 	ld	-5 (ix),#0x00
                           2951 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           2952 	ld	hl,#0x0017
   0C09 E5                 2953 	push	hl
   0C0A CDr00s00           2954 	call	_vdp_register
   0C0D F1                 2955 	pop	af
                           2956 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 2957 	xor	a,a
   0C0F FD 21r81s31        2958 	ld	iy,#_block_init
   0C13 FD B6 00           2959 	or	a,0 (iy)
   0C16 C2r7Es0C           2960 	jp	NZ,00108$
                           2961 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           2962 	call	_vdp_set_screen5
                           2963 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           2964 	ld	hl,#0x5F02
   0C1F E5                 2965 	push	hl
   0C20 CDr00s00           2966 	call	_vdp_register
   0C23 F1                 2967 	pop	af
                           2968 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        2969 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        2970 	ld	-1 (ix),#0x00
   0C2C                    2971 00110$:
   0C2C DD 7E FE           2972 	ld	a,-2 (ix)
   0C2F D6 10              2973 	sub	a,#0x10
   0C31 DD 7E FF           2974 	ld	a,-1 (ix)
   0C34 DE 00              2975 	sbc	a,#0x00
   0C36 F2r6Es0C           2976 	jp	P,00113$
   0C39 DD 4E FE           2977 	ld	c,-2 (ix)
   0C3C DD 46 FF           2978 	ld	b,-1 (ix)
   0C3F CB 21              2979 	sla	c
   0C41 CB 10              2980 	rl	b
   0C43 21r8As31           2981 	ld	hl,#_btab
   0C46 09                 2982 	add	hl,bc
   0C47 4D                 2983 	ld	c,l
   0C48 44                 2984 	ld	b,h
   0C49 DD 5E FE           2985 	ld	e,-2 (ix)
   0C4C DD 56 FF           2986 	ld	d,-1 (ix)
   0C4F CB 23              2987 	sla	e
   0C51 CB 12              2988 	rl	d
   0C53 CB 23              2989 	sla	e
   0C55 CB 12              2990 	rl	d
   0C57 CB 23              2991 	sla	e
   0C59 CB 12              2992 	rl	d
   0C5B CB 23              2993 	sla	e
   0C5D CB 12              2994 	rl	d
   0C5F 69                 2995 	ld	l,c
   0C60 60                 2996 	ld	h,b
   0C61 73                 2997 	ld	(hl),e
   0C62 23                 2998 	inc	hl
   0C63 72                 2999 	ld	(hl),d
   0C64 DD 34 FE           3000 	inc	-2 (ix)
   0C67 20 03              3001 	jr	NZ,00139$
   0C69 DD 34 FF           3002 	inc	-1 (ix)
   0C6C                    3003 00139$:
   0C6C 18 BE              3004 	jr	00110$
   0C6E                    3005 00113$:
                           3006 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21rE0s30           3007 	ld	hl,#_block_palette
   0C71 E5                 3008 	push	hl
   0C72 CDr00s00           3009 	call	_vdp_load_palette
   0C75 F1                 3010 	pop	af
                           3011 ;demo.c:387: block_init = 1;
   0C76 21r81s31           3012 	ld	hl,#_block_init + 0
   0C79 36 01              3013 	ld	(hl), #0x01
   0C7B C3r07s0E           3014 	jp	00122$
   0C7E                    3015 00108$:
                           3016 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3ArAAs31           3017 	ld	a,(#_flof+0)
   0C81 FD 21rAAs31        3018 	ld	iy,#_flof
   0C85 FD B6 01           3019 	or	a,1 (iy)
   0C88 20 10              3020 	jr	NZ,00102$
   0C8A DD 36 FC 00        3021 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3022 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3023 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3024 	ld	-5 (ix),#0x00
   0C9A                    3025 00102$:
                           3026 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3ArAAs31           3027 	ld	a,(#_flof+0)
   0C9D D6 01              3028 	sub	a,#0x01
   0C9F 20 06              3029 	jr	NZ,00140$
   0CA1 3ArABs31           3030 	ld	a,(#_flof+1)
   0CA4 B7                 3031 	or	a,a
   0CA5 28 02              3032 	jr	Z,00141$
   0CA7                    3033 00140$:
   0CA7 18 10              3034 	jr	00104$
   0CA9                    3035 00141$:
   0CA9 DD 36 FC 08        3036 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3037 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3038 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3039 	ld	-5 (ix),#0x00
   0CB9                    3040 00104$:
                           3041 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r88s31        3042 	ld	iy,#_bty
   0CBD FD 36 00 03        3043 	ld	0 (iy),#0x03
   0CC1 FD 21r88s31        3044 	ld	iy,#_bty
   0CC5 FD 36 01 00        3045 	ld	1 (iy),#0x00
   0CC9                    3046 00118$:
   0CC9 3Ar88s31           3047 	ld	a,(#_bty+0)
   0CCC D6 0B              3048 	sub	a,#0x0B
   0CCE 3Ar89s31           3049 	ld	a,(#_bty+1)
   0CD1 DE 00              3050 	sbc	a,#0x00
   0CD3 F2rDEs0D           3051 	jp	P,00121$
                           3052 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3053 	ld	a,-4 (ix)
   0CD9 FD 21r86s31        3054 	ld	iy,#_btx
   0CDD FD 77 00           3055 	ld	0 (iy),a
   0CE0 DD 7E FD           3056 	ld	a,-3 (ix)
   0CE3 FD 21r86s31        3057 	ld	iy,#_btx
   0CE7 FD 77 01           3058 	ld	1 (iy),a
   0CEA                    3059 00114$:
   0CEA 3Ar86s31           3060 	ld	a,(#_btx+0)
   0CED DD 96 FA           3061 	sub	a,-6 (ix)
   0CF0 3Ar87s31           3062 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3063 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3064 	jp	P,00120$
                           3065 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3066 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3067 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3068 	and	a,0 (iy)
   0D03 21r00s00           3069 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3070 	or	a,(hl)
   0D07 4F                 3071 	ld	c,a
   0D08 CB 39              3072 	srl	c
   0D0A 21r82s31           3073 	ld	hl,#_bsx + 0
   0D0D 71                 3074 	ld	(hl), c
   0D0E 21r83s31           3075 	ld	hl,#_bsx + 1
   0D11 36 00              3076 	ld	(hl), #0x00
                           3077 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3078 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r84s31           3079 	ld	hl,#_bsy + 0
   0D19 77                 3080 	ld	(hl), a
   0D1A 21r85s31           3081 	ld	hl,#_bsy + 1
   0D1D 36 00              3082 	ld	(hl), #0x00
                           3083 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r82s31           3084 	ld	hl,#_bsx + 0
   0D22 4E                 3085 	ld	c,(hl)
   0D23 21r83s31           3086 	ld	hl,#_bsx + 1
   0D26 46                 3087 	ld	b,(hl)
   0D27 CB 21              3088 	sla	c
   0D29 CB 10              3089 	rl	b
   0D2B 21r8As31           3090 	ld	hl,#_btab
   0D2E 09                 3091 	add	hl,bc
   0D2F 4E                 3092 	ld	c,(hl)
   0D30 23                 3093 	inc	hl
   0D31 46                 3094 	ld	b,(hl)
   0D32 21r64s31           3095 	ld	hl,#_cmd
   0D35 71                 3096 	ld	(hl),c
   0D36 23                 3097 	inc	hl
   0D37 70                 3098 	ld	(hl),b
                           3099 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r66s31           3100 	ld	bc,#_cmd + 2
   0D3B 21r84s31           3101 	ld	hl,#_bsy + 0
   0D3E 5E                 3102 	ld	e,(hl)
   0D3F 21r85s31           3103 	ld	hl,#_bsy + 1
   0D42 56                 3104 	ld	d,(hl)
   0D43 CB 23              3105 	sla	e
   0D45 CB 12              3106 	rl	d
   0D47 21r8As31           3107 	ld	hl,#_btab
   0D4A 19                 3108 	add	hl,de
   0D4B 5E                 3109 	ld	e,(hl)
   0D4C 23                 3110 	inc	hl
   0D4D 56                 3111 	ld	d,(hl)
   0D4E 21 00 03           3112 	ld	hl,#0x0300
   0D51 19                 3113 	add	hl,de
   0D52 EB                 3114 	ex	de,hl
   0D53 69                 3115 	ld	l,c
   0D54 60                 3116 	ld	h,b
   0D55 73                 3117 	ld	(hl),e
   0D56 23                 3118 	inc	hl
   0D57 72                 3119 	ld	(hl),d
                           3120 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r68s31           3121 	ld	bc,#_cmd + 4
   0D5B 21r86s31           3122 	ld	hl,#_btx + 0
   0D5E 5E                 3123 	ld	e,(hl)
   0D5F 21r87s31           3124 	ld	hl,#_btx + 1
   0D62 56                 3125 	ld	d,(hl)
   0D63 CB 23              3126 	sla	e
   0D65 CB 12              3127 	rl	d
   0D67 21r8As31           3128 	ld	hl,#_btab
   0D6A 19                 3129 	add	hl,de
   0D6B 5E                 3130 	ld	e,(hl)
   0D6C 23                 3131 	inc	hl
   0D6D 56                 3132 	ld	d,(hl)
   0D6E 69                 3133 	ld	l,c
   0D6F 60                 3134 	ld	h,b
   0D70 73                 3135 	ld	(hl),e
   0D71 23                 3136 	inc	hl
   0D72 72                 3137 	ld	(hl),d
                           3138 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r6As31           3139 	ld	bc,#_cmd + 6
   0D76 21r88s31           3140 	ld	hl,#_bty + 0
   0D79 5E                 3141 	ld	e,(hl)
   0D7A 21r89s31           3142 	ld	hl,#_bty + 1
   0D7D 56                 3143 	ld	d,(hl)
   0D7E CB 23              3144 	sla	e
   0D80 CB 12              3145 	rl	d
   0D82 21r8As31           3146 	ld	hl,#_btab
   0D85 19                 3147 	add	hl,de
   0D86 5E                 3148 	ld	e,(hl)
   0D87 23                 3149 	inc	hl
   0D88 56                 3150 	ld	d,(hl)
   0D89 21 00 02           3151 	ld	hl,#0x0200
   0D8C 19                 3152 	add	hl,de
   0D8D EB                 3153 	ex	de,hl
   0D8E 69                 3154 	ld	l,c
   0D8F 60                 3155 	ld	h,b
   0D90 73                 3156 	ld	(hl),e
   0D91 23                 3157 	inc	hl
   0D92 72                 3158 	ld	(hl),d
                           3159 ;demo.c:402: cmd.size_x = 16;
   0D93 21r6Cs31           3160 	ld	hl, #_cmd + 8
   0D96 36 10              3161 	ld	(hl),#0x10
   0D98 23                 3162 	inc	hl
   0D99 36 00              3163 	ld	(hl),#0x00
                           3164 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r6Es31           3165 	ld	hl, #_cmd + 10
   0D9E 36 10              3166 	ld	(hl),#0x10
   0DA0 23                 3167 	inc	hl
   0DA1 36 00              3168 	ld	(hl),#0x00
                           3169 ;demo.c:404: cmd.data = 0;
                           3170 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3171 	ld	a,#0x00
   0DA5 32r70s31           3172 	ld	(#_cmd + 12),a
   0DA8 32r71s31           3173 	ld	(#_cmd + 13),a
                           3174 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3175 	ld	a,#0xD0
   0DAD 32r72s31           3176 	ld	(#_cmd + 14),a
                           3177 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r64s31           3178 	ld	hl,#_cmd
   0DB3 E5                 3179 	push	hl
   0DB4 CDr00s00           3180 	call	_vdp_copier
   0DB7 F1                 3181 	pop	af
                           3182 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r86s31        3183 	ld	iy,#_btx
   0DBC FD 34 00           3184 	inc	0 (iy)
   0DBF 20 07              3185 	jr	NZ,00150$
   0DC1 FD 21r86s31        3186 	ld	iy,#_btx
   0DC5 FD 34 01           3187 	inc	1 (iy)
   0DC8                    3188 00150$:
   0DC8 C3rEAs0C           3189 	jp	00114$
   0DCB                    3190 00120$:
                           3191 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r88s31        3192 	ld	iy,#_bty
   0DCF FD 34 00           3193 	inc	0 (iy)
   0DD2 20 07              3194 	jr	NZ,00151$
   0DD4 FD 21r88s31        3195 	ld	iy,#_bty
   0DD8 FD 34 01           3196 	inc	1 (iy)
   0DDB                    3197 00151$:
   0DDB C3rC9s0C           3198 	jp	00118$
   0DDE                    3199 00121$:
                           3200 ;demo.c:411: flof++;
   0DDE FD 21rAAs31        3201 	ld	iy,#_flof
   0DE2 FD 34 00           3202 	inc	0 (iy)
   0DE5 20 07              3203 	jr	NZ,00152$
   0DE7 FD 21rAAs31        3204 	ld	iy,#_flof
   0DEB FD 34 01           3205 	inc	1 (iy)
   0DEE                    3206 00152$:
                           3207 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3ArAAs31           3208 	ld	a,(#_flof+0)
   0DF1 D6 02              3209 	sub	a,#0x02
   0DF3 20 06              3210 	jr	NZ,00153$
   0DF5 3ArABs31           3211 	ld	a,(#_flof+1)
   0DF8 B7                 3212 	or	a,a
   0DF9 28 02              3213 	jr	Z,00154$
   0DFB                    3214 00153$:
   0DFB 18 0A              3215 	jr	00122$
   0DFD                    3216 00154$:
   0DFD 21rAAs31           3217 	ld	hl,#_flof + 0
   0E00 36 00              3218 	ld	(hl), #0x00
   0E02 21rABs31           3219 	ld	hl,#_flof + 1
   0E05 36 00              3220 	ld	(hl), #0x00
   0E07                    3221 00122$:
   0E07 DD F9              3222 	ld	sp,ix
   0E09 DD E1              3223 	pop	ix
   0E0B C9                 3224 	ret
   0E0C                    3225 _do_blocks_end::
                           3226 ;demo.c:420: void raster_effu() {
                           3227 ;	---------------------------------
                           3228 ; Function raster_effu
                           3229 ; ---------------------------------
   0E0C                    3230 _raster_effu_start::
   0E0C                    3231 _raster_effu:
                           3232 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3233 	ld	hl,#0x0017
   0E0F E5                 3234 	push	hl
   0E10 CDr00s00           3235 	call	_vdp_register
   0E13 F1                 3236 	pop	af
                           3237 ;demo.c:422: waitVB();
   0E14 76                 3238 		halt 
                           3239 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3240 	ld	hl,#0x4001
   0E18 E5                 3241 	push	hl
   0E19 CDr00s00           3242 	call	_vdp_register
                           3243 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3244 	ld	a,#0x28
   0E1E 32rACs31           3245 	ld	(#_linenum + 0),a
   0E21 F1                 3246 	pop	af
   0E22 FD 21rACs31        3247 	ld	iy,#_linenum
   0E26 FD 36 01 00        3248 	ld	1 (iy),#0x00
   0E2A                    3249 00101$:
   0E2A 3ArACs31           3250 	ld	a,(#_linenum+0)
   0E2D D6 D4              3251 	sub	a,#0xD4
   0E2F 3ArADs31           3252 	ld	a,(#_linenum+1)
   0E32 DE 00              3253 	sbc	a,#0x00
   0E34 F2r65s0E           3254 	jp	P,00104$
                           3255 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3ArACs31           3256 	ld	a,(#_linenum+0)
   0E3A F5                 3257 	push	af
   0E3B 33                 3258 	inc	sp
   0E3C 3E 13              3259 	ld	a,#0x13
   0E3E F5                 3260 	push	af
   0E3F 33                 3261 	inc	sp
   0E40 CDr00s00           3262 	call	_vdp_register
   0E43 F1                 3263 	pop	af
                           3264 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3265 	ld	hl,#0x1600
   0E47 E5                 3266 	push	hl
   0E48 CDr00s00           3267 	call	_vdp_register
   0E4B F1                 3268 	pop	af
                           3269 ;demo.c:430: waitVB();
   0E4C 76                 3270 		halt 
                           3271 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21rACs31           3272 	ld	hl,#_linenum
   0E50 7E                 3273 	ld	a,(hl)
   0E51 C6 04              3274 	add	a,#0x04
   0E53 23                 3275 	inc	hl
   0E54 2B                 3276 	dec	hl
   0E55 C5                 3277 	push	bc
   0E56 4F                 3278 	ld	c, a
   0E57 23                 3279 	inc	hl
   0E58 7E                 3280 	ld	a, (hl)
   0E59 47                 3281 	ld	b, a
   0E5A 79                 3282 	ld	a, c
   0E5B 2B                 3283 	dec	hl
   0E5C 77                 3284 	ld	(hl), a
   0E5D 78                 3285 	ld	a, b
   0E5E C1                 3286 	pop	bc
   0E5F CE 00              3287 	adc	a,#0x00
   0E61 23                 3288 	inc	hl
   0E62 77                 3289 	ld	(hl),a
   0E63 18 C5              3290 	jr	00101$
   0E65                    3291 00104$:
                           3292 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3293 	ld	hl,#0x0017
   0E68 E5                 3294 	push	hl
   0E69 CDr00s00           3295 	call	_vdp_register
   0E6C F1                 3296 	pop	af
                           3297 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3298 	ld	hl,#0x0600
   0E70 E5                 3299 	push	hl
   0E71 CDr00s00           3300 	call	_vdp_register
   0E74 F1                 3301 	pop	af
                           3302 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3303 	ld	hl,#0x6001
   0E78 E5                 3304 	push	hl
   0E79 CDr00s00           3305 	call	_vdp_register
   0E7C F1                 3306 	pop	af
   0E7D C9                 3307 	ret
   0E7E                    3308 _raster_effu_end::
                           3309 ;demo.c:479: void do_letter(char cc) {
                           3310 ;	---------------------------------
                           3311 ; Function do_letter
                           3312 ; ---------------------------------
   0E7E                    3313 _do_letter_start::
   0E7E                    3314 _do_letter:
   0E7E DD E5              3315 	push	ix
   0E80 DD 21 00 00        3316 	ld	ix,#0
   0E84 DD 39              3317 	add	ix,sp
   0E86 F5                 3318 	push	af
                           3319 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3320 	ld	c,4 (ix)
   0E8A DD 7E 04           3321 	ld	a,4 (ix)
   0E8D 17                 3322 	rla	
   0E8E 9F                 3323 	sbc	a,a
   0E8F 47                 3324 	ld	b,a
   0E90 79                 3325 	ld	a,c
   0E91 C6 BF              3326 	add	a,#0xBF
   0E93 DD 77 FE           3327 	ld	-2 (ix),a
   0E96 78                 3328 	ld	a,b
   0E97 CE FF              3329 	adc	a,#0xFF
   0E99 DD 77 FF           3330 	ld	-1 (ix),a
                           3331 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3332 	ld	a,#<_font_x
   0E9E DD 86 FE           3333 	add	a,-2 (ix)
   0EA1 5F                 3334 	ld	e,a
   0EA2 3Es0F              3335 	ld	a,#>_font_x
   0EA4 DD 8E FF           3336 	adc	a,-1 (ix)
   0EA7 57                 3337 	ld	d,a
   0EA8 1A                 3338 	ld	a,(de)
   0EA9 5F                 3339 	ld	e,a
   0EAA 16 00              3340 	ld	d,#0x00
   0EAC 21 7F 00           3341 	ld	hl,#0x007F
   0EAF 19                 3342 	add	hl,de
   0EB0 EB                 3343 	ex	de,hl
   0EB1 21r64s31           3344 	ld	hl,#_cmd
   0EB4 73                 3345 	ld	(hl),e
   0EB5 23                 3346 	inc	hl
   0EB6 72                 3347 	ld	(hl),d
                           3348 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r66s31           3349 	ld	de,#_cmd + 2
   0EBA 3Er7C              3350 	ld	a,#<_font_y
   0EBC DD 86 FE           3351 	add	a,-2 (ix)
   0EBF 4F                 3352 	ld	c,a
   0EC0 3Es0F              3353 	ld	a,#>_font_y
   0EC2 DD 8E FF           3354 	adc	a,-1 (ix)
   0EC5 47                 3355 	ld	b,a
   0EC6 0A                 3356 	ld	a,(bc)
   0EC7 4F                 3357 	ld	c,a
   0EC8 06 00              3358 	ld	b,#0x00
   0ECA 21 00 02           3359 	ld	hl,#0x0200
   0ECD 09                 3360 	add	hl,bc
   0ECE 4D                 3361 	ld	c,l
   0ECF 44                 3362 	ld	b,h
   0ED0 EB                 3363 	ex	de,hl
   0ED1 71                 3364 	ld	(hl),c
   0ED2 23                 3365 	inc	hl
   0ED3 70                 3366 	ld	(hl),b
                           3367 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r68s31           3368 	ld	bc,#_cmd + 4
   0ED7 21rAEs31           3369 	ld	hl,#_lx + 0
   0EDA 5E                 3370 	ld	e,(hl)
   0EDB 16 00              3371 	ld	d,#0x00
   0EDD 69                 3372 	ld	l,c
   0EDE 60                 3373 	ld	h,b
   0EDF 73                 3374 	ld	(hl),e
   0EE0 23                 3375 	inc	hl
   0EE1 72                 3376 	ld	(hl),d
                           3377 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r6As31           3378 	ld	bc,#_cmd + 6
   0EE5 21rAFs31           3379 	ld	hl,#_ly + 0
   0EE8 5E                 3380 	ld	e,(hl)
   0EE9 16 00              3381 	ld	d,#0x00
   0EEB 69                 3382 	ld	l,c
   0EEC 60                 3383 	ld	h,b
   0EED 73                 3384 	ld	(hl),e
   0EEE 23                 3385 	inc	hl
   0EEF 72                 3386 	ld	(hl),d
                           3387 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r6Cs31           3388 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3389 	ld	a,#<_font_w
   0EF5 DD 86 FE           3390 	add	a,-2 (ix)
   0EF8 5F                 3391 	ld	e,a
   0EF9 3Es0F              3392 	ld	a,#>_font_w
   0EFB DD 8E FF           3393 	adc	a,-1 (ix)
   0EFE 57                 3394 	ld	d,a
   0EFF 1A                 3395 	ld	a,(de)
   0F00 5F                 3396 	ld	e,a
   0F01 16 00              3397 	ld	d,#0x00
   0F03 69                 3398 	ld	l,c
   0F04 60                 3399 	ld	h,b
   0F05 73                 3400 	ld	(hl),e
   0F06 23                 3401 	inc	hl
   0F07 72                 3402 	ld	(hl),d
                           3403 ;demo.c:486: cmd.size_y = 8;
   0F08 21r6Es31           3404 	ld	hl, #_cmd + 10
   0F0B 36 08              3405 	ld	(hl),#0x08
   0F0D 23                 3406 	inc	hl
   0F0E 36 00              3407 	ld	(hl),#0x00
                           3408 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3409 	ld	a,#0x00
   0F12 32r71s31           3410 	ld	(#_cmd + 13),a
                           3411 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3412 	ld	a,#0x90
   0F17 32r72s31           3413 	ld	(#_cmd + 14),a
                           3414 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r64s31           3415 	ld	hl,#_cmd
   0F1D E5                 3416 	push	hl
   0F1E CDr00s00           3417 	call	_vdp_copier
   0F21 F1                 3418 	pop	af
                           3419 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3420 	ld	a,#<_font_w
   0F24 DD 86 FE           3421 	add	a,-2 (ix)
   0F27 4F                 3422 	ld	c,a
   0F28 3Es0F              3423 	ld	a,#>_font_w
   0F2A DD 8E FF           3424 	adc	a,-1 (ix)
   0F2D 47                 3425 	ld	b,a
   0F2E 0A                 3426 	ld	a,(bc)
   0F2F 4F                 3427 	ld	c,a
   0F30 0D                 3428 	dec	c
   0F31 21rAEs31           3429 	ld	hl,#_lx
   0F34 7E                 3430 	ld	a,(hl)
   0F35 81                 3431 	add	a,c
   0F36 77                 3432 	ld	(hl),a
   0F37 DD F9              3433 	ld	sp,ix
   0F39 DD E1              3434 	pop	ix
   0F3B C9                 3435 	ret
   0F3C                    3436 _do_letter_end::
   0F3C                    3437 _font_x:
   0F3C 01                 3438 	.db #0x01
   0F3D 09                 3439 	.db #0x09
   0F3E 11                 3440 	.db #0x11
   0F3F 19                 3441 	.db #0x19
   0F40 21                 3442 	.db #0x21
   0F41 29                 3443 	.db #0x29
   0F42 31                 3444 	.db #0x31
   0F43 39                 3445 	.db #0x39
   0F44 41                 3446 	.db #0x41
   0F45 46                 3447 	.db #0x46
   0F46 4E                 3448 	.db #0x4E
   0F47 56                 3449 	.db #0x56
   0F48 5E                 3450 	.db #0x5E
   0F49 01                 3451 	.db #0x01
   0F4A 0A                 3452 	.db #0x0A
   0F4B 12                 3453 	.db #0x12
   0F4C 1A                 3454 	.db #0x1A
   0F4D 23                 3455 	.db #0x23
   0F4E 2B                 3456 	.db #0x2B
   0F4F 33                 3457 	.db #0x33
   0F50 3C                 3458 	.db #0x3C
   0F51 44                 3459 	.db #0x44
   0F52 4C                 3460 	.db #0x4C
   0F53 56                 3461 	.db #0x56
   0F54 5E                 3462 	.db #0x5E
   0F55 67                 3463 	.db #0x67
   0F56 00                 3464 	.db #0x00
   0F57 00                 3465 	.db #0x00
   0F58 00                 3466 	.db #0x00
   0F59 00                 3467 	.db #0x00
   0F5A 00                 3468 	.db #0x00
   0F5B 00                 3469 	.db #0x00
   0F5C 01                 3470 	.db #0x01
   0F5D 09                 3471 	.db #0x09
   0F5E 11                 3472 	.db #0x11
   0F5F 18                 3473 	.db #0x18
   0F60 20                 3474 	.db #0x20
   0F61 28                 3475 	.db #0x28
   0F62 2F                 3476 	.db #0x2F
   0F63 37                 3477 	.db #0x37
   0F64 3F                 3478 	.db #0x3F
   0F65 45                 3479 	.db #0x45
   0F66 4C                 3480 	.db #0x4C
   0F67 54                 3481 	.db #0x54
   0F68 5A                 3482 	.db #0x5A
   0F69 64                 3483 	.db #0x64
   0F6A 01                 3484 	.db #0x01
   0F6B 09                 3485 	.db #0x09
   0F6C 11                 3486 	.db #0x11
   0F6D 19                 3487 	.db #0x19
   0F6E 21                 3488 	.db #0x21
   0F6F 29                 3489 	.db #0x29
   0F70 30                 3490 	.db #0x30
   0F71 38                 3491 	.db #0x38
   0F72 40                 3492 	.db #0x40
   0F73 4A                 3493 	.db #0x4A
   0F74 52                 3494 	.db #0x52
   0F75 5A                 3495 	.db #0x5A
   0F76 00                 3496 	.db 0x00
   0F77 00                 3497 	.db 0x00
   0F78 00                 3498 	.db 0x00
   0F79 00                 3499 	.db 0x00
   0F7A 00                 3500 	.db 0x00
   0F7B 00                 3501 	.db 0x00
   0F7C                    3502 _font_y:
   0F7C 1C                 3503 	.db #0x1C
   0F7D 1C                 3504 	.db #0x1C
   0F7E 1C                 3505 	.db #0x1C
   0F7F 1C                 3506 	.db #0x1C
   0F80 1C                 3507 	.db #0x1C
   0F81 1C                 3508 	.db #0x1C
   0F82 1C                 3509 	.db #0x1C
   0F83 1C                 3510 	.db #0x1C
   0F84 1C                 3511 	.db #0x1C
   0F85 1C                 3512 	.db #0x1C
   0F86 1C                 3513 	.db #0x1C
   0F87 1C                 3514 	.db #0x1C
   0F88 1C                 3515 	.db #0x1C
   0F89 25                 3516 	.db #0x25
   0F8A 25                 3517 	.db #0x25
   0F8B 25                 3518 	.db #0x25
   0F8C 25                 3519 	.db #0x25
   0F8D 25                 3520 	.db #0x25
   0F8E 25                 3521 	.db #0x25
   0F8F 25                 3522 	.db #0x25
   0F90 25                 3523 	.db #0x25
   0F91 25                 3524 	.db #0x25
   0F92 25                 3525 	.db #0x25
   0F93 25                 3526 	.db #0x25
   0F94 25                 3527 	.db #0x25
   0F95 25                 3528 	.db #0x25
   0F96 00                 3529 	.db #0x00
   0F97 00                 3530 	.db #0x00
   0F98 00                 3531 	.db #0x00
   0F99 00                 3532 	.db #0x00
   0F9A 00                 3533 	.db #0x00
   0F9B 00                 3534 	.db #0x00
   0F9C 37                 3535 	.db #0x37
   0F9D 37                 3536 	.db #0x37
   0F9E 37                 3537 	.db #0x37
   0F9F 37                 3538 	.db #0x37
   0FA0 37                 3539 	.db #0x37
   0FA1 37                 3540 	.db #0x37
   0FA2 37                 3541 	.db #0x37
   0FA3 37                 3542 	.db #0x37
   0FA4 37                 3543 	.db #0x37
   0FA5 37                 3544 	.db #0x37
   0FA6 37                 3545 	.db #0x37
   0FA7 37                 3546 	.db #0x37
   0FA8 37                 3547 	.db #0x37
   0FA9 37                 3548 	.db #0x37
   0FAA 40                 3549 	.db #0x40
   0FAB 40                 3550 	.db #0x40
   0FAC 40                 3551 	.db #0x40
   0FAD 40                 3552 	.db #0x40
   0FAE 40                 3553 	.db #0x40
   0FAF 40                 3554 	.db #0x40
   0FB0 40                 3555 	.db #0x40
   0FB1 40                 3556 	.db #0x40
   0FB2 40                 3557 	.db #0x40
   0FB3 40                 3558 	.db #0x40
   0FB4 40                 3559 	.db #0x40
   0FB5 40                 3560 	.db #0x40
   0FB6 00                 3561 	.db 0x00
   0FB7 00                 3562 	.db 0x00
   0FB8 00                 3563 	.db 0x00
   0FB9 00                 3564 	.db 0x00
   0FBA 00                 3565 	.db 0x00
   0FBB 00                 3566 	.db 0x00
   0FBC                    3567 _font_w:
   0FBC 07                 3568 	.db #0x07
   0FBD 07                 3569 	.db #0x07
   0FBE 07                 3570 	.db #0x07
   0FBF 07                 3571 	.db #0x07
   0FC0 07                 3572 	.db #0x07
   0FC1 07                 3573 	.db #0x07
   0FC2 07                 3574 	.db #0x07
   0FC3 07                 3575 	.db #0x07
   0FC4 04                 3576 	.db #0x04
   0FC5 07                 3577 	.db #0x07
   0FC6 07                 3578 	.db #0x07
   0FC7 07                 3579 	.db #0x07
   0FC8 09                 3580 	.db #0x09
   0FC9 08                 3581 	.db #0x08
   0FCA 07                 3582 	.db #0x07
   0FCB 07                 3583 	.db #0x07
   0FCC 08                 3584 	.db #0x08
   0FCD 07                 3585 	.db #0x07
   0FCE 07                 3586 	.db #0x07
   0FCF 08                 3587 	.db #0x08
   0FD0 07                 3588 	.db #0x07
   0FD1 07                 3589 	.db #0x07
   0FD2 09                 3590 	.db #0x09
   0FD3 07                 3591 	.db #0x07
   0FD4 08                 3592 	.db #0x08
   0FD5 07                 3593 	.db #0x07
   0FD6 00                 3594 	.db #0x00
   0FD7 00                 3595 	.db #0x00
   0FD8 00                 3596 	.db #0x00
   0FD9 00                 3597 	.db #0x00
   0FDA 00                 3598 	.db #0x00
   0FDB 00                 3599 	.db #0x00
   0FDC 07                 3600 	.db #0x07
   0FDD 07                 3601 	.db #0x07
   0FDE 06                 3602 	.db #0x06
   0FDF 07                 3603 	.db #0x07
   0FE0 07                 3604 	.db #0x07
   0FE1 07                 3605 	.db #0x07
   0FE2 07                 3606 	.db #0x07
   0FE3 07                 3607 	.db #0x07
   0FE4 05                 3608 	.db #0x05
   0FE5 06                 3609 	.db #0x06
   0FE6 07                 3610 	.db #0x07
   0FE7 05                 3611 	.db #0x05
   0FE8 09                 3612 	.db #0x09
   0FE9 07                 3613 	.db #0x07
   0FEA 07                 3614 	.db #0x07
   0FEB 07                 3615 	.db #0x07
   0FEC 07                 3616 	.db #0x07
   0FED 07                 3617 	.db #0x07
   0FEE 07                 3618 	.db #0x07
   0FEF 06                 3619 	.db #0x06
   0FF0 07                 3620 	.db #0x07
   0FF1 07                 3621 	.db #0x07
   0FF2 09                 3622 	.db #0x09
   0FF3 07                 3623 	.db #0x07
   0FF4 07                 3624 	.db #0x07
   0FF5 07                 3625 	.db #0x07
   0FF6 00                 3626 	.db 0x00
   0FF7 00                 3627 	.db 0x00
   0FF8 00                 3628 	.db 0x00
   0FF9 00                 3629 	.db 0x00
   0FFA 00                 3630 	.db 0x00
   0FFB 00                 3631 	.db 0x00
                           3632 ;demo.c:494: void do_letter_tall(char cc) {
                           3633 ;	---------------------------------
                           3634 ; Function do_letter_tall
                           3635 ; ---------------------------------
   0FFC                    3636 _do_letter_tall_start::
   0FFC                    3637 _do_letter_tall:
   0FFC DD E5              3638 	push	ix
   0FFE DD 21 00 00        3639 	ld	ix,#0
   1002 DD 39              3640 	add	ix,sp
   1004 F5                 3641 	push	af
                           3642 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3643 	ld	c,4 (ix)
   1008 DD 7E 04           3644 	ld	a,4 (ix)
   100B 17                 3645 	rla	
   100C 9F                 3646 	sbc	a,a
   100D 47                 3647 	ld	b,a
   100E 79                 3648 	ld	a,c
   100F C6 BF              3649 	add	a,#0xBF
   1011 DD 77 FE           3650 	ld	-2 (ix),a
   1014 78                 3651 	ld	a,b
   1015 CE FF              3652 	adc	a,#0xFF
   1017 DD 77 FF           3653 	ld	-1 (ix),a
                           3654 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3655 	ld	a,#<_font_x
   101C DD 86 FE           3656 	add	a,-2 (ix)
   101F 5F                 3657 	ld	e,a
   1020 3Es0F              3658 	ld	a,#>_font_x
   1022 DD 8E FF           3659 	adc	a,-1 (ix)
   1025 57                 3660 	ld	d,a
   1026 1A                 3661 	ld	a,(de)
   1027 5F                 3662 	ld	e,a
   1028 16 00              3663 	ld	d,#0x00
   102A 21 7F 00           3664 	ld	hl,#0x007F
   102D 19                 3665 	add	hl,de
   102E EB                 3666 	ex	de,hl
   102F 21r64s31           3667 	ld	hl,#_cmd
   1032 73                 3668 	ld	(hl),e
   1033 23                 3669 	inc	hl
   1034 72                 3670 	ld	(hl),d
                           3671 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r66s31           3672 	ld	de,#_cmd + 2
   1038 3Er7C              3673 	ld	a,#<_font_y
   103A DD 86 FE           3674 	add	a,-2 (ix)
   103D 4F                 3675 	ld	c,a
   103E 3Es0F              3676 	ld	a,#>_font_y
   1040 DD 8E FF           3677 	adc	a,-1 (ix)
   1043 47                 3678 	ld	b,a
   1044 0A                 3679 	ld	a,(bc)
   1045 4F                 3680 	ld	c,a
   1046 06 00              3681 	ld	b,#0x00
   1048 21 FF 01           3682 	ld	hl,#0x01FF
   104B 09                 3683 	add	hl,bc
   104C 4D                 3684 	ld	c,l
   104D 44                 3685 	ld	b,h
   104E EB                 3686 	ex	de,hl
   104F 71                 3687 	ld	(hl),c
   1050 23                 3688 	inc	hl
   1051 70                 3689 	ld	(hl),b
                           3690 ;demo.c:498: cmd.dest_x = lx;
   1052 01r68s31           3691 	ld	bc,#_cmd + 4
   1055 21rAEs31           3692 	ld	hl,#_lx + 0
   1058 5E                 3693 	ld	e,(hl)
   1059 16 00              3694 	ld	d,#0x00
   105B 69                 3695 	ld	l,c
   105C 60                 3696 	ld	h,b
   105D 73                 3697 	ld	(hl),e
   105E 23                 3698 	inc	hl
   105F 72                 3699 	ld	(hl),d
                           3700 ;demo.c:499: cmd.dest_y = ly;
   1060 01r6As31           3701 	ld	bc,#_cmd + 6
   1063 21rAFs31           3702 	ld	hl,#_ly + 0
   1066 5E                 3703 	ld	e,(hl)
   1067 16 00              3704 	ld	d,#0x00
   1069 69                 3705 	ld	l,c
   106A 60                 3706 	ld	h,b
   106B 73                 3707 	ld	(hl),e
   106C 23                 3708 	inc	hl
   106D 72                 3709 	ld	(hl),d
                           3710 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r6Cs31           3711 	ld	bc,#_cmd + 8
   1071 3ErBC              3712 	ld	a,#<_font_w
   1073 DD 86 FE           3713 	add	a,-2 (ix)
   1076 5F                 3714 	ld	e,a
   1077 3Es0F              3715 	ld	a,#>_font_w
   1079 DD 8E FF           3716 	adc	a,-1 (ix)
   107C 57                 3717 	ld	d,a
   107D 1A                 3718 	ld	a,(de)
   107E 5F                 3719 	ld	e,a
   107F 16 00              3720 	ld	d,#0x00
   1081 69                 3721 	ld	l,c
   1082 60                 3722 	ld	h,b
   1083 73                 3723 	ld	(hl),e
   1084 23                 3724 	inc	hl
   1085 72                 3725 	ld	(hl),d
                           3726 ;demo.c:501: cmd.size_y = 10;
   1086 21r6Es31           3727 	ld	hl, #_cmd + 10
   1089 36 0A              3728 	ld	(hl),#0x0A
   108B 23                 3729 	inc	hl
   108C 36 00              3730 	ld	(hl),#0x00
                           3731 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3732 	ld	a,#0x00
   1090 32r71s31           3733 	ld	(#_cmd + 13),a
                           3734 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3735 	ld	a,#0x90
   1095 32r72s31           3736 	ld	(#_cmd + 14),a
                           3737 ;demo.c:504: vdp_copier(&cmd);
   1098 21r64s31           3738 	ld	hl,#_cmd
   109B E5                 3739 	push	hl
   109C CDr00s00           3740 	call	_vdp_copier
   109F F1                 3741 	pop	af
                           3742 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3743 	ld	a,#<_font_w
   10A2 DD 86 FE           3744 	add	a,-2 (ix)
   10A5 4F                 3745 	ld	c,a
   10A6 3Es0F              3746 	ld	a,#>_font_w
   10A8 DD 8E FF           3747 	adc	a,-1 (ix)
   10AB 47                 3748 	ld	b,a
   10AC 0A                 3749 	ld	a,(bc)
   10AD 4F                 3750 	ld	c,a
   10AE 0D                 3751 	dec	c
   10AF 21rAEs31           3752 	ld	hl,#_lx
   10B2 7E                 3753 	ld	a,(hl)
   10B3 81                 3754 	add	a,c
   10B4 77                 3755 	ld	(hl),a
   10B5 DD F9              3756 	ld	sp,ix
   10B7 DD E1              3757 	pop	ix
   10B9 C9                 3758 	ret
   10BA                    3759 _do_letter_tall_end::
                           3760 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3761 ;	---------------------------------
                           3762 ; Function drawstr
                           3763 ; ---------------------------------
   10BA                    3764 _drawstr_start::
   10BA                    3765 _drawstr:
   10BA DD E5              3766 	push	ix
   10BC DD 21 00 00        3767 	ld	ix,#0
   10C0 DD 39              3768 	add	ix,sp
                           3769 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3770 	ld	c,4 (ix)
   10C5 DD 46 05           3771 	ld	b,5 (ix)
                           3772 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3773 	ld	e,6 (ix)
   10CB 21rAEs31           3774 	ld	hl,#_lx + 0
   10CE 73                 3775 	ld	(hl), e
                           3776 ;demo.c:511: ly = y;
   10CF DD 7E 07           3777 	ld	a,7 (ix)
   10D2 21rAFs31           3778 	ld	hl,#_ly + 0
   10D5 77                 3779 	ld	(hl), a
                           3780 ;demo.c:512: while (*c) {
   10D6                    3781 00107$:
   10D6 0A                 3782 	ld	a,(bc)
   10D7 57                 3783 	ld	d,a
   10D8 B7                 3784 	or	a,a
   10D9 28 42              3785 	jr	Z,00110$
                           3786 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3787 	inc	bc
                           3788 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3789 	ld	a,d
   10DD D6 20              3790 	sub	a,#0x20
   10DF 20 1E              3791 	jr	NZ,00105$
   10E1 FD 21rAEs31        3792 	ld	iy,#_lx
   10E5 FD 34 00           3793 	inc	0 (iy)
   10E8 FD 21rAEs31        3794 	ld	iy,#_lx
   10EC FD 34 00           3795 	inc	0 (iy)
   10EF FD 21rAEs31        3796 	ld	iy,#_lx
   10F3 FD 34 00           3797 	inc	0 (iy)
   10F6 FD 21rAEs31        3798 	ld	iy,#_lx
   10FA FD 34 00           3799 	inc	0 (iy)
   10FD 18 D7              3800 	jr	00107$
   10FF                    3801 00105$:
                           3802 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3803 	ld	a,d
   1100 D6 5F              3804 	sub	a,#0x5F
   1102 20 0D              3805 	jr	NZ,00102$
   1104 21rAFs31           3806 	ld	hl,#_ly
   1107 7E                 3807 	ld	a,(hl)
   1108 C6 09              3808 	add	a,#0x09
   110A 77                 3809 	ld	(hl),a
   110B 21rAEs31           3810 	ld	hl,#_lx + 0
   110E 73                 3811 	ld	(hl), e
   110F 18 C5              3812 	jr	00107$
   1111                    3813 00102$:
                           3814 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3815 	push	bc
   1112 D5                 3816 	push	de
   1113 D5                 3817 	push	de
   1114 33                 3818 	inc	sp
   1115 CDr7Es0E           3819 	call	_do_letter
   1118 33                 3820 	inc	sp
   1119 D1                 3821 	pop	de
   111A C1                 3822 	pop	bc
   111B 18 B9              3823 	jr	00107$
   111D                    3824 00110$:
   111D DD E1              3825 	pop	ix
   111F C9                 3826 	ret
   1120                    3827 _drawstr_end::
                           3828 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3829 ;	---------------------------------
                           3830 ; Function drawsine
                           3831 ; ---------------------------------
   1120                    3832 _drawsine_start::
   1120                    3833 _drawsine:
   1120 DD E5              3834 	push	ix
   1122 DD 21 00 00        3835 	ld	ix,#0
   1126 DD 39              3836 	add	ix,sp
   1128 3B                 3837 	dec	sp
                           3838 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3839 	ld	c,4 (ix)
   112C DD 46 05           3840 	ld	b,5 (ix)
                           3841 ;demo.c:522: lx = x;
   112F DD 7E 06           3842 	ld	a,6 (ix)
   1132 21rAEs31           3843 	ld	hl,#_lx + 0
   1135 77                 3844 	ld	(hl), a
                           3845 ;demo.c:524: while (*c) {
   1136                    3846 00104$:
   1136 0A                 3847 	ld	a,(bc)
   1137 5F                 3848 	ld	e,a
   1138 B7                 3849 	or	a,a
   1139 CArADs11           3850 	jp	Z,00107$
                           3851 ;demo.c:525: char ltr = *c++; 
   113C 03                 3852 	inc	bc
   113D DD 73 FF           3853 	ld	-1 (ix),e
                           3854 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21rAEs31           3855 	ld	hl,#_lx + 0
   1143 5E                 3856 	ld	e,(hl)
   1144 16 00              3857 	ld	d,#0x00
   1146 21r60s31           3858 	ld	hl,#_vbicount
   1149 7B                 3859 	ld	a,e
   114A 86                 3860 	add	a,(hl)
   114B 5F                 3861 	ld	e,a
   114C 7A                 3862 	ld	a,d
   114D 23                 3863 	inc	hl
   114E 8E                 3864 	adc	a,(hl)
   114F 57                 3865 	ld	d,a
   1150 CB 2A              3866 	sra	d
   1152 CB 1B              3867 	rr	e
   1154 16 00              3868 	ld	d,#0x00
   1156 CB 23              3869 	sla	e
   1158 CB 12              3870 	rl	d
   115A 21r2Cs00           3871 	ld	hl,#_sintabx
   115D 19                 3872 	add	hl,de
   115E 5E                 3873 	ld	e,(hl)
   115F 23                 3874 	inc	hl
   1160 56                 3875 	ld	d,(hl)
   1161 CB 3A              3876 	srl	d
   1163 CB 1B              3877 	rr	e
   1165 CB 3A              3878 	srl	d
   1167 CB 1B              3879 	rr	e
   1169 CB 3A              3880 	srl	d
   116B CB 1B              3881 	rr	e
   116D CB 3A              3882 	srl	d
   116F CB 1B              3883 	rr	e
   1171 21rAFs31           3884 	ld	hl,#_ly
   1174 DD 7E 07           3885 	ld	a,7 (ix)
   1177 83                 3886 	add	a,e
   1178 77                 3887 	ld	(hl),a
                           3888 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           3889 	ld	a,-1 (ix)
   117C D6 20              3890 	sub	a,#0x20
   117E 20 1F              3891 	jr	NZ,00102$
   1180 FD 21rAEs31        3892 	ld	iy,#_lx
   1184 FD 34 00           3893 	inc	0 (iy)
   1187 FD 21rAEs31        3894 	ld	iy,#_lx
   118B FD 34 00           3895 	inc	0 (iy)
   118E FD 21rAEs31        3896 	ld	iy,#_lx
   1192 FD 34 00           3897 	inc	0 (iy)
   1195 FD 21rAEs31        3898 	ld	iy,#_lx
   1199 FD 34 00           3899 	inc	0 (iy)
   119C C3r36s11           3900 	jp	00104$
   119F                    3901 00102$:
                           3902 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 3903 	push	bc
   11A0 DD 7E FF           3904 	ld	a,-1 (ix)
   11A3 F5                 3905 	push	af
   11A4 33                 3906 	inc	sp
   11A5 CDrFCs0F           3907 	call	_do_letter_tall
   11A8 33                 3908 	inc	sp
   11A9 C1                 3909 	pop	bc
   11AA C3r36s11           3910 	jp	00104$
   11AD                    3911 00107$:
   11AD DD F9              3912 	ld	sp,ix
   11AF DD E1              3913 	pop	ix
   11B1 C9                 3914 	ret
   11B2                    3915 _drawsine_end::
                           3916 ;demo.c:532: void font() {
                           3917 ;	---------------------------------
                           3918 ; Function font
                           3919 ; ---------------------------------
   11B2                    3920 _font_start::
   11B2                    3921 _font:
                           3922 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           3923 	ld	hl,#0x3C4A
   11B5 E5                 3924 	push	hl
   11B6 21rC0s11           3925 	ld	hl,#__str_8
   11B9 E5                 3926 	push	hl
   11BA CDrBAs10           3927 	call	_drawstr
   11BD F1                 3928 	pop	af
   11BE F1                 3929 	pop	af
   11BF C9                 3930 	ret
   11C0                    3931 _font_end::
   11C0                    3932 __str_8:
   11C0 44 49 47 49 54 41  3933 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  3934 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 3935 	.db 0x00
                           3936 ;demo.c:543: void twister() {
                           3937 ;	---------------------------------
                           3938 ; Function twister
                           3939 ; ---------------------------------
   1223                    3940 _twister_start::
   1223                    3941 _twister:
   1223 DD E5              3942 	push	ix
   1225 DD 21 00 00        3943 	ld	ix,#0
   1229 DD 39              3944 	add	ix,sp
   122B F5                 3945 	push	af
                           3946 ;demo.c:547: if (twinited == 0) {
   122C 3ArB2s31           3947 	ld	a,(#_twinited+0)
   122F FD 21rB2s31        3948 	ld	iy,#_twinited
   1233 FD B6 01           3949 	or	a,1 (iy)
   1236 C2rB0s12           3950 	jp	NZ,00102$
                           3951 ;demo.c:548: cmd.size_x = 256;
   1239 21r6Cs31           3952 	ld	hl, #_cmd + 8
   123C 36 00              3953 	ld	(hl),#0x00
   123E 23                 3954 	inc	hl
   123F 36 01              3955 	ld	(hl),#0x01
                           3956 ;demo.c:549: cmd.size_y = 1;
   1241 21r6Es31           3957 	ld	hl, #_cmd + 10
   1244 36 01              3958 	ld	(hl),#0x01
   1246 23                 3959 	inc	hl
   1247 36 00              3960 	ld	(hl),#0x00
                           3961 ;demo.c:550: cmd.data = 0;
   1249 3E 00              3962 	ld	a,#0x00
   124B 32r70s31           3963 	ld	(#_cmd + 12),a
                           3964 ;demo.c:551: cmd.argument = 0x04; // from 70xY to left
   124E 3E 04              3965 	ld	a,#0x04
   1250 32r71s31           3966 	ld	(#_cmd + 13),a
                           3967 ;demo.c:552: cmd.command = 0xe0; // vram to vram, y only
   1253 01r72s31           3968 	ld	bc,#_cmd + 14
   1256 3E E0              3969 	ld	a,#0xE0
   1258 02                 3970 	ld	(bc),a
                           3971 ;demo.c:553: cmd.source_x = 256;
   1259 21r64s31           3972 	ld	hl,#_cmd
   125C 36 00              3973 	ld	(hl),#0x00
   125E 23                 3974 	inc	hl
   125F 36 01              3975 	ld	(hl),#0x01
                           3976 ;demo.c:554: cmd.dest_x = 256;
   1261 21r68s31           3977 	ld	hl, #_cmd + 4
   1264 36 00              3978 	ld	(hl),#0x00
   1266 23                 3979 	inc	hl
   1267 36 01              3980 	ld	(hl),#0x01
                           3981 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1269 01 00 00           3982 	ld	bc,#0x0000
   126C                    3983 00103$:
   126C 79                 3984 	ld	a,c
   126D D6 D4              3985 	sub	a,#0xD4
   126F 78                 3986 	ld	a,b
   1270 DE 00              3987 	sbc	a,#0x00
   1272 F2r93s12           3988 	jp	P,00106$
                           3989 ;demo.c:557: waitVB();
   1275 76                 3990 		halt 
                           3991 ;demo.c:558: cmd.source_y = 0;
   1276 11r66s31           3992 	ld	de,#_cmd + 2
   1279 EB                 3993 	ex	de,hl
   127A 36 00              3994 	ld	(hl),#0x00
   127C 23                 3995 	inc	hl
   127D 36 00              3996 	ld	(hl),#0x00
                           3997 ;demo.c:559: cmd.dest_y = y;
   127F 11r6As31           3998 	ld	de,#_cmd + 6
   1282 EB                 3999 	ex	de,hl
   1283 71                 4000 	ld	(hl),c
   1284 23                 4001 	inc	hl
   1285 70                 4002 	ld	(hl),b
                           4003 ;demo.c:560: vdp_copier(&cmd);
   1286 C5                 4004 	push	bc
   1287 21r64s31           4005 	ld	hl,#_cmd
   128A E5                 4006 	push	hl
   128B CDr00s00           4007 	call	_vdp_copier
   128E F1                 4008 	pop	af
   128F C1                 4009 	pop	bc
                           4010 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1290 03                 4011 	inc	bc
   1291 18 D9              4012 	jr	00103$
   1293                    4013 00106$:
                           4014 ;demo.c:564: twinited = 1;
   1293 21rB2s31           4015 	ld	hl,#_twinited + 0
   1296 36 01              4016 	ld	(hl), #0x01
   1298 21rB3s31           4017 	ld	hl,#_twinited + 1
   129B 36 00              4018 	ld	(hl), #0x00
                           4019 ;demo.c:565: vdp_register(8,0x2); // no sprites
   129D 21 08 02           4020 	ld	hl,#0x0208
   12A0 E5                 4021 	push	hl
   12A1 CDr00s00           4022 	call	_vdp_register
   12A4 F1                 4023 	pop	af
                           4024 ;demo.c:566: vdp_load_palette(twister_palette);
   12A5 21r00s31           4025 	ld	hl,#_twister_palette
   12A8 E5                 4026 	push	hl
   12A9 CDr00s00           4027 	call	_vdp_load_palette
   12AC F1                 4028 	pop	af
                           4029 ;demo.c:567: font();
   12AD CDrB2s11           4030 	call	_font
   12B0                    4031 00102$:
                           4032 ;demo.c:570: cmd.size_x = 70;
   12B0 21r6Cs31           4033 	ld	hl, #_cmd + 8
   12B3 36 46              4034 	ld	(hl),#0x46
   12B5 23                 4035 	inc	hl
   12B6 36 00              4036 	ld	(hl),#0x00
                           4037 ;demo.c:571: cmd.size_y = 2;
   12B8 21r6Es31           4038 	ld	hl, #_cmd + 10
   12BB 36 02              4039 	ld	(hl),#0x02
   12BD 23                 4040 	inc	hl
   12BE 36 00              4041 	ld	(hl),#0x00
                           4042 ;demo.c:572: cmd.data = 0;
   12C0 3E 00              4043 	ld	a,#0x00
   12C2 32r70s31           4044 	ld	(#_cmd + 12),a
                           4045 ;demo.c:573: cmd.argument = 0x04; // from 70xY to left
   12C5 3E 04              4046 	ld	a,#0x04
   12C7 32r71s31           4047 	ld	(#_cmd + 13),a
                           4048 ;demo.c:574: cmd.command = 0xe0; // vram to vram, y only
   12CA 01r72s31           4049 	ld	bc,#_cmd + 14
   12CD 3E E0              4050 	ld	a,#0xE0
   12CF 02                 4051 	ld	(bc),a
                           4052 ;demo.c:575: cmd.source_x = 70;
   12D0 21r64s31           4053 	ld	hl,#_cmd
   12D3 36 46              4054 	ld	(hl),#0x46
   12D5 23                 4055 	inc	hl
   12D6 36 00              4056 	ld	(hl),#0x00
                           4057 ;demo.c:576: cmd.dest_x = 70;
   12D8 21r68s31           4058 	ld	hl, #_cmd + 4
   12DB 36 46              4059 	ld	(hl),#0x46
   12DD 23                 4060 	inc	hl
   12DE 36 00              4061 	ld	(hl),#0x00
                           4062 ;demo.c:578: for (y = 0; y < 212; y+=2) {
   12E0 DD 36 FE 00        4063 	ld	-2 (ix),#0x00
   12E4 DD 36 FF 00        4064 	ld	-1 (ix),#0x00
   12E8                    4065 00107$:
   12E8 DD 7E FE           4066 	ld	a,-2 (ix)
   12EB D6 D4              4067 	sub	a,#0xD4
   12ED DD 7E FF           4068 	ld	a,-1 (ix)
   12F0 DE 00              4069 	sbc	a,#0x00
   12F2 F2r4Bs13           4070 	jp	P,00110$
                           4071 ;demo.c:579: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12F5 11r66s31           4072 	ld	de,#_cmd + 2
   12F8 DD 4E FE           4073 	ld	c,-2 (ix)
   12FB DD 46 FF           4074 	ld	b,-1 (ix)
   12FE CB 28              4075 	sra	b
   1300 CB 19              4076 	rr	c
   1302 3ArB0s31           4077 	ld	a,(#_ff+0)
   1305 81                 4078 	add	a,c
   1306 4F                 4079 	ld	c,a
   1307 3ArB1s31           4080 	ld	a,(#_ff+1)
   130A 88                 4081 	adc	a,b
   130B 06 00              4082 	ld	b,#0x00
   130D 21r00s00           4083 	ld	hl,#_sintab
   1310 09                 4084 	add	hl,bc
   1311 7E                 4085 	ld	a,(hl)
   1312 4F                 4086 	ld	c,a
   1313 CB 29              4087 	sra	c
   1315 79                 4088 	ld	a,c
   1316 17                 4089 	rla	
   1317 9F                 4090 	sbc	a,a
   1318 47                 4091 	ld	b,a
   1319 21 40 02           4092 	ld	hl,#0x0240
   131C 09                 4093 	add	hl,bc
   131D 4D                 4094 	ld	c,l
   131E 44                 4095 	ld	b,h
   131F 6B                 4096 	ld	l,e
   1320 62                 4097 	ld	h,d
   1321 71                 4098 	ld	(hl),c
   1322 23                 4099 	inc	hl
   1323 70                 4100 	ld	(hl),b
                           4101 ;demo.c:580: cmd.dest_y = y;
   1324 21r6As31           4102 	ld	hl, #_cmd + 6
   1327 DD 7E FE           4103 	ld	a,-2 (ix)
   132A 77                 4104 	ld	(hl),a
   132B 23                 4105 	inc	hl
   132C DD 7E FF           4106 	ld	a,-1 (ix)
   132F 77                 4107 	ld	(hl),a
                           4108 ;demo.c:581: vdp_copier(&cmd);
   1330 21r64s31           4109 	ld	hl,#_cmd
   1333 E5                 4110 	push	hl
   1334 CDr00s00           4111 	call	_vdp_copier
   1337 F1                 4112 	pop	af
                           4113 ;demo.c:578: for (y = 0; y < 212; y+=2) {
   1338 DD 7E FE           4114 	ld	a,-2 (ix)
   133B C6 02              4115 	add	a,#0x02
   133D DD 77 FE           4116 	ld	-2 (ix),a
   1340 DD 7E FF           4117 	ld	a,-1 (ix)
   1343 CE 00              4118 	adc	a,#0x00
   1345 DD 77 FF           4119 	ld	-1 (ix),a
   1348 C3rE8s12           4120 	jp	00107$
   134B                    4121 00110$:
                           4122 ;demo.c:585: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   134B 21rB0s31           4123 	ld	hl,#_ff + 0
   134E 4E                 4124 	ld	c,(hl)
   134F 21rB1s31           4125 	ld	hl,#_ff + 1
   1352 46                 4126 	ld	b,(hl)
   1353 CB 28              4127 	sra	b
   1355 CB 19              4128 	rr	c
   1357 CB 28              4129 	sra	b
   1359 CB 19              4130 	rr	c
   135B 21rB0s31           4131 	ld	hl,#_ff + 0
   135E 5E                 4132 	ld	e,(hl)
   135F 21rB1s31           4133 	ld	hl,#_ff + 1
   1362 56                 4134 	ld	d,(hl)
   1363 CB 2A              4135 	sra	d
   1365 CB 1B              4136 	rr	e
   1367 CB 2A              4137 	sra	d
   1369 CB 1B              4138 	rr	e
   136B CB 2A              4139 	sra	d
   136D CB 1B              4140 	rr	e
   136F 43                 4141 	ld	b,e
   1370 79                 4142 	ld	a,c
   1371 F5                 4143 	push	af
   1372 33                 4144 	inc	sp
   1373 C5                 4145 	push	bc
   1374 33                 4146 	inc	sp
   1375 41                 4147 	ld	b,c
   1376 0E 04              4148 	ld	c,#0x04
   1378 C5                 4149 	push	bc
   1379 CDr00s00           4150 	call	_msx2_palette
   137C F1                 4151 	pop	af
   137D F1                 4152 	pop	af
                           4153 ;demo.c:587: ff+=4;
   137E 21rB0s31           4154 	ld	hl,#_ff
   1381 7E                 4155 	ld	a,(hl)
   1382 C6 04              4156 	add	a,#0x04
   1384 23                 4157 	inc	hl
   1385 2B                 4158 	dec	hl
   1386 C5                 4159 	push	bc
   1387 4F                 4160 	ld	c, a
   1388 23                 4161 	inc	hl
   1389 7E                 4162 	ld	a, (hl)
   138A 47                 4163 	ld	b, a
   138B 79                 4164 	ld	a, c
   138C 2B                 4165 	dec	hl
   138D 77                 4166 	ld	(hl), a
   138E 78                 4167 	ld	a, b
   138F C1                 4168 	pop	bc
   1390 CE 00              4169 	adc	a,#0x00
   1392 23                 4170 	inc	hl
   1393 77                 4171 	ld	(hl),a
   1394 DD F9              4172 	ld	sp,ix
   1396 DD E1              4173 	pop	ix
   1398 C9                 4174 	ret
   1399                    4175 _twister_end::
                           4176 ;demo.c:597: void bulbs() {
                           4177 ;	---------------------------------
                           4178 ; Function bulbs
                           4179 ; ---------------------------------
   1399                    4180 _bulbs_start::
   1399                    4181 _bulbs:
   1399 DD E5              4182 	push	ix
   139B DD 21 00 00        4183 	ld	ix,#0
   139F DD 39              4184 	add	ix,sp
   13A1 F5                 4185 	push	af
   13A2 F5                 4186 	push	af
                           4187 ;demo.c:601: ender+=enderdir;
   13A3 21rBCs31           4188 	ld	hl,#_enderdir
   13A6 D5                 4189 	push	de
   13A7 FD 21rBAs31        4190 	ld	iy,#_ender
   13AB FD E5              4191 	push	iy
   13AD D1                 4192 	pop	de
   13AE 1A                 4193 	ld	a,(de)
   13AF 86                 4194 	add	a,(hl)
   13B0 13                 4195 	inc	de
   13B1 1B                 4196 	dec	de
   13B2 C5                 4197 	push	bc
   13B3 4F                 4198 	ld	c, a
   13B4 13                 4199 	inc	de
   13B5 1A                 4200 	ld	a, (de)
   13B6 47                 4201 	ld	b, a
   13B7 79                 4202 	ld	a, c
   13B8 1B                 4203 	dec	de
   13B9 12                 4204 	ld	(de), a
   13BA 78                 4205 	ld	a, b
   13BB C1                 4206 	pop	bc
   13BC 23                 4207 	inc	hl
   13BD 8E                 4208 	adc	a,(hl)
   13BE 13                 4209 	inc	de
   13BF 12                 4210 	ld	(de),a
   13C0 D1                 4211 	pop	de
                           4212 ;demo.c:602: if (ender < 2) enderdir = -enderdir;
   13C1 3ArBAs31           4213 	ld	a,(#_ender+0)
   13C4 D6 02              4214 	sub	a,#0x02
   13C6 3ArBBs31           4215 	ld	a,(#_ender+1)
   13C9 DE 00              4216 	sbc	a,#0x00
   13CB F2rEFs13           4217 	jp	P,00102$
   13CE AF                 4218 	xor	a,a
   13CF FD 21rBCs31        4219 	ld	iy,#_enderdir
   13D3 3E 00              4220 	ld	a,#0x00
   13D5 FD 9E 00           4221 	sbc	a,0 (iy)
   13D8 FD 21rBCs31        4222 	ld	iy,#_enderdir
   13DC FD 77 00           4223 	ld	0 (iy),a
   13DF FD 21rBCs31        4224 	ld	iy,#_enderdir
   13E3 3E 00              4225 	ld	a,#0x00
   13E5 FD 9E 01           4226 	sbc	a,1 (iy)
   13E8 FD 21rBCs31        4227 	ld	iy,#_enderdir
   13EC FD 77 01           4228 	ld	1 (iy),a
   13EF                    4229 00102$:
                           4230 ;demo.c:603: if (ender >= 212) enderdir = -enderdir;
   13EF 3ArBAs31           4231 	ld	a,(#_ender+0)
   13F2 D6 D4              4232 	sub	a,#0xD4
   13F4 3ArBBs31           4233 	ld	a,(#_ender+1)
   13F7 DE 00              4234 	sbc	a,#0x00
   13F9 FAr1Ds14           4235 	jp	M,00104$
   13FC AF                 4236 	xor	a,a
   13FD FD 21rBCs31        4237 	ld	iy,#_enderdir
   1401 3E 00              4238 	ld	a,#0x00
   1403 FD 9E 00           4239 	sbc	a,0 (iy)
   1406 FD 21rBCs31        4240 	ld	iy,#_enderdir
   140A FD 77 00           4241 	ld	0 (iy),a
   140D FD 21rBCs31        4242 	ld	iy,#_enderdir
   1411 3E 00              4243 	ld	a,#0x00
   1413 FD 9E 01           4244 	sbc	a,1 (iy)
   1416 FD 21rBCs31        4245 	ld	iy,#_enderdir
   141A FD 77 01           4246 	ld	1 (iy),a
   141D                    4247 00104$:
                           4248 ;demo.c:605: enderend = ender + 92;
   141D 3ArBAs31           4249 	ld	a,(#_ender+0)
   1420 C6 5C              4250 	add	a,#0x5C
   1422 DD 77 FE           4251 	ld	-2 (ix),a
   1425 3ArBBs31           4252 	ld	a,(#_ender+1)
   1428 CE 00              4253 	adc	a,#0x00
   142A DD 77 FF           4254 	ld	-1 (ix),a
                           4255 ;demo.c:607: if (enderend > 212) enderend = 212;
   142D 3E D4              4256 	ld	a,#0xD4
   142F DD 96 FE           4257 	sub	a,-2 (ix)
   1432 3E 00              4258 	ld	a,#0x00
   1434 DD 9E FF           4259 	sbc	a,-1 (ix)
   1437 F2r42s14           4260 	jp	P,00106$
   143A DD 36 FE D4        4261 	ld	-2 (ix),#0xD4
   143E DD 36 FF 00        4262 	ld	-1 (ix),#0x00
   1442                    4263 00106$:
                           4264 ;demo.c:609: if(bulbflipper == 1) {
   1442 3ArB4s31           4265 	ld	a,(#_bulbflipper+0)
   1445 D6 01              4266 	sub	a,#0x01
   1447 20 06              4267 	jr	NZ,00130$
   1449 3ArB5s31           4268 	ld	a,(#_bulbflipper+1)
   144C B7                 4269 	or	a,a
   144D 28 03              4270 	jr	Z,00131$
   144F                    4271 00130$:
   144F C3rF9s14           4272 	jp	00108$
   1452                    4273 00131$:
                           4274 ;demo.c:610: cmd.size_x = 72;
   1452 11r6Cs31           4275 	ld	de,#_cmd + 8
   1455 EB                 4276 	ex	de,hl
   1456 36 48              4277 	ld	(hl),#0x48
   1458 23                 4278 	inc	hl
   1459 36 00              4279 	ld	(hl),#0x00
                           4280 ;demo.c:611: cmd.size_y = 16;
   145B 11r6Es31           4281 	ld	de,#_cmd + 10
   145E EB                 4282 	ex	de,hl
   145F 36 10              4283 	ld	(hl),#0x10
   1461 23                 4284 	inc	hl
   1462 36 00              4285 	ld	(hl),#0x00
                           4286 ;demo.c:612: cmd.data = 0;
   1464 11r70s31           4287 	ld	de,#_cmd + 12
   1467 3E 00              4288 	ld	a,#0x00
   1469 12                 4289 	ld	(de),a
                           4290 ;demo.c:613: cmd.argument = 0x04; // from 72xY to left
   146A 11r71s31           4291 	ld	de,#_cmd + 13
   146D 3E 04              4292 	ld	a,#0x04
   146F 12                 4293 	ld	(de),a
                           4294 ;demo.c:614: cmd.command = 0xe0; // vram to vram, y only
   1470 11r72s31           4295 	ld	de,#_cmd + 14
   1473 3E E0              4296 	ld	a,#0xE0
   1475 12                 4297 	ld	(de),a
                           4298 ;demo.c:615: cmd.source_x = 72;
   1476 21r64s31           4299 	ld	hl,#_cmd
   1479 36 48              4300 	ld	(hl),#0x48
   147B 23                 4301 	inc	hl
   147C 36 00              4302 	ld	(hl),#0x00
                           4303 ;demo.c:616: cmd.dest_x = 72;
   147E 11r68s31           4304 	ld	de,#_cmd + 4
   1481 6B                 4305 	ld	l,e
   1482 62                 4306 	ld	h,d
   1483 36 48              4307 	ld	(hl),#0x48
   1485 23                 4308 	inc	hl
   1486 36 00              4309 	ld	(hl),#0x00
                           4310 ;demo.c:618: for (y = ender; y < enderend; y+=16) {
   1488 ED 4BrBAs31        4311 	ld	bc,(_ender)
   148C 59                 4312 	ld	e,c
   148D 50                 4313 	ld	d,b
   148E                    4314 00110$:
   148E 7B                 4315 	ld	a,e
   148F DD 96 FE           4316 	sub	a,-2 (ix)
   1492 7A                 4317 	ld	a,d
   1493 DD 9E FF           4318 	sbc	a,-1 (ix)
   1496 F2rE0s14           4319 	jp	P,00113$
                           4320 ;demo.c:619: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1499 21r66s31           4321 	ld	hl,#_cmd + 2
   149C DD 75 FC           4322 	ld	-4 (ix),l
   149F DD 74 FD           4323 	ld	-3 (ix),h
   14A2 3ArB6s31           4324 	ld	a,(#_ff1+0)
   14A5 83                 4325 	add	a,e
   14A6 4F                 4326 	ld	c,a
   14A7 3ArB7s31           4327 	ld	a,(#_ff1+1)
   14AA 8A                 4328 	adc	a,d
   14AB 06 00              4329 	ld	b,#0x00
   14AD 21r00s00           4330 	ld	hl,#_sintab
   14B0 09                 4331 	add	hl,bc
   14B1 7E                 4332 	ld	a,(hl)
   14B2 4F                 4333 	ld	c,a
   14B3 CB 29              4334 	sra	c
   14B5 79                 4335 	ld	a,c
   14B6 17                 4336 	rla	
   14B7 9F                 4337 	sbc	a,a
   14B8 47                 4338 	ld	b,a
   14B9 21 40 01           4339 	ld	hl,#0x0140
   14BC 09                 4340 	add	hl,bc
   14BD 4D                 4341 	ld	c,l
   14BE 44                 4342 	ld	b,h
   14BF DD 6E FC           4343 	ld	l,-4 (ix)
   14C2 DD 66 FD           4344 	ld	h,-3 (ix)
   14C5 71                 4345 	ld	(hl),c
   14C6 23                 4346 	inc	hl
   14C7 70                 4347 	ld	(hl),b
                           4348 ;demo.c:620: cmd.dest_y = y;
   14C8 21r6As31           4349 	ld	hl, #_cmd + 6
   14CB 73                 4350 	ld	(hl),e
   14CC 23                 4351 	inc	hl
   14CD 72                 4352 	ld	(hl),d
                           4353 ;demo.c:621: vdp_copier(&cmd);
   14CE D5                 4354 	push	de
   14CF 21r64s31           4355 	ld	hl,#_cmd
   14D2 E5                 4356 	push	hl
   14D3 CDr00s00           4357 	call	_vdp_copier
   14D6 F1                 4358 	pop	af
   14D7 D1                 4359 	pop	de
                           4360 ;demo.c:618: for (y = ender; y < enderend; y+=16) {
   14D8 21 10 00           4361 	ld	hl,#0x0010
   14DB 19                 4362 	add	hl,de
   14DC EB                 4363 	ex	de,hl
   14DD C3r8Es14           4364 	jp	00110$
   14E0                    4365 00113$:
                           4366 ;demo.c:623: ff1+=4;
   14E0 21rB6s31           4367 	ld	hl,#_ff1
   14E3 7E                 4368 	ld	a,(hl)
   14E4 C6 04              4369 	add	a,#0x04
   14E6 23                 4370 	inc	hl
   14E7 2B                 4371 	dec	hl
   14E8 C5                 4372 	push	bc
   14E9 4F                 4373 	ld	c, a
   14EA 23                 4374 	inc	hl
   14EB 7E                 4375 	ld	a, (hl)
   14EC 47                 4376 	ld	b, a
   14ED 79                 4377 	ld	a, c
   14EE 2B                 4378 	dec	hl
   14EF 77                 4379 	ld	(hl), a
   14F0 78                 4380 	ld	a, b
   14F1 C1                 4381 	pop	bc
   14F2 CE 00              4382 	adc	a,#0x00
   14F4 23                 4383 	inc	hl
   14F5 77                 4384 	ld	(hl),a
   14F6 C3r93s15           4385 	jp	00109$
   14F9                    4386 00108$:
                           4387 ;demo.c:627: cmd.size_x = 72;
   14F9 21r6Cs31           4388 	ld	hl, #_cmd + 8
   14FC 36 48              4389 	ld	(hl),#0x48
   14FE 23                 4390 	inc	hl
   14FF 36 00              4391 	ld	(hl),#0x00
                           4392 ;demo.c:628: cmd.size_y = 16;
   1501 21r6Es31           4393 	ld	hl, #_cmd + 10
   1504 36 10              4394 	ld	(hl),#0x10
   1506 23                 4395 	inc	hl
   1507 36 00              4396 	ld	(hl),#0x00
                           4397 ;demo.c:629: cmd.data = 0;
                           4398 ;demo.c:630: cmd.argument = 0x00; // from 182xY to right
   1509 3E 00              4399 	ld	a,#0x00
   150B 32r70s31           4400 	ld	(#_cmd + 12),a
   150E 32r71s31           4401 	ld	(#_cmd + 13),a
                           4402 ;demo.c:631: cmd.command = 0xe0; // vram to vram, y only
   1511 01r72s31           4403 	ld	bc,#_cmd + 14
   1514 3E E0              4404 	ld	a,#0xE0
   1516 02                 4405 	ld	(bc),a
                           4406 ;demo.c:632: cmd.source_x = 182;
   1517 21r64s31           4407 	ld	hl,#_cmd
   151A 36 B6              4408 	ld	(hl),#0xB6
   151C 23                 4409 	inc	hl
   151D 36 00              4410 	ld	(hl),#0x00
                           4411 ;demo.c:633: cmd.dest_x = 182;
   151F 21r68s31           4412 	ld	hl, #_cmd + 4
   1522 36 B6              4413 	ld	(hl),#0xB6
   1524 23                 4414 	inc	hl
   1525 36 00              4415 	ld	(hl),#0x00
                           4416 ;demo.c:635: for (y = ender; y < enderend; y+=16) {
   1527 ED 4BrBAs31        4417 	ld	bc,(_ender)
   152B                    4418 00114$:
   152B 79                 4419 	ld	a,c
   152C DD 96 FE           4420 	sub	a,-2 (ix)
   152F 78                 4421 	ld	a,b
   1530 DD 9E FF           4422 	sbc	a,-1 (ix)
   1533 F2r7Ds15           4423 	jp	P,00117$
                           4424 ;demo.c:636: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1536 21r66s31           4425 	ld	hl,#_cmd + 2
   1539 DD 75 FC           4426 	ld	-4 (ix),l
   153C DD 74 FD           4427 	ld	-3 (ix),h
   153F 3ArB8s31           4428 	ld	a,(#_ff2+0)
   1542 81                 4429 	add	a,c
   1543 5F                 4430 	ld	e,a
   1544 3ArB9s31           4431 	ld	a,(#_ff2+1)
   1547 88                 4432 	adc	a,b
   1548 16 00              4433 	ld	d,#0x00
   154A 21r00s00           4434 	ld	hl,#_sintab
   154D 19                 4435 	add	hl,de
   154E 5E                 4436 	ld	e,(hl)
   154F CB 2B              4437 	sra	e
   1551 7B                 4438 	ld	a,e
   1552 17                 4439 	rla	
   1553 9F                 4440 	sbc	a,a
   1554 57                 4441 	ld	d,a
   1555 21 40 01           4442 	ld	hl,#0x0140
   1558 19                 4443 	add	hl,de
   1559 EB                 4444 	ex	de,hl
   155A DD 6E FC           4445 	ld	l,-4 (ix)
   155D DD 66 FD           4446 	ld	h,-3 (ix)
   1560 73                 4447 	ld	(hl),e
   1561 23                 4448 	inc	hl
   1562 72                 4449 	ld	(hl),d
                           4450 ;demo.c:637: cmd.dest_y = y;
   1563 11r6As31           4451 	ld	de,#_cmd + 6
   1566 EB                 4452 	ex	de,hl
   1567 71                 4453 	ld	(hl),c
   1568 23                 4454 	inc	hl
   1569 70                 4455 	ld	(hl),b
                           4456 ;demo.c:638: vdp_copier(&cmd);
   156A C5                 4457 	push	bc
   156B 21r64s31           4458 	ld	hl,#_cmd
   156E E5                 4459 	push	hl
   156F CDr00s00           4460 	call	_vdp_copier
   1572 F1                 4461 	pop	af
   1573 C1                 4462 	pop	bc
                           4463 ;demo.c:635: for (y = ender; y < enderend; y+=16) {
   1574 21 10 00           4464 	ld	hl,#0x0010
   1577 09                 4465 	add	hl,bc
   1578 4D                 4466 	ld	c,l
   1579 44                 4467 	ld	b,h
   157A C3r2Bs15           4468 	jp	00114$
   157D                    4469 00117$:
                           4470 ;demo.c:640: ff2+=4;
   157D 21rB8s31           4471 	ld	hl,#_ff2
   1580 7E                 4472 	ld	a,(hl)
   1581 C6 04              4473 	add	a,#0x04
   1583 23                 4474 	inc	hl
   1584 2B                 4475 	dec	hl
   1585 C5                 4476 	push	bc
   1586 4F                 4477 	ld	c, a
   1587 23                 4478 	inc	hl
   1588 7E                 4479 	ld	a, (hl)
   1589 47                 4480 	ld	b, a
   158A 79                 4481 	ld	a, c
   158B 2B                 4482 	dec	hl
   158C 77                 4483 	ld	(hl), a
   158D 78                 4484 	ld	a, b
   158E C1                 4485 	pop	bc
   158F CE 00              4486 	adc	a,#0x00
   1591 23                 4487 	inc	hl
   1592 77                 4488 	ld	(hl),a
   1593                    4489 00109$:
                           4490 ;demo.c:643: bulbflipper = -bulbflipper;
   1593 AF                 4491 	xor	a,a
   1594 FD 21rB4s31        4492 	ld	iy,#_bulbflipper
   1598 3E 00              4493 	ld	a,#0x00
   159A FD 9E 00           4494 	sbc	a,0 (iy)
   159D 21rB4s31           4495 	ld	hl,#_bulbflipper + 0
   15A0 77                 4496 	ld	(hl), a
   15A1 FD 21rB4s31        4497 	ld	iy,#_bulbflipper
   15A5 3E 00              4498 	ld	a,#0x00
   15A7 FD 9E 01           4499 	sbc	a,1 (iy)
   15AA 21rB5s31           4500 	ld	hl,#_bulbflipper + 1
   15AD 77                 4501 	ld	(hl), a
   15AE DD F9              4502 	ld	sp,ix
   15B0 DD E1              4503 	pop	ix
   15B2 C9                 4504 	ret
   15B3                    4505 _bulbs_end::
                           4506 ;demo.c:657: void animplay() {
                           4507 ;	---------------------------------
                           4508 ; Function animplay
                           4509 ; ---------------------------------
   15B3                    4510 _animplay_start::
   15B3                    4511 _animplay:
   15B3 DD E5              4512 	push	ix
   15B5 DD 21 00 00        4513 	ld	ix,#0
   15B9 DD 39              4514 	add	ix,sp
   15BB F5                 4515 	push	af
   15BC 3B                 4516 	dec	sp
                           4517 ;demo.c:662: if (anim_init == 0) {
   15BD 3ArC6s31           4518 	ld	a,(#_anim_init+0)
   15C0 21rC7s31           4519 	ld	hl,#_anim_init + 1
   15C3 B6                 4520 	or	a,(hl)
   15C4 20 35              4521 	jr	NZ,00117$
                           4522 ;demo.c:664: vdp_register(0,0);
   15C6 21 00 00           4523 	ld	hl,#0x0000
   15C9 E5                 4524 	push	hl
   15CA CDr00s00           4525 	call	_vdp_register
   15CD F1                 4526 	pop	af
                           4527 ;demo.c:665: vdp_register(1,0);
   15CE 21 01 00           4528 	ld	hl,#0x0001
   15D1 E5                 4529 	push	hl
   15D2 CDr00s00           4530 	call	_vdp_register
   15D5 F1                 4531 	pop	af
                           4532 ;demo.c:670: vdp_set_screen5();
   15D6 CDr00s00           4533 	call	_vdp_set_screen5
                           4534 ;demo.c:671: vdp_register(1,0x60);
   15D9 21 01 60           4535 	ld	hl,#0x6001
   15DC E5                 4536 	push	hl
   15DD CDr00s00           4537 	call	_vdp_register
   15E0 F1                 4538 	pop	af
                           4539 ;demo.c:672: vdp_register(9,2); // 192 lines
   15E1 21 09 02           4540 	ld	hl,#0x0209
   15E4 E5                 4541 	push	hl
   15E5 CDr00s00           4542 	call	_vdp_register
   15E8 F1                 4543 	pop	af
                           4544 ;demo.c:675: anim_init = 1;
   15E9 21rC6s31           4545 	ld	hl,#_anim_init + 0
   15EC 36 01              4546 	ld	(hl), #0x01
   15EE 21rC7s31           4547 	ld	hl,#_anim_init + 1
   15F1 36 00              4548 	ld	(hl), #0x00
                           4549 ;demo.c:676: vdp_load_palette(tf_palette);
   15F3 21r20s31           4550 	ld	hl,#_tf_palette
   15F6 E5                 4551 	push	hl
   15F7 CDr00s00           4552 	call	_vdp_load_palette
   15FA F1                 4553 	pop	af
                           4554 ;demo.c:679: for (y = 0; y < 96; y+=1) {
   15FB                    4555 00117$:
   15FB DD 36 FF 00        4556 	ld	-1 (ix),#0x00
   15FF                    4557 00109$:
   15FF DD 7E FF           4558 	ld	a,-1 (ix)
   1602 D6 60              4559 	sub	a,#0x60
   1604 D2r86s16           4560 	jp	NC,00112$
                           4561 ;demo.c:680: cmd.source_x = xo;
   1607 ED 5BrBEs31        4562 	ld	de,(_xo)
   160B 21r64s31           4563 	ld	hl,#_cmd
   160E 73                 4564 	ld	(hl),e
   160F 23                 4565 	inc	hl
   1610 72                 4566 	ld	(hl),d
                           4567 ;demo.c:681: cmd.source_y = 256+po+yo+(y>>1);
   1611 11r66s31           4568 	ld	de,#_cmd + 2
   1614 3ArC2s31           4569 	ld	a,(#_po+0)
   1617 4F                 4570 	ld	c,a
   1618 3ArC3s31           4571 	ld	a,(#_po+1)
   161B C6 01              4572 	add	a,#0x01
   161D 47                 4573 	ld	b,a
   161E 21rC0s31           4574 	ld	hl,#_yo
   1621 79                 4575 	ld	a,c
   1622 86                 4576 	add	a,(hl)
   1623 DD 77 FD           4577 	ld	-3 (ix),a
   1626 78                 4578 	ld	a,b
   1627 23                 4579 	inc	hl
   1628 8E                 4580 	adc	a,(hl)
   1629 DD 77 FE           4581 	ld	-2 (ix),a
   162C DD 4E FF           4582 	ld	c,-1 (ix)
   162F CB 39              4583 	srl	c
   1631 06 00              4584 	ld	b,#0x00
   1633 DD 7E FD           4585 	ld	a,-3 (ix)
   1636 81                 4586 	add	a,c
   1637 4F                 4587 	ld	c,a
   1638 DD 7E FE           4588 	ld	a,-2 (ix)
   163B 88                 4589 	adc	a,b
   163C 47                 4590 	ld	b,a
   163D 6B                 4591 	ld	l,e
   163E 62                 4592 	ld	h,d
   163F 71                 4593 	ld	(hl),c
   1640 23                 4594 	inc	hl
   1641 70                 4595 	ld	(hl),b
                           4596 ;demo.c:682: cmd.dest_x = 0;
   1642 21r68s31           4597 	ld	hl, #_cmd + 4
   1645 36 00              4598 	ld	(hl),#0x00
   1647 23                 4599 	inc	hl
   1648 36 00              4600 	ld	(hl),#0x00
                           4601 ;demo.c:683: cmd.dest_y = (y<<1);
   164A 01r6As31           4602 	ld	bc,#_cmd + 6
   164D DD 5E FF           4603 	ld	e,-1 (ix)
   1650 16 00              4604 	ld	d,#0x00
   1652 CB 23              4605 	sla	e
   1654 CB 12              4606 	rl	d
   1656 69                 4607 	ld	l,c
   1657 60                 4608 	ld	h,b
   1658 73                 4609 	ld	(hl),e
   1659 23                 4610 	inc	hl
   165A 72                 4611 	ld	(hl),d
                           4612 ;demo.c:684: cmd.size_x = 128;
   165B 21r6Cs31           4613 	ld	hl, #_cmd + 8
   165E 36 80              4614 	ld	(hl),#0x80
   1660 23                 4615 	inc	hl
   1661 36 00              4616 	ld	(hl),#0x00
                           4617 ;demo.c:685: cmd.size_y = 1;
   1663 21r6Es31           4618 	ld	hl, #_cmd + 10
   1666 36 01              4619 	ld	(hl),#0x01
   1668 23                 4620 	inc	hl
   1669 36 00              4621 	ld	(hl),#0x00
                           4622 ;demo.c:686: cmd.data = 0;
                           4623 ;demo.c:687: cmd.argument = 0x00;
   166B 3E 00              4624 	ld	a,#0x00
   166D 32r70s31           4625 	ld	(#_cmd + 12),a
   1670 32r71s31           4626 	ld	(#_cmd + 13),a
                           4627 ;demo.c:688: cmd.command = 0xD0;
   1673 3E D0              4628 	ld	a,#0xD0
   1675 32r72s31           4629 	ld	(#_cmd + 14),a
                           4630 ;demo.c:689: vdp_copier(&cmd);
   1678 21r64s31           4631 	ld	hl,#_cmd
   167B E5                 4632 	push	hl
   167C CDr00s00           4633 	call	_vdp_copier
   167F F1                 4634 	pop	af
                           4635 ;demo.c:679: for (y = 0; y < 96; y+=1) {
   1680 DD 34 FF           4636 	inc	-1 (ix)
   1683 C3rFFs15           4637 	jp	00109$
   1686                    4638 00112$:
                           4639 ;demo.c:692: xo+=128;
   1686 21rBEs31           4640 	ld	hl,#_xo
   1689 7E                 4641 	ld	a,(hl)
   168A C6 80              4642 	add	a,#0x80
   168C 23                 4643 	inc	hl
   168D 2B                 4644 	dec	hl
   168E C5                 4645 	push	bc
   168F 4F                 4646 	ld	c, a
   1690 23                 4647 	inc	hl
   1691 7E                 4648 	ld	a, (hl)
   1692 47                 4649 	ld	b, a
   1693 79                 4650 	ld	a, c
   1694 2B                 4651 	dec	hl
   1695 77                 4652 	ld	(hl), a
   1696 78                 4653 	ld	a, b
   1697 C1                 4654 	pop	bc
   1698 CE 00              4655 	adc	a,#0x00
   169A 23                 4656 	inc	hl
   169B 77                 4657 	ld	(hl),a
                           4658 ;demo.c:693: if (xo >= 256) {
   169C 3ArBEs31           4659 	ld	a,(#_xo+0)
   169F D6 00              4660 	sub	a,#0x00
   16A1 3ArBFs31           4661 	ld	a,(#_xo+1)
   16A4 DE 01              4662 	sbc	a,#0x01
   16A6 FAr0Ds17           4663 	jp	M,00108$
                           4664 ;demo.c:694: xo = 0;
   16A9 21rBEs31           4665 	ld	hl,#_xo + 0
   16AC 36 00              4666 	ld	(hl), #0x00
   16AE 21rBFs31           4667 	ld	hl,#_xo + 1
   16B1 36 00              4668 	ld	(hl), #0x00
                           4669 ;demo.c:695: yo+=48;
   16B3 21rC0s31           4670 	ld	hl,#_yo
   16B6 7E                 4671 	ld	a,(hl)
   16B7 C6 30              4672 	add	a,#0x30
   16B9 23                 4673 	inc	hl
   16BA 2B                 4674 	dec	hl
   16BB C5                 4675 	push	bc
   16BC 4F                 4676 	ld	c, a
   16BD 23                 4677 	inc	hl
   16BE 7E                 4678 	ld	a, (hl)
   16BF 47                 4679 	ld	b, a
   16C0 79                 4680 	ld	a, c
   16C1 2B                 4681 	dec	hl
   16C2 77                 4682 	ld	(hl), a
   16C3 78                 4683 	ld	a, b
   16C4 C1                 4684 	pop	bc
   16C5 CE 00              4685 	adc	a,#0x00
   16C7 23                 4686 	inc	hl
   16C8 77                 4687 	ld	(hl),a
                           4688 ;demo.c:696: if (yo >= 192) { yo = 0; po+=256; }
   16C9 3ArC0s31           4689 	ld	a,(#_yo+0)
   16CC D6 C0              4690 	sub	a,#0xC0
   16CE 3ArC1s31           4691 	ld	a,(#_yo+1)
   16D1 DE 00              4692 	sbc	a,#0x00
   16D3 FArF6s16           4693 	jp	M,00104$
   16D6 21rC0s31           4694 	ld	hl,#_yo + 0
   16D9 36 00              4695 	ld	(hl), #0x00
   16DB 21rC1s31           4696 	ld	hl,#_yo + 1
   16DE 36 00              4697 	ld	(hl), #0x00
   16E0 21rC2s31           4698 	ld	hl,#_po
   16E3 7E                 4699 	ld	a,(hl)
   16E4 C6 00              4700 	add	a,#0x00
   16E6 23                 4701 	inc	hl
   16E7 2B                 4702 	dec	hl
   16E8 C5                 4703 	push	bc
   16E9 4F                 4704 	ld	c, a
   16EA 23                 4705 	inc	hl
   16EB 7E                 4706 	ld	a, (hl)
   16EC 47                 4707 	ld	b, a
   16ED 79                 4708 	ld	a, c
   16EE 2B                 4709 	dec	hl
   16EF 77                 4710 	ld	(hl), a
   16F0 78                 4711 	ld	a, b
   16F1 C1                 4712 	pop	bc
   16F2 CE 01              4713 	adc	a,#0x01
   16F4 23                 4714 	inc	hl
   16F5 77                 4715 	ld	(hl),a
   16F6                    4716 00104$:
                           4717 ;demo.c:697: if (po >= 768) {
   16F6 3ArC2s31           4718 	ld	a,(#_po+0)
   16F9 D6 00              4719 	sub	a,#0x00
   16FB 3ArC3s31           4720 	ld	a,(#_po+1)
   16FE DE 03              4721 	sbc	a,#0x03
   1700 FAr0Ds17           4722 	jp	M,00108$
                           4723 ;demo.c:698: po = 0;
   1703 21rC2s31           4724 	ld	hl,#_po + 0
   1706 36 00              4725 	ld	(hl), #0x00
   1708 21rC3s31           4726 	ld	hl,#_po + 1
   170B 36 00              4727 	ld	(hl), #0x00
   170D                    4728 00108$:
                           4729 ;demo.c:705: fffaaa++;
   170D FD 21rC4s31        4730 	ld	iy,#_fffaaa
   1711 FD 34 00           4731 	inc	0 (iy)
   1714 20 07              4732 	jr	NZ,00124$
   1716 FD 21rC4s31        4733 	ld	iy,#_fffaaa
   171A FD 34 01           4734 	inc	1 (iy)
   171D                    4735 00124$:
   171D DD F9              4736 	ld	sp,ix
   171F DD E1              4737 	pop	ix
   1721 C9                 4738 	ret
   1722                    4739 _animplay_end::
                           4740 ;demo.c:717: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           4741 ;	---------------------------------
                           4742 ; Function drawbox
                           4743 ; ---------------------------------
   1722                    4744 _drawbox_start::
   1722                    4745 _drawbox:
   1722 DD E5              4746 	push	ix
   1724 DD 21 00 00        4747 	ld	ix,#0
   1728 DD 39              4748 	add	ix,sp
                           4749 ;demo.c:718: dbly = 0;
   172A 21rCBs31           4750 	ld	hl,#_dbly + 0
   172D 36 00              4751 	ld	(hl), #0x00
   172F 21rCCs31           4752 	ld	hl,#_dbly + 1
   1732 36 00              4753 	ld	(hl), #0x00
                           4754 ;demo.c:720: cmd.source_x = box_x * 42;
   1734 DD 5E 04           4755 	ld	e,4 (ix)
   1737 DD 56 05           4756 	ld	d,5 (ix)
   173A 6B                 4757 	ld	l,e
   173B 62                 4758 	ld	h,d
   173C 29                 4759 	add	hl,hl
   173D 29                 4760 	add	hl,hl
   173E 19                 4761 	add	hl,de
   173F 29                 4762 	add	hl,hl
   1740 29                 4763 	add	hl,hl
   1741 19                 4764 	add	hl,de
   1742 29                 4765 	add	hl,hl
   1743 4D                 4766 	ld	c,l
   1744 44                 4767 	ld	b,h
   1745 21r64s31           4768 	ld	hl,#_cmd
   1748 71                 4769 	ld	(hl),c
   1749 23                 4770 	inc	hl
   174A 70                 4771 	ld	(hl),b
                           4772 ;demo.c:721: cmd.source_y = 768+box_y * 42;
   174B 01r66s31           4773 	ld	bc,#_cmd + 2
   174E DD 5E 06           4774 	ld	e,6 (ix)
   1751 DD 56 07           4775 	ld	d,7 (ix)
   1754 6B                 4776 	ld	l,e
   1755 62                 4777 	ld	h,d
   1756 29                 4778 	add	hl,hl
   1757 29                 4779 	add	hl,hl
   1758 19                 4780 	add	hl,de
   1759 29                 4781 	add	hl,hl
   175A 29                 4782 	add	hl,hl
   175B 19                 4783 	add	hl,de
   175C 29                 4784 	add	hl,hl
   175D EB                 4785 	ex	de,hl
   175E 21 00 03           4786 	ld	hl,#0x0300
   1761 19                 4787 	add	hl,de
   1762 EB                 4788 	ex	de,hl
   1763 69                 4789 	ld	l,c
   1764 60                 4790 	ld	h,b
   1765 73                 4791 	ld	(hl),e
   1766 23                 4792 	inc	hl
   1767 72                 4793 	ld	(hl),d
                           4794 ;demo.c:722: cmd.dest_x = x;
   1768 01r68s31           4795 	ld	bc,#_cmd + 4
   176B DD 5E 08           4796 	ld	e,8 (ix)
   176E 16 00              4797 	ld	d,#0x00
   1770 69                 4798 	ld	l,c
   1771 60                 4799 	ld	h,b
   1772 73                 4800 	ld	(hl),e
   1773 23                 4801 	inc	hl
   1774 72                 4802 	ld	(hl),d
                           4803 ;demo.c:723: cmd.dest_y = dbly+y;
   1775 01r6As31           4804 	ld	bc,#_cmd + 6
   1778 DD 5E 09           4805 	ld	e,9 (ix)
   177B 16 00              4806 	ld	d,#0x00
   177D 69                 4807 	ld	l,c
   177E 60                 4808 	ld	h,b
   177F 73                 4809 	ld	(hl),e
   1780 23                 4810 	inc	hl
   1781 72                 4811 	ld	(hl),d
                           4812 ;demo.c:724: cmd.size_x = 42;
   1782 21r6Cs31           4813 	ld	hl, #_cmd + 8
   1785 36 2A              4814 	ld	(hl),#0x2A
   1787 23                 4815 	inc	hl
   1788 36 00              4816 	ld	(hl),#0x00
                           4817 ;demo.c:725: cmd.size_y = 42;
   178A 21r6Es31           4818 	ld	hl, #_cmd + 10
   178D 36 2A              4819 	ld	(hl),#0x2A
   178F 23                 4820 	inc	hl
   1790 36 00              4821 	ld	(hl),#0x00
                           4822 ;demo.c:726: cmd.data = 0;
                           4823 ;demo.c:727: cmd.argument = 0x00;
   1792 3E 00              4824 	ld	a,#0x00
   1794 32r70s31           4825 	ld	(#_cmd + 12),a
   1797 32r71s31           4826 	ld	(#_cmd + 13),a
                           4827 ;demo.c:728: cmd.command = 0x98; // TIMP sprite
   179A 3E 98              4828 	ld	a,#0x98
   179C 32r72s31           4829 	ld	(#_cmd + 14),a
                           4830 ;demo.c:729: vdp_copier(&cmd);
   179F D5                 4831 	push	de
   17A0 21r64s31           4832 	ld	hl,#_cmd
   17A3 E5                 4833 	push	hl
   17A4 CDr00s00           4834 	call	_vdp_copier
   17A7 F1                 4835 	pop	af
   17A8 D1                 4836 	pop	de
                           4837 ;demo.c:731: prevx = x;
   17A9 DD 7E 08           4838 	ld	a,8 (ix)
   17AC 21rCDs31           4839 	ld	hl,#_prevx + 0
   17AF 77                 4840 	ld	(hl), a
   17B0 21rCEs31           4841 	ld	hl,#_prevx + 1
   17B3 36 00              4842 	ld	(hl), #0x00
                           4843 ;demo.c:732: prevy = y;
   17B5 21rCFs31           4844 	ld	hl,#_prevy + 0
   17B8 73                 4845 	ld	(hl), e
   17B9 21rD0s31           4846 	ld	hl,#_prevy + 1
   17BC 72                 4847 	ld	(hl), d
                           4848 ;demo.c:733: prevbx = box_x;
   17BD DD 7E 04           4849 	ld	a,4 (ix)
   17C0 21rD1s31           4850 	ld	hl,#_prevbx + 0
   17C3 77                 4851 	ld	(hl), a
   17C4 DD 7E 05           4852 	ld	a,5 (ix)
   17C7 21rD2s31           4853 	ld	hl,#_prevbx + 1
   17CA 77                 4854 	ld	(hl), a
                           4855 ;demo.c:734: prevby = box_y;
   17CB DD 7E 06           4856 	ld	a,6 (ix)
   17CE 21rD3s31           4857 	ld	hl,#_prevby + 0
   17D1 77                 4858 	ld	(hl), a
   17D2 DD 7E 07           4859 	ld	a,7 (ix)
   17D5 21rD4s31           4860 	ld	hl,#_prevby + 1
   17D8 77                 4861 	ld	(hl), a
   17D9 DD E1              4862 	pop	ix
   17DB C9                 4863 	ret
   17DC                    4864 _drawbox_end::
                           4865 ;demo.c:748: void boxes() {
                           4866 ;	---------------------------------
                           4867 ; Function boxes
                           4868 ; ---------------------------------
   17DC                    4869 _boxes_start::
   17DC                    4870 _boxes:
                           4871 ;demo.c:752: if (bonc == 1) {
   17DC 3ArE1s31           4872 	ld	a,(#_bonc+0)
   17DF D6 01              4873 	sub	a,#0x01
   17E1 20 06              4874 	jr	NZ,00156$
   17E3 3ArE2s31           4875 	ld	a,(#_bonc+1)
   17E6 B7                 4876 	or	a,a
   17E7 28 02              4877 	jr	Z,00157$
   17E9                    4878 00156$:
   17E9 18 4D              4879 	jr	00102$
   17EB                    4880 00157$:
                           4881 ;demo.c:754: cmd.source_x = 0;
   17EB 21r64s31           4882 	ld	hl,#_cmd
   17EE 36 00              4883 	ld	(hl),#0x00
   17F0 23                 4884 	inc	hl
   17F1 36 00              4885 	ld	(hl),#0x00
                           4886 ;demo.c:755: cmd.source_y = 256;
   17F3 21r66s31           4887 	ld	hl, #_cmd + 2
   17F6 36 00              4888 	ld	(hl),#0x00
   17F8 23                 4889 	inc	hl
   17F9 36 01              4890 	ld	(hl),#0x01
                           4891 ;demo.c:756: cmd.dest_x = pbx;
   17FB 01r68s31           4892 	ld	bc,#_cmd + 4
   17FE ED 5BrE3s31        4893 	ld	de,(_pbx)
   1802 69                 4894 	ld	l,c
   1803 60                 4895 	ld	h,b
   1804 73                 4896 	ld	(hl),e
   1805 23                 4897 	inc	hl
   1806 72                 4898 	ld	(hl),d
                           4899 ;demo.c:757: cmd.dest_y = pbt;
   1807 01r6As31           4900 	ld	bc,#_cmd + 6
   180A ED 5BrE5s31        4901 	ld	de,(_pbt)
   180E 69                 4902 	ld	l,c
   180F 60                 4903 	ld	h,b
   1810 73                 4904 	ld	(hl),e
   1811 23                 4905 	inc	hl
   1812 72                 4906 	ld	(hl),d
                           4907 ;demo.c:758: cmd.size_x = 42;
   1813 21r6Cs31           4908 	ld	hl, #_cmd + 8
   1816 36 2A              4909 	ld	(hl),#0x2A
   1818 23                 4910 	inc	hl
   1819 36 00              4911 	ld	(hl),#0x00
                           4912 ;demo.c:759: cmd.size_y = 42;
   181B 21r6Es31           4913 	ld	hl, #_cmd + 10
   181E 36 2A              4914 	ld	(hl),#0x2A
   1820 23                 4915 	inc	hl
   1821 36 00              4916 	ld	(hl),#0x00
                           4917 ;demo.c:760: cmd.data = 0;
                           4918 ;demo.c:761: cmd.argument = 0x00;
   1823 3E 00              4919 	ld	a,#0x00
   1825 32r70s31           4920 	ld	(#_cmd + 12),a
   1828 32r71s31           4921 	ld	(#_cmd + 13),a
                           4922 ;demo.c:762: cmd.command = 0xD0; // HMMM
   182B 3E D0              4923 	ld	a,#0xD0
   182D 32r72s31           4924 	ld	(#_cmd + 14),a
                           4925 ;demo.c:763: vdp_copier(&cmd);
   1830 21r64s31           4926 	ld	hl,#_cmd
   1833 E5                 4927 	push	hl
   1834 CDr00s00           4928 	call	_vdp_copier
   1837 F1                 4929 	pop	af
   1838                    4930 00102$:
                           4931 ;demo.c:767: if (boxes_init == 0) {
   1838 AF                 4932 	xor	a,a
   1839 21rC8s31           4933 	ld	hl,#_boxes_init + 0
   183C B6                 4934 	or	a,(hl)
   183D C2rD3s18           4935 	jp	NZ,00104$
                           4936 ;demo.c:768: boxes_init = 1;
   1840 FD 21rC8s31        4937 	ld	iy,#_boxes_init
   1844 FD 36 00 01        4938 	ld	0 (iy),#0x01
                           4939 ;demo.c:770: cmd.size_x = 8;
   1848 21r6Cs31           4940 	ld	hl, #_cmd + 8
   184B 36 08              4941 	ld	(hl),#0x08
   184D 23                 4942 	inc	hl
   184E 36 00              4943 	ld	(hl),#0x00
                           4944 ;demo.c:771: cmd.size_y = 212;
   1850 21r6Es31           4945 	ld	hl, #_cmd + 10
   1853 36 D4              4946 	ld	(hl),#0xD4
   1855 23                 4947 	inc	hl
   1856 36 00              4948 	ld	(hl),#0x00
                           4949 ;demo.c:772: cmd.data = 0;
                           4950 ;demo.c:773: cmd.argument = 0x00; // from 70xY to left
   1858 3E 00              4951 	ld	a,#0x00
   185A 32r70s31           4952 	ld	(#_cmd + 12),a
   185D 32r71s31           4953 	ld	(#_cmd + 13),a
                           4954 ;demo.c:774: cmd.command = 0xd0; // vram to vram, y only
   1860 01r72s31           4955 	ld	bc,#_cmd + 14
   1863 3E D0              4956 	ld	a,#0xD0
   1865 02                 4957 	ld	(bc),a
                           4958 ;demo.c:775: cmd.source_x = 248;
   1866 21r64s31           4959 	ld	hl,#_cmd
   1869 36 F8              4960 	ld	(hl),#0xF8
   186B 23                 4961 	inc	hl
   186C 36 00              4962 	ld	(hl),#0x00
                           4963 ;demo.c:776: cmd.source_y = 0;
   186E 21r66s31           4964 	ld	hl, #_cmd + 2
   1871 36 00              4965 	ld	(hl),#0x00
   1873 23                 4966 	inc	hl
   1874 36 00              4967 	ld	(hl),#0x00
                           4968 ;demo.c:777: cmd.dest_y = 0;
   1876 21r6As31           4969 	ld	hl, #_cmd + 6
   1879 36 00              4970 	ld	(hl),#0x00
   187B 23                 4971 	inc	hl
   187C 36 00              4972 	ld	(hl),#0x00
                           4973 ;demo.c:779: for (x = 248; x >= 0; x-=8) {
   187E 01 F8 00           4974 	ld	bc,#0x00F8
   1881                    4975 00131$:
   1881 78                 4976 	ld	a,b
   1882 CB 7F              4977 	bit	7,a
   1884 20 38              4978 	jr	NZ,00134$
                           4979 ;demo.c:780: waitVB();
   1886 76                 4980 		halt 
                           4981 ;demo.c:781: cmd.dest_x = x;
   1887 11r68s31           4982 	ld	de,#_cmd + 4
   188A EB                 4983 	ex	de,hl
   188B 71                 4984 	ld	(hl),c
   188C 23                 4985 	inc	hl
   188D 70                 4986 	ld	(hl),b
                           4987 ;demo.c:782: cmd.dest_y = 0;
   188E 11r6As31           4988 	ld	de,#_cmd + 6
   1891 EB                 4989 	ex	de,hl
   1892 36 00              4990 	ld	(hl),#0x00
   1894 23                 4991 	inc	hl
   1895 36 00              4992 	ld	(hl),#0x00
                           4993 ;demo.c:783: vdp_copier(&cmd);
   1897 C5                 4994 	push	bc
   1898 21r64s31           4995 	ld	hl,#_cmd
   189B E5                 4996 	push	hl
   189C CDr00s00           4997 	call	_vdp_copier
   189F F1                 4998 	pop	af
   18A0 C1                 4999 	pop	bc
                           5000 ;demo.c:784: cmd.dest_y = 256;
   18A1 11r6As31           5001 	ld	de,#_cmd + 6
   18A4 EB                 5002 	ex	de,hl
   18A5 36 00              5003 	ld	(hl),#0x00
   18A7 23                 5004 	inc	hl
   18A8 36 01              5005 	ld	(hl),#0x01
                           5006 ;demo.c:785: vdp_copier(&cmd);
   18AA C5                 5007 	push	bc
   18AB 21r64s31           5008 	ld	hl,#_cmd
   18AE E5                 5009 	push	hl
   18AF CDr00s00           5010 	call	_vdp_copier
   18B2 F1                 5011 	pop	af
   18B3 C1                 5012 	pop	bc
                           5013 ;demo.c:779: for (x = 248; x >= 0; x-=8) {
   18B4 79                 5014 	ld	a,c
   18B5 C6 F8              5015 	add	a,#0xF8
   18B7 4F                 5016 	ld	c,a
   18B8 78                 5017 	ld	a,b
   18B9 CE FF              5018 	adc	a,#0xFF
   18BB 47                 5019 	ld	b,a
   18BC 18 C3              5020 	jr	00131$
   18BE                    5021 00134$:
                           5022 ;demo.c:788: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   18BE 21 08 B4           5023 	ld	hl,#0xB408
   18C1 E5                 5024 	push	hl
   18C2 21r57s1B           5025 	ld	hl,#__str_9
   18C5 E5                 5026 	push	hl
   18C6 CDr20s11           5027 	call	_drawsine
   18C9 F1                 5028 	pop	af
   18CA F1                 5029 	pop	af
                           5030 ;demo.c:790: vdp_load_palette(boxes_palette);
   18CB 21r40s31           5031 	ld	hl,#_boxes_palette
   18CE E5                 5032 	push	hl
   18CF CDr00s00           5033 	call	_vdp_load_palette
   18D2 F1                 5034 	pop	af
   18D3                    5035 00104$:
                           5036 ;demo.c:793: if (bt >= 80) bt+=6;
   18D3 3ArD9s31           5037 	ld	a,(#_bt+0)
   18D6 D6 50              5038 	sub	a,#0x50
   18D8 3ArDAs31           5039 	ld	a,(#_bt+1)
   18DB DE 00              5040 	sbc	a,#0x00
   18DD FArF6s18           5041 	jp	M,00106$
   18E0 21rD9s31           5042 	ld	hl,#_bt
   18E3 7E                 5043 	ld	a,(hl)
   18E4 C6 06              5044 	add	a,#0x06
   18E6 23                 5045 	inc	hl
   18E7 2B                 5046 	dec	hl
   18E8 C5                 5047 	push	bc
   18E9 4F                 5048 	ld	c, a
   18EA 23                 5049 	inc	hl
   18EB 7E                 5050 	ld	a, (hl)
   18EC 47                 5051 	ld	b, a
   18ED 79                 5052 	ld	a, c
   18EE 2B                 5053 	dec	hl
   18EF 77                 5054 	ld	(hl), a
   18F0 78                 5055 	ld	a, b
   18F1 C1                 5056 	pop	bc
   18F2 CE 00              5057 	adc	a,#0x00
   18F4 23                 5058 	inc	hl
   18F5 77                 5059 	ld	(hl),a
   18F6                    5060 00106$:
                           5061 ;demo.c:794: if (bt < 80 && bt >= 60) bt+=5;
   18F6 3ArD9s31           5062 	ld	a,(#_bt+0)
   18F9 D6 50              5063 	sub	a,#0x50
   18FB 3ArDAs31           5064 	ld	a,(#_bt+1)
   18FE DE 00              5065 	sbc	a,#0x00
   1900 F2r26s19           5066 	jp	P,00108$
   1903 3ArD9s31           5067 	ld	a,(#_bt+0)
   1906 D6 3C              5068 	sub	a,#0x3C
   1908 3ArDAs31           5069 	ld	a,(#_bt+1)
   190B DE 00              5070 	sbc	a,#0x00
   190D FAr26s19           5071 	jp	M,00108$
   1910 21rD9s31           5072 	ld	hl,#_bt
   1913 7E                 5073 	ld	a,(hl)
   1914 C6 05              5074 	add	a,#0x05
   1916 23                 5075 	inc	hl
   1917 2B                 5076 	dec	hl
   1918 C5                 5077 	push	bc
   1919 4F                 5078 	ld	c, a
   191A 23                 5079 	inc	hl
   191B 7E                 5080 	ld	a, (hl)
   191C 47                 5081 	ld	b, a
   191D 79                 5082 	ld	a, c
   191E 2B                 5083 	dec	hl
   191F 77                 5084 	ld	(hl), a
   1920 78                 5085 	ld	a, b
   1921 C1                 5086 	pop	bc
   1922 CE 00              5087 	adc	a,#0x00
   1924 23                 5088 	inc	hl
   1925 77                 5089 	ld	(hl),a
   1926                    5090 00108$:
                           5091 ;demo.c:795: if (bt < 60 && bt >= 40) bt+=4;
   1926 3ArD9s31           5092 	ld	a,(#_bt+0)
   1929 D6 3C              5093 	sub	a,#0x3C
   192B 3ArDAs31           5094 	ld	a,(#_bt+1)
   192E DE 00              5095 	sbc	a,#0x00
   1930 F2r56s19           5096 	jp	P,00111$
   1933 3ArD9s31           5097 	ld	a,(#_bt+0)
   1936 D6 28              5098 	sub	a,#0x28
   1938 3ArDAs31           5099 	ld	a,(#_bt+1)
   193B DE 00              5100 	sbc	a,#0x00
   193D FAr56s19           5101 	jp	M,00111$
   1940 21rD9s31           5102 	ld	hl,#_bt
   1943 7E                 5103 	ld	a,(hl)
   1944 C6 04              5104 	add	a,#0x04
   1946 23                 5105 	inc	hl
   1947 2B                 5106 	dec	hl
   1948 C5                 5107 	push	bc
   1949 4F                 5108 	ld	c, a
   194A 23                 5109 	inc	hl
   194B 7E                 5110 	ld	a, (hl)
   194C 47                 5111 	ld	b, a
   194D 79                 5112 	ld	a, c
   194E 2B                 5113 	dec	hl
   194F 77                 5114 	ld	(hl), a
   1950 78                 5115 	ld	a, b
   1951 C1                 5116 	pop	bc
   1952 CE 00              5117 	adc	a,#0x00
   1954 23                 5118 	inc	hl
   1955 77                 5119 	ld	(hl),a
   1956                    5120 00111$:
                           5121 ;demo.c:796: if (bt < 40 && bt >= 10) bt+=3;
   1956 3ArD9s31           5122 	ld	a,(#_bt+0)
   1959 D6 28              5123 	sub	a,#0x28
   195B 3ArDAs31           5124 	ld	a,(#_bt+1)
   195E DE 00              5125 	sbc	a,#0x00
   1960 F2r86s19           5126 	jp	P,00114$
   1963 3ArD9s31           5127 	ld	a,(#_bt+0)
   1966 D6 0A              5128 	sub	a,#0x0A
   1968 3ArDAs31           5129 	ld	a,(#_bt+1)
   196B DE 00              5130 	sbc	a,#0x00
   196D FAr86s19           5131 	jp	M,00114$
   1970 21rD9s31           5132 	ld	hl,#_bt
   1973 7E                 5133 	ld	a,(hl)
   1974 C6 03              5134 	add	a,#0x03
   1976 23                 5135 	inc	hl
   1977 2B                 5136 	dec	hl
   1978 C5                 5137 	push	bc
   1979 4F                 5138 	ld	c, a
   197A 23                 5139 	inc	hl
   197B 7E                 5140 	ld	a, (hl)
   197C 47                 5141 	ld	b, a
   197D 79                 5142 	ld	a, c
   197E 2B                 5143 	dec	hl
   197F 77                 5144 	ld	(hl), a
   1980 78                 5145 	ld	a, b
   1981 C1                 5146 	pop	bc
   1982 CE 00              5147 	adc	a,#0x00
   1984 23                 5148 	inc	hl
   1985 77                 5149 	ld	(hl),a
   1986                    5150 00114$:
                           5151 ;demo.c:797: if (bt < 10 ) bt+=2;
   1986 3ArD9s31           5152 	ld	a,(#_bt+0)
   1989 D6 0A              5153 	sub	a,#0x0A
   198B 3ArDAs31           5154 	ld	a,(#_bt+1)
   198E DE 00              5155 	sbc	a,#0x00
   1990 F2rA9s19           5156 	jp	P,00117$
   1993 21rD9s31           5157 	ld	hl,#_bt
   1996 7E                 5158 	ld	a,(hl)
   1997 C6 02              5159 	add	a,#0x02
   1999 23                 5160 	inc	hl
   199A 2B                 5161 	dec	hl
   199B C5                 5162 	push	bc
   199C 4F                 5163 	ld	c, a
   199D 23                 5164 	inc	hl
   199E 7E                 5165 	ld	a, (hl)
   199F 47                 5166 	ld	b, a
   19A0 79                 5167 	ld	a, c
   19A1 2B                 5168 	dec	hl
   19A2 77                 5169 	ld	(hl), a
   19A3 78                 5170 	ld	a, b
   19A4 C1                 5171 	pop	bc
   19A5 CE 00              5172 	adc	a,#0x00
   19A7 23                 5173 	inc	hl
   19A8 77                 5174 	ld	(hl),a
   19A9                    5175 00117$:
                           5176 ;demo.c:801: cmd.source_x = bx;
   19A9 ED 4BrD5s31        5177 	ld	bc,(_bx)
   19AD 21r64s31           5178 	ld	hl,#_cmd
   19B0 71                 5179 	ld	(hl),c
   19B1 23                 5180 	inc	hl
   19B2 70                 5181 	ld	(hl),b
                           5182 ;demo.c:802: cmd.source_y = bt;
   19B3 01r66s31           5183 	ld	bc,#_cmd + 2
   19B6 ED 5BrD9s31        5184 	ld	de,(_bt)
   19BA 69                 5185 	ld	l,c
   19BB 60                 5186 	ld	h,b
   19BC 73                 5187 	ld	(hl),e
   19BD 23                 5188 	inc	hl
   19BE 72                 5189 	ld	(hl),d
                           5190 ;demo.c:803: cmd.dest_x = 0;
   19BF 21r68s31           5191 	ld	hl, #_cmd + 4
   19C2 36 00              5192 	ld	(hl),#0x00
   19C4 23                 5193 	inc	hl
   19C5 36 00              5194 	ld	(hl),#0x00
                           5195 ;demo.c:804: cmd.dest_y = 256;
   19C7 21r6As31           5196 	ld	hl, #_cmd + 6
   19CA 36 00              5197 	ld	(hl),#0x00
   19CC 23                 5198 	inc	hl
   19CD 36 01              5199 	ld	(hl),#0x01
                           5200 ;demo.c:805: cmd.size_x = 42;
   19CF 21r6Cs31           5201 	ld	hl, #_cmd + 8
   19D2 36 2A              5202 	ld	(hl),#0x2A
   19D4 23                 5203 	inc	hl
   19D5 36 00              5204 	ld	(hl),#0x00
                           5205 ;demo.c:806: cmd.size_y = 42;
   19D7 21r6Es31           5206 	ld	hl, #_cmd + 10
   19DA 36 2A              5207 	ld	(hl),#0x2A
   19DC 23                 5208 	inc	hl
   19DD 36 00              5209 	ld	(hl),#0x00
                           5210 ;demo.c:807: cmd.data = 0;
                           5211 ;demo.c:808: cmd.argument = 0x00;
   19DF 3E 00              5212 	ld	a,#0x00
   19E1 32r70s31           5213 	ld	(#_cmd + 12),a
   19E4 32r71s31           5214 	ld	(#_cmd + 13),a
                           5215 ;demo.c:809: cmd.command = 0xD0; // HMMM
   19E7 3E D0              5216 	ld	a,#0xD0
   19E9 32r72s31           5217 	ld	(#_cmd + 14),a
                           5218 ;demo.c:810: vdp_copier(&cmd);
   19EC 21r64s31           5219 	ld	hl,#_cmd
   19EF E5                 5220 	push	hl
   19F0 CDr00s00           5221 	call	_vdp_copier
   19F3 F1                 5222 	pop	af
                           5223 ;demo.c:812: pbx = bx;
   19F4 2ArD5s31           5224 	ld	hl,(_bx)
   19F7 FD 21rE3s31        5225 	ld	iy,#_pbx
   19FB FD 75 00           5226 	ld	0 (iy),l
   19FE FD 21rE3s31        5227 	ld	iy,#_pbx
   1A02 FD 74 01           5228 	ld	1 (iy),h
                           5229 ;demo.c:813: pbt = bt;
   1A05 2ArD9s31           5230 	ld	hl,(_bt)
   1A08 FD 21rE5s31        5231 	ld	iy,#_pbt
   1A0C FD 75 00           5232 	ld	0 (iy),l
   1A0F FD 21rE5s31        5233 	ld	iy,#_pbt
   1A13 FD 74 01           5234 	ld	1 (iy),h
                           5235 ;demo.c:815: waitVB();
   1A16 76                 5236 		halt 
                           5237 ;demo.c:817: drawbox(bxx,byy,bx,bt);
   1A17 21rD9s31           5238 	ld	hl,#_bt + 0
   1A1A 4E                 5239 	ld	c,(hl)
   1A1B 21rD5s31           5240 	ld	hl,#_bx + 0
   1A1E 46                 5241 	ld	b,(hl)
   1A1F 79                 5242 	ld	a,c
   1A20 F5                 5243 	push	af
   1A21 33                 5244 	inc	sp
   1A22 C5                 5245 	push	bc
   1A23 33                 5246 	inc	sp
   1A24 2ArDDs31           5247 	ld	hl,(_byy)
   1A27 E5                 5248 	push	hl
   1A28 2ArDBs31           5249 	ld	hl,(_bxx)
   1A2B E5                 5250 	push	hl
   1A2C CDr22s17           5251 	call	_drawbox
   1A2F F1                 5252 	pop	af
   1A30 F1                 5253 	pop	af
   1A31 F1                 5254 	pop	af
                           5255 ;demo.c:819: waitVB();
   1A32 76                 5256 		halt 
                           5257 ;demo.c:821: bonc = 1;
   1A33 21rE1s31           5258 	ld	hl,#_bonc + 0
   1A36 36 01              5259 	ld	(hl), #0x01
   1A38 21rE2s31           5260 	ld	hl,#_bonc + 1
   1A3B 36 00              5261 	ld	(hl), #0x00
                           5262 ;demo.c:822: if (bt > by) {
   1A3D 21rD7s31           5263 	ld	hl,#_by
   1A40 7E                 5264 	ld	a,(hl)
   1A41 FD 21rD9s31        5265 	ld	iy,#_bt
   1A45 FD 96 00           5266 	sub	a,0 (iy)
   1A48 23                 5267 	inc	hl
   1A49 7E                 5268 	ld	a,(hl)
   1A4A FD 21rD9s31        5269 	ld	iy,#_bt
   1A4E FD 9E 01           5270 	sbc	a,1 (iy)
   1A51 F0                 5271 	ret	P
                           5272 ;demo.c:824: bt = 0;
   1A52 21rD9s31           5273 	ld	hl,#_bt + 0
   1A55 36 00              5274 	ld	(hl), #0x00
   1A57 21rDAs31           5275 	ld	hl,#_bt + 1
   1A5A 36 00              5276 	ld	(hl), #0x00
                           5277 ;demo.c:825: if (by > 0) {
   1A5C 3E 00              5278 	ld	a,#0x00
   1A5E FD 21rD7s31        5279 	ld	iy,#_by
   1A62 FD 96 00           5280 	sub	a,0 (iy)
   1A65 3E 00              5281 	ld	a,#0x00
   1A67 FD 21rD7s31        5282 	ld	iy,#_by
   1A6B FD 9E 01           5283 	sbc	a,1 (iy)
   1A6E F2rD4s1A           5284 	jp	P,00127$
                           5285 ;demo.c:826: bonc = 0;
   1A71 21rE1s31           5286 	ld	hl,#_bonc + 0
   1A74 36 00              5287 	ld	(hl), #0x00
   1A76 21rE2s31           5288 	ld	hl,#_bonc + 1
   1A79 36 00              5289 	ld	(hl), #0x00
                           5290 ;demo.c:827: by-=16;
   1A7B 21rD7s31           5291 	ld	hl,#_by
   1A7E 7E                 5292 	ld	a,(hl)
   1A7F C6 F0              5293 	add	a,#0xF0
   1A81 77                 5294 	ld	(hl),a
   1A82 23                 5295 	inc	hl
   1A83 7E                 5296 	ld	a,(hl)
   1A84 CE FF              5297 	adc	a,#0xFF
   1A86 77                 5298 	ld	(hl),a
                           5299 ;demo.c:828: bxx++;
   1A87 FD 21rDBs31        5300 	ld	iy,#_bxx
   1A8B FD 34 00           5301 	inc	0 (iy)
   1A8E 20 07              5302 	jr	NZ,00158$
   1A90 FD 21rDBs31        5303 	ld	iy,#_bxx
   1A94 FD 34 01           5304 	inc	1 (iy)
   1A97                    5305 00158$:
                           5306 ;demo.c:829: if (bxx >= 4) { bxx = 0; byy++; }
   1A97 3ArDBs31           5307 	ld	a,(#_bxx+0)
   1A9A D6 04              5308 	sub	a,#0x04
   1A9C 3ArDCs31           5309 	ld	a,(#_bxx+1)
   1A9F DE 00              5310 	sbc	a,#0x00
   1AA1 FArBEs1A           5311 	jp	M,00119$
   1AA4 21rDBs31           5312 	ld	hl,#_bxx + 0
   1AA7 36 00              5313 	ld	(hl), #0x00
   1AA9 21rDCs31           5314 	ld	hl,#_bxx + 1
   1AAC 36 00              5315 	ld	(hl), #0x00
   1AAE FD 21rDDs31        5316 	ld	iy,#_byy
   1AB2 FD 34 00           5317 	inc	0 (iy)
   1AB5 20 07              5318 	jr	NZ,00159$
   1AB7 FD 21rDDs31        5319 	ld	iy,#_byy
   1ABB FD 34 01           5320 	inc	1 (iy)
   1ABE                    5321 00159$:
   1ABE                    5322 00119$:
                           5323 ;demo.c:830: if (byy >= 2) { byy = 0; }
   1ABE 3ArDDs31           5324 	ld	a,(#_byy+0)
   1AC1 D6 02              5325 	sub	a,#0x02
   1AC3 3ArDEs31           5326 	ld	a,(#_byy+1)
   1AC6 DE 00              5327 	sbc	a,#0x00
   1AC8 F8                 5328 	ret	M
   1AC9 21rDDs31           5329 	ld	hl,#_byy + 0
   1ACC 36 00              5330 	ld	(hl), #0x00
   1ACE 21rDEs31           5331 	ld	hl,#_byy + 1
   1AD1 36 00              5332 	ld	(hl), #0x00
   1AD3 C9                 5333 	ret
   1AD4                    5334 00127$:
                           5335 ;demo.c:832: bx-=21;
   1AD4 21rD5s31           5336 	ld	hl,#_bx
   1AD7 7E                 5337 	ld	a,(hl)
   1AD8 C6 EB              5338 	add	a,#0xEB
   1ADA 77                 5339 	ld	(hl),a
   1ADB 23                 5340 	inc	hl
   1ADC 7E                 5341 	ld	a,(hl)
   1ADD CE FF              5342 	adc	a,#0xFF
   1ADF 77                 5343 	ld	(hl),a
                           5344 ;demo.c:833: bo+=11;
   1AE0 21rDFs31           5345 	ld	hl,#_bo
   1AE3 7E                 5346 	ld	a,(hl)
   1AE4 C6 0B              5347 	add	a,#0x0B
   1AE6 23                 5348 	inc	hl
   1AE7 2B                 5349 	dec	hl
   1AE8 C5                 5350 	push	bc
   1AE9 4F                 5351 	ld	c, a
   1AEA 23                 5352 	inc	hl
   1AEB 7E                 5353 	ld	a, (hl)
   1AEC 47                 5354 	ld	b, a
   1AED 79                 5355 	ld	a, c
   1AEE 2B                 5356 	dec	hl
   1AEF 77                 5357 	ld	(hl), a
   1AF0 78                 5358 	ld	a, b
   1AF1 C1                 5359 	pop	bc
   1AF2 CE 00              5360 	adc	a,#0x00
   1AF4 23                 5361 	inc	hl
   1AF5 77                 5362 	ld	(hl),a
                           5363 ;demo.c:834: if (bo > 192) bo = 0;
   1AF6 3E C0              5364 	ld	a,#0xC0
   1AF8 FD 21rDFs31        5365 	ld	iy,#_bo
   1AFC FD 96 00           5366 	sub	a,0 (iy)
   1AFF 3E 00              5367 	ld	a,#0x00
   1B01 FD 21rDFs31        5368 	ld	iy,#_bo
   1B05 FD 9E 01           5369 	sbc	a,1 (iy)
   1B08 F2r15s1B           5370 	jp	P,00123$
   1B0B 21rDFs31           5371 	ld	hl,#_bo + 0
   1B0E 36 00              5372 	ld	(hl), #0x00
   1B10 21rE0s31           5373 	ld	hl,#_bo + 1
   1B13 36 00              5374 	ld	(hl), #0x00
   1B15                    5375 00123$:
                           5376 ;demo.c:835: by=84+bo;
   1B15 21rD7s31           5377 	ld	hl,#_by
   1B18 3ArDFs31           5378 	ld	a,(#_bo+0)
   1B1B C6 54              5379 	add	a,#0x54
   1B1D 77                 5380 	ld	(hl),a
   1B1E 3ArE0s31           5381 	ld	a,(#_bo+1)
   1B21 CE 00              5382 	adc	a,#0x00
   1B23 23                 5383 	inc	hl
   1B24 77                 5384 	ld	(hl),a
                           5385 ;demo.c:836: if (bx <= 0) {
   1B25 3E 00              5386 	ld	a,#0x00
   1B27 FD 21rD5s31        5387 	ld	iy,#_bx
   1B2B FD 96 00           5388 	sub	a,0 (iy)
   1B2E 3E 00              5389 	ld	a,#0x00
   1B30 FD 21rD5s31        5390 	ld	iy,#_bx
   1B34 FD 9E 01           5391 	sbc	a,1 (iy)
   1B37 F8                 5392 	ret	M
                           5393 ;demo.c:837: bx = 256;
   1B38 21rD5s31           5394 	ld	hl,#_bx + 0
   1B3B 36 00              5395 	ld	(hl), #0x00
   1B3D 21rD6s31           5396 	ld	hl,#_bx + 1
   1B40 36 01              5397 	ld	(hl), #0x01
                           5398 ;demo.c:838: bo = 0;
   1B42 21rDFs31           5399 	ld	hl,#_bo + 0
   1B45 36 00              5400 	ld	(hl), #0x00
   1B47 21rE0s31           5401 	ld	hl,#_bo + 1
   1B4A 36 00              5402 	ld	(hl), #0x00
                           5403 ;demo.c:839: by = 84;
   1B4C 21rD7s31           5404 	ld	hl,#_by + 0
   1B4F 36 54              5405 	ld	(hl), #0x54
   1B51 21rD8s31           5406 	ld	hl,#_by + 1
   1B54 36 00              5407 	ld	(hl), #0x00
   1B56 C9                 5408 	ret
   1B57                    5409 _boxes_end::
   1B57                    5410 __str_9:
   1B57 4C 45 54 20 55 53  5411 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1B82 00                 5412 	.db 0x00
                           5413 ;demo.c:850: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5414 ;	---------------------------------
                           5415 ; Function drawtritile
                           5416 ; ---------------------------------
   1B83                    5417 _drawtritile_start::
   1B83                    5418 _drawtritile:
   1B83 DD E5              5419 	push	ix
   1B85 DD 21 00 00        5420 	ld	ix,#0
   1B89 DD 39              5421 	add	ix,sp
                           5422 ;demo.c:851: cmd.source_x = tx;
   1B8B DD 4E 04           5423 	ld	c,4 (ix)
   1B8E 06 00              5424 	ld	b,#0x00
   1B90 21r64s31           5425 	ld	hl,#_cmd
   1B93 71                 5426 	ld	(hl),c
   1B94 23                 5427 	inc	hl
   1B95 70                 5428 	ld	(hl),b
                           5429 ;demo.c:852: cmd.source_y = ty-1;
   1B96 01r66s31           5430 	ld	bc,#_cmd + 2
   1B99 DD 5E 05           5431 	ld	e,5 (ix)
   1B9C DD 56 06           5432 	ld	d,6 (ix)
   1B9F 1B                 5433 	dec	de
   1BA0 69                 5434 	ld	l,c
   1BA1 60                 5435 	ld	h,b
   1BA2 73                 5436 	ld	(hl),e
   1BA3 23                 5437 	inc	hl
   1BA4 72                 5438 	ld	(hl),d
                           5439 ;demo.c:853: cmd.dest_x = x;
   1BA5 01r68s31           5440 	ld	bc,#_cmd + 4
   1BA8 DD 5E 07           5441 	ld	e,7 (ix)
   1BAB 16 00              5442 	ld	d,#0x00
   1BAD 69                 5443 	ld	l,c
   1BAE 60                 5444 	ld	h,b
   1BAF 73                 5445 	ld	(hl),e
   1BB0 23                 5446 	inc	hl
   1BB1 72                 5447 	ld	(hl),d
                           5448 ;demo.c:854: cmd.dest_y = y;
   1BB2 01r6As31           5449 	ld	bc,#_cmd + 6
   1BB5 DD 5E 08           5450 	ld	e,8 (ix)
   1BB8 16 00              5451 	ld	d,#0x00
   1BBA 69                 5452 	ld	l,c
   1BBB 60                 5453 	ld	h,b
   1BBC 73                 5454 	ld	(hl),e
   1BBD 23                 5455 	inc	hl
   1BBE 72                 5456 	ld	(hl),d
                           5457 ;demo.c:855: cmd.size_x = 16;
   1BBF 21r6Cs31           5458 	ld	hl, #_cmd + 8
   1BC2 36 10              5459 	ld	(hl),#0x10
   1BC4 23                 5460 	inc	hl
   1BC5 36 00              5461 	ld	(hl),#0x00
                           5462 ;demo.c:856: cmd.size_y = 16;
   1BC7 21r6Es31           5463 	ld	hl, #_cmd + 10
   1BCA 36 10              5464 	ld	(hl),#0x10
   1BCC 23                 5465 	inc	hl
   1BCD 36 00              5466 	ld	(hl),#0x00
                           5467 ;demo.c:857: cmd.data = 0;
                           5468 ;demo.c:858: cmd.argument = 0x00;
   1BCF 3E 00              5469 	ld	a,#0x00
   1BD1 32r70s31           5470 	ld	(#_cmd + 12),a
   1BD4 32r71s31           5471 	ld	(#_cmd + 13),a
                           5472 ;demo.c:859: cmd.command = 0xd0; // HMMM
   1BD7 3E D0              5473 	ld	a,#0xD0
   1BD9 32r72s31           5474 	ld	(#_cmd + 14),a
                           5475 ;demo.c:860: vdp_copier(&cmd);
   1BDC 21r64s31           5476 	ld	hl,#_cmd
   1BDF E5                 5477 	push	hl
   1BE0 CDr00s00           5478 	call	_vdp_copier
   1BE3 F1                 5479 	pop	af
   1BE4 DD E1              5480 	pop	ix
   1BE6 C9                 5481 	ret
   1BE7                    5482 _drawtritile_end::
                           5483 ;demo.c:863: void drawtilescreen(char* tripic) {
                           5484 ;	---------------------------------
                           5485 ; Function drawtilescreen
                           5486 ; ---------------------------------
   1BE7                    5487 _drawtilescreen_start::
   1BE7                    5488 _drawtilescreen:
   1BE7 DD E5              5489 	push	ix
   1BE9 DD 21 00 00        5490 	ld	ix,#0
   1BED DD 39              5491 	add	ix,sp
   1BEF 21 F8 FF           5492 	ld	hl,#-8
   1BF2 39                 5493 	add	hl,sp
   1BF3 F9                 5494 	ld	sp,hl
                           5495 ;demo.c:864: int x = 0;
   1BF4 DD 36 FE 00        5496 	ld	-2 (ix),#0x00
   1BF8 DD 36 FF 00        5497 	ld	-1 (ix),#0x00
                           5498 ;demo.c:867: while(i < 256) {
   1BFC DD 36 FC 00        5499 	ld	-4 (ix),#0x00
   1C00 DD 36 FD 00        5500 	ld	-3 (ix),#0x00
   1C04 DD 36 FA 00        5501 	ld	-6 (ix),#0x00
   1C08 DD 36 FB 00        5502 	ld	-5 (ix),#0x00
   1C0C                    5503 00103$:
   1C0C DD 7E FA           5504 	ld	a,-6 (ix)
   1C0F D6 00              5505 	sub	a,#0x00
   1C11 DD 7E FB           5506 	ld	a,-5 (ix)
   1C14 DE 01              5507 	sbc	a,#0x01
   1C16 F2r9Ds1C           5508 	jp	P,00106$
                           5509 ;demo.c:868: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1C19 DD 7E FC           5510 	ld	a,-4 (ix)
   1C1C DD 77 F8           5511 	ld	-8 (ix),a
   1C1F DD 7E FE           5512 	ld	a,-2 (ix)
   1C22 DD 77 F9           5513 	ld	-7 (ix),a
   1C25 DD 7E 04           5514 	ld	a,4 (ix)
   1C28 DD 86 FA           5515 	add	a,-6 (ix)
   1C2B 4F                 5516 	ld	c,a
   1C2C DD 7E 05           5517 	ld	a,5 (ix)
   1C2F DD 8E FB           5518 	adc	a,-5 (ix)
   1C32 47                 5519 	ld	b,a
   1C33 0A                 5520 	ld	a,(bc)
   1C34 4F                 5521 	ld	c,a
   1C35 87                 5522 	add	a,a
   1C36 C6r20              5523 	add	a,#<_tri_lookup_y
   1C38 6F                 5524 	ld	l,a
   1C39 3Es01              5525 	ld	a,#>_tri_lookup_y
   1C3B CE 00              5526 	adc	a,#0x00
   1C3D 67                 5527 	ld	h,a
   1C3E 46                 5528 	ld	b,(hl)
   1C3F 23                 5529 	inc	hl
   1C40 56                 5530 	ld	d,(hl)
   1C41 3Er00              5531 	ld	a,#<_tri_lookup_x
   1C43 81                 5532 	add	a,c
   1C44 6F                 5533 	ld	l,a
   1C45 3Es01              5534 	ld	a,#>_tri_lookup_x
   1C47 CE 00              5535 	adc	a,#0x00
   1C49 67                 5536 	ld	h,a
   1C4A 4E                 5537 	ld	c,(hl)
   1C4B DD 66 F8           5538 	ld	h,-8 (ix)
   1C4E DD 6E F9           5539 	ld	l,-7 (ix)
   1C51 E5                 5540 	push	hl
   1C52 58                 5541 	ld	e,b
   1C53 D5                 5542 	push	de
   1C54 79                 5543 	ld	a,c
   1C55 F5                 5544 	push	af
   1C56 33                 5545 	inc	sp
   1C57 CDr83s1B           5546 	call	_drawtritile
   1C5A F1                 5547 	pop	af
   1C5B F1                 5548 	pop	af
   1C5C 33                 5549 	inc	sp
                           5550 ;demo.c:869: x+=16;
   1C5D DD 7E FE           5551 	ld	a,-2 (ix)
   1C60 C6 10              5552 	add	a,#0x10
   1C62 DD 77 FE           5553 	ld	-2 (ix),a
   1C65 DD 7E FF           5554 	ld	a,-1 (ix)
   1C68 CE 00              5555 	adc	a,#0x00
   1C6A DD 77 FF           5556 	ld	-1 (ix),a
                           5557 ;demo.c:870: if (x >= 256) {x = 0; y+=16;}
   1C6D DD 7E FE           5558 	ld	a,-2 (ix)
   1C70 D6 00              5559 	sub	a,#0x00
   1C72 DD 7E FF           5560 	ld	a,-1 (ix)
   1C75 DE 01              5561 	sbc	a,#0x01
   1C77 FAr92s1C           5562 	jp	M,00102$
   1C7A DD 36 FE 00        5563 	ld	-2 (ix),#0x00
   1C7E DD 36 FF 00        5564 	ld	-1 (ix),#0x00
   1C82 DD 7E FC           5565 	ld	a,-4 (ix)
   1C85 C6 10              5566 	add	a,#0x10
   1C87 DD 77 FC           5567 	ld	-4 (ix),a
   1C8A DD 7E FD           5568 	ld	a,-3 (ix)
   1C8D CE 00              5569 	adc	a,#0x00
   1C8F DD 77 FD           5570 	ld	-3 (ix),a
   1C92                    5571 00102$:
                           5572 ;demo.c:871: i++;
   1C92 DD 34 FA           5573 	inc	-6 (ix)
   1C95 20 03              5574 	jr	NZ,00112$
   1C97 DD 34 FB           5575 	inc	-5 (ix)
   1C9A                    5576 00112$:
   1C9A C3r0Cs1C           5577 	jp	00103$
   1C9D                    5578 00106$:
   1C9D DD F9              5579 	ld	sp,ix
   1C9F DD E1              5580 	pop	ix
   1CA1 C9                 5581 	ret
   1CA2                    5582 _drawtilescreen_end::
                           5583 ;demo.c:886: void tritiles() {
                           5584 ;	---------------------------------
                           5585 ; Function tritiles
                           5586 ; ---------------------------------
   1CA2                    5587 _tritiles_start::
   1CA2                    5588 _tritiles:
   1CA2 DD E5              5589 	push	ix
   1CA4 DD 21 00 00        5590 	ld	ix,#0
   1CA8 DD 39              5591 	add	ix,sp
   1CAA 21 FB FF           5592 	ld	hl,#-5
   1CAD 39                 5593 	add	hl,sp
   1CAE F9                 5594 	ld	sp,hl
                           5595 ;demo.c:893: if (tri_inited == 0) {
   1CAF AF                 5596 	xor	a,a
   1CB0 21rE7s31           5597 	ld	hl,#_tri_inited + 0
   1CB3 B6                 5598 	or	a,(hl)
   1CB4 C2r53s1D           5599 	jp	NZ,00102$
                           5600 ;demo.c:894: tri_inited = 1;
   1CB7 FD 21rE7s31        5601 	ld	iy,#_tri_inited
   1CBB FD 36 00 01        5602 	ld	0 (iy),#0x01
                           5603 ;demo.c:896: cmd.size_x = 256;
   1CBF 21r6Cs31           5604 	ld	hl, #_cmd + 8
   1CC2 36 00              5605 	ld	(hl),#0x00
   1CC4 23                 5606 	inc	hl
   1CC5 36 01              5607 	ld	(hl),#0x01
                           5608 ;demo.c:897: cmd.size_y = 1;
   1CC7 21r6Es31           5609 	ld	hl, #_cmd + 10
   1CCA 36 01              5610 	ld	(hl),#0x01
   1CCC 23                 5611 	inc	hl
   1CCD 36 00              5612 	ld	(hl),#0x00
                           5613 ;demo.c:898: cmd.data = 0;
                           5614 ;demo.c:899: cmd.argument = 0x00; // from 70xY to left
   1CCF 3E 00              5615 	ld	a,#0x00
   1CD1 32r70s31           5616 	ld	(#_cmd + 12),a
   1CD4 32r71s31           5617 	ld	(#_cmd + 13),a
                           5618 ;demo.c:900: cmd.command = 0xd0; // vram to vram, y only
   1CD7 01r72s31           5619 	ld	bc,#_cmd + 14
   1CDA 3E D0              5620 	ld	a,#0xD0
   1CDC 02                 5621 	ld	(bc),a
                           5622 ;demo.c:901: cmd.source_x = 0;
   1CDD 21r64s31           5623 	ld	hl,#_cmd
   1CE0 36 00              5624 	ld	(hl),#0x00
   1CE2 23                 5625 	inc	hl
   1CE3 36 00              5626 	ld	(hl),#0x00
                           5627 ;demo.c:902: cmd.source_y = 255;
   1CE5 21r66s31           5628 	ld	hl, #_cmd + 2
   1CE8 36 FF              5629 	ld	(hl),#0xFF
   1CEA 23                 5630 	inc	hl
   1CEB 36 00              5631 	ld	(hl),#0x00
                           5632 ;demo.c:903: cmd.dest_y = 0;
   1CED 01r6As31           5633 	ld	bc,#_cmd + 6
   1CF0 69                 5634 	ld	l,c
   1CF1 60                 5635 	ld	h,b
   1CF2 36 00              5636 	ld	(hl),#0x00
   1CF4 23                 5637 	inc	hl
   1CF5 36 00              5638 	ld	(hl),#0x00
                           5639 ;demo.c:905: for (x = 0; x < 212; x++) {
   1CF7 DD 36 FE D4        5640 	ld	-2 (ix),#0xD4
   1CFB DD 36 FF 00        5641 	ld	-1 (ix),#0x00
   1CFF                    5642 00121$:
                           5643 ;demo.c:906: waitVB();
   1CFF 76                 5644 		halt 
                           5645 ;demo.c:907: cmd.dest_x = 0;
   1D00 11r68s31           5646 	ld	de,#_cmd + 4
   1D03 EB                 5647 	ex	de,hl
   1D04 36 00              5648 	ld	(hl),#0x00
   1D06 23                 5649 	inc	hl
   1D07 36 00              5650 	ld	(hl),#0x00
                           5651 ;demo.c:908: cmd.dest_y = x;
   1D09 11r6As31           5652 	ld	de,#_cmd + 6
   1D0C DD 4E FE           5653 	ld	c,-2 (ix)
   1D0F DD 46 FF           5654 	ld	b,-1 (ix)
   1D12 0B                 5655 	dec	bc
   1D13 EB                 5656 	ex	de,hl
   1D14 71                 5657 	ld	(hl),c
   1D15 23                 5658 	inc	hl
   1D16 70                 5659 	ld	(hl),b
                           5660 ;demo.c:909: vdp_copier(&cmd);
   1D17 C5                 5661 	push	bc
   1D18 21r64s31           5662 	ld	hl,#_cmd
   1D1B E5                 5663 	push	hl
   1D1C CDr00s00           5664 	call	_vdp_copier
   1D1F F1                 5665 	pop	af
   1D20 C1                 5666 	pop	bc
   1D21 DD 71 FE           5667 	ld	-2 (ix),c
   1D24 DD 70 FF           5668 	ld	-1 (ix),b
                           5669 ;demo.c:905: for (x = 0; x < 212; x++) {
   1D27 DD 7E FE           5670 	ld	a,-2 (ix)
   1D2A DD B6 FF           5671 	or	a,-1 (ix)
   1D2D 20 D0              5672 	jr	NZ,00121$
                           5673 ;demo.c:911: vdp_register(9,2); // 192 lines
   1D2F 21 09 02           5674 	ld	hl,#0x0209
   1D32 E5                 5675 	push	hl
   1D33 CDr00s00           5676 	call	_vdp_register
   1D36 F1                 5677 	pop	af
                           5678 ;demo.c:913: vdp_load_palette(boxes_palette);
   1D37 21r40s31           5679 	ld	hl,#_boxes_palette
   1D3A E5                 5680 	push	hl
   1D3B CDr00s00           5681 	call	_vdp_load_palette
   1D3E F1                 5682 	pop	af
                           5683 ;demo.c:914: msx2_palette(15,0,0,0);
   1D3F 21 00 00           5684 	ld	hl,#0x0000
   1D42 E5                 5685 	push	hl
   1D43 2E 0F              5686 	ld	l, #0x0F
   1D45 E5                 5687 	push	hl
   1D46 CDr00s00           5688 	call	_msx2_palette
   1D49 F1                 5689 	pop	af
   1D4A F1                 5690 	pop	af
                           5691 ;demo.c:916: drawtilescreen(tri_center);
   1D4B 21r2Cs02           5692 	ld	hl,#_tri_center
   1D4E E5                 5693 	push	hl
   1D4F CDrE7s1B           5694 	call	_drawtilescreen
   1D52 F1                 5695 	pop	af
   1D53                    5696 00102$:
                           5697 ;demo.c:921: triframes++;
   1D53 FD 21rF2s31        5698 	ld	iy,#_triframes
   1D57 FD 34 00           5699 	inc	0 (iy)
   1D5A 20 07              5700 	jr	NZ,00142$
   1D5C FD 21rF2s31        5701 	ld	iy,#_triframes
   1D60 FD 34 01           5702 	inc	1 (iy)
   1D63                    5703 00142$:
                           5704 ;demo.c:922: if (triframes == 200) {
   1D63 3ArF2s31           5705 	ld	a,(#_triframes+0)
   1D66 D6 C8              5706 	sub	a,#0xC8
   1D68 20 06              5707 	jr	NZ,00143$
   1D6A 3ArF3s31           5708 	ld	a,(#_triframes+1)
   1D6D B7                 5709 	or	a,a
   1D6E 28 02              5710 	jr	Z,00144$
   1D70                    5711 00143$:
   1D70 18 08              5712 	jr	00104$
   1D72                    5713 00144$:
                           5714 ;demo.c:923: drawtilescreen(tri_up);
   1D72 21rECs02           5715 	ld	hl,#_tri_up
   1D75 E5                 5716 	push	hl
   1D76 CDrE7s1B           5717 	call	_drawtilescreen
   1D79 F1                 5718 	pop	af
   1D7A                    5719 00104$:
                           5720 ;demo.c:926: if (triframes == 400) {
   1D7A 3ArF2s31           5721 	ld	a,(#_triframes+0)
   1D7D D6 90              5722 	sub	a,#0x90
   1D7F 20 07              5723 	jr	NZ,00145$
   1D81 3ArF3s31           5724 	ld	a,(#_triframes+1)
   1D84 D6 01              5725 	sub	a,#0x01
   1D86 28 02              5726 	jr	Z,00146$
   1D88                    5727 00145$:
   1D88 18 08              5728 	jr	00106$
   1D8A                    5729 00146$:
                           5730 ;demo.c:927: drawtilescreen(tri_dia);
   1D8A 21rACs03           5731 	ld	hl,#_tri_dia
   1D8D E5                 5732 	push	hl
   1D8E CDrE7s1B           5733 	call	_drawtilescreen
   1D91 F1                 5734 	pop	af
   1D92                    5735 00106$:
                           5736 ;demo.c:929: if (triframes == 600) {
   1D92 3ArF2s31           5737 	ld	a,(#_triframes+0)
   1D95 D6 58              5738 	sub	a,#0x58
   1D97 20 07              5739 	jr	NZ,00147$
   1D99 3ArF3s31           5740 	ld	a,(#_triframes+1)
   1D9C D6 02              5741 	sub	a,#0x02
   1D9E 28 02              5742 	jr	Z,00148$
   1DA0                    5743 00147$:
   1DA0 18 08              5744 	jr	00108$
   1DA2                    5745 00148$:
                           5746 ;demo.c:930: drawtilescreen(tri_side1);
   1DA2 21r6Cs04           5747 	ld	hl,#_tri_side1
   1DA5 E5                 5748 	push	hl
   1DA6 CDrE7s1B           5749 	call	_drawtilescreen
   1DA9 F1                 5750 	pop	af
   1DAA                    5751 00108$:
                           5752 ;demo.c:932: if (triframes == 700) {
   1DAA 3ArF2s31           5753 	ld	a,(#_triframes+0)
   1DAD D6 BC              5754 	sub	a,#0xBC
   1DAF 20 07              5755 	jr	NZ,00149$
   1DB1 3ArF3s31           5756 	ld	a,(#_triframes+1)
   1DB4 D6 02              5757 	sub	a,#0x02
   1DB6 28 02              5758 	jr	Z,00150$
   1DB8                    5759 00149$:
   1DB8 18 08              5760 	jr	00110$
   1DBA                    5761 00150$:
                           5762 ;demo.c:933: drawtilescreen(tri_side2);
   1DBA 21r2Cs05           5763 	ld	hl,#_tri_side2
   1DBD E5                 5764 	push	hl
   1DBE CDrE7s1B           5765 	call	_drawtilescreen
   1DC1 F1                 5766 	pop	af
   1DC2                    5767 00110$:
                           5768 ;demo.c:935: if (triframes == 800) {
   1DC2 3ArF2s31           5769 	ld	a,(#_triframes+0)
   1DC5 D6 20              5770 	sub	a,#0x20
   1DC7 20 07              5771 	jr	NZ,00151$
   1DC9 3ArF3s31           5772 	ld	a,(#_triframes+1)
   1DCC D6 03              5773 	sub	a,#0x03
   1DCE 28 02              5774 	jr	Z,00152$
   1DD0                    5775 00151$:
   1DD0 18 08              5776 	jr	00112$
   1DD2                    5777 00152$:
                           5778 ;demo.c:936: drawtilescreen(tri_side1);
   1DD2 21r6Cs04           5779 	ld	hl,#_tri_side1
   1DD5 E5                 5780 	push	hl
   1DD6 CDrE7s1B           5781 	call	_drawtilescreen
   1DD9 F1                 5782 	pop	af
   1DDA                    5783 00112$:
                           5784 ;demo.c:938: if (triframes == 900) {
   1DDA 3ArF2s31           5785 	ld	a,(#_triframes+0)
   1DDD D6 84              5786 	sub	a,#0x84
   1DDF 20 07              5787 	jr	NZ,00153$
   1DE1 3ArF3s31           5788 	ld	a,(#_triframes+1)
   1DE4 D6 03              5789 	sub	a,#0x03
   1DE6 28 02              5790 	jr	Z,00154$
   1DE8                    5791 00153$:
   1DE8 18 08              5792 	jr	00114$
   1DEA                    5793 00154$:
                           5794 ;demo.c:939: drawtilescreen(tri_side2);
   1DEA 21r2Cs05           5795 	ld	hl,#_tri_side2
   1DED E5                 5796 	push	hl
   1DEE CDrE7s1B           5797 	call	_drawtilescreen
   1DF1 F1                 5798 	pop	af
   1DF2                    5799 00114$:
                           5800 ;demo.c:941: if (triframes == 1000) {
   1DF2 3ArF2s31           5801 	ld	a,(#_triframes+0)
   1DF5 D6 E8              5802 	sub	a,#0xE8
   1DF7 20 07              5803 	jr	NZ,00155$
   1DF9 3ArF3s31           5804 	ld	a,(#_triframes+1)
   1DFC D6 03              5805 	sub	a,#0x03
   1DFE 28 02              5806 	jr	Z,00156$
   1E00                    5807 00155$:
   1E00 18 12              5808 	jr	00116$
   1E02                    5809 00156$:
                           5810 ;demo.c:942: triframes = 0;
   1E02 21rF2s31           5811 	ld	hl,#_triframes + 0
   1E05 36 00              5812 	ld	(hl), #0x00
   1E07 21rF3s31           5813 	ld	hl,#_triframes + 1
   1E0A 36 00              5814 	ld	(hl), #0x00
                           5815 ;demo.c:943: drawtilescreen(tri_center);
   1E0C 21r2Cs02           5816 	ld	hl,#_tri_center
   1E0F E5                 5817 	push	hl
   1E10 CDrE7s1B           5818 	call	_drawtilescreen
   1E13 F1                 5819 	pop	af
   1E14                    5820 00116$:
                           5821 ;demo.c:946: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1E14 21rEAs31           5822 	ld	hl,#_tripal + 2
   1E17 4E                 5823 	ld	c,(hl)
   1E18 11rE9s31           5824 	ld	de,#_tripal + 1
   1E1B 1A                 5825 	ld	a,(de)
   1E1C 47                 5826 	ld	b,a
   1E1D 21rE8s31           5827 	ld	hl,#_tripal
   1E20 5E                 5828 	ld	e,(hl)
   1E21 79                 5829 	ld	a,c
   1E22 F5                 5830 	push	af
   1E23 33                 5831 	inc	sp
   1E24 C5                 5832 	push	bc
   1E25 33                 5833 	inc	sp
   1E26 53                 5834 	ld	d,e
   1E27 1E 03              5835 	ld	e,#0x03
   1E29 D5                 5836 	push	de
   1E2A CDr00s00           5837 	call	_msx2_palette
   1E2D F1                 5838 	pop	af
   1E2E F1                 5839 	pop	af
                           5840 ;demo.c:947: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1E2F 21rEDs31           5841 	ld	hl,#_tripal + 5
   1E32 4E                 5842 	ld	c,(hl)
   1E33 11rECs31           5843 	ld	de,#_tripal + 4
   1E36 1A                 5844 	ld	a,(de)
   1E37 47                 5845 	ld	b,a
   1E38 21rEBs31           5846 	ld	hl,#_tripal + 3
   1E3B 5E                 5847 	ld	e,(hl)
   1E3C 79                 5848 	ld	a,c
   1E3D F5                 5849 	push	af
   1E3E 33                 5850 	inc	sp
   1E3F C5                 5851 	push	bc
   1E40 33                 5852 	inc	sp
   1E41 53                 5853 	ld	d,e
   1E42 1E 0D              5854 	ld	e,#0x0D
   1E44 D5                 5855 	push	de
   1E45 CDr00s00           5856 	call	_msx2_palette
   1E48 F1                 5857 	pop	af
   1E49 F1                 5858 	pop	af
                           5859 ;demo.c:948: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1E4A 21rF0s31           5860 	ld	hl,#_tripal + 8
   1E4D 4E                 5861 	ld	c,(hl)
   1E4E 11rEFs31           5862 	ld	de,#_tripal + 7
   1E51 1A                 5863 	ld	a,(de)
   1E52 47                 5864 	ld	b,a
   1E53 21rEEs31           5865 	ld	hl,#_tripal + 6
   1E56 5E                 5866 	ld	e,(hl)
   1E57 79                 5867 	ld	a,c
   1E58 F5                 5868 	push	af
   1E59 33                 5869 	inc	sp
   1E5A C5                 5870 	push	bc
   1E5B 33                 5871 	inc	sp
   1E5C 53                 5872 	ld	d,e
   1E5D 1E 05              5873 	ld	e,#0x05
   1E5F D5                 5874 	push	de
   1E60 CDr00s00           5875 	call	_msx2_palette
   1E63 F1                 5876 	pop	af
   1E64 F1                 5877 	pop	af
                           5878 ;demo.c:951: tripaltick++;
   1E65 FD 21rF1s31        5879 	ld	iy,#_tripaltick
   1E69 FD 34 00           5880 	inc	0 (iy)
                           5881 ;demo.c:952: if (tripaltick > 6) {
   1E6C 3E 06              5882 	ld	a,#0x06
   1E6E FD 21rF1s31        5883 	ld	iy,#_tripaltick
   1E72 FD 96 00           5884 	sub	a,0 (iy)
   1E75 D2rE3s1E           5885 	jp	NC,00126$
                           5886 ;demo.c:954: r = tripal[0];
   1E78 21rE8s31           5887 	ld	hl,#_tripal
   1E7B 4E                 5888 	ld	c,(hl)
   1E7C DD 71 FD           5889 	ld	-3 (ix),c
                           5890 ;demo.c:955: g = tripal[1];
   1E7F 11rE9s31           5891 	ld	de,#_tripal + 1
   1E82 1A                 5892 	ld	a,(de)
   1E83 DD 77 FC           5893 	ld	-4 (ix),a
                           5894 ;demo.c:956: b = tripal[2];
   1E86 21rEAs31           5895 	ld	hl,#_tripal + 2
   1E89 5E                 5896 	ld	e,(hl)
   1E8A DD 73 FB           5897 	ld	-5 (ix),e
                           5898 ;demo.c:958: for (x = 0; x < 6; x++) {
   1E8D DD 36 FE 00        5899 	ld	-2 (ix),#0x00
   1E91 DD 36 FF 00        5900 	ld	-1 (ix),#0x00
   1E95                    5901 00122$:
   1E95 DD 7E FE           5902 	ld	a,-2 (ix)
   1E98 D6 06              5903 	sub	a,#0x06
   1E9A DD 7E FF           5904 	ld	a,-1 (ix)
   1E9D DE 00              5905 	sbc	a,#0x00
   1E9F F2rC9s1E           5906 	jp	P,00125$
                           5907 ;demo.c:959: tripal[x] = tripal[x+3];
   1EA2 3ErE8              5908 	ld	a,#<_tripal
   1EA4 DD 86 FE           5909 	add	a,-2 (ix)
   1EA7 4F                 5910 	ld	c,a
   1EA8 3Es31              5911 	ld	a,#>_tripal
   1EAA DD 8E FF           5912 	adc	a,-1 (ix)
   1EAD 47                 5913 	ld	b,a
   1EAE DD 5E FE           5914 	ld	e,-2 (ix)
   1EB1 1C                 5915 	inc	e
   1EB2 1C                 5916 	inc	e
   1EB3 1C                 5917 	inc	e
   1EB4 3ErE8              5918 	ld	a,#<_tripal
   1EB6 83                 5919 	add	a,e
   1EB7 5F                 5920 	ld	e,a
   1EB8 3Es31              5921 	ld	a,#>_tripal
   1EBA CE 00              5922 	adc	a,#0x00
   1EBC 57                 5923 	ld	d,a
   1EBD 1A                 5924 	ld	a,(de)
   1EBE 02                 5925 	ld	(bc),a
                           5926 ;demo.c:958: for (x = 0; x < 6; x++) {
   1EBF DD 34 FE           5927 	inc	-2 (ix)
   1EC2 20 03              5928 	jr	NZ,00157$
   1EC4 DD 34 FF           5929 	inc	-1 (ix)
   1EC7                    5930 00157$:
   1EC7 18 CC              5931 	jr	00122$
   1EC9                    5932 00125$:
                           5933 ;demo.c:962: tripal[6] = r;
   1EC9 01rEEs31           5934 	ld	bc,#_tripal + 6
   1ECC DD 7E FD           5935 	ld	a,-3 (ix)
   1ECF 02                 5936 	ld	(bc),a
                           5937 ;demo.c:963: tripal[7] = g;
   1ED0 01rEFs31           5938 	ld	bc,#_tripal + 7
   1ED3 DD 7E FC           5939 	ld	a,-4 (ix)
   1ED6 02                 5940 	ld	(bc),a
                           5941 ;demo.c:964: tripal[8] = b;
   1ED7 01rF0s31           5942 	ld	bc,#_tripal + 8
   1EDA DD 7E FB           5943 	ld	a,-5 (ix)
   1EDD 02                 5944 	ld	(bc),a
                           5945 ;demo.c:965: tripaltick = 0;
   1EDE 21rF1s31           5946 	ld	hl,#_tripaltick + 0
   1EE1 36 00              5947 	ld	(hl), #0x00
   1EE3                    5948 00126$:
   1EE3 DD F9              5949 	ld	sp,ix
   1EE5 DD E1              5950 	pop	ix
   1EE7 C9                 5951 	ret
   1EE8                    5952 _tritiles_end::
                           5953 ;demo.c:974: void do_quit() {
                           5954 ;	---------------------------------
                           5955 ; Function do_quit
                           5956 ; ---------------------------------
   1EE8                    5957 _do_quit_start::
   1EE8                    5958 _do_quit:
                           5959 ;demo.c:975: waitVB();
   1EE8 76                 5960 		halt 
                           5961 ;demo.c:976: uninstall_isr();
   1EE9 CDr00s00           5962 	call	_uninstall_isr
                           5963 ;demo.c:977: PLY_Stop();
   1EEC CDr00s00           5964 	call	_PLY_Stop
                           5965 ;demo.c:978: PLY_SendRegisters();
   1EEF CDr00s00           5966 	call	_PLY_SendRegisters
                           5967 ;demo.c:980: screen(0);
   1EF2 3E 00              5968 	ld	a,#0x00
   1EF4 F5                 5969 	push	af
   1EF5 33                 5970 	inc	sp
   1EF6 CDr00s00           5971 	call	_screen
   1EF9 33                 5972 	inc	sp
                           5973 ;demo.c:982: puts("demo quit\r\n\r\n");
   1EFA 21r0Bs1F           5974 	ld	hl,#__str_10
   1EFD E5                 5975 	push	hl
   1EFE CDr00s00           5976 	call	_puts
   1F01 F1                 5977 	pop	af
                           5978 ;demo.c:984: exit(0);	
   1F02 3E 00              5979 	ld	a,#0x00
   1F04 F5                 5980 	push	af
   1F05 33                 5981 	inc	sp
   1F06 CDr00s00           5982 	call	_exit
   1F09 33                 5983 	inc	sp
   1F0A C9                 5984 	ret
   1F0B                    5985 _do_quit_end::
   1F0B                    5986 __str_10:
   1F0B 64 65 6D 6F 20 71  5987 	.ascii "demo quit"
        75 69 74
   1F14 0D                 5988 	.db 0x0D
   1F15 0A                 5989 	.db 0x0A
   1F16 0D                 5990 	.db 0x0D
   1F17 0A                 5991 	.db 0x0A
   1F18 00                 5992 	.db 0x00
                           5993 ;demo.c:987: void main() {
                           5994 ;	---------------------------------
                           5995 ; Function main
                           5996 ; ---------------------------------
   1F19                    5997 _main_start::
   1F19                    5998 _main:
   1F19 DD E5              5999 	push	ix
   1F1B DD 21 00 00        6000 	ld	ix,#0
   1F1F DD 39              6001 	add	ix,sp
   1F21 21 F7 FF           6002 	ld	hl,#-9
   1F24 39                 6003 	add	hl,sp
   1F25 F9                 6004 	ld	sp,hl
                           6005 ;demo.c:988: unsigned char quit=0;
   1F26 DD 36 FF 00        6006 	ld	-1 (ix),#0x00
                           6007 ;demo.c:989: int modes = 128; // interlace bit on
   1F2A DD 36 FD 80        6008 	ld	-3 (ix),#0x80
   1F2E DD 36 FE 00        6009 	ld	-2 (ix),#0x00
                           6010 ;demo.c:995: spindown();
   1F32 CDr00s00           6011 	call	_spindown
                           6012 ;demo.c:997: puts("demo init\r\n\r\n");
   1F35 21r1Bs22           6013 	ld	hl,#__str_11
   1F38 E5                 6014 	push	hl
   1F39 CDr00s00           6015 	call	_puts
   1F3C F1                 6016 	pop	af
                           6017 ;demo.c:999: for (y = 0; y < 2; y++) {
   1F3D DD 36 F9 00        6018 	ld	-7 (ix),#0x00
   1F41 DD 36 FA 00        6019 	ld	-6 (ix),#0x00
   1F45                    6020 00127$:
   1F45 DD 7E F9           6021 	ld	a,-7 (ix)
   1F48 D6 02              6022 	sub	a,#0x02
   1F4A DD 7E FA           6023 	ld	a,-6 (ix)
   1F4D DE 00              6024 	sbc	a,#0x00
   1F4F F2rD6s1F           6025 	jp	P,00130$
                           6026 ;demo.c:1000: for (x = 0; x < 16; x++) {
   1F52 DD 56 F9           6027 	ld	d,-7 (ix)
   1F55 DD 4E FA           6028 	ld	c,-6 (ix)
   1F58 CB 22              6029 	sla	d
   1F5A CB 11              6030 	rl	c
   1F5C CB 22              6031 	sla	d
   1F5E CB 11              6032 	rl	c
   1F60 CB 22              6033 	sla	d
   1F62 CB 11              6034 	rl	c
   1F64 CB 22              6035 	sla	d
   1F66 CB 11              6036 	rl	c
   1F68 7A                 6037 	ld	a,d
   1F69 C6 81              6038 	add	a,#0x81
   1F6B DD 77 F7           6039 	ld	-9 (ix),a
   1F6E 79                 6040 	ld	a,c
   1F6F CE 03              6041 	adc	a,#0x03
   1F71 DD 77 F8           6042 	ld	-8 (ix),a
   1F74 DD 36 FB 00        6043 	ld	-5 (ix),#0x00
   1F78 DD 36 FC 00        6044 	ld	-4 (ix),#0x00
   1F7C                    6045 00123$:
   1F7C DD 7E FB           6046 	ld	a,-5 (ix)
   1F7F D6 10              6047 	sub	a,#0x10
   1F81 DD 7E FC           6048 	ld	a,-4 (ix)
   1F84 DE 00              6049 	sbc	a,#0x00
   1F86 F2rCBs1F           6050 	jp	P,00129$
                           6051 ;demo.c:1001: tri_lookup_x[(y*16)+x] = x * 16;
   1F89 DD 7E F9           6052 	ld	a,-7 (ix)
   1F8C 07                 6053 	rlca
   1F8D 07                 6054 	rlca
   1F8E 07                 6055 	rlca
   1F8F 07                 6056 	rlca
   1F90 E6 F0              6057 	and	a,#0xF0
   1F92 47                 6058 	ld	b,a
   1F93 DD 5E FB           6059 	ld	e,-5 (ix)
   1F96 78                 6060 	ld	a,b
   1F97 83                 6061 	add	a,e
   1F98 47                 6062 	ld	b, a
   1F99 C6r00              6063 	add	a,#<_tri_lookup_x
   1F9B 4F                 6064 	ld	c,a
   1F9C 3Es01              6065 	ld	a,#>_tri_lookup_x
   1F9E CE 00              6066 	adc	a,#0x00
   1FA0 57                 6067 	ld	d,a
   1FA1 7B                 6068 	ld	a,e
   1FA2 07                 6069 	rlca
   1FA3 07                 6070 	rlca
   1FA4 07                 6071 	rlca
   1FA5 07                 6072 	rlca
   1FA6 E6 F0              6073 	and	a,#0xF0
   1FA8 5F                 6074 	ld	e,a
   1FA9 69                 6075 	ld	l,c
   1FAA 62                 6076 	ld	h,d
   1FAB 73                 6077 	ld	(hl),e
                           6078 ;demo.c:1002: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   1FAC CB 20              6079 	sla	b
   1FAE 3Er20              6080 	ld	a,#<_tri_lookup_y
   1FB0 80                 6081 	add	a,b
   1FB1 6F                 6082 	ld	l,a
   1FB2 3Es01              6083 	ld	a,#>_tri_lookup_y
   1FB4 CE 00              6084 	adc	a,#0x00
   1FB6 67                 6085 	ld	h,a
   1FB7 DD 7E F7           6086 	ld	a,-9 (ix)
   1FBA 77                 6087 	ld	(hl),a
   1FBB 23                 6088 	inc	hl
   1FBC DD 7E F8           6089 	ld	a,-8 (ix)
   1FBF 77                 6090 	ld	(hl),a
                           6091 ;demo.c:1000: for (x = 0; x < 16; x++) {
   1FC0 DD 34 FB           6092 	inc	-5 (ix)
   1FC3 20 03              6093 	jr	NZ,00154$
   1FC5 DD 34 FC           6094 	inc	-4 (ix)
   1FC8                    6095 00154$:
   1FC8 C3r7Cs1F           6096 	jp	00123$
   1FCB                    6097 00129$:
                           6098 ;demo.c:999: for (y = 0; y < 2; y++) {
   1FCB DD 34 F9           6099 	inc	-7 (ix)
   1FCE 20 03              6100 	jr	NZ,00155$
   1FD0 DD 34 FA           6101 	inc	-6 (ix)
   1FD3                    6102 00155$:
   1FD3 C3r45s1F           6103 	jp	00127$
   1FD6                    6104 00130$:
                           6105 ;demo.c:1017: puts("music init...");
   1FD6 21r29s22           6106 	ld	hl,#__str_12
   1FD9 E5                 6107 	push	hl
   1FDA CDr00s00           6108 	call	_puts
   1FDD F1                 6109 	pop	af
                           6110 ;demo.c:1019: PLY_SongPtr = (char *)0x0103;
   1FDE 21r00s00           6111 	ld	hl,#_PLY_SongPtr + 0
   1FE1 36 03              6112 	ld	(hl), #0x03
   1FE3 21r01s00           6113 	ld	hl,#_PLY_SongPtr + 1
   1FE6 36 01              6114 	ld	(hl), #0x01
                           6115 ;demo.c:1020: PLY_Init();
   1FE8 CDr00s00           6116 	call	_PLY_Init
                           6117 ;demo.c:1021: puts("done.\r\n");
   1FEB 21r37s22           6118 	ld	hl,#__str_13
   1FEE E5                 6119 	push	hl
   1FEF CDr00s00           6120 	call	_puts
   1FF2 F1                 6121 	pop	af
                           6122 ;demo.c:1023: puts("detecting vdp type...");
   1FF3 21r3Fs22           6123 	ld	hl,#__str_14
   1FF6 E5                 6124 	push	hl
   1FF7 CDr00s00           6125 	call	_puts
   1FFA F1                 6126 	pop	af
                           6127 ;demo.c:1024: if(isvdp2())
   1FFB CDr00s00           6128 	call	_isvdp2
   1FFE AF                 6129 	xor	a,a
   1FFF B5                 6130 	or	a,l
   2000 28 12              6131 	jr	Z,00102$
                           6132 ;demo.c:1026: puts(" vdp2 found!\r\n\r\n");
   2002 21r55s22           6133 	ld	hl,#__str_15
   2005 E5                 6134 	push	hl
   2006 CDr00s00           6135 	call	_puts
   2009 F1                 6136 	pop	af
                           6137 ;demo.c:1027: modes+=2; // pal
   200A DD 36 FD 82        6138 	ld	-3 (ix),#0x82
   200E DD 36 FE 00        6139 	ld	-2 (ix),#0x00
   2012 18 0B              6140 	jr	00103$
   2014                    6141 00102$:
                           6142 ;demo.c:1030: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2014 21r66s22           6143 	ld	hl,#__str_16
   2017 E5                 6144 	push	hl
   2018 CDr00s00           6145 	call	_puts
   201B F1                 6146 	pop	af
                           6147 ;demo.c:1031: do_quit();
   201C CDrE8s1E           6148 	call	_do_quit
   201F                    6149 00103$:
                           6150 ;demo.c:1034: pal_load("TWISTER PL5",32,1);
   201F 21 01 00           6151 	ld	hl,#0x0001
   2022 E5                 6152 	push	hl
   2023 3E 20              6153 	ld	a,#0x20
   2025 F5                 6154 	push	af
   2026 33                 6155 	inc	sp
   2027 21rADs22           6156 	ld	hl,#__str_17
   202A E5                 6157 	push	hl
   202B CDrA3s07           6158 	call	_pal_load
   202E F1                 6159 	pop	af
   202F F1                 6160 	pop	af
   2030 33                 6161 	inc	sp
                           6162 ;demo.c:1035: memcpy(twister_palette, cur_palette, 32);
   2031 21 20 00           6163 	ld	hl,#0x0020
   2034 E5                 6164 	push	hl
   2035 21rC0s30           6165 	ld	hl,#_cur_palette
   2038 E5                 6166 	push	hl
   2039 21r00s31           6167 	ld	hl,#_twister_palette
   203C E5                 6168 	push	hl
   203D CDr00s00           6169 	call	_memcpy
   2040 F1                 6170 	pop	af
   2041 F1                 6171 	pop	af
   2042 F1                 6172 	pop	af
                           6173 ;demo.c:1036: pal_load("TF1     PL5",32,1);
   2043 21 01 00           6174 	ld	hl,#0x0001
   2046 E5                 6175 	push	hl
   2047 3E 20              6176 	ld	a,#0x20
   2049 F5                 6177 	push	af
   204A 33                 6178 	inc	sp
   204B 21rB9s22           6179 	ld	hl,#__str_18
   204E E5                 6180 	push	hl
   204F CDrA3s07           6181 	call	_pal_load
   2052 F1                 6182 	pop	af
   2053 F1                 6183 	pop	af
   2054 33                 6184 	inc	sp
                           6185 ;demo.c:1037: memcpy(tf_palette, cur_palette, 32);
   2055 21 20 00           6186 	ld	hl,#0x0020
   2058 E5                 6187 	push	hl
   2059 21rC0s30           6188 	ld	hl,#_cur_palette
   205C E5                 6189 	push	hl
   205D 21r20s31           6190 	ld	hl,#_tf_palette
   2060 E5                 6191 	push	hl
   2061 CDr00s00           6192 	call	_memcpy
   2064 F1                 6193 	pop	af
   2065 F1                 6194 	pop	af
   2066 F1                 6195 	pop	af
                           6196 ;demo.c:1038: pal_load("BOXES   PL5",32,1);
   2067 21 01 00           6197 	ld	hl,#0x0001
   206A E5                 6198 	push	hl
   206B 3E 20              6199 	ld	a,#0x20
   206D F5                 6200 	push	af
   206E 33                 6201 	inc	sp
   206F 21rC5s22           6202 	ld	hl,#__str_19
   2072 E5                 6203 	push	hl
   2073 CDrA3s07           6204 	call	_pal_load
   2076 F1                 6205 	pop	af
   2077 F1                 6206 	pop	af
   2078 33                 6207 	inc	sp
                           6208 ;demo.c:1039: memcpy(boxes_palette, cur_palette, 32);
   2079 21 20 00           6209 	ld	hl,#0x0020
   207C E5                 6210 	push	hl
   207D 21rC0s30           6211 	ld	hl,#_cur_palette
   2080 E5                 6212 	push	hl
   2081 21r40s31           6213 	ld	hl,#_boxes_palette
   2084 E5                 6214 	push	hl
   2085 CDr00s00           6215 	call	_memcpy
   2088 F1                 6216 	pop	af
   2089 F1                 6217 	pop	af
   208A F1                 6218 	pop	af
                           6219 ;demo.c:1042: pal_load("BULBS   PL5",32,1);
   208B 21 01 00           6220 	ld	hl,#0x0001
   208E E5                 6221 	push	hl
   208F 3E 20              6222 	ld	a,#0x20
   2091 F5                 6223 	push	af
   2092 33                 6224 	inc	sp
   2093 21rD1s22           6225 	ld	hl,#__str_20
   2096 E5                 6226 	push	hl
   2097 CDrA3s07           6227 	call	_pal_load
   209A F1                 6228 	pop	af
   209B F1                 6229 	pop	af
   209C 33                 6230 	inc	sp
                           6231 ;demo.c:1044: pck_load("BULBS   PCK",2431,0x8000,VRAM_0,1);
   209D 21 01 00           6232 	ld	hl,#0x0001
   20A0 E5                 6233 	push	hl
   20A1 2E 01              6234 	ld	l, #0x01
   20A3 E5                 6235 	push	hl
   20A4 21 00 80           6236 	ld	hl,#0x8000
   20A7 E5                 6237 	push	hl
   20A8 21 7F 09           6238 	ld	hl,#0x097F
   20AB E5                 6239 	push	hl
   20AC 21rDDs22           6240 	ld	hl,#__str_21
   20AF E5                 6241 	push	hl
   20B0 CDr99s09           6242 	call	_pck_load
   20B3 FD 21 0A 00        6243 	ld	iy,#0x000A
   20B7 FD 39              6244 	add	iy,sp
   20B9 FD F9              6245 	ld	sp,iy
                           6246 ;demo.c:1046: pck_load("TWISTER PCK",4032,0x0000,VRAM_1,1);
   20BB 21 01 00           6247 	ld	hl,#0x0001
   20BE E5                 6248 	push	hl
   20BF 2E 00              6249 	ld	l, #0x00
   20C1 E5                 6250 	push	hl
   20C2 2E 00              6251 	ld	l, #0x00
   20C4 E5                 6252 	push	hl
   20C5 21 C0 0F           6253 	ld	hl,#0x0FC0
   20C8 E5                 6254 	push	hl
   20C9 21rE9s22           6255 	ld	hl,#__str_22
   20CC E5                 6256 	push	hl
   20CD CDr99s09           6257 	call	_pck_load
   20D0 FD 21 0A 00        6258 	ld	iy,#0x000A
   20D4 FD 39              6259 	add	iy,sp
   20D6 FD F9              6260 	ld	sp,iy
                           6261 ;demo.c:1047: pck_load("BOXES   PCK",4500,0x8000,VRAM_1,1);
   20D8 21 01 00           6262 	ld	hl,#0x0001
   20DB E5                 6263 	push	hl
   20DC 2E 00              6264 	ld	l, #0x00
   20DE E5                 6265 	push	hl
   20DF 26 80              6266 	ld	h, #0x80
   20E1 E5                 6267 	push	hl
   20E2 21 94 11           6268 	ld	hl,#0x1194
   20E5 E5                 6269 	push	hl
   20E6 21rF5s22           6270 	ld	hl,#__str_23
   20E9 E5                 6271 	push	hl
   20EA CDr99s09           6272 	call	_pck_load
   20ED FD 21 0A 00        6273 	ld	iy,#0x000A
   20F1 FD 39              6274 	add	iy,sp
   20F3 FD F9              6275 	ld	sp,iy
                           6276 ;demo.c:1051: vdp_set_screen5();
   20F5 CDr00s00           6277 	call	_vdp_set_screen5
                           6278 ;demo.c:1053: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   20F8 DD 7E FD           6279 	ld	a,-3 (ix)
   20FB F5                 6280 	push	af
   20FC 33                 6281 	inc	sp
   20FD 3E 09              6282 	ld	a,#0x09
   20FF F5                 6283 	push	af
   2100 33                 6284 	inc	sp
   2101 CDr00s00           6285 	call	_vdp_register
   2104 F1                 6286 	pop	af
                           6287 ;demo.c:1056: puts("demo start\r\n");
   2105 21r01s23           6288 	ld	hl,#__str_24
   2108 E5                 6289 	push	hl
   2109 CDr00s00           6290 	call	_puts
   210C F1                 6291 	pop	af
                           6292 ;demo.c:1058: scratch_clear();
   210D CDr90s07           6293 	call	_scratch_clear
                           6294 ;demo.c:1059: vdp_load_palette(scratch);
   2110 21r40s30           6295 	ld	hl,#_scratch
   2113 E5                 6296 	push	hl
   2114 CDr00s00           6297 	call	_vdp_load_palette
   2117 F1                 6298 	pop	af
                           6299 ;demo.c:1061: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2118 21 00 00           6300 	ld	hl,#0x0000
   211B E5                 6301 	push	hl
   211C 2E 01              6302 	ld	l, #0x01
   211E E5                 6303 	push	hl
   211F 2E 00              6304 	ld	l, #0x00
   2121 E5                 6305 	push	hl
   2122 21 6A 08           6306 	ld	hl,#0x086A
   2125 E5                 6307 	push	hl
   2126 21r0Es23           6308 	ld	hl,#__str_25
   2129 E5                 6309 	push	hl
   212A CDr99s09           6310 	call	_pck_load
   212D FD 21 0A 00        6311 	ld	iy,#0x000A
   2131 FD 39              6312 	add	iy,sp
   2133 FD F9              6313 	ld	sp,iy
                           6314 ;demo.c:1062: pal_load("DSSLOGO PL5",32,1);
   2135 21 01 00           6315 	ld	hl,#0x0001
   2138 E5                 6316 	push	hl
   2139 3E 20              6317 	ld	a,#0x20
   213B F5                 6318 	push	af
   213C 33                 6319 	inc	sp
   213D 21r1As23           6320 	ld	hl,#__str_26
   2140 E5                 6321 	push	hl
   2141 CDrA3s07           6322 	call	_pal_load
   2144 F1                 6323 	pop	af
   2145 F1                 6324 	pop	af
   2146 33                 6325 	inc	sp
                           6326 ;demo.c:1063: vdp_load_palette(cur_palette);
   2147 21rC0s30           6327 	ld	hl,#_cur_palette
   214A E5                 6328 	push	hl
   214B CDr00s00           6329 	call	_vdp_load_palette
   214E F1                 6330 	pop	af
                           6331 ;demo.c:1065: vdp_register(VDP_VOFFSET,0);
   214F 21 17 00           6332 	ld	hl,#0x0017
   2152 E5                 6333 	push	hl
   2153 CDr00s00           6334 	call	_vdp_register
   2156 F1                 6335 	pop	af
                           6336 ;demo.c:1077: install_isr(my_isr);
   2157 21rECs05           6337 	ld	hl,#_my_isr
   215A E5                 6338 	push	hl
   215B CDr00s00           6339 	call	_install_isr
   215E F1                 6340 	pop	af
                           6341 ;demo.c:1079: while (!quit) {
   215F                    6342 00120$:
   215F AF                 6343 	xor	a,a
   2160 DD B6 FF           6344 	or	a,-1 (ix)
   2163 C2r13s22           6345 	jp	NZ,00122$
                           6346 ;demo.c:1082: if (vbicount < 64) { 
   2166 3Ar60s31           6347 	ld	a,(#_vbicount+0)
   2169 D6 40              6348 	sub	a,#0x40
   216B FD 21r60s31        6349 	ld	iy,#_vbicount
   216F FD 7E 01           6350 	ld	a,1 (iy)
   2172 DE 00              6351 	sbc	a,#0x00
   2174 F2r7Bs21           6352 	jp	P,00105$
                           6353 ;demo.c:1083: waitVB();
   2177 76                 6354 		halt 
                           6355 ;demo.c:1084: fadein(); 
   2178 CDr27s0A           6356 	call	_fadein
   217B                    6357 00105$:
                           6358 ;demo.c:1086: if (vbicount >= 192 && vbicount < 800) {
   217B 3Ar60s31           6359 	ld	a,(#_vbicount+0)
   217E D6 C0              6360 	sub	a,#0xC0
   2180 3Ar61s31           6361 	ld	a,(#_vbicount+1)
   2183 DE 00              6362 	sbc	a,#0x00
   2185 FAr9Ds21           6363 	jp	M,00107$
   2188 3Ar60s31           6364 	ld	a,(#_vbicount+0)
   218B D6 20              6365 	sub	a,#0x20
   218D FD 21r60s31        6366 	ld	iy,#_vbicount
   2191 FD 7E 01           6367 	ld	a,1 (iy)
   2194 DE 03              6368 	sbc	a,#0x03
   2196 F2r9Ds21           6369 	jp	P,00107$
                           6370 ;demo.c:1087: waitVB();
   2199 76                 6371 		halt 
                           6372 ;demo.c:1088: bulbs();
   219A CDr99s13           6373 	call	_bulbs
   219D                    6374 00107$:
                           6375 ;demo.c:1091: if (vbicount >= 800 && vbicount < 1500) {
   219D 3Ar60s31           6376 	ld	a,(#_vbicount+0)
   21A0 D6 20              6377 	sub	a,#0x20
   21A2 3Ar61s31           6378 	ld	a,(#_vbicount+1)
   21A5 DE 03              6379 	sbc	a,#0x03
   21A7 FArBFs21           6380 	jp	M,00110$
   21AA 3Ar60s31           6381 	ld	a,(#_vbicount+0)
   21AD D6 DC              6382 	sub	a,#0xDC
   21AF FD 21r60s31        6383 	ld	iy,#_vbicount
   21B3 FD 7E 01           6384 	ld	a,1 (iy)
   21B6 DE 05              6385 	sbc	a,#0x05
   21B8 F2rBFs21           6386 	jp	P,00110$
                           6387 ;demo.c:1092: waitVB();
   21BB 76                 6388 		halt 
                           6389 ;demo.c:1093: twister();
   21BC CDr23s12           6390 	call	_twister
   21BF                    6391 00110$:
                           6392 ;demo.c:1096: if (vbicount >= 1500 && vbicount < 2200) {
   21BF 3Ar60s31           6393 	ld	a,(#_vbicount+0)
   21C2 D6 DC              6394 	sub	a,#0xDC
   21C4 3Ar61s31           6395 	ld	a,(#_vbicount+1)
   21C7 DE 05              6396 	sbc	a,#0x05
   21C9 FArDCs21           6397 	jp	M,00113$
   21CC 3Ar60s31           6398 	ld	a,(#_vbicount+0)
   21CF D6 98              6399 	sub	a,#0x98
   21D1 3Ar61s31           6400 	ld	a,(#_vbicount+1)
   21D4 DE 08              6401 	sbc	a,#0x08
   21D6 F2rDCs21           6402 	jp	P,00113$
                           6403 ;demo.c:1097: boxes();
   21D9 CDrDCs17           6404 	call	_boxes
   21DC                    6405 00113$:
                           6406 ;demo.c:1101: if (vbicount >= 2200 && vbicount < 5800) {
   21DC 3Ar60s31           6407 	ld	a,(#_vbicount+0)
   21DF D6 98              6408 	sub	a,#0x98
   21E1 3Ar61s31           6409 	ld	a,(#_vbicount+1)
   21E4 DE 08              6410 	sbc	a,#0x08
   21E6 FArFEs21           6411 	jp	M,00116$
   21E9 3Ar60s31           6412 	ld	a,(#_vbicount+0)
   21EC D6 A8              6413 	sub	a,#0xA8
   21EE FD 21r60s31        6414 	ld	iy,#_vbicount
   21F2 FD 7E 01           6415 	ld	a,1 (iy)
   21F5 DE 16              6416 	sbc	a,#0x16
   21F7 F2rFEs21           6417 	jp	P,00116$
                           6418 ;demo.c:1102: waitVB();
   21FA 76                 6419 		halt 
                           6420 ;demo.c:1103: tritiles();
   21FB CDrA2s1C           6421 	call	_tritiles
   21FE                    6422 00116$:
                           6423 ;demo.c:1107: if(space())
   21FE 21 08 01           6424 	ld	hl,#0x0108
   2201 E5                 6425 	push	hl
   2202 CDr00s00           6426 	call	_ispressed
   2205 F1                 6427 	pop	af
   2206 4D                 6428 	ld	c,l
   2207 AF                 6429 	xor	a,a
   2208 B5                 6430 	or	a,l
   2209 CAr5Fs21           6431 	jp	Z,00120$
                           6432 ;demo.c:1108: quit=1;
   220C DD 36 FF 01        6433 	ld	-1 (ix),#0x01
   2210 C3r5Fs21           6434 	jp	00120$
   2213                    6435 00122$:
                           6436 ;demo.c:1111: do_quit();
   2213 CDrE8s1E           6437 	call	_do_quit
   2216 DD F9              6438 	ld	sp,ix
   2218 DD E1              6439 	pop	ix
   221A C9                 6440 	ret
   221B                    6441 _main_end::
   221B                    6442 __str_11:
   221B 64 65 6D 6F 20 69  6443 	.ascii "demo init"
        6E 69 74
   2224 0D                 6444 	.db 0x0D
   2225 0A                 6445 	.db 0x0A
   2226 0D                 6446 	.db 0x0D
   2227 0A                 6447 	.db 0x0A
   2228 00                 6448 	.db 0x00
   2229                    6449 __str_12:
   2229 6D 75 73 69 63 20  6450 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   2236 00                 6451 	.db 0x00
   2237                    6452 __str_13:
   2237 64 6F 6E 65 2E     6453 	.ascii "done."
   223C 0D                 6454 	.db 0x0D
   223D 0A                 6455 	.db 0x0A
   223E 00                 6456 	.db 0x00
   223F                    6457 __str_14:
   223F 64 65 74 65 63 74  6458 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   2254 00                 6459 	.db 0x00
   2255                    6460 __str_15:
   2255 20 76 64 70 32 20  6461 	.ascii " vdp2 found!"
        66 6F 75 6E 64 21
   2261 0D                 6462 	.db 0x0D
   2262 0A                 6463 	.db 0x0A
   2263 0D                 6464 	.db 0x0D
   2264 0A                 6465 	.db 0x0A
   2265 00                 6466 	.db 0x00
   2266                    6467 __str_16:
   2266 20 76 64 70 31 20  6468 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2272 0D                 6469 	.db 0x0D
   2273 0A                 6470 	.db 0x0A
   2274 53 6F 72 72 79 2C  6471 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   22A2 20 56 52 41 4D 2E  6472 	.ascii " VRAM."
   22A8 0D                 6473 	.db 0x0D
   22A9 0A                 6474 	.db 0x0A
   22AA 0D                 6475 	.db 0x0D
   22AB 0A                 6476 	.db 0x0A
   22AC 00                 6477 	.db 0x00
   22AD                    6478 __str_17:
   22AD 54 57 49 53 54 45  6479 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   22B8 00                 6480 	.db 0x00
   22B9                    6481 __str_18:
   22B9 54 46 31 20 20 20  6482 	.ascii "TF1     PL5"
        20 20 50 4C 35
   22C4 00                 6483 	.db 0x00
   22C5                    6484 __str_19:
   22C5 42 4F 58 45 53 20  6485 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   22D0 00                 6486 	.db 0x00
   22D1                    6487 __str_20:
   22D1 42 55 4C 42 53 20  6488 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   22DC 00                 6489 	.db 0x00
   22DD                    6490 __str_21:
   22DD 42 55 4C 42 53 20  6491 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   22E8 00                 6492 	.db 0x00
   22E9                    6493 __str_22:
   22E9 54 57 49 53 54 45  6494 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   22F4 00                 6495 	.db 0x00
   22F5                    6496 __str_23:
   22F5 42 4F 58 45 53 20  6497 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   2300 00                 6498 	.db 0x00
   2301                    6499 __str_24:
   2301 64 65 6D 6F 20 73  6500 	.ascii "demo start"
        74 61 72 74
   230B 0D                 6501 	.db 0x0D
   230C 0A                 6502 	.db 0x0A
   230D 00                 6503 	.db 0x00
   230E                    6504 __str_25:
   230E 44 53 53 4C 4F 47  6505 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2319 00                 6506 	.db 0x00
   231A                    6507 __str_26:
   231A 44 53 53 4C 4F 47  6508 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   2325 00                 6509 	.db 0x00
                           6510 	.area _CODE
                           6511 	.area _CABS
