                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sat Mar 24 15:23:03 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _ge5_load
                             48 	.globl _color_isr
                             49 	.globl _my_isr
                             50 	.globl _isNthBitSet
                             51 	.globl _timeindex
                             52 	.globl _sceneindex
                             53 	.globl _credittimer
                             54 	.globl _initcredits
                             55 	.globl _bigtextp
                             56 	.globl _greetindex
                             57 	.globl _pointframe
                             58 	.globl _initpoints
                             59 	.globl _onceclear
                             60 	.globl _powa
                             61 	.globl _powatick
                             62 	.globl _triframes
                             63 	.globl _tripaltick2
                             64 	.globl _tripaltick
                             65 	.globl _tripal
                             66 	.globl _tiletick
                             67 	.globl _tiley
                             68 	.globl _tilex
                             69 	.globl _tilei
                             70 	.globl _tri_inited
                             71 	.globl _ffa
                             72 	.globl _buf
                             73 	.globl _initwave
                             74 	.globl _prevbox_of
                             75 	.globl _boxes_of
                             76 	.globl _pbt
                             77 	.globl _pbx
                             78 	.globl _bonc
                             79 	.globl _bo
                             80 	.globl _bt
                             81 	.globl _by
                             82 	.globl _bx
                             83 	.globl _boxi
                             84 	.globl _boxes_y
                             85 	.globl _boxes_x
                             86 	.globl _prevy
                             87 	.globl _prevx
                             88 	.globl _buffer
                             89 	.globl _boxes_init
                             90 	.globl _anim_init
                             91 	.globl _sy
                             92 	.globl _enderdir
                             93 	.globl _ender
                             94 	.globl _ff2
                             95 	.globl _ff1
                             96 	.globl _bulbflipper
                             97 	.globl _twinited
                             98 	.globl _ff
                             99 	.globl _slowend
                            100 	.globl _ltrpointer
                            101 	.globl _ly
                            102 	.globl _lx
                            103 	.globl _linenum
                            104 	.globl _flof
                            105 	.globl _btab
                            106 	.globl _bty
                            107 	.globl _btx
                            108 	.globl _bsy
                            109 	.globl _bsx
                            110 	.globl _block_init
                            111 	.globl _cc
                            112 	.globl _yofff
                            113 	.globl _scenetimings
                            114 	.globl _scenepointers
                            115 	.globl _cmd
                            116 	.globl _tick
                            117 	.globl _vbicount
                            118 	.globl _credits_palette
                            119 	.globl _boxes_palette
                            120 	.globl _tf_palette
                            121 	.globl _twister_palette
                            122 	.globl _block_palette
                            123 	.globl _bulbs_palette
                            124 	.globl _cur_palette
                            125 	.globl _scratch
                            126 	.globl _crebuffer3
                            127 	.globl _crebuffer2
                            128 	.globl _crebuffer1
                            129 	.globl _packbuffer
                            130 	.globl _tri_lookup_y
                            131 	.globl _eighttimes
                            132 	.globl _twelvetimes
                            133 	.globl _tri_lookup_x
                            134 	.globl _sintab
                            135 	.globl _font_w
                            136 	.globl _font_y
                            137 	.globl _font_x
                            138 	.globl _tri_inva4
                            139 	.globl _tri_inva3
                            140 	.globl _tri_inva2
                            141 	.globl _tri_inva1
                            142 	.globl _tri_side2
                            143 	.globl _tri_side1
                            144 	.globl _tri_dia
                            145 	.globl _tri_up
                            146 	.globl _tri_center
                            147 	.globl _sintabx
                            148 ;--------------------------------------------------------
                            149 ; special function registers
                            150 ;--------------------------------------------------------
                            151 ;--------------------------------------------------------
                            152 ;  ram data
                            153 ;--------------------------------------------------------
                            154 	.area _DATA
   0000                     155 _sintab::
   0000                     156 	.ds 256
   0100                     157 _tri_lookup_x::
   0100                     158 	.ds 32
   0120                     159 _twelvetimes::
   0120                     160 	.ds 52
   0154                     161 _eighttimes::
   0154                     162 	.ds 52
   0188                     163 _tri_lookup_y::
   0188                     164 	.ds 64
   01C8                     165 _packbuffer::
   01C8                     166 	.ds 5000
   1550                     167 _crebuffer1::
   1550                     168 	.ds 3323
   224B                     169 _crebuffer2::
   224B                     170 	.ds 4724
   34BF                     171 _crebuffer3::
   34BF                     172 	.ds 3723
   434A                     173 _scratch::
   434A                     174 	.ds 128
   43CA                     175 _cur_palette::
   43CA                     176 	.ds 32
   43EA                     177 _bulbs_palette::
   43EA                     178 	.ds 32
   440A                     179 _block_palette::
   440A                     180 	.ds 32
   442A                     181 _twister_palette::
   442A                     182 	.ds 32
   444A                     183 _tf_palette::
   444A                     184 	.ds 32
   446A                     185 _boxes_palette::
   446A                     186 	.ds 32
   448A                     187 _credits_palette::
   448A                     188 	.ds 32
   44AA                     189 _vbicount::
   44AA                     190 	.ds 2
   44AC                     191 _tick::
   44AC                     192 	.ds 2
   44AE                     193 _cmd::
   44AE                     194 	.ds 15
   44BD                     195 _scenepointers::
   44BD                     196 	.ds 24
   44D5                     197 _scenetimings::
   44D5                     198 	.ds 48
   4505                     199 _isNthBitSet_mask_1_1:
   4505                     200 	.ds 8
   450D                     201 _yofff::
   450D                     202 	.ds 1
   450E                     203 _cc::
   450E                     204 	.ds 1
   450F                     205 _flipper:
   450F                     206 	.ds 2
   4511                     207 _ymmmf:
   4511                     208 	.ds 2
   4513                     209 _block_init::
   4513                     210 	.ds 1
   4514                     211 _bsx::
   4514                     212 	.ds 2
   4516                     213 _bsy::
   4516                     214 	.ds 2
   4518                     215 _btx::
   4518                     216 	.ds 2
   451A                     217 _bty::
   451A                     218 	.ds 2
   451C                     219 _btab::
   451C                     220 	.ds 32
   453C                     221 _flof::
   453C                     222 	.ds 2
   453E                     223 _linenum::
   453E                     224 	.ds 2
   4540                     225 _lx::
   4540                     226 	.ds 1
   4541                     227 _ly::
   4541                     228 	.ds 1
   4542                     229 _ltrpointer::
   4542                     230 	.ds 2
   4544                     231 _slowend::
   4544                     232 	.ds 2
   4546                     233 _ff::
   4546                     234 	.ds 2
   4548                     235 _twinited::
   4548                     236 	.ds 2
   454A                     237 _bulbflipper::
   454A                     238 	.ds 2
   454C                     239 _ff1::
   454C                     240 	.ds 2
   454E                     241 _ff2::
   454E                     242 	.ds 2
   4550                     243 _ender::
   4550                     244 	.ds 2
   4552                     245 _enderdir::
   4552                     246 	.ds 2
   4554                     247 _sy::
   4554                     248 	.ds 2
   4556                     249 _xo:
   4556                     250 	.ds 2
   4558                     251 _yo:
   4558                     252 	.ds 2
   455A                     253 _po:
   455A                     254 	.ds 2
   455C                     255 _frames:
   455C                     256 	.ds 2
   455E                     257 _anim_init::
   455E                     258 	.ds 2
   4560                     259 _boxes_init::
   4560                     260 	.ds 1
   4561                     261 _buffer::
   4561                     262 	.ds 2
   4563                     263 _prevx::
   4563                     264 	.ds 2
   4565                     265 _prevy::
   4565                     266 	.ds 2
   4567                     267 _boxes_x::
   4567                     268 	.ds 5
   456C                     269 _boxes_y::
   456C                     270 	.ds 10
   4576                     271 _boxi::
   4576                     272 	.ds 1
   4577                     273 _bx::
   4577                     274 	.ds 2
   4579                     275 _by::
   4579                     276 	.ds 2
   457B                     277 _bt::
   457B                     278 	.ds 2
   457D                     279 _bo::
   457D                     280 	.ds 2
   457F                     281 _bonc::
   457F                     282 	.ds 2
   4581                     283 _pbx::
   4581                     284 	.ds 2
   4583                     285 _pbt::
   4583                     286 	.ds 2
   4585                     287 _boxes_of::
   4585                     288 	.ds 10
   458F                     289 _prevbox_of::
   458F                     290 	.ds 1
   4590                     291 _initwave::
   4590                     292 	.ds 1
   4591                     293 _buf::
   4591                     294 	.ds 2
   4593                     295 _ffa::
   4593                     296 	.ds 2
   4595                     297 _tri_inited::
   4595                     298 	.ds 1
   4596                     299 _tilei::
   4596                     300 	.ds 2
   4598                     301 _tilex::
   4598                     302 	.ds 2
   459A                     303 _tiley::
   459A                     304 	.ds 2
   459C                     305 _tiletick::
   459C                     306 	.ds 1
   459D                     307 _tripal::
   459D                     308 	.ds 9
   45A6                     309 _tripaltick::
   45A6                     310 	.ds 1
   45A7                     311 _tripaltick2::
   45A7                     312 	.ds 1
   45A8                     313 _triframes::
   45A8                     314 	.ds 2
   45AA                     315 _powatick::
   45AA                     316 	.ds 2
   45AC                     317 _powa::
   45AC                     318 	.ds 2
   45AE                     319 _onceclear::
   45AE                     320 	.ds 1
   45AF                     321 _initpoints::
   45AF                     322 	.ds 1
   45B0                     323 _pointframe::
   45B0                     324 	.ds 2
   45B2                     325 _greetindex::
   45B2                     326 	.ds 2
   45B4                     327 _bigtextp::
   45B4                     328 	.ds 2
   45B6                     329 _initcredits::
   45B6                     330 	.ds 2
   45B8                     331 _credittimer::
   45B8                     332 	.ds 2
   45BA                     333 _sceneindex::
   45BA                     334 	.ds 2
   45BC                     335 _timeindex::
   45BC                     336 	.ds 2
                            337 ;--------------------------------------------------------
                            338 ; overlayable items in  ram 
                            339 ;--------------------------------------------------------
                            340 	.area _OVERLAY
                            341 ;--------------------------------------------------------
                            342 ; external initialized ram data
                            343 ;--------------------------------------------------------
                            344 ;--------------------------------------------------------
                            345 ; global & static initialisations
                            346 ;--------------------------------------------------------
                            347 	.area _HOME
                            348 	.area _GSINIT
                            349 	.area _GSFINAL
                            350 	.area _GSINIT
                            351 ;demo.c:237: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r05s45            352 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            353 	call	__initrleblock
   0006 08                  354 	.db	8
   0007 01 02 04 08 10 20   355 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  356 	.db	0
                            357 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            358 	ld	hl,#_sintab
   0013 CDr00s00            359 	call	__initrleblock
   0016 3B                  360 	.db	59
   0017 00 03 06 09 0C 0F   361 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   362 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   363 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   364 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   365 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   366 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   367 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            368 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               369 	.db	#-5,#0x7E
   0054 01                  370 	.db	1
   0055 7F                  371 	.db	0x7F
   0056 FB 7E               372 	.db	#-5,#0x7E
   0058 75                  373 	.db	117
   0059 7D 7D 7C 7B 7B 7A   374 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   375 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   376 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   377 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   378 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   379 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   380 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   381 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   382 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   383 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   384 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   385 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   386 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   387 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      388 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               389 	.db	#-5,#0x82
   00D0 01                  390 	.db	1
   00D1 81                  391 	.db	0x81
   00D2 FB 82               392 	.db	#-5,#0x82
   00D4 3A                  393 	.db	58
   00D5 83 83 84 85 85 86   394 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   395 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   396 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   397 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   398 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   399 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   400 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               401 	.db	0xFA, 0xFD
   010F 00                  402 	.db	0
                            403 ;demo.c:177: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            404 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            405 	call	__initrleblock
   0116 E0 00               406 	.db	#-32,#0x00
   0118 00                  407 	.db	0
                            408 ;demo.c:178: int twelvetimes[26] = { 0 };
   0119 21r20s01            409 	ld	hl,#_twelvetimes
   011C CDr00s00            410 	call	__initrleblock
   011F CC 00               411 	.db	#-52,#0x00
   0121 00                  412 	.db	0
                            413 ;demo.c:179: int eighttimes[26] = { 0 };
   0122 21r54s01            414 	ld	hl,#_eighttimes
   0125 CDr00s00            415 	call	__initrleblock
   0128 CC 00               416 	.db	#-52,#0x00
   012A 00                  417 	.db	0
                            418 ;demo.c:181: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            419 	ld	hl,#_tri_lookup_y
   012E CDr00s00            420 	call	__initrleblock
   0131 C0 00               421 	.db	#-64,#0x00
   0133 00                  422 	.db	0
                            423 ;demo.c:183: uint8_t packbuffer[5000] = {0};
   0134 21rC8s01            424 	ld	hl,#_packbuffer
   0137 CDr00s00            425 	call	__initrleblock
   013A 81 00               426 	.db	#-127,#0x00
   013C 81 00               427 	.db	#-127,#0x00
   013E 81 00               428 	.db	#-127,#0x00
   0140 81 00               429 	.db	#-127,#0x00
   0142 81 00               430 	.db	#-127,#0x00
   0144 81 00               431 	.db	#-127,#0x00
   0146 81 00               432 	.db	#-127,#0x00
   0148 81 00               433 	.db	#-127,#0x00
   014A 81 00               434 	.db	#-127,#0x00
   014C 81 00               435 	.db	#-127,#0x00
   014E 81 00               436 	.db	#-127,#0x00
   0150 81 00               437 	.db	#-127,#0x00
   0152 81 00               438 	.db	#-127,#0x00
   0154 81 00               439 	.db	#-127,#0x00
   0156 81 00               440 	.db	#-127,#0x00
   0158 81 00               441 	.db	#-127,#0x00
   015A 81 00               442 	.db	#-127,#0x00
   015C 81 00               443 	.db	#-127,#0x00
   015E 81 00               444 	.db	#-127,#0x00
   0160 81 00               445 	.db	#-127,#0x00
   0162 81 00               446 	.db	#-127,#0x00
   0164 81 00               447 	.db	#-127,#0x00
   0166 81 00               448 	.db	#-127,#0x00
   0168 81 00               449 	.db	#-127,#0x00
   016A 81 00               450 	.db	#-127,#0x00
   016C 81 00               451 	.db	#-127,#0x00
   016E 81 00               452 	.db	#-127,#0x00
   0170 81 00               453 	.db	#-127,#0x00
   0172 81 00               454 	.db	#-127,#0x00
   0174 81 00               455 	.db	#-127,#0x00
   0176 81 00               456 	.db	#-127,#0x00
   0178 81 00               457 	.db	#-127,#0x00
   017A 81 00               458 	.db	#-127,#0x00
   017C 81 00               459 	.db	#-127,#0x00
   017E 81 00               460 	.db	#-127,#0x00
   0180 81 00               461 	.db	#-127,#0x00
   0182 81 00               462 	.db	#-127,#0x00
   0184 81 00               463 	.db	#-127,#0x00
   0186 81 00               464 	.db	#-127,#0x00
   0188 D1 00               465 	.db	#-47,#0x00
   018A 00                  466 	.db	0
                            467 ;demo.c:186: uint8_t crebuffer1[3323] = {0};
   018B 21r50s15            468 	ld	hl,#_crebuffer1
   018E CDr00s00            469 	call	__initrleblock
   0191 81 00               470 	.db	#-127,#0x00
   0193 81 00               471 	.db	#-127,#0x00
   0195 81 00               472 	.db	#-127,#0x00
   0197 81 00               473 	.db	#-127,#0x00
   0199 81 00               474 	.db	#-127,#0x00
   019B 81 00               475 	.db	#-127,#0x00
   019D 81 00               476 	.db	#-127,#0x00
   019F 81 00               477 	.db	#-127,#0x00
   01A1 81 00               478 	.db	#-127,#0x00
   01A3 81 00               479 	.db	#-127,#0x00
   01A5 81 00               480 	.db	#-127,#0x00
   01A7 81 00               481 	.db	#-127,#0x00
   01A9 81 00               482 	.db	#-127,#0x00
   01AB 81 00               483 	.db	#-127,#0x00
   01AD 81 00               484 	.db	#-127,#0x00
   01AF 81 00               485 	.db	#-127,#0x00
   01B1 81 00               486 	.db	#-127,#0x00
   01B3 81 00               487 	.db	#-127,#0x00
   01B5 81 00               488 	.db	#-127,#0x00
   01B7 81 00               489 	.db	#-127,#0x00
   01B9 81 00               490 	.db	#-127,#0x00
   01BB 81 00               491 	.db	#-127,#0x00
   01BD 81 00               492 	.db	#-127,#0x00
   01BF 81 00               493 	.db	#-127,#0x00
   01C1 81 00               494 	.db	#-127,#0x00
   01C3 81 00               495 	.db	#-127,#0x00
   01C5 EB 00               496 	.db	#-21,#0x00
   01C7 00                  497 	.db	0
                            498 ;demo.c:187: uint8_t crebuffer2[4724] = {0};
   01C8 21r4Bs22            499 	ld	hl,#_crebuffer2
   01CB CDr00s00            500 	call	__initrleblock
   01CE 81 00               501 	.db	#-127,#0x00
   01D0 81 00               502 	.db	#-127,#0x00
   01D2 81 00               503 	.db	#-127,#0x00
   01D4 81 00               504 	.db	#-127,#0x00
   01D6 81 00               505 	.db	#-127,#0x00
   01D8 81 00               506 	.db	#-127,#0x00
   01DA 81 00               507 	.db	#-127,#0x00
   01DC 81 00               508 	.db	#-127,#0x00
   01DE 81 00               509 	.db	#-127,#0x00
   01E0 81 00               510 	.db	#-127,#0x00
   01E2 81 00               511 	.db	#-127,#0x00
   01E4 81 00               512 	.db	#-127,#0x00
   01E6 81 00               513 	.db	#-127,#0x00
   01E8 81 00               514 	.db	#-127,#0x00
   01EA 81 00               515 	.db	#-127,#0x00
   01EC 81 00               516 	.db	#-127,#0x00
   01EE 81 00               517 	.db	#-127,#0x00
   01F0 81 00               518 	.db	#-127,#0x00
   01F2 81 00               519 	.db	#-127,#0x00
   01F4 81 00               520 	.db	#-127,#0x00
   01F6 81 00               521 	.db	#-127,#0x00
   01F8 81 00               522 	.db	#-127,#0x00
   01FA 81 00               523 	.db	#-127,#0x00
   01FC 81 00               524 	.db	#-127,#0x00
   01FE 81 00               525 	.db	#-127,#0x00
   0200 81 00               526 	.db	#-127,#0x00
   0202 81 00               527 	.db	#-127,#0x00
   0204 81 00               528 	.db	#-127,#0x00
   0206 81 00               529 	.db	#-127,#0x00
   0208 81 00               530 	.db	#-127,#0x00
   020A 81 00               531 	.db	#-127,#0x00
   020C 81 00               532 	.db	#-127,#0x00
   020E 81 00               533 	.db	#-127,#0x00
   0210 81 00               534 	.db	#-127,#0x00
   0212 81 00               535 	.db	#-127,#0x00
   0214 81 00               536 	.db	#-127,#0x00
   0216 81 00               537 	.db	#-127,#0x00
   0218 E7 00               538 	.db	#-25,#0x00
   021A 00                  539 	.db	0
                            540 ;demo.c:188: uint8_t crebuffer3[3723] = {0};
   021B 21rBFs34            541 	ld	hl,#_crebuffer3
   021E CDr00s00            542 	call	__initrleblock
   0221 81 00               543 	.db	#-127,#0x00
   0223 81 00               544 	.db	#-127,#0x00
   0225 81 00               545 	.db	#-127,#0x00
   0227 81 00               546 	.db	#-127,#0x00
   0229 81 00               547 	.db	#-127,#0x00
   022B 81 00               548 	.db	#-127,#0x00
   022D 81 00               549 	.db	#-127,#0x00
   022F 81 00               550 	.db	#-127,#0x00
   0231 81 00               551 	.db	#-127,#0x00
   0233 81 00               552 	.db	#-127,#0x00
   0235 81 00               553 	.db	#-127,#0x00
   0237 81 00               554 	.db	#-127,#0x00
   0239 81 00               555 	.db	#-127,#0x00
   023B 81 00               556 	.db	#-127,#0x00
   023D 81 00               557 	.db	#-127,#0x00
   023F 81 00               558 	.db	#-127,#0x00
   0241 81 00               559 	.db	#-127,#0x00
   0243 81 00               560 	.db	#-127,#0x00
   0245 81 00               561 	.db	#-127,#0x00
   0247 81 00               562 	.db	#-127,#0x00
   0249 81 00               563 	.db	#-127,#0x00
   024B 81 00               564 	.db	#-127,#0x00
   024D 81 00               565 	.db	#-127,#0x00
   024F 81 00               566 	.db	#-127,#0x00
   0251 81 00               567 	.db	#-127,#0x00
   0253 81 00               568 	.db	#-127,#0x00
   0255 81 00               569 	.db	#-127,#0x00
   0257 81 00               570 	.db	#-127,#0x00
   0259 81 00               571 	.db	#-127,#0x00
   025B D8 00               572 	.db	#-40,#0x00
   025D 00                  573 	.db	0
                            574 ;demo.c:200: volatile int vbicount=0;
   025E FD 21rAAs44         575 	ld	iy,#_vbicount
   0262 FD 36 00 00         576 	ld	0 (iy),#0x00
   0266 FD 21rAAs44         577 	ld	iy,#_vbicount
   026A FD 36 01 00         578 	ld	1 (iy),#0x00
                            579 ;demo.c:201: volatile int tick=0;
   026E FD 21rACs44         580 	ld	iy,#_tick
   0272 FD 36 00 00         581 	ld	0 (iy),#0x00
   0276 FD 21rACs44         582 	ld	iy,#_tick
   027A FD 36 01 00         583 	ld	1 (iy),#0x00
                            584 ;demo.c:206: void (*scenepointers[12])() = {
   027E 21rBDs44            585 	ld	hl,#_scenepointers
   0281 36r92               586 	ld	(hl),#<_waiter
   0283 23                  587 	inc	hl
   0284 36s3D               588 	ld	(hl),#>_waiter
   0286 21rBFs44            589 	ld	hl, #_scenepointers + 2
   0289 36r44               590 	ld	(hl),#<_logoeffu
   028B 23                  591 	inc	hl
   028C 36s32               592 	ld	(hl),#>_logoeffu
   028E 01rC1s44            593 	ld	bc,#_scenepointers + 4
   0291 69                  594 	ld	l,c
   0292 60                  595 	ld	h,b
   0293 36r72               596 	ld	(hl),#<_bulbs
   0295 23                  597 	inc	hl
   0296 36s19               598 	ld	(hl),#>_bulbs
   0298 21rC3s44            599 	ld	hl, #_scenepointers + 6
   029B 36rD5               600 	ld	(hl),#<_twister
   029D 23                  601 	inc	hl
   029E 36s17               602 	ld	(hl),#>_twister
   02A0 01rC5s44            603 	ld	bc,#_scenepointers + 8
   02A3 69                  604 	ld	l,c
   02A4 60                  605 	ld	h,b
   02A5 36r25               606 	ld	(hl),#<_boxes
   02A7 23                  607 	inc	hl
   02A8 36s1F               608 	ld	(hl),#>_boxes
   02AA 21rC7s44            609 	ld	hl, #_scenepointers + 10
   02AD 36rD6               610 	ld	(hl),#<_thewave
   02AF 23                  611 	inc	hl
   02B0 36s23               612 	ld	(hl),#>_thewave
   02B2 21rC9s44            613 	ld	hl, #_scenepointers + 12
   02B5 36rF7               614 	ld	(hl),#<_tritiles
   02B7 23                  615 	inc	hl
   02B8 36s2B               616 	ld	(hl),#>_tritiles
   02BA 21rCBs44            617 	ld	hl, #_scenepointers + 14
   02BD 36rF3               618 	ld	(hl),#<_points
   02BF 23                  619 	inc	hl
   02C0 36s33               620 	ld	(hl),#>_points
   02C2 01rCDs44            621 	ld	bc,#_scenepointers + 16
   02C5 69                  622 	ld	l,c
   02C6 60                  623 	ld	h,b
   02C7 36rDA               624 	ld	(hl),#<_bigtext
   02C9 23                  625 	inc	hl
   02CA 36s37               626 	ld	(hl),#>_bigtext
   02CC 01rCFs44            627 	ld	bc,#_scenepointers + 18
   02CF 69                  628 	ld	l,c
   02D0 60                  629 	ld	h,b
   02D1 36r93               630 	ld	(hl),#<_credits
   02D3 23                  631 	inc	hl
   02D4 36s3D               632 	ld	(hl),#>_credits
   02D6 01rD1s44            633 	ld	bc,#_scenepointers + 20
   02D9 69                  634 	ld	l,c
   02DA 60                  635 	ld	h,b
   02DB 36r14               636 	ld	(hl),#<_do_quit
   02DD 23                  637 	inc	hl
   02DE 36s3F               638 	ld	(hl),#>_do_quit
                            639 ;demo.c:220: int scenetimings[24] = {
   02E0 21rD5s44            640 	ld	hl,#_scenetimings
   02E3 CDr00s00            641 	call	__initrleblock
   02E6 30                  642 	.db	48
   02E7 00 00 AA 00 AA 00   643 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   02EF EE 02 14 05 14 05   644 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   02F7 FC 08 10 0E 10 0E   645 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   02FF 04 10 AE 15 AE 15   646 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   0307 D4 17 A0 23 A0 23   647 	.db	0xD4, 0x17, 0xA0, 0x23, 0xA0, 0x23, 0x74, 0x27
        74 27
   030F 74 27 A0 86 00 00   648 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0317 00                  649 	.db	0
                            650 ;demo.c:432: uint8_t yofff = 0;
   0318 FD 21r0Ds45         651 	ld	iy,#_yofff
   031C FD 36 00 00         652 	ld	0 (iy),#0x00
                            653 ;demo.c:433: uint8_t cc = 0;
   0320 FD 21r0Es45         654 	ld	iy,#_cc
   0324 FD 36 00 00         655 	ld	0 (iy),#0x00
                            656 ;demo.c:434: static int flipper = 0;
   0328 FD 21r0Fs45         657 	ld	iy,#_flipper
   032C FD 36 00 00         658 	ld	0 (iy),#0x00
   0330 FD 21r0Fs45         659 	ld	iy,#_flipper
   0334 FD 36 01 00         660 	ld	1 (iy),#0x00
                            661 ;demo.c:435: static int ymmmf = 0;
   0338 FD 21r11s45         662 	ld	iy,#_ymmmf
   033C FD 36 00 00         663 	ld	0 (iy),#0x00
   0340 FD 21r11s45         664 	ld	iy,#_ymmmf
   0344 FD 36 01 00         665 	ld	1 (iy),#0x00
                            666 ;demo.c:466: char block_init = 0;
   0348 FD 21r13s45         667 	ld	iy,#_block_init
   034C FD 36 00 00         668 	ld	0 (iy),#0x00
                            669 ;demo.c:468: int bsx = 0;
   0350 FD 21r14s45         670 	ld	iy,#_bsx
   0354 FD 36 00 00         671 	ld	0 (iy),#0x00
   0358 FD 21r14s45         672 	ld	iy,#_bsx
   035C FD 36 01 00         673 	ld	1 (iy),#0x00
                            674 ;demo.c:469: int bsy = 0;
   0360 FD 21r16s45         675 	ld	iy,#_bsy
   0364 FD 36 00 00         676 	ld	0 (iy),#0x00
   0368 FD 21r16s45         677 	ld	iy,#_bsy
   036C FD 36 01 00         678 	ld	1 (iy),#0x00
                            679 ;demo.c:470: int btx = 0;
   0370 FD 21r18s45         680 	ld	iy,#_btx
   0374 FD 36 00 00         681 	ld	0 (iy),#0x00
   0378 FD 21r18s45         682 	ld	iy,#_btx
   037C FD 36 01 00         683 	ld	1 (iy),#0x00
                            684 ;demo.c:471: int bty = 0;
   0380 FD 21r1As45         685 	ld	iy,#_bty
   0384 FD 36 00 00         686 	ld	0 (iy),#0x00
   0388 FD 21r1As45         687 	ld	iy,#_bty
   038C FD 36 01 00         688 	ld	1 (iy),#0x00
                            689 ;demo.c:473: int btab[16] = {0};
   0390 21r1Cs45            690 	ld	hl,#_btab
   0393 CDr00s00            691 	call	__initrleblock
   0396 E0 00               692 	.db	#-32,#0x00
   0398 00                  693 	.db	0
                            694 ;demo.c:475: int flof = 0;
   0399 FD 21r3Cs45         695 	ld	iy,#_flof
   039D FD 36 00 00         696 	ld	0 (iy),#0x00
   03A1 FD 21r3Cs45         697 	ld	iy,#_flof
   03A5 FD 36 01 00         698 	ld	1 (iy),#0x00
                            699 ;demo.c:524: int linenum = 0;
   03A9 FD 21r3Es45         700 	ld	iy,#_linenum
   03AD FD 36 00 00         701 	ld	0 (iy),#0x00
   03B1 FD 21r3Es45         702 	ld	iy,#_linenum
   03B5 FD 36 01 00         703 	ld	1 (iy),#0x00
                            704 ;demo.c:582: uint8_t lx = 0;
   03B9 FD 21r40s45         705 	ld	iy,#_lx
   03BD FD 36 00 00         706 	ld	0 (iy),#0x00
                            707 ;demo.c:583: uint8_t ly = 0;
   03C1 FD 21r41s45         708 	ld	iy,#_ly
   03C5 FD 36 00 00         709 	ld	0 (iy),#0x00
                            710 ;demo.c:668: int ltrpointer = 0;
   03C9 FD 21r42s45         711 	ld	iy,#_ltrpointer
   03CD FD 36 00 00         712 	ld	0 (iy),#0x00
   03D1 FD 21r42s45         713 	ld	iy,#_ltrpointer
   03D5 FD 36 01 00         714 	ld	1 (iy),#0x00
                            715 ;demo.c:669: int slowend = 128;
   03D9 FD 21r44s45         716 	ld	iy,#_slowend
   03DD FD 36 00 80         717 	ld	0 (iy),#0x80
   03E1 FD 21r44s45         718 	ld	iy,#_slowend
   03E5 FD 36 01 00         719 	ld	1 (iy),#0x00
                            720 ;demo.c:721: int ff = 0;
   03E9 FD 21r46s45         721 	ld	iy,#_ff
   03ED FD 36 00 00         722 	ld	0 (iy),#0x00
   03F1 FD 21r46s45         723 	ld	iy,#_ff
   03F5 FD 36 01 00         724 	ld	1 (iy),#0x00
                            725 ;demo.c:722: int twinited = 0;
   03F9 FD 21r48s45         726 	ld	iy,#_twinited
   03FD FD 36 00 00         727 	ld	0 (iy),#0x00
   0401 FD 21r48s45         728 	ld	iy,#_twinited
   0405 FD 36 01 00         729 	ld	1 (iy),#0x00
                            730 ;demo.c:774: int bulbflipper = 1;
   0409 FD 21r4As45         731 	ld	iy,#_bulbflipper
   040D FD 36 00 01         732 	ld	0 (iy),#0x01
   0411 FD 21r4As45         733 	ld	iy,#_bulbflipper
   0415 FD 36 01 00         734 	ld	1 (iy),#0x00
                            735 ;demo.c:776: int ff1,ff2 = 0;
   0419 FD 21r4Es45         736 	ld	iy,#_ff2
   041D FD 36 00 00         737 	ld	0 (iy),#0x00
   0421 FD 21r4Es45         738 	ld	iy,#_ff2
   0425 FD 36 01 00         739 	ld	1 (iy),#0x00
                            740 ;demo.c:777: int ender = 212;
   0429 FD 21r50s45         741 	ld	iy,#_ender
   042D FD 36 00 D4         742 	ld	0 (iy),#0xD4
   0431 FD 21r50s45         743 	ld	iy,#_ender
   0435 FD 36 01 00         744 	ld	1 (iy),#0x00
                            745 ;demo.c:778: int enderdir = -1;
   0439 FD 21r52s45         746 	ld	iy,#_enderdir
   043D FD 36 00 FF         747 	ld	0 (iy),#0xFF
   0441 FD 21r52s45         748 	ld	iy,#_enderdir
   0445 FD 36 01 FF         749 	ld	1 (iy),#0xFF
                            750 ;demo.c:779: int sy = 16;
   0449 FD 21r54s45         751 	ld	iy,#_sy
   044D FD 36 00 10         752 	ld	0 (iy),#0x10
   0451 FD 21r54s45         753 	ld	iy,#_sy
   0455 FD 36 01 00         754 	ld	1 (iy),#0x00
                            755 ;demo.c:835: static int xo = 0;
   0459 FD 21r56s45         756 	ld	iy,#_xo
   045D FD 36 00 00         757 	ld	0 (iy),#0x00
   0461 FD 21r56s45         758 	ld	iy,#_xo
   0465 FD 36 01 00         759 	ld	1 (iy),#0x00
                            760 ;demo.c:836: static int yo = 0;
   0469 FD 21r58s45         761 	ld	iy,#_yo
   046D FD 36 00 00         762 	ld	0 (iy),#0x00
   0471 FD 21r58s45         763 	ld	iy,#_yo
   0475 FD 36 01 00         764 	ld	1 (iy),#0x00
                            765 ;demo.c:837: static int po = 0;
   0479 FD 21r5As45         766 	ld	iy,#_po
   047D FD 36 00 00         767 	ld	0 (iy),#0x00
   0481 FD 21r5As45         768 	ld	iy,#_po
   0485 FD 36 01 00         769 	ld	1 (iy),#0x00
                            770 ;demo.c:838: static int frames = 0;
   0489 FD 21r5Cs45         771 	ld	iy,#_frames
   048D FD 36 00 00         772 	ld	0 (iy),#0x00
   0491 FD 21r5Cs45         773 	ld	iy,#_frames
   0495 FD 36 01 00         774 	ld	1 (iy),#0x00
                            775 ;demo.c:840: int anim_init = 0;
   0499 FD 21r5Es45         776 	ld	iy,#_anim_init
   049D FD 36 00 00         777 	ld	0 (iy),#0x00
   04A1 FD 21r5Es45         778 	ld	iy,#_anim_init
   04A5 FD 36 01 00         779 	ld	1 (iy),#0x00
                            780 ;demo.c:940: uint8_t boxes_init = 0;
   04A9 FD 21r60s45         781 	ld	iy,#_boxes_init
   04AD FD 36 00 00         782 	ld	0 (iy),#0x00
                            783 ;demo.c:941: int buffer = 1;
   04B1 FD 21r61s45         784 	ld	iy,#_buffer
   04B5 FD 36 00 01         785 	ld	0 (iy),#0x01
   04B9 FD 21r61s45         786 	ld	iy,#_buffer
   04BD FD 36 01 00         787 	ld	1 (iy),#0x00
                            788 ;demo.c:942: int prevx = -1;
   04C1 FD 21r63s45         789 	ld	iy,#_prevx
   04C5 FD 36 00 FF         790 	ld	0 (iy),#0xFF
   04C9 FD 21r63s45         791 	ld	iy,#_prevx
   04CD FD 36 01 FF         792 	ld	1 (iy),#0xFF
                            793 ;demo.c:944: uint8_t boxes_x[5] = {0,36,0,36,0};
   04D1 21r67s45            794 	ld	hl,#_boxes_x
   04D4 CDr00s00            795 	call	__initrleblock
   04D7 05                  796 	.db	5
   04D8 00 24 00 24 00      797 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   04DD 00                  798 	.db	0
                            799 ;demo.c:945: int boxes_y[5] = {768,768,768+36,768+36,0};
   04DE 21r6Cs45            800 	ld	hl,#_boxes_y
   04E1 CDr00s00            801 	call	__initrleblock
   04E4 0A                  802 	.db	10
   04E5 00 03 00 03 24 03   803 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   04ED 00 00               804 	.db	0x00, 0x00
   04EF 00                  805 	.db	0
                            806 ;demo.c:946: uint8_t boxi = 0;
   04F0 FD 21r76s45         807 	ld	iy,#_boxi
   04F4 FD 36 00 00         808 	ld	0 (iy),#0x00
                            809 ;demo.c:947: int bx = 220;
   04F8 FD 21r77s45         810 	ld	iy,#_bx
   04FC FD 36 00 DC         811 	ld	0 (iy),#0xDC
   0500 FD 21r77s45         812 	ld	iy,#_bx
   0504 FD 36 01 00         813 	ld	1 (iy),#0x00
                            814 ;demo.c:948: int by = 84;
   0508 FD 21r79s45         815 	ld	iy,#_by
   050C FD 36 00 54         816 	ld	0 (iy),#0x54
   0510 FD 21r79s45         817 	ld	iy,#_by
   0514 FD 36 01 00         818 	ld	1 (iy),#0x00
                            819 ;demo.c:966: int bt = 0;
   0518 FD 21r7Bs45         820 	ld	iy,#_bt
   051C FD 36 00 00         821 	ld	0 (iy),#0x00
   0520 FD 21r7Bs45         822 	ld	iy,#_bt
   0524 FD 36 01 00         823 	ld	1 (iy),#0x00
                            824 ;demo.c:967: int bo = 0;
   0528 FD 21r7Ds45         825 	ld	iy,#_bo
   052C FD 36 00 00         826 	ld	0 (iy),#0x00
   0530 FD 21r7Ds45         827 	ld	iy,#_bo
   0534 FD 36 01 00         828 	ld	1 (iy),#0x00
                            829 ;demo.c:969: int bonc = 0;
   0538 FD 21r7Fs45         830 	ld	iy,#_bonc
   053C FD 36 00 00         831 	ld	0 (iy),#0x00
   0540 FD 21r7Fs45         832 	ld	iy,#_bonc
   0544 FD 36 01 00         833 	ld	1 (iy),#0x00
                            834 ;demo.c:970: int pbx = 0;
   0548 FD 21r81s45         835 	ld	iy,#_pbx
   054C FD 36 00 00         836 	ld	0 (iy),#0x00
   0550 FD 21r81s45         837 	ld	iy,#_pbx
   0554 FD 36 01 00         838 	ld	1 (iy),#0x00
                            839 ;demo.c:971: int pbt = 0;
   0558 FD 21r83s45         840 	ld	iy,#_pbt
   055C FD 36 00 00         841 	ld	0 (iy),#0x00
   0560 FD 21r83s45         842 	ld	iy,#_pbt
   0564 FD 36 01 00         843 	ld	1 (iy),#0x00
                            844 ;demo.c:973: int boxes_of[5] = {0,0,6,0,0};
   0568 21r85s45            845 	ld	hl,#_boxes_of
   056B CDr00s00            846 	call	__initrleblock
   056E 05                  847 	.db	5
   056F 00 00 00 00 06      848 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0574 FB 00               849 	.db	#-5,#0x00
   0576 00                  850 	.db	0
                            851 ;demo.c:974: uint8_t prevbox_of = 0;
   0577 FD 21r8Fs45         852 	ld	iy,#_prevbox_of
   057B FD 36 00 00         853 	ld	0 (iy),#0x00
                            854 ;demo.c:1091: uint8_t initwave = 0;
   057F FD 21r90s45         855 	ld	iy,#_initwave
   0583 FD 36 00 00         856 	ld	0 (iy),#0x00
                            857 ;demo.c:1092: int buf = -1;
   0587 FD 21r91s45         858 	ld	iy,#_buf
   058B FD 36 00 FF         859 	ld	0 (iy),#0xFF
   058F FD 21r91s45         860 	ld	iy,#_buf
   0593 FD 36 01 FF         861 	ld	1 (iy),#0xFF
                            862 ;demo.c:1093: int ffa = 0;
   0597 FD 21r93s45         863 	ld	iy,#_ffa
   059B FD 36 00 00         864 	ld	0 (iy),#0x00
   059F FD 21r93s45         865 	ld	iy,#_ffa
   05A3 FD 36 01 00         866 	ld	1 (iy),#0x00
                            867 ;demo.c:1215: uint8_t tri_inited = 0;
   05A7 FD 21r95s45         868 	ld	iy,#_tri_inited
   05AB FD 36 00 00         869 	ld	0 (iy),#0x00
                            870 ;demo.c:1230: int tilei = 0;
   05AF FD 21r96s45         871 	ld	iy,#_tilei
   05B3 FD 36 00 00         872 	ld	0 (iy),#0x00
   05B7 FD 21r96s45         873 	ld	iy,#_tilei
   05BB FD 36 01 00         874 	ld	1 (iy),#0x00
                            875 ;demo.c:1231: int tilex = 0;
   05BF FD 21r98s45         876 	ld	iy,#_tilex
   05C3 FD 36 00 00         877 	ld	0 (iy),#0x00
   05C7 FD 21r98s45         878 	ld	iy,#_tilex
   05CB FD 36 01 00         879 	ld	1 (iy),#0x00
                            880 ;demo.c:1232: int tiley = 0;
   05CF FD 21r9As45         881 	ld	iy,#_tiley
   05D3 FD 36 00 00         882 	ld	0 (iy),#0x00
   05D7 FD 21r9As45         883 	ld	iy,#_tiley
   05DB FD 36 01 00         884 	ld	1 (iy),#0x00
                            885 ;demo.c:1233: uint8_t tiletick = 0;
   05DF FD 21r9Cs45         886 	ld	iy,#_tiletick
   05E3 FD 36 00 00         887 	ld	0 (iy),#0x00
                            888 ;demo.c:1263: char tripal[9] = {
   05E7 21r9Ds45            889 	ld	hl,#_tripal
   05EA CDr00s00            890 	call	__initrleblock
   05ED 09                  891 	.db	9
   05EE 02 02 01 01 02 03   892 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   05F6 02                  893 	.db	0x02
   05F7 00                  894 	.db	0
                            895 ;demo.c:1269: uint8_t tripaltick = 0;
   05F8 FD 21rA6s45         896 	ld	iy,#_tripaltick
   05FC FD 36 00 00         897 	ld	0 (iy),#0x00
                            898 ;demo.c:1270: uint8_t tripaltick2 = 0;
   0600 FD 21rA7s45         899 	ld	iy,#_tripaltick2
   0604 FD 36 00 00         900 	ld	0 (iy),#0x00
                            901 ;demo.c:1272: int triframes = 0;
   0608 FD 21rA8s45         902 	ld	iy,#_triframes
   060C FD 36 00 00         903 	ld	0 (iy),#0x00
   0610 FD 21rA8s45         904 	ld	iy,#_triframes
   0614 FD 36 01 00         905 	ld	1 (iy),#0x00
                            906 ;demo.c:1426: int powatick = 0;
   0618 FD 21rAAs45         907 	ld	iy,#_powatick
   061C FD 36 00 00         908 	ld	0 (iy),#0x00
   0620 FD 21rAAs45         909 	ld	iy,#_powatick
   0624 FD 36 01 00         910 	ld	1 (iy),#0x00
                            911 ;demo.c:1427: int powa = 0;
   0628 FD 21rACs45         912 	ld	iy,#_powa
   062C FD 36 00 00         913 	ld	0 (iy),#0x00
   0630 FD 21rACs45         914 	ld	iy,#_powa
   0634 FD 36 01 00         915 	ld	1 (iy),#0x00
                            916 ;demo.c:1428: uint8_t onceclear = 255;
   0638 FD 21rAEs45         917 	ld	iy,#_onceclear
   063C FD 36 00 FF         918 	ld	0 (iy),#0xFF
                            919 ;demo.c:1473: uint8_t initpoints = 0;
   0640 FD 21rAFs45         920 	ld	iy,#_initpoints
   0644 FD 36 00 00         921 	ld	0 (iy),#0x00
                            922 ;demo.c:1474: int pointframe = 0;
   0648 FD 21rB0s45         923 	ld	iy,#_pointframe
   064C FD 36 00 00         924 	ld	0 (iy),#0x00
   0650 FD 21rB0s45         925 	ld	iy,#_pointframe
   0654 FD 36 01 00         926 	ld	1 (iy),#0x00
                            927 ;demo.c:1477: int greetindex = 0;
   0658 FD 21rB2s45         928 	ld	iy,#_greetindex
   065C FD 36 00 00         929 	ld	0 (iy),#0x00
   0660 FD 21rB2s45         930 	ld	iy,#_greetindex
   0664 FD 36 01 00         931 	ld	1 (iy),#0x00
                            932 ;demo.c:1572: int bigtextp = 0;
   0668 FD 21rB4s45         933 	ld	iy,#_bigtextp
   066C FD 36 00 00         934 	ld	0 (iy),#0x00
   0670 FD 21rB4s45         935 	ld	iy,#_bigtextp
   0674 FD 36 01 00         936 	ld	1 (iy),#0x00
                            937 ;demo.c:1711: int initcredits = 0;
   0678 FD 21rB6s45         938 	ld	iy,#_initcredits
   067C FD 36 00 00         939 	ld	0 (iy),#0x00
   0680 FD 21rB6s45         940 	ld	iy,#_initcredits
   0684 FD 36 01 00         941 	ld	1 (iy),#0x00
                            942 ;demo.c:1712: int credittimer = 0;
   0688 FD 21rB8s45         943 	ld	iy,#_credittimer
   068C FD 36 00 00         944 	ld	0 (iy),#0x00
   0690 FD 21rB8s45         945 	ld	iy,#_credittimer
   0694 FD 36 01 00         946 	ld	1 (iy),#0x00
                            947 ;demo.c:1799: int sceneindex = 0;
   0698 FD 21rBAs45         948 	ld	iy,#_sceneindex
   069C FD 36 00 00         949 	ld	0 (iy),#0x00
   06A0 FD 21rBAs45         950 	ld	iy,#_sceneindex
   06A4 FD 36 01 00         951 	ld	1 (iy),#0x00
                            952 ;demo.c:1800: int timeindex = 0;
   06A8 FD 21rBCs45         953 	ld	iy,#_timeindex
   06AC FD 36 00 00         954 	ld	0 (iy),#0x00
   06B0 FD 21rBCs45         955 	ld	iy,#_timeindex
   06B4 FD 36 01 00         956 	ld	1 (iy),#0x00
                            957 ;--------------------------------------------------------
                            958 ; Home
                            959 ;--------------------------------------------------------
                            960 	.area _HOME
                            961 	.area _HOME
                            962 ;--------------------------------------------------------
                            963 ; code
                            964 ;--------------------------------------------------------
                            965 	.area _CODE
                            966 ;demo.c:236: int isNthBitSet (unsigned char c, int n) {
                            967 ;	---------------------------------
                            968 ; Function isNthBitSet
                            969 ; ---------------------------------
   0000                     970 _isNthBitSet_start::
   0000                     971 _isNthBitSet:
   0000 DD E5               972 	push	ix
   0002 DD 21 00 00         973 	ld	ix,#0
   0006 DD 39               974 	add	ix,sp
                            975 ;demo.c:238: return ((c & mask[n]) != 0);
   0008 3Er05               976 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            977 	add	a,5 (ix)
   000D 4F                  978 	ld	c,a
   000E 3Es45               979 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            980 	adc	a,6 (ix)
   0013 47                  981 	ld	b,a
   0014 0A                  982 	ld	a,(bc)
   0015 DD A6 04            983 	and	a,4 (ix)
   0018 20 04               984 	jr	NZ,00103$
   001A 3E 01               985 	ld	a,#0x01
   001C 18 01               986 	jr	00104$
   001E                     987 00103$:
   001E AF                  988 	xor	a,a
   001F                     989 00104$:
   001F B7                  990 	or	a,a
   0020 D6 01               991 	sub	a,#0x01
   0022 3E 00               992 	ld	a,#0x00
   0024 17                  993 	rla
   0025 4F                  994 	ld	c,a
   0026 69                  995 	ld	l,c
   0027 26 00               996 	ld	h,#0x00
   0029 DD E1               997 	pop	ix
   002B C9                  998 	ret
   002C                     999 _isNthBitSet_end::
   002C                    1000 _sintabx:
   002C 78                 1001 	.db #0x78
   002D 7A                 1002 	.db #0x7A
   002E 7D                 1003 	.db #0x7D
   002F 80                 1004 	.db #0x80
   0030 83                 1005 	.db #0x83
   0031 86                 1006 	.db #0x86
   0032 89                 1007 	.db #0x89
   0033 8C                 1008 	.db #0x8C
   0034 8F                 1009 	.db #0x8F
   0035 92                 1010 	.db #0x92
   0036 95                 1011 	.db #0x95
   0037 98                 1012 	.db #0x98
   0038 9A                 1013 	.db #0x9A
   0039 9D                 1014 	.db #0x9D
   003A A0                 1015 	.db #0xA0
   003B A3                 1016 	.db #0xA3
   003C A5                 1017 	.db #0xA5
   003D A8                 1018 	.db #0xA8
   003E AB                 1019 	.db #0xAB
   003F AD                 1020 	.db #0xAD
   0040 B0                 1021 	.db #0xB0
   0041 B3                 1022 	.db #0xB3
   0042 B5                 1023 	.db #0xB5
   0043 B8                 1024 	.db #0xB8
   0044 BA                 1025 	.db #0xBA
   0045 BD                 1026 	.db #0xBD
   0046 BF                 1027 	.db #0xBF
   0047 C1                 1028 	.db #0xC1
   0048 C4                 1029 	.db #0xC4
   0049 C6                 1030 	.db #0xC6
   004A C8                 1031 	.db #0xC8
   004B CA                 1032 	.db #0xCA
   004C CC                 1033 	.db #0xCC
   004D CE                 1034 	.db #0xCE
   004E D0                 1035 	.db #0xD0
   004F D2                 1036 	.db #0xD2
   0050 D4                 1037 	.db #0xD4
   0051 D6                 1038 	.db #0xD6
   0052 D8                 1039 	.db #0xD8
   0053 DA                 1040 	.db #0xDA
   0054 DB                 1041 	.db #0xDB
   0055 DD                 1042 	.db #0xDD
   0056 DE                 1043 	.db #0xDE
   0057 E0                 1044 	.db #0xE0
   0058 E1                 1045 	.db #0xE1
   0059 E3                 1046 	.db #0xE3
   005A E4                 1047 	.db #0xE4
   005B E5                 1048 	.db #0xE5
   005C E6                 1049 	.db #0xE6
   005D E7                 1050 	.db #0xE7
   005E E8                 1051 	.db #0xE8
   005F E9                 1052 	.db #0xE9
   0060 EA                 1053 	.db #0xEA
   0061 EB                 1054 	.db #0xEB
   0062 EC                 1055 	.db #0xEC
   0063 ED                 1056 	.db #0xED
   0064 ED                 1057 	.db #0xED
   0065 EE                 1058 	.db #0xEE
   0066 EE                 1059 	.db #0xEE
   0067 EF                 1060 	.db #0xEF
   0068 EF                 1061 	.db #0xEF
   0069 EF                 1062 	.db #0xEF
   006A EF                 1063 	.db #0xEF
   006B EF                 1064 	.db #0xEF
   006C F0                 1065 	.db #0xF0
   006D EF                 1066 	.db #0xEF
   006E EF                 1067 	.db #0xEF
   006F EF                 1068 	.db #0xEF
   0070 EF                 1069 	.db #0xEF
   0071 EF                 1070 	.db #0xEF
   0072 EE                 1071 	.db #0xEE
   0073 EE                 1072 	.db #0xEE
   0074 ED                 1073 	.db #0xED
   0075 ED                 1074 	.db #0xED
   0076 EC                 1075 	.db #0xEC
   0077 EB                 1076 	.db #0xEB
   0078 EA                 1077 	.db #0xEA
   0079 E9                 1078 	.db #0xE9
   007A E8                 1079 	.db #0xE8
   007B E7                 1080 	.db #0xE7
   007C E6                 1081 	.db #0xE6
   007D E5                 1082 	.db #0xE5
   007E E4                 1083 	.db #0xE4
   007F E3                 1084 	.db #0xE3
   0080 E1                 1085 	.db #0xE1
   0081 E0                 1086 	.db #0xE0
   0082 DE                 1087 	.db #0xDE
   0083 DD                 1088 	.db #0xDD
   0084 DB                 1089 	.db #0xDB
   0085 DA                 1090 	.db #0xDA
   0086 D8                 1091 	.db #0xD8
   0087 D6                 1092 	.db #0xD6
   0088 D4                 1093 	.db #0xD4
   0089 D2                 1094 	.db #0xD2
   008A D0                 1095 	.db #0xD0
   008B CE                 1096 	.db #0xCE
   008C CC                 1097 	.db #0xCC
   008D CA                 1098 	.db #0xCA
   008E C8                 1099 	.db #0xC8
   008F C6                 1100 	.db #0xC6
   0090 C4                 1101 	.db #0xC4
   0091 C1                 1102 	.db #0xC1
   0092 BF                 1103 	.db #0xBF
   0093 BD                 1104 	.db #0xBD
   0094 BA                 1105 	.db #0xBA
   0095 B8                 1106 	.db #0xB8
   0096 B5                 1107 	.db #0xB5
   0097 B3                 1108 	.db #0xB3
   0098 B0                 1109 	.db #0xB0
   0099 AD                 1110 	.db #0xAD
   009A AB                 1111 	.db #0xAB
   009B A8                 1112 	.db #0xA8
   009C A5                 1113 	.db #0xA5
   009D A3                 1114 	.db #0xA3
   009E A0                 1115 	.db #0xA0
   009F 9D                 1116 	.db #0x9D
   00A0 9A                 1117 	.db #0x9A
   00A1 98                 1118 	.db #0x98
   00A2 95                 1119 	.db #0x95
   00A3 92                 1120 	.db #0x92
   00A4 8F                 1121 	.db #0x8F
   00A5 8C                 1122 	.db #0x8C
   00A6 89                 1123 	.db #0x89
   00A7 86                 1124 	.db #0x86
   00A8 83                 1125 	.db #0x83
   00A9 80                 1126 	.db #0x80
   00AA 7D                 1127 	.db #0x7D
   00AB 7A                 1128 	.db #0x7A
   00AC 78                 1129 	.db #0x78
   00AD 75                 1130 	.db #0x75
   00AE 72                 1131 	.db #0x72
   00AF 6F                 1132 	.db #0x6F
   00B0 6C                 1133 	.db #0x6C
   00B1 69                 1134 	.db #0x69
   00B2 66                 1135 	.db #0x66
   00B3 63                 1136 	.db #0x63
   00B4 60                 1137 	.db #0x60
   00B5 5D                 1138 	.db #0x5D
   00B6 5A                 1139 	.db #0x5A
   00B7 57                 1140 	.db #0x57
   00B8 55                 1141 	.db #0x55
   00B9 52                 1142 	.db #0x52
   00BA 4F                 1143 	.db #0x4F
   00BB 4C                 1144 	.db #0x4C
   00BC 4A                 1145 	.db #0x4A
   00BD 47                 1146 	.db #0x47
   00BE 44                 1147 	.db #0x44
   00BF 42                 1148 	.db #0x42
   00C0 3F                 1149 	.db #0x3F
   00C1 3C                 1150 	.db #0x3C
   00C2 3A                 1151 	.db #0x3A
   00C3 37                 1152 	.db #0x37
   00C4 35                 1153 	.db #0x35
   00C5 32                 1154 	.db #0x32
   00C6 30                 1155 	.db #0x30
   00C7 2E                 1156 	.db #0x2E
   00C8 2B                 1157 	.db #0x2B
   00C9 29                 1158 	.db #0x29
   00CA 27                 1159 	.db #0x27
   00CB 25                 1160 	.db #0x25
   00CC 23                 1161 	.db #0x23
   00CD 21                 1162 	.db #0x21
   00CE 1F                 1163 	.db #0x1F
   00CF 1D                 1164 	.db #0x1D
   00D0 1B                 1165 	.db #0x1B
   00D1 19                 1166 	.db #0x19
   00D2 17                 1167 	.db #0x17
   00D3 15                 1168 	.db #0x15
   00D4 14                 1169 	.db #0x14
   00D5 12                 1170 	.db #0x12
   00D6 11                 1171 	.db #0x11
   00D7 0F                 1172 	.db #0x0F
   00D8 0E                 1173 	.db #0x0E
   00D9 0C                 1174 	.db #0x0C
   00DA 0B                 1175 	.db #0x0B
   00DB 0A                 1176 	.db #0x0A
   00DC 09                 1177 	.db #0x09
   00DD 08                 1178 	.db #0x08
   00DE 07                 1179 	.db #0x07
   00DF 06                 1180 	.db #0x06
   00E0 05                 1181 	.db #0x05
   00E1 04                 1182 	.db #0x04
   00E2 03                 1183 	.db #0x03
   00E3 02                 1184 	.db #0x02
   00E4 02                 1185 	.db #0x02
   00E5 01                 1186 	.db #0x01
   00E6 01                 1187 	.db #0x01
   00E7 00                 1188 	.db #0x00
   00E8 00                 1189 	.db #0x00
   00E9 00                 1190 	.db #0x00
   00EA 00                 1191 	.db #0x00
   00EB 00                 1192 	.db #0x00
   00EC 00                 1193 	.db #0x00
   00ED 00                 1194 	.db #0x00
   00EE 00                 1195 	.db #0x00
   00EF 00                 1196 	.db #0x00
   00F0 00                 1197 	.db #0x00
   00F1 00                 1198 	.db #0x00
   00F2 01                 1199 	.db #0x01
   00F3 01                 1200 	.db #0x01
   00F4 02                 1201 	.db #0x02
   00F5 02                 1202 	.db #0x02
   00F6 03                 1203 	.db #0x03
   00F7 04                 1204 	.db #0x04
   00F8 05                 1205 	.db #0x05
   00F9 06                 1206 	.db #0x06
   00FA 07                 1207 	.db #0x07
   00FB 08                 1208 	.db #0x08
   00FC 09                 1209 	.db #0x09
   00FD 0A                 1210 	.db #0x0A
   00FE 0B                 1211 	.db #0x0B
   00FF 0C                 1212 	.db #0x0C
   0100 0E                 1213 	.db #0x0E
   0101 0F                 1214 	.db #0x0F
   0102 11                 1215 	.db #0x11
   0103 12                 1216 	.db #0x12
   0104 14                 1217 	.db #0x14
   0105 15                 1218 	.db #0x15
   0106 17                 1219 	.db #0x17
   0107 19                 1220 	.db #0x19
   0108 1B                 1221 	.db #0x1B
   0109 1D                 1222 	.db #0x1D
   010A 1F                 1223 	.db #0x1F
   010B 21                 1224 	.db #0x21
   010C 23                 1225 	.db #0x23
   010D 25                 1226 	.db #0x25
   010E 27                 1227 	.db #0x27
   010F 29                 1228 	.db #0x29
   0110 2B                 1229 	.db #0x2B
   0111 2E                 1230 	.db #0x2E
   0112 30                 1231 	.db #0x30
   0113 32                 1232 	.db #0x32
   0114 35                 1233 	.db #0x35
   0115 37                 1234 	.db #0x37
   0116 3A                 1235 	.db #0x3A
   0117 3C                 1236 	.db #0x3C
   0118 3F                 1237 	.db #0x3F
   0119 42                 1238 	.db #0x42
   011A 44                 1239 	.db #0x44
   011B 47                 1240 	.db #0x47
   011C 4A                 1241 	.db #0x4A
   011D 4C                 1242 	.db #0x4C
   011E 4F                 1243 	.db #0x4F
   011F 52                 1244 	.db #0x52
   0120 55                 1245 	.db #0x55
   0121 57                 1246 	.db #0x57
   0122 5A                 1247 	.db #0x5A
   0123 5D                 1248 	.db #0x5D
   0124 60                 1249 	.db #0x60
   0125 63                 1250 	.db #0x63
   0126 66                 1251 	.db #0x66
   0127 69                 1252 	.db #0x69
   0128 6C                 1253 	.db #0x6C
   0129 6F                 1254 	.db #0x6F
   012A 72                 1255 	.db #0x72
   012B 75                 1256 	.db #0x75
   012C                    1257 _tri_center:
   012C 08                 1258 	.db #0x08
   012D 0A                 1259 	.db #0x0A
   012E 12                 1260 	.db #0x12
   012F 10                 1261 	.db #0x10
   0130 00                 1262 	.db #0x00
   0131 02                 1263 	.db #0x02
   0132 08                 1264 	.db #0x08
   0133 0A                 1265 	.db #0x0A
   0134 0B                 1266 	.db #0x0B
   0135 09                 1267 	.db #0x09
   0136 03                 1268 	.db #0x03
   0137 01                 1269 	.db #0x01
   0138 11                 1270 	.db #0x11
   0139 13                 1271 	.db #0x13
   013A 0B                 1272 	.db #0x0B
   013B 09                 1273 	.db #0x09
   013C 0A                 1274 	.db #0x0A
   013D 12                 1275 	.db #0x12
   013E 10                 1276 	.db #0x10
   013F 00                 1277 	.db #0x00
   0140 02                 1278 	.db #0x02
   0141 08                 1279 	.db #0x08
   0142 0A                 1280 	.db #0x0A
   0143 12                 1281 	.db #0x12
   0144 13                 1282 	.db #0x13
   0145 0B                 1283 	.db #0x0B
   0146 09                 1284 	.db #0x09
   0147 03                 1285 	.db #0x03
   0148 01                 1286 	.db #0x01
   0149 11                 1287 	.db #0x11
   014A 13                 1288 	.db #0x13
   014B 0B                 1289 	.db #0x0B
   014C 12                 1290 	.db #0x12
   014D 10                 1291 	.db #0x10
   014E 00                 1292 	.db #0x00
   014F 02                 1293 	.db #0x02
   0150 08                 1294 	.db #0x08
   0151 0A                 1295 	.db #0x0A
   0152 12                 1296 	.db #0x12
   0153 10                 1297 	.db #0x10
   0154 11                 1298 	.db #0x11
   0155 13                 1299 	.db #0x13
   0156 0B                 1300 	.db #0x0B
   0157 09                 1301 	.db #0x09
   0158 03                 1302 	.db #0x03
   0159 01                 1303 	.db #0x01
   015A 11                 1304 	.db #0x11
   015B 13                 1305 	.db #0x13
   015C 10                 1306 	.db #0x10
   015D 00                 1307 	.db #0x00
   015E 02                 1308 	.db #0x02
   015F 08                 1309 	.db #0x08
   0160 0A                 1310 	.db #0x0A
   0161 12                 1311 	.db #0x12
   0162 10                 1312 	.db #0x10
   0163 00                 1313 	.db #0x00
   0164 01                 1314 	.db #0x01
   0165 11                 1315 	.db #0x11
   0166 13                 1316 	.db #0x13
   0167 0B                 1317 	.db #0x0B
   0168 09                 1318 	.db #0x09
   0169 03                 1319 	.db #0x03
   016A 01                 1320 	.db #0x01
   016B 11                 1321 	.db #0x11
   016C 00                 1322 	.db #0x00
   016D 02                 1323 	.db #0x02
   016E 08                 1324 	.db #0x08
   016F 0A                 1325 	.db #0x0A
   0170 12                 1326 	.db #0x12
   0171 10                 1327 	.db #0x10
   0172 00                 1328 	.db #0x00
   0173 02                 1329 	.db #0x02
   0174 03                 1330 	.db #0x03
   0175 01                 1331 	.db #0x01
   0176 11                 1332 	.db #0x11
   0177 13                 1333 	.db #0x13
   0178 0B                 1334 	.db #0x0B
   0179 09                 1335 	.db #0x09
   017A 03                 1336 	.db #0x03
   017B 01                 1337 	.db #0x01
   017C 02                 1338 	.db #0x02
   017D 08                 1339 	.db #0x08
   017E 0A                 1340 	.db #0x0A
   017F 12                 1341 	.db #0x12
   0180 10                 1342 	.db #0x10
   0181 00                 1343 	.db #0x00
   0182 02                 1344 	.db #0x02
   0183 08                 1345 	.db #0x08
   0184 09                 1346 	.db #0x09
   0185 03                 1347 	.db #0x03
   0186 01                 1348 	.db #0x01
   0187 11                 1349 	.db #0x11
   0188 13                 1350 	.db #0x13
   0189 0B                 1351 	.db #0x0B
   018A 09                 1352 	.db #0x09
   018B 03                 1353 	.db #0x03
   018C 01                 1354 	.db #0x01
   018D 0B                 1355 	.db #0x0B
   018E 09                 1356 	.db #0x09
   018F 11                 1357 	.db #0x11
   0190 13                 1358 	.db #0x13
   0191 03                 1359 	.db #0x03
   0192 01                 1360 	.db #0x01
   0193 0B                 1361 	.db #0x0B
   0194 0A                 1362 	.db #0x0A
   0195 00                 1363 	.db #0x00
   0196 02                 1364 	.db #0x02
   0197 12                 1365 	.db #0x12
   0198 10                 1366 	.db #0x10
   0199 08                 1367 	.db #0x08
   019A 0A                 1368 	.db #0x0A
   019B 00                 1369 	.db #0x00
   019C 03                 1370 	.db #0x03
   019D 01                 1371 	.db #0x01
   019E 0B                 1372 	.db #0x0B
   019F 09                 1373 	.db #0x09
   01A0 11                 1374 	.db #0x11
   01A1 13                 1375 	.db #0x13
   01A2 03                 1376 	.db #0x03
   01A3 01                 1377 	.db #0x01
   01A4 00                 1378 	.db #0x00
   01A5 02                 1379 	.db #0x02
   01A6 12                 1380 	.db #0x12
   01A7 10                 1381 	.db #0x10
   01A8 08                 1382 	.db #0x08
   01A9 0A                 1383 	.db #0x0A
   01AA 00                 1384 	.db #0x00
   01AB 02                 1385 	.db #0x02
   01AC 13                 1386 	.db #0x13
   01AD 03                 1387 	.db #0x03
   01AE 01                 1388 	.db #0x01
   01AF 0B                 1389 	.db #0x0B
   01B0 09                 1390 	.db #0x09
   01B1 11                 1391 	.db #0x11
   01B2 13                 1392 	.db #0x13
   01B3 03                 1393 	.db #0x03
   01B4 02                 1394 	.db #0x02
   01B5 12                 1395 	.db #0x12
   01B6 10                 1396 	.db #0x10
   01B7 08                 1397 	.db #0x08
   01B8 0A                 1398 	.db #0x0A
   01B9 00                 1399 	.db #0x00
   01BA 02                 1400 	.db #0x02
   01BB 12                 1401 	.db #0x12
   01BC 11                 1402 	.db #0x11
   01BD 13                 1403 	.db #0x13
   01BE 03                 1404 	.db #0x03
   01BF 01                 1405 	.db #0x01
   01C0 0B                 1406 	.db #0x0B
   01C1 09                 1407 	.db #0x09
   01C2 11                 1408 	.db #0x11
   01C3 13                 1409 	.db #0x13
   01C4 12                 1410 	.db #0x12
   01C5 10                 1411 	.db #0x10
   01C6 08                 1412 	.db #0x08
   01C7 0A                 1413 	.db #0x0A
   01C8 00                 1414 	.db #0x00
   01C9 02                 1415 	.db #0x02
   01CA 12                 1416 	.db #0x12
   01CB 10                 1417 	.db #0x10
   01CC 09                 1418 	.db #0x09
   01CD 11                 1419 	.db #0x11
   01CE 13                 1420 	.db #0x13
   01CF 03                 1421 	.db #0x03
   01D0 01                 1422 	.db #0x01
   01D1 0B                 1423 	.db #0x0B
   01D2 09                 1424 	.db #0x09
   01D3 11                 1425 	.db #0x11
   01D4 10                 1426 	.db #0x10
   01D5 08                 1427 	.db #0x08
   01D6 0A                 1428 	.db #0x0A
   01D7 00                 1429 	.db #0x00
   01D8 02                 1430 	.db #0x02
   01D9 12                 1431 	.db #0x12
   01DA 10                 1432 	.db #0x10
   01DB 08                 1433 	.db #0x08
   01DC 0B                 1434 	.db #0x0B
   01DD 09                 1435 	.db #0x09
   01DE 11                 1436 	.db #0x11
   01DF 13                 1437 	.db #0x13
   01E0 03                 1438 	.db #0x03
   01E1 01                 1439 	.db #0x01
   01E2 0B                 1440 	.db #0x0B
   01E3 09                 1441 	.db #0x09
   01E4 08                 1442 	.db #0x08
   01E5 0A                 1443 	.db #0x0A
   01E6 00                 1444 	.db #0x00
   01E7 02                 1445 	.db #0x02
   01E8 12                 1446 	.db #0x12
   01E9 10                 1447 	.db #0x10
   01EA 08                 1448 	.db #0x08
   01EB 0A                 1449 	.db #0x0A
   01EC                    1450 _tri_up:
   01EC 0A                 1451 	.db #0x0A
   01ED 12                 1452 	.db #0x12
   01EE 10                 1453 	.db #0x10
   01EF 00                 1454 	.db #0x00
   01F0 02                 1455 	.db #0x02
   01F1 08                 1456 	.db #0x08
   01F2 0A                 1457 	.db #0x0A
   01F3 12                 1458 	.db #0x12
   01F4 13                 1459 	.db #0x13
   01F5 0B                 1460 	.db #0x0B
   01F6 09                 1461 	.db #0x09
   01F7 03                 1462 	.db #0x03
   01F8 01                 1463 	.db #0x01
   01F9 11                 1464 	.db #0x11
   01FA 13                 1465 	.db #0x13
   01FB 0B                 1466 	.db #0x0B
   01FC 12                 1467 	.db #0x12
   01FD 10                 1468 	.db #0x10
   01FE 00                 1469 	.db #0x00
   01FF 02                 1470 	.db #0x02
   0200 08                 1471 	.db #0x08
   0201 0A                 1472 	.db #0x0A
   0202 12                 1473 	.db #0x12
   0203 10                 1474 	.db #0x10
   0204 11                 1475 	.db #0x11
   0205 13                 1476 	.db #0x13
   0206 0B                 1477 	.db #0x0B
   0207 09                 1478 	.db #0x09
   0208 03                 1479 	.db #0x03
   0209 01                 1480 	.db #0x01
   020A 11                 1481 	.db #0x11
   020B 13                 1482 	.db #0x13
   020C 10                 1483 	.db #0x10
   020D 00                 1484 	.db #0x00
   020E 02                 1485 	.db #0x02
   020F 08                 1486 	.db #0x08
   0210 0A                 1487 	.db #0x0A
   0211 12                 1488 	.db #0x12
   0212 10                 1489 	.db #0x10
   0213 00                 1490 	.db #0x00
   0214 01                 1491 	.db #0x01
   0215 11                 1492 	.db #0x11
   0216 13                 1493 	.db #0x13
   0217 0B                 1494 	.db #0x0B
   0218 09                 1495 	.db #0x09
   0219 03                 1496 	.db #0x03
   021A 01                 1497 	.db #0x01
   021B 11                 1498 	.db #0x11
   021C 00                 1499 	.db #0x00
   021D 02                 1500 	.db #0x02
   021E 08                 1501 	.db #0x08
   021F 0A                 1502 	.db #0x0A
   0220 12                 1503 	.db #0x12
   0221 10                 1504 	.db #0x10
   0222 00                 1505 	.db #0x00
   0223 02                 1506 	.db #0x02
   0224 03                 1507 	.db #0x03
   0225 01                 1508 	.db #0x01
   0226 11                 1509 	.db #0x11
   0227 13                 1510 	.db #0x13
   0228 0B                 1511 	.db #0x0B
   0229 09                 1512 	.db #0x09
   022A 03                 1513 	.db #0x03
   022B 01                 1514 	.db #0x01
   022C 02                 1515 	.db #0x02
   022D 08                 1516 	.db #0x08
   022E 0A                 1517 	.db #0x0A
   022F 12                 1518 	.db #0x12
   0230 10                 1519 	.db #0x10
   0231 00                 1520 	.db #0x00
   0232 02                 1521 	.db #0x02
   0233 08                 1522 	.db #0x08
   0234 09                 1523 	.db #0x09
   0235 03                 1524 	.db #0x03
   0236 01                 1525 	.db #0x01
   0237 11                 1526 	.db #0x11
   0238 13                 1527 	.db #0x13
   0239 0B                 1528 	.db #0x0B
   023A 09                 1529 	.db #0x09
   023B 03                 1530 	.db #0x03
   023C 08                 1531 	.db #0x08
   023D 0A                 1532 	.db #0x0A
   023E 12                 1533 	.db #0x12
   023F 10                 1534 	.db #0x10
   0240 00                 1535 	.db #0x00
   0241 02                 1536 	.db #0x02
   0242 08                 1537 	.db #0x08
   0243 0A                 1538 	.db #0x0A
   0244 0B                 1539 	.db #0x0B
   0245 09                 1540 	.db #0x09
   0246 03                 1541 	.db #0x03
   0247 01                 1542 	.db #0x01
   0248 11                 1543 	.db #0x11
   0249 13                 1544 	.db #0x13
   024A 0B                 1545 	.db #0x0B
   024B 09                 1546 	.db #0x09
   024C 0A                 1547 	.db #0x0A
   024D 12                 1548 	.db #0x12
   024E 10                 1549 	.db #0x10
   024F 00                 1550 	.db #0x00
   0250 02                 1551 	.db #0x02
   0251 08                 1552 	.db #0x08
   0252 0A                 1553 	.db #0x0A
   0253 12                 1554 	.db #0x12
   0254 13                 1555 	.db #0x13
   0255 0B                 1556 	.db #0x0B
   0256 09                 1557 	.db #0x09
   0257 03                 1558 	.db #0x03
   0258 01                 1559 	.db #0x01
   0259 11                 1560 	.db #0x11
   025A 13                 1561 	.db #0x13
   025B 0B                 1562 	.db #0x0B
   025C 12                 1563 	.db #0x12
   025D 10                 1564 	.db #0x10
   025E 00                 1565 	.db #0x00
   025F 02                 1566 	.db #0x02
   0260 08                 1567 	.db #0x08
   0261 0A                 1568 	.db #0x0A
   0262 12                 1569 	.db #0x12
   0263 10                 1570 	.db #0x10
   0264 11                 1571 	.db #0x11
   0265 13                 1572 	.db #0x13
   0266 0B                 1573 	.db #0x0B
   0267 09                 1574 	.db #0x09
   0268 03                 1575 	.db #0x03
   0269 01                 1576 	.db #0x01
   026A 11                 1577 	.db #0x11
   026B 13                 1578 	.db #0x13
   026C 10                 1579 	.db #0x10
   026D 00                 1580 	.db #0x00
   026E 02                 1581 	.db #0x02
   026F 08                 1582 	.db #0x08
   0270 0A                 1583 	.db #0x0A
   0271 12                 1584 	.db #0x12
   0272 10                 1585 	.db #0x10
   0273 00                 1586 	.db #0x00
   0274 01                 1587 	.db #0x01
   0275 11                 1588 	.db #0x11
   0276 13                 1589 	.db #0x13
   0277 0B                 1590 	.db #0x0B
   0278 09                 1591 	.db #0x09
   0279 03                 1592 	.db #0x03
   027A 01                 1593 	.db #0x01
   027B 11                 1594 	.db #0x11
   027C 00                 1595 	.db #0x00
   027D 02                 1596 	.db #0x02
   027E 08                 1597 	.db #0x08
   027F 0A                 1598 	.db #0x0A
   0280 12                 1599 	.db #0x12
   0281 10                 1600 	.db #0x10
   0282 00                 1601 	.db #0x00
   0283 02                 1602 	.db #0x02
   0284 03                 1603 	.db #0x03
   0285 01                 1604 	.db #0x01
   0286 11                 1605 	.db #0x11
   0287 13                 1606 	.db #0x13
   0288 0B                 1607 	.db #0x0B
   0289 09                 1608 	.db #0x09
   028A 03                 1609 	.db #0x03
   028B 01                 1610 	.db #0x01
   028C 02                 1611 	.db #0x02
   028D 08                 1612 	.db #0x08
   028E 0A                 1613 	.db #0x0A
   028F 12                 1614 	.db #0x12
   0290 10                 1615 	.db #0x10
   0291 00                 1616 	.db #0x00
   0292 02                 1617 	.db #0x02
   0293 08                 1618 	.db #0x08
   0294 09                 1619 	.db #0x09
   0295 03                 1620 	.db #0x03
   0296 01                 1621 	.db #0x01
   0297 11                 1622 	.db #0x11
   0298 13                 1623 	.db #0x13
   0299 0B                 1624 	.db #0x0B
   029A 09                 1625 	.db #0x09
   029B 03                 1626 	.db #0x03
   029C 08                 1627 	.db #0x08
   029D 0A                 1628 	.db #0x0A
   029E 12                 1629 	.db #0x12
   029F 10                 1630 	.db #0x10
   02A0 00                 1631 	.db #0x00
   02A1 02                 1632 	.db #0x02
   02A2 08                 1633 	.db #0x08
   02A3 0A                 1634 	.db #0x0A
   02A4 0B                 1635 	.db #0x0B
   02A5 09                 1636 	.db #0x09
   02A6 03                 1637 	.db #0x03
   02A7 01                 1638 	.db #0x01
   02A8 11                 1639 	.db #0x11
   02A9 13                 1640 	.db #0x13
   02AA 0B                 1641 	.db #0x0B
   02AB 09                 1642 	.db #0x09
   02AC                    1643 _tri_dia:
   02AC 05                 1644 	.db #0x05
   02AD 1B                 1645 	.db #0x1B
   02AE 0F                 1646 	.db #0x0F
   02AF 1D                 1647 	.db #0x1D
   02B0 15                 1648 	.db #0x15
   02B1 19                 1649 	.db #0x19
   02B2 05                 1650 	.db #0x05
   02B3 1B                 1651 	.db #0x1B
   02B4 0F                 1652 	.db #0x0F
   02B5 1D                 1653 	.db #0x1D
   02B6 15                 1654 	.db #0x15
   02B7 19                 1655 	.db #0x19
   02B8 05                 1656 	.db #0x05
   02B9 1B                 1657 	.db #0x1B
   02BA 0F                 1658 	.db #0x0F
   02BB 1D                 1659 	.db #0x1D
   02BC 1D                 1660 	.db #0x1D
   02BD 05                 1661 	.db #0x05
   02BE 19                 1662 	.db #0x19
   02BF 0F                 1663 	.db #0x0F
   02C0 1B                 1664 	.db #0x1B
   02C1 15                 1665 	.db #0x15
   02C2 1D                 1666 	.db #0x1D
   02C3 05                 1667 	.db #0x05
   02C4 19                 1668 	.db #0x19
   02C5 0F                 1669 	.db #0x0F
   02C6 1B                 1670 	.db #0x1B
   02C7 15                 1671 	.db #0x15
   02C8 1D                 1672 	.db #0x1D
   02C9 05                 1673 	.db #0x05
   02CA 19                 1674 	.db #0x19
   02CB 0F                 1675 	.db #0x0F
   02CC 0F                 1676 	.db #0x0F
   02CD 1D                 1677 	.db #0x1D
   02CE 15                 1678 	.db #0x15
   02CF 19                 1679 	.db #0x19
   02D0 05                 1680 	.db #0x05
   02D1 1B                 1681 	.db #0x1B
   02D2 0F                 1682 	.db #0x0F
   02D3 1D                 1683 	.db #0x1D
   02D4 15                 1684 	.db #0x15
   02D5 19                 1685 	.db #0x19
   02D6 05                 1686 	.db #0x05
   02D7 1B                 1687 	.db #0x1B
   02D8 0F                 1688 	.db #0x0F
   02D9 1D                 1689 	.db #0x1D
   02DA 15                 1690 	.db #0x15
   02DB 19                 1691 	.db #0x19
   02DC 19                 1692 	.db #0x19
   02DD 0F                 1693 	.db #0x0F
   02DE 1B                 1694 	.db #0x1B
   02DF 15                 1695 	.db #0x15
   02E0 1D                 1696 	.db #0x1D
   02E1 05                 1697 	.db #0x05
   02E2 19                 1698 	.db #0x19
   02E3 0F                 1699 	.db #0x0F
   02E4 1B                 1700 	.db #0x1B
   02E5 15                 1701 	.db #0x15
   02E6 1D                 1702 	.db #0x1D
   02E7 05                 1703 	.db #0x05
   02E8 19                 1704 	.db #0x19
   02E9 0F                 1705 	.db #0x0F
   02EA 1B                 1706 	.db #0x1B
   02EB 15                 1707 	.db #0x15
   02EC 15                 1708 	.db #0x15
   02ED 19                 1709 	.db #0x19
   02EE 05                 1710 	.db #0x05
   02EF 1B                 1711 	.db #0x1B
   02F0 0F                 1712 	.db #0x0F
   02F1 1D                 1713 	.db #0x1D
   02F2 15                 1714 	.db #0x15
   02F3 19                 1715 	.db #0x19
   02F4 05                 1716 	.db #0x05
   02F5 1B                 1717 	.db #0x1B
   02F6 0F                 1718 	.db #0x0F
   02F7 1D                 1719 	.db #0x1D
   02F8 15                 1720 	.db #0x15
   02F9 19                 1721 	.db #0x19
   02FA 05                 1722 	.db #0x05
   02FB 1B                 1723 	.db #0x1B
   02FC 1B                 1724 	.db #0x1B
   02FD 15                 1725 	.db #0x15
   02FE 1D                 1726 	.db #0x1D
   02FF 05                 1727 	.db #0x05
   0300 19                 1728 	.db #0x19
   0301 0F                 1729 	.db #0x0F
   0302 1B                 1730 	.db #0x1B
   0303 15                 1731 	.db #0x15
   0304 1D                 1732 	.db #0x1D
   0305 05                 1733 	.db #0x05
   0306 19                 1734 	.db #0x19
   0307 0F                 1735 	.db #0x0F
   0308 1B                 1736 	.db #0x1B
   0309 15                 1737 	.db #0x15
   030A 1D                 1738 	.db #0x1D
   030B 05                 1739 	.db #0x05
   030C 05                 1740 	.db #0x05
   030D 1B                 1741 	.db #0x1B
   030E 0F                 1742 	.db #0x0F
   030F 1D                 1743 	.db #0x1D
   0310 15                 1744 	.db #0x15
   0311 19                 1745 	.db #0x19
   0312 05                 1746 	.db #0x05
   0313 1B                 1747 	.db #0x1B
   0314 0F                 1748 	.db #0x0F
   0315 1D                 1749 	.db #0x1D
   0316 15                 1750 	.db #0x15
   0317 19                 1751 	.db #0x19
   0318 05                 1752 	.db #0x05
   0319 1B                 1753 	.db #0x1B
   031A 0F                 1754 	.db #0x0F
   031B 1D                 1755 	.db #0x1D
   031C 1D                 1756 	.db #0x1D
   031D 05                 1757 	.db #0x05
   031E 19                 1758 	.db #0x19
   031F 0F                 1759 	.db #0x0F
   0320 1B                 1760 	.db #0x1B
   0321 15                 1761 	.db #0x15
   0322 1D                 1762 	.db #0x1D
   0323 05                 1763 	.db #0x05
   0324 19                 1764 	.db #0x19
   0325 0F                 1765 	.db #0x0F
   0326 1B                 1766 	.db #0x1B
   0327 15                 1767 	.db #0x15
   0328 1D                 1768 	.db #0x1D
   0329 05                 1769 	.db #0x05
   032A 19                 1770 	.db #0x19
   032B 0F                 1771 	.db #0x0F
   032C 0F                 1772 	.db #0x0F
   032D 1D                 1773 	.db #0x1D
   032E 15                 1774 	.db #0x15
   032F 19                 1775 	.db #0x19
   0330 05                 1776 	.db #0x05
   0331 1B                 1777 	.db #0x1B
   0332 0F                 1778 	.db #0x0F
   0333 1D                 1779 	.db #0x1D
   0334 15                 1780 	.db #0x15
   0335 19                 1781 	.db #0x19
   0336 05                 1782 	.db #0x05
   0337 1B                 1783 	.db #0x1B
   0338 0F                 1784 	.db #0x0F
   0339 1D                 1785 	.db #0x1D
   033A 15                 1786 	.db #0x15
   033B 19                 1787 	.db #0x19
   033C 19                 1788 	.db #0x19
   033D 0F                 1789 	.db #0x0F
   033E 1B                 1790 	.db #0x1B
   033F 15                 1791 	.db #0x15
   0340 1D                 1792 	.db #0x1D
   0341 05                 1793 	.db #0x05
   0342 19                 1794 	.db #0x19
   0343 0F                 1795 	.db #0x0F
   0344 1B                 1796 	.db #0x1B
   0345 15                 1797 	.db #0x15
   0346 1D                 1798 	.db #0x1D
   0347 05                 1799 	.db #0x05
   0348 19                 1800 	.db #0x19
   0349 0F                 1801 	.db #0x0F
   034A 1B                 1802 	.db #0x1B
   034B 15                 1803 	.db #0x15
   034C 15                 1804 	.db #0x15
   034D 19                 1805 	.db #0x19
   034E 05                 1806 	.db #0x05
   034F 1B                 1807 	.db #0x1B
   0350 0F                 1808 	.db #0x0F
   0351 1D                 1809 	.db #0x1D
   0352 15                 1810 	.db #0x15
   0353 19                 1811 	.db #0x19
   0354 05                 1812 	.db #0x05
   0355 1B                 1813 	.db #0x1B
   0356 0F                 1814 	.db #0x0F
   0357 1D                 1815 	.db #0x1D
   0358 15                 1816 	.db #0x15
   0359 19                 1817 	.db #0x19
   035A 05                 1818 	.db #0x05
   035B 1B                 1819 	.db #0x1B
   035C 1B                 1820 	.db #0x1B
   035D 15                 1821 	.db #0x15
   035E 1D                 1822 	.db #0x1D
   035F 05                 1823 	.db #0x05
   0360 19                 1824 	.db #0x19
   0361 0F                 1825 	.db #0x0F
   0362 1B                 1826 	.db #0x1B
   0363 15                 1827 	.db #0x15
   0364 1D                 1828 	.db #0x1D
   0365 05                 1829 	.db #0x05
   0366 19                 1830 	.db #0x19
   0367 0F                 1831 	.db #0x0F
   0368 1B                 1832 	.db #0x1B
   0369 15                 1833 	.db #0x15
   036A 1D                 1834 	.db #0x1D
   036B 05                 1835 	.db #0x05
   036C                    1836 _tri_side1:
   036C 0A                 1837 	.db #0x0A
   036D 12                 1838 	.db #0x12
   036E 10                 1839 	.db #0x10
   036F 00                 1840 	.db #0x00
   0370 02                 1841 	.db #0x02
   0371 08                 1842 	.db #0x08
   0372 0A                 1843 	.db #0x0A
   0373 12                 1844 	.db #0x12
   0374 10                 1845 	.db #0x10
   0375 00                 1846 	.db #0x00
   0376 02                 1847 	.db #0x02
   0377 08                 1848 	.db #0x08
   0378 0A                 1849 	.db #0x0A
   0379 12                 1850 	.db #0x12
   037A 10                 1851 	.db #0x10
   037B 00                 1852 	.db #0x00
   037C 12                 1853 	.db #0x12
   037D 10                 1854 	.db #0x10
   037E 00                 1855 	.db #0x00
   037F 02                 1856 	.db #0x02
   0380 08                 1857 	.db #0x08
   0381 0A                 1858 	.db #0x0A
   0382 12                 1859 	.db #0x12
   0383 10                 1860 	.db #0x10
   0384 00                 1861 	.db #0x00
   0385 02                 1862 	.db #0x02
   0386 08                 1863 	.db #0x08
   0387 0A                 1864 	.db #0x0A
   0388 12                 1865 	.db #0x12
   0389 10                 1866 	.db #0x10
   038A 00                 1867 	.db #0x00
   038B 02                 1868 	.db #0x02
   038C 10                 1869 	.db #0x10
   038D 00                 1870 	.db #0x00
   038E 02                 1871 	.db #0x02
   038F 08                 1872 	.db #0x08
   0390 0A                 1873 	.db #0x0A
   0391 12                 1874 	.db #0x12
   0392 10                 1875 	.db #0x10
   0393 00                 1876 	.db #0x00
   0394 02                 1877 	.db #0x02
   0395 08                 1878 	.db #0x08
   0396 0A                 1879 	.db #0x0A
   0397 12                 1880 	.db #0x12
   0398 10                 1881 	.db #0x10
   0399 00                 1882 	.db #0x00
   039A 02                 1883 	.db #0x02
   039B 08                 1884 	.db #0x08
   039C 00                 1885 	.db #0x00
   039D 02                 1886 	.db #0x02
   039E 08                 1887 	.db #0x08
   039F 0A                 1888 	.db #0x0A
   03A0 12                 1889 	.db #0x12
   03A1 10                 1890 	.db #0x10
   03A2 00                 1891 	.db #0x00
   03A3 02                 1892 	.db #0x02
   03A4 08                 1893 	.db #0x08
   03A5 0A                 1894 	.db #0x0A
   03A6 12                 1895 	.db #0x12
   03A7 10                 1896 	.db #0x10
   03A8 00                 1897 	.db #0x00
   03A9 02                 1898 	.db #0x02
   03AA 08                 1899 	.db #0x08
   03AB 0A                 1900 	.db #0x0A
   03AC 02                 1901 	.db #0x02
   03AD 08                 1902 	.db #0x08
   03AE 0A                 1903 	.db #0x0A
   03AF 12                 1904 	.db #0x12
   03B0 10                 1905 	.db #0x10
   03B1 00                 1906 	.db #0x00
   03B2 02                 1907 	.db #0x02
   03B3 08                 1908 	.db #0x08
   03B4 0A                 1909 	.db #0x0A
   03B5 12                 1910 	.db #0x12
   03B6 10                 1911 	.db #0x10
   03B7 00                 1912 	.db #0x00
   03B8 02                 1913 	.db #0x02
   03B9 08                 1914 	.db #0x08
   03BA 0A                 1915 	.db #0x0A
   03BB 12                 1916 	.db #0x12
   03BC 08                 1917 	.db #0x08
   03BD 0A                 1918 	.db #0x0A
   03BE 12                 1919 	.db #0x12
   03BF 10                 1920 	.db #0x10
   03C0 00                 1921 	.db #0x00
   03C1 02                 1922 	.db #0x02
   03C2 08                 1923 	.db #0x08
   03C3 0A                 1924 	.db #0x0A
   03C4 12                 1925 	.db #0x12
   03C5 10                 1926 	.db #0x10
   03C6 00                 1927 	.db #0x00
   03C7 02                 1928 	.db #0x02
   03C8 08                 1929 	.db #0x08
   03C9 0A                 1930 	.db #0x0A
   03CA 12                 1931 	.db #0x12
   03CB 10                 1932 	.db #0x10
   03CC 0A                 1933 	.db #0x0A
   03CD 12                 1934 	.db #0x12
   03CE 10                 1935 	.db #0x10
   03CF 00                 1936 	.db #0x00
   03D0 02                 1937 	.db #0x02
   03D1 08                 1938 	.db #0x08
   03D2 0A                 1939 	.db #0x0A
   03D3 12                 1940 	.db #0x12
   03D4 10                 1941 	.db #0x10
   03D5 00                 1942 	.db #0x00
   03D6 02                 1943 	.db #0x02
   03D7 08                 1944 	.db #0x08
   03D8 0A                 1945 	.db #0x0A
   03D9 12                 1946 	.db #0x12
   03DA 10                 1947 	.db #0x10
   03DB 00                 1948 	.db #0x00
   03DC 12                 1949 	.db #0x12
   03DD 10                 1950 	.db #0x10
   03DE 00                 1951 	.db #0x00
   03DF 02                 1952 	.db #0x02
   03E0 08                 1953 	.db #0x08
   03E1 0A                 1954 	.db #0x0A
   03E2 12                 1955 	.db #0x12
   03E3 10                 1956 	.db #0x10
   03E4 00                 1957 	.db #0x00
   03E5 02                 1958 	.db #0x02
   03E6 08                 1959 	.db #0x08
   03E7 0A                 1960 	.db #0x0A
   03E8 12                 1961 	.db #0x12
   03E9 10                 1962 	.db #0x10
   03EA 00                 1963 	.db #0x00
   03EB 02                 1964 	.db #0x02
   03EC 10                 1965 	.db #0x10
   03ED 00                 1966 	.db #0x00
   03EE 02                 1967 	.db #0x02
   03EF 08                 1968 	.db #0x08
   03F0 0A                 1969 	.db #0x0A
   03F1 12                 1970 	.db #0x12
   03F2 10                 1971 	.db #0x10
   03F3 00                 1972 	.db #0x00
   03F4 02                 1973 	.db #0x02
   03F5 08                 1974 	.db #0x08
   03F6 0A                 1975 	.db #0x0A
   03F7 12                 1976 	.db #0x12
   03F8 10                 1977 	.db #0x10
   03F9 00                 1978 	.db #0x00
   03FA 02                 1979 	.db #0x02
   03FB 08                 1980 	.db #0x08
   03FC 00                 1981 	.db #0x00
   03FD 02                 1982 	.db #0x02
   03FE 08                 1983 	.db #0x08
   03FF 0A                 1984 	.db #0x0A
   0400 12                 1985 	.db #0x12
   0401 10                 1986 	.db #0x10
   0402 00                 1987 	.db #0x00
   0403 02                 1988 	.db #0x02
   0404 08                 1989 	.db #0x08
   0405 0A                 1990 	.db #0x0A
   0406 12                 1991 	.db #0x12
   0407 10                 1992 	.db #0x10
   0408 00                 1993 	.db #0x00
   0409 02                 1994 	.db #0x02
   040A 08                 1995 	.db #0x08
   040B 0A                 1996 	.db #0x0A
   040C 02                 1997 	.db #0x02
   040D 08                 1998 	.db #0x08
   040E 0A                 1999 	.db #0x0A
   040F 12                 2000 	.db #0x12
   0410 10                 2001 	.db #0x10
   0411 00                 2002 	.db #0x00
   0412 02                 2003 	.db #0x02
   0413 08                 2004 	.db #0x08
   0414 0A                 2005 	.db #0x0A
   0415 12                 2006 	.db #0x12
   0416 10                 2007 	.db #0x10
   0417 00                 2008 	.db #0x00
   0418 02                 2009 	.db #0x02
   0419 08                 2010 	.db #0x08
   041A 0A                 2011 	.db #0x0A
   041B 12                 2012 	.db #0x12
   041C 08                 2013 	.db #0x08
   041D 0A                 2014 	.db #0x0A
   041E 12                 2015 	.db #0x12
   041F 10                 2016 	.db #0x10
   0420 00                 2017 	.db #0x00
   0421 02                 2018 	.db #0x02
   0422 08                 2019 	.db #0x08
   0423 0A                 2020 	.db #0x0A
   0424 12                 2021 	.db #0x12
   0425 10                 2022 	.db #0x10
   0426 00                 2023 	.db #0x00
   0427 02                 2024 	.db #0x02
   0428 08                 2025 	.db #0x08
   0429 0A                 2026 	.db #0x0A
   042A 12                 2027 	.db #0x12
   042B 10                 2028 	.db #0x10
   042C                    2029 _tri_side2:
   042C 00                 2030 	.db #0x00
   042D 10                 2031 	.db #0x10
   042E 12                 2032 	.db #0x12
   042F 0A                 2033 	.db #0x0A
   0430 08                 2034 	.db #0x08
   0431 02                 2035 	.db #0x02
   0432 00                 2036 	.db #0x00
   0433 10                 2037 	.db #0x10
   0434 12                 2038 	.db #0x12
   0435 0A                 2039 	.db #0x0A
   0436 08                 2040 	.db #0x08
   0437 02                 2041 	.db #0x02
   0438 00                 2042 	.db #0x00
   0439 10                 2043 	.db #0x10
   043A 12                 2044 	.db #0x12
   043B 0A                 2045 	.db #0x0A
   043C 02                 2046 	.db #0x02
   043D 00                 2047 	.db #0x00
   043E 10                 2048 	.db #0x10
   043F 12                 2049 	.db #0x12
   0440 0A                 2050 	.db #0x0A
   0441 08                 2051 	.db #0x08
   0442 02                 2052 	.db #0x02
   0443 00                 2053 	.db #0x00
   0444 10                 2054 	.db #0x10
   0445 12                 2055 	.db #0x12
   0446 0A                 2056 	.db #0x0A
   0447 08                 2057 	.db #0x08
   0448 02                 2058 	.db #0x02
   0449 00                 2059 	.db #0x00
   044A 10                 2060 	.db #0x10
   044B 12                 2061 	.db #0x12
   044C 08                 2062 	.db #0x08
   044D 02                 2063 	.db #0x02
   044E 00                 2064 	.db #0x00
   044F 10                 2065 	.db #0x10
   0450 12                 2066 	.db #0x12
   0451 0A                 2067 	.db #0x0A
   0452 08                 2068 	.db #0x08
   0453 02                 2069 	.db #0x02
   0454 00                 2070 	.db #0x00
   0455 10                 2071 	.db #0x10
   0456 12                 2072 	.db #0x12
   0457 0A                 2073 	.db #0x0A
   0458 08                 2074 	.db #0x08
   0459 02                 2075 	.db #0x02
   045A 00                 2076 	.db #0x00
   045B 10                 2077 	.db #0x10
   045C 0A                 2078 	.db #0x0A
   045D 08                 2079 	.db #0x08
   045E 02                 2080 	.db #0x02
   045F 00                 2081 	.db #0x00
   0460 10                 2082 	.db #0x10
   0461 12                 2083 	.db #0x12
   0462 0A                 2084 	.db #0x0A
   0463 08                 2085 	.db #0x08
   0464 02                 2086 	.db #0x02
   0465 00                 2087 	.db #0x00
   0466 10                 2088 	.db #0x10
   0467 12                 2089 	.db #0x12
   0468 0A                 2090 	.db #0x0A
   0469 08                 2091 	.db #0x08
   046A 02                 2092 	.db #0x02
   046B 00                 2093 	.db #0x00
   046C 12                 2094 	.db #0x12
   046D 0A                 2095 	.db #0x0A
   046E 08                 2096 	.db #0x08
   046F 02                 2097 	.db #0x02
   0470 00                 2098 	.db #0x00
   0471 10                 2099 	.db #0x10
   0472 12                 2100 	.db #0x12
   0473 0A                 2101 	.db #0x0A
   0474 08                 2102 	.db #0x08
   0475 02                 2103 	.db #0x02
   0476 00                 2104 	.db #0x00
   0477 10                 2105 	.db #0x10
   0478 12                 2106 	.db #0x12
   0479 0A                 2107 	.db #0x0A
   047A 08                 2108 	.db #0x08
   047B 02                 2109 	.db #0x02
   047C 10                 2110 	.db #0x10
   047D 12                 2111 	.db #0x12
   047E 0A                 2112 	.db #0x0A
   047F 08                 2113 	.db #0x08
   0480 02                 2114 	.db #0x02
   0481 00                 2115 	.db #0x00
   0482 10                 2116 	.db #0x10
   0483 12                 2117 	.db #0x12
   0484 0A                 2118 	.db #0x0A
   0485 08                 2119 	.db #0x08
   0486 02                 2120 	.db #0x02
   0487 00                 2121 	.db #0x00
   0488 10                 2122 	.db #0x10
   0489 12                 2123 	.db #0x12
   048A 0A                 2124 	.db #0x0A
   048B 08                 2125 	.db #0x08
   048C 00                 2126 	.db #0x00
   048D 10                 2127 	.db #0x10
   048E 12                 2128 	.db #0x12
   048F 0A                 2129 	.db #0x0A
   0490 08                 2130 	.db #0x08
   0491 02                 2131 	.db #0x02
   0492 00                 2132 	.db #0x00
   0493 10                 2133 	.db #0x10
   0494 12                 2134 	.db #0x12
   0495 0A                 2135 	.db #0x0A
   0496 08                 2136 	.db #0x08
   0497 02                 2137 	.db #0x02
   0498 00                 2138 	.db #0x00
   0499 10                 2139 	.db #0x10
   049A 12                 2140 	.db #0x12
   049B 0A                 2141 	.db #0x0A
   049C 02                 2142 	.db #0x02
   049D 00                 2143 	.db #0x00
   049E 10                 2144 	.db #0x10
   049F 12                 2145 	.db #0x12
   04A0 0A                 2146 	.db #0x0A
   04A1 08                 2147 	.db #0x08
   04A2 02                 2148 	.db #0x02
   04A3 00                 2149 	.db #0x00
   04A4 10                 2150 	.db #0x10
   04A5 12                 2151 	.db #0x12
   04A6 0A                 2152 	.db #0x0A
   04A7 08                 2153 	.db #0x08
   04A8 02                 2154 	.db #0x02
   04A9 00                 2155 	.db #0x00
   04AA 10                 2156 	.db #0x10
   04AB 12                 2157 	.db #0x12
   04AC 08                 2158 	.db #0x08
   04AD 02                 2159 	.db #0x02
   04AE 00                 2160 	.db #0x00
   04AF 10                 2161 	.db #0x10
   04B0 12                 2162 	.db #0x12
   04B1 0A                 2163 	.db #0x0A
   04B2 08                 2164 	.db #0x08
   04B3 02                 2165 	.db #0x02
   04B4 00                 2166 	.db #0x00
   04B5 10                 2167 	.db #0x10
   04B6 12                 2168 	.db #0x12
   04B7 0A                 2169 	.db #0x0A
   04B8 08                 2170 	.db #0x08
   04B9 02                 2171 	.db #0x02
   04BA 00                 2172 	.db #0x00
   04BB 10                 2173 	.db #0x10
   04BC 0A                 2174 	.db #0x0A
   04BD 08                 2175 	.db #0x08
   04BE 02                 2176 	.db #0x02
   04BF 00                 2177 	.db #0x00
   04C0 10                 2178 	.db #0x10
   04C1 12                 2179 	.db #0x12
   04C2 0A                 2180 	.db #0x0A
   04C3 08                 2181 	.db #0x08
   04C4 02                 2182 	.db #0x02
   04C5 00                 2183 	.db #0x00
   04C6 10                 2184 	.db #0x10
   04C7 12                 2185 	.db #0x12
   04C8 0A                 2186 	.db #0x0A
   04C9 08                 2187 	.db #0x08
   04CA 02                 2188 	.db #0x02
   04CB 00                 2189 	.db #0x00
   04CC 12                 2190 	.db #0x12
   04CD 0A                 2191 	.db #0x0A
   04CE 08                 2192 	.db #0x08
   04CF 02                 2193 	.db #0x02
   04D0 00                 2194 	.db #0x00
   04D1 10                 2195 	.db #0x10
   04D2 12                 2196 	.db #0x12
   04D3 0A                 2197 	.db #0x0A
   04D4 08                 2198 	.db #0x08
   04D5 02                 2199 	.db #0x02
   04D6 00                 2200 	.db #0x00
   04D7 10                 2201 	.db #0x10
   04D8 12                 2202 	.db #0x12
   04D9 0A                 2203 	.db #0x0A
   04DA 08                 2204 	.db #0x08
   04DB 02                 2205 	.db #0x02
   04DC 10                 2206 	.db #0x10
   04DD 12                 2207 	.db #0x12
   04DE 0A                 2208 	.db #0x0A
   04DF 08                 2209 	.db #0x08
   04E0 02                 2210 	.db #0x02
   04E1 00                 2211 	.db #0x00
   04E2 10                 2212 	.db #0x10
   04E3 12                 2213 	.db #0x12
   04E4 0A                 2214 	.db #0x0A
   04E5 08                 2215 	.db #0x08
   04E6 02                 2216 	.db #0x02
   04E7 00                 2217 	.db #0x00
   04E8 10                 2218 	.db #0x10
   04E9 12                 2219 	.db #0x12
   04EA 0A                 2220 	.db #0x0A
   04EB 08                 2221 	.db #0x08
   04EC                    2222 _tri_inva1:
   04EC 1E                 2223 	.db #0x1E
   04ED 1F                 2224 	.db #0x1F
   04EE 1E                 2225 	.db #0x1E
   04EF 11                 2226 	.db #0x11
   04F0 13                 2227 	.db #0x13
   04F1 1E                 2228 	.db #0x1E
   04F2 08                 2229 	.db #0x08
   04F3 0A                 2230 	.db #0x0A
   04F4 00                 2231 	.db #0x00
   04F5 0E                 2232 	.db #0x0E
   04F6 10                 2233 	.db #0x10
   04F7 1E                 2234 	.db #0x1E
   04F8 1C                 2235 	.db #0x1C
   04F9 1E                 2236 	.db #0x1E
   04FA 08                 2237 	.db #0x08
   04FB 0A                 2238 	.db #0x0A
   04FC 1F                 2239 	.db #0x1F
   04FD 1F                 2240 	.db #0x1F
   04FE 1E                 2241 	.db #0x1E
   04FF 1E                 2242 	.db #0x1E
   0500 15                 2243 	.db #0x15
   0501 17                 2244 	.db #0x17
   0502 0A                 2245 	.db #0x0A
   0503 00                 2246 	.db #0x00
   0504 02                 2247 	.db #0x02
   0505 11                 2248 	.db #0x11
   0506 13                 2249 	.db #0x13
   0507 1F                 2250 	.db #0x1F
   0508 1C                 2251 	.db #0x1C
   0509 08                 2252 	.db #0x08
   050A 0A                 2253 	.db #0x0A
   050B 1F                 2254 	.db #0x1F
   050C 1E                 2255 	.db #0x1E
   050D 1F                 2256 	.db #0x1F
   050E 08                 2257 	.db #0x08
   050F 1B                 2258 	.db #0x1B
   0510 1A                 2259 	.db #0x1A
   0511 11                 2260 	.db #0x11
   0512 13                 2261 	.db #0x13
   0513 1C                 2262 	.db #0x1C
   0514 1E                 2263 	.db #0x1E
   0515 1F                 2264 	.db #0x1F
   0516 19                 2265 	.db #0x19
   0517 1E                 2266 	.db #0x1E
   0518 06                 2267 	.db #0x06
   0519 04                 2268 	.db #0x04
   051A 1C                 2269 	.db #0x1C
   051B 1C                 2270 	.db #0x1C
   051C 1E                 2271 	.db #0x1E
   051D 08                 2272 	.db #0x08
   051E 16                 2273 	.db #0x16
   051F 18                 2274 	.db #0x18
   0520 1B                 2275 	.db #0x1B
   0521 1E                 2276 	.db #0x1E
   0522 19                 2277 	.db #0x19
   0523 1D                 2278 	.db #0x1D
   0524 1F                 2279 	.db #0x1F
   0525 1E                 2280 	.db #0x1E
   0526 19                 2281 	.db #0x19
   0527 08                 2282 	.db #0x08
   0528 1B                 2283 	.db #0x1B
   0529 1E                 2284 	.db #0x1E
   052A 12                 2285 	.db #0x12
   052B 10                 2286 	.db #0x10
   052C 08                 2287 	.db #0x08
   052D 16                 2288 	.db #0x16
   052E 10                 2289 	.db #0x10
   052F 11                 2290 	.db #0x11
   0530 17                 2291 	.db #0x17
   0531 09                 2292 	.db #0x09
   0532 11                 2293 	.db #0x11
   0533 0F                 2294 	.db #0x0F
   0534 01                 2295 	.db #0x01
   0535 1E                 2296 	.db #0x1E
   0536 14                 2297 	.db #0x14
   0537 16                 2298 	.db #0x16
   0538 17                 2299 	.db #0x17
   0539 15                 2300 	.db #0x15
   053A 10                 2301 	.db #0x10
   053B 1E                 2302 	.db #0x1E
   053C 0A                 2303 	.db #0x0A
   053D 18                 2304 	.db #0x18
   053E 1F                 2305 	.db #0x1F
   053F 1E                 2306 	.db #0x1E
   0540 19                 2307 	.db #0x19
   0541 0B                 2308 	.db #0x0B
   0542 09                 2309 	.db #0x09
   0543 11                 2310 	.db #0x11
   0544 0F                 2311 	.db #0x0F
   0545 1C                 2312 	.db #0x1C
   0546 05                 2313 	.db #0x05
   0547 09                 2314 	.db #0x09
   0548 1E                 2315 	.db #0x1E
   0549 0B                 2316 	.db #0x0B
   054A 09                 2317 	.db #0x09
   054B 1F                 2318 	.db #0x1F
   054C 1E                 2319 	.db #0x1E
   054D 19                 2320 	.db #0x19
   054E 1E                 2321 	.db #0x1E
   054F 1F                 2322 	.db #0x1F
   0550 19                 2323 	.db #0x19
   0551 1E                 2324 	.db #0x1E
   0552 0B                 2325 	.db #0x0B
   0553 1B                 2326 	.db #0x1B
   0554 15                 2327 	.db #0x15
   0555 19                 2328 	.db #0x19
   0556 1D                 2329 	.db #0x1D
   0557 19                 2330 	.db #0x19
   0558 19                 2331 	.db #0x19
   0559 13                 2332 	.db #0x13
   055A 0B                 2333 	.db #0x0B
   055B 09                 2334 	.db #0x09
   055C 1E                 2335 	.db #0x1E
   055D 15                 2336 	.db #0x15
   055E 13                 2337 	.db #0x13
   055F 1E                 2338 	.db #0x1E
   0560 0C                 2339 	.db #0x0C
   0561 01                 2340 	.db #0x01
   0562 1E                 2341 	.db #0x1E
   0563 1F                 2342 	.db #0x1F
   0564 1E                 2343 	.db #0x1E
   0565 1E                 2344 	.db #0x1E
   0566 1C                 2345 	.db #0x1C
   0567 1D                 2346 	.db #0x1D
   0568 01                 2347 	.db #0x01
   0569 11                 2348 	.db #0x11
   056A 13                 2349 	.db #0x13
   056B 0B                 2350 	.db #0x0B
   056C 09                 2351 	.db #0x09
   056D 1A                 2352 	.db #0x1A
   056E 14                 2353 	.db #0x14
   056F 04                 2354 	.db #0x04
   0570 0E                 2355 	.db #0x0E
   0571 07                 2356 	.db #0x07
   0572 01                 2357 	.db #0x01
   0573 1E                 2358 	.db #0x1E
   0574 1F                 2359 	.db #0x1F
   0575 00                 2360 	.db #0x00
   0576 02                 2361 	.db #0x02
   0577 1E                 2362 	.db #0x1E
   0578 03                 2363 	.db #0x03
   0579 01                 2364 	.db #0x01
   057A 0C                 2365 	.db #0x0C
   057B 06                 2366 	.db #0x06
   057C 0B                 2367 	.db #0x0B
   057D 1B                 2368 	.db #0x1B
   057E 04                 2369 	.db #0x04
   057F 0E                 2370 	.db #0x0E
   0580 19                 2371 	.db #0x19
   0581 17                 2372 	.db #0x17
   0582 07                 2373 	.db #0x07
   0583 1D                 2374 	.db #0x1D
   0584 1C                 2375 	.db #0x1C
   0585 02                 2376 	.db #0x02
   0586 1F                 2377 	.db #0x1F
   0587 1E                 2378 	.db #0x1E
   0588 08                 2379 	.db #0x08
   0589 07                 2380 	.db #0x07
   058A 06                 2381 	.db #0x06
   058B 1E                 2382 	.db #0x1E
   058C 08                 2383 	.db #0x08
   058D 04                 2384 	.db #0x04
   058E 0E                 2385 	.db #0x0E
   058F 14                 2386 	.db #0x14
   0590 09                 2387 	.db #0x09
   0591 11                 2388 	.db #0x11
   0592 17                 2389 	.db #0x17
   0593 07                 2390 	.db #0x07
   0594 1D                 2391 	.db #0x1D
   0595 1F                 2392 	.db #0x1F
   0596 1E                 2393 	.db #0x1E
   0597 08                 2394 	.db #0x08
   0598 0A                 2395 	.db #0x0A
   0599 1E                 2396 	.db #0x1E
   059A 1F                 2397 	.db #0x1F
   059B 1F                 2398 	.db #0x1F
   059C 04                 2399 	.db #0x04
   059D 0E                 2400 	.db #0x0E
   059E 14                 2401 	.db #0x14
   059F 0A                 2402 	.db #0x0A
   05A0 0B                 2403 	.db #0x0B
   05A1 09                 2404 	.db #0x09
   05A2 11                 2405 	.db #0x11
   05A3 17                 2406 	.db #0x17
   05A4 07                 2407 	.db #0x07
   05A5 01                 2408 	.db #0x01
   05A6 08                 2409 	.db #0x08
   05A7 0A                 2410 	.db #0x0A
   05A8 1E                 2411 	.db #0x1E
   05A9 1F                 2412 	.db #0x1F
   05AA 1F                 2413 	.db #0x1F
   05AB 1E                 2414 	.db #0x1E
   05AC                    2415 _tri_inva2:
   05AC 14                 2416 	.db #0x14
   05AD 04                 2417 	.db #0x04
   05AE 0E                 2418 	.db #0x0E
   05AF 14                 2419 	.db #0x14
   05B0 04                 2420 	.db #0x04
   05B1 0E                 2421 	.db #0x0E
   05B2 14                 2422 	.db #0x14
   05B3 1A                 2423 	.db #0x1A
   05B4 1B                 2424 	.db #0x1B
   05B5 15                 2425 	.db #0x15
   05B6 0F                 2426 	.db #0x0F
   05B7 05                 2427 	.db #0x05
   05B8 15                 2428 	.db #0x15
   05B9 0F                 2429 	.db #0x0F
   05BA 05                 2430 	.db #0x05
   05BB 15                 2431 	.db #0x15
   05BC 04                 2432 	.db #0x04
   05BD 0E                 2433 	.db #0x0E
   05BE 14                 2434 	.db #0x14
   05BF 04                 2435 	.db #0x04
   05C0 0E                 2436 	.db #0x0E
   05C1 14                 2437 	.db #0x14
   05C2 04                 2438 	.db #0x04
   05C3 1C                 2439 	.db #0x1C
   05C4 1D                 2440 	.db #0x1D
   05C5 05                 2441 	.db #0x05
   05C6 15                 2442 	.db #0x15
   05C7 0F                 2443 	.db #0x0F
   05C8 05                 2444 	.db #0x05
   05C9 15                 2445 	.db #0x15
   05CA 0F                 2446 	.db #0x0F
   05CB 05                 2447 	.db #0x05
   05CC 0E                 2448 	.db #0x0E
   05CD 14                 2449 	.db #0x14
   05CE 04                 2450 	.db #0x04
   05CF 0E                 2451 	.db #0x0E
   05D0 14                 2452 	.db #0x14
   05D1 04                 2453 	.db #0x04
   05D2 0E                 2454 	.db #0x0E
   05D3 18                 2455 	.db #0x18
   05D4 19                 2456 	.db #0x19
   05D5 0F                 2457 	.db #0x0F
   05D6 05                 2458 	.db #0x05
   05D7 15                 2459 	.db #0x15
   05D8 0F                 2460 	.db #0x0F
   05D9 05                 2461 	.db #0x05
   05DA 15                 2462 	.db #0x15
   05DB 0F                 2463 	.db #0x0F
   05DC 18                 2464 	.db #0x18
   05DD 1A                 2465 	.db #0x1A
   05DE 1C                 2466 	.db #0x1C
   05DF 18                 2467 	.db #0x18
   05E0 1A                 2468 	.db #0x1A
   05E1 1C                 2469 	.db #0x1C
   05E2 18                 2470 	.db #0x18
   05E3 18                 2471 	.db #0x18
   05E4 19                 2472 	.db #0x19
   05E5 19                 2473 	.db #0x19
   05E6 1D                 2474 	.db #0x1D
   05E7 1B                 2475 	.db #0x1B
   05E8 19                 2476 	.db #0x19
   05E9 1D                 2477 	.db #0x1D
   05EA 1B                 2478 	.db #0x1B
   05EB 19                 2479 	.db #0x19
   05EC 18                 2480 	.db #0x18
   05ED 1A                 2481 	.db #0x1A
   05EE 1C                 2482 	.db #0x1C
   05EF 18                 2483 	.db #0x18
   05F0 1A                 2484 	.db #0x1A
   05F1 1C                 2485 	.db #0x1C
   05F2 18                 2486 	.db #0x18
   05F3 18                 2487 	.db #0x18
   05F4 0D                 2488 	.db #0x0D
   05F5 19                 2489 	.db #0x19
   05F6 1D                 2490 	.db #0x1D
   05F7 1B                 2491 	.db #0x1B
   05F8 19                 2492 	.db #0x19
   05F9 1D                 2493 	.db #0x1D
   05FA 1B                 2494 	.db #0x1B
   05FB 19                 2495 	.db #0x19
   05FC 19                 2496 	.db #0x19
   05FD 1B                 2497 	.db #0x1B
   05FE 1D                 2498 	.db #0x1D
   05FF 19                 2499 	.db #0x19
   0600 1B                 2500 	.db #0x1B
   0601 1D                 2501 	.db #0x1D
   0602 19                 2502 	.db #0x19
   0603 0C                 2503 	.db #0x0C
   0604 0E                 2504 	.db #0x0E
   0605 18                 2505 	.db #0x18
   0606 1C                 2506 	.db #0x1C
   0607 1A                 2507 	.db #0x1A
   0608 18                 2508 	.db #0x18
   0609 1C                 2509 	.db #0x1C
   060A 1A                 2510 	.db #0x1A
   060B 18                 2511 	.db #0x18
   060C 19                 2512 	.db #0x19
   060D 1B                 2513 	.db #0x1B
   060E 1D                 2514 	.db #0x1D
   060F 19                 2515 	.db #0x19
   0610 1B                 2516 	.db #0x1B
   0611 1D                 2517 	.db #0x1D
   0612 19                 2518 	.db #0x19
   0613 0F                 2519 	.db #0x0F
   0614 0D                 2520 	.db #0x0D
   0615 18                 2521 	.db #0x18
   0616 1C                 2522 	.db #0x1C
   0617 1A                 2523 	.db #0x1A
   0618 18                 2524 	.db #0x18
   0619 1C                 2525 	.db #0x1C
   061A 1A                 2526 	.db #0x1A
   061B 18                 2527 	.db #0x18
   061C 0D                 2528 	.db #0x0D
   061D 17                 2529 	.db #0x17
   061E 07                 2530 	.db #0x07
   061F 0D                 2531 	.db #0x0D
   0620 17                 2532 	.db #0x17
   0621 07                 2533 	.db #0x07
   0622 0D                 2534 	.db #0x0D
   0623 0C                 2535 	.db #0x0C
   0624 0E                 2536 	.db #0x0E
   0625 0C                 2537 	.db #0x0C
   0626 06                 2538 	.db #0x06
   0627 16                 2539 	.db #0x16
   0628 0C                 2540 	.db #0x0C
   0629 06                 2541 	.db #0x06
   062A 16                 2542 	.db #0x16
   062B 0C                 2543 	.db #0x0C
   062C 07                 2544 	.db #0x07
   062D 0D                 2545 	.db #0x0D
   062E 17                 2546 	.db #0x17
   062F 07                 2547 	.db #0x07
   0630 0D                 2548 	.db #0x0D
   0631 17                 2549 	.db #0x17
   0632 02                 2550 	.db #0x02
   0633 1A                 2551 	.db #0x1A
   0634 1A                 2552 	.db #0x1A
   0635 03                 2553 	.db #0x03
   0636 16                 2554 	.db #0x16
   0637 0C                 2555 	.db #0x0C
   0638 06                 2556 	.db #0x06
   0639 16                 2557 	.db #0x16
   063A 0C                 2558 	.db #0x0C
   063B 06                 2559 	.db #0x06
   063C 17                 2560 	.db #0x17
   063D 07                 2561 	.db #0x07
   063E 0D                 2562 	.db #0x0D
   063F 17                 2563 	.db #0x17
   0640 07                 2564 	.db #0x07
   0641 10                 2565 	.db #0x10
   0642 1F                 2566 	.db #0x1F
   0643 1A                 2567 	.db #0x1A
   0644 1A                 2568 	.db #0x1A
   0645 1F                 2569 	.db #0x1F
   0646 11                 2570 	.db #0x11
   0647 06                 2571 	.db #0x06
   0648 16                 2572 	.db #0x16
   0649 0C                 2573 	.db #0x0C
   064A 06                 2574 	.db #0x06
   064B 16                 2575 	.db #0x16
   064C 0D                 2576 	.db #0x0D
   064D 17                 2577 	.db #0x17
   064E 07                 2578 	.db #0x07
   064F 0D                 2579 	.db #0x0D
   0650 0A                 2580 	.db #0x0A
   0651 1F                 2581 	.db #0x1F
   0652 1F                 2582 	.db #0x1F
   0653 1A                 2583 	.db #0x1A
   0654 1A                 2584 	.db #0x1A
   0655 1F                 2585 	.db #0x1F
   0656 1F                 2586 	.db #0x1F
   0657 0B                 2587 	.db #0x0B
   0658 0C                 2588 	.db #0x0C
   0659 06                 2589 	.db #0x06
   065A 16                 2590 	.db #0x16
   065B 0C                 2591 	.db #0x0C
   065C 07                 2592 	.db #0x07
   065D 0D                 2593 	.db #0x0D
   065E 17                 2594 	.db #0x17
   065F 02                 2595 	.db #0x02
   0660 1F                 2596 	.db #0x1F
   0661 1F                 2597 	.db #0x1F
   0662 1F                 2598 	.db #0x1F
   0663 1F                 2599 	.db #0x1F
   0664 1F                 2600 	.db #0x1F
   0665 1F                 2601 	.db #0x1F
   0666 1F                 2602 	.db #0x1F
   0667 1F                 2603 	.db #0x1F
   0668 03                 2604 	.db #0x03
   0669 16                 2605 	.db #0x16
   066A 0C                 2606 	.db #0x0C
   066B 06                 2607 	.db #0x06
   066C                    2608 _tri_inva3:
   066C 1A                 2609 	.db #0x1A
   066D 1C                 2610 	.db #0x1C
   066E 18                 2611 	.db #0x18
   066F 1A                 2612 	.db #0x1A
   0670 1C                 2613 	.db #0x1C
   0671 18                 2614 	.db #0x18
   0672 1A                 2615 	.db #0x1A
   0673 1E                 2616 	.db #0x1E
   0674 00                 2617 	.db #0x00
   0675 1C                 2618 	.db #0x1C
   0676 1C                 2619 	.db #0x1C
   0677 1D                 2620 	.db #0x1D
   0678 1C                 2621 	.db #0x1C
   0679 1C                 2622 	.db #0x1C
   067A 1D                 2623 	.db #0x1D
   067B 1C                 2624 	.db #0x1C
   067C 1A                 2625 	.db #0x1A
   067D 1C                 2626 	.db #0x1C
   067E 18                 2627 	.db #0x18
   067F 1A                 2628 	.db #0x1A
   0680 1C                 2629 	.db #0x1C
   0681 18                 2630 	.db #0x18
   0682 1A                 2631 	.db #0x1A
   0683 1F                 2632 	.db #0x1F
   0684 1C                 2633 	.db #0x1C
   0685 18                 2634 	.db #0x18
   0686 1F                 2635 	.db #0x1F
   0687 1C                 2636 	.db #0x1C
   0688 1D                 2637 	.db #0x1D
   0689 1D                 2638 	.db #0x1D
   068A 1C                 2639 	.db #0x1C
   068B 1D                 2640 	.db #0x1D
   068C 04                 2641 	.db #0x04
   068D 0E                 2642 	.db #0x0E
   068E 14                 2643 	.db #0x14
   068F 04                 2644 	.db #0x04
   0690 0E                 2645 	.db #0x0E
   0691 14                 2646 	.db #0x14
   0692 0A                 2647 	.db #0x0A
   0693 1E                 2648 	.db #0x1E
   0694 1C                 2649 	.db #0x1C
   0695 0D                 2650 	.db #0x0D
   0696 18                 2651 	.db #0x18
   0697 1C                 2652 	.db #0x1C
   0698 1C                 2653 	.db #0x1C
   0699 1C                 2654 	.db #0x1C
   069A 1C                 2655 	.db #0x1C
   069B 1C                 2656 	.db #0x1C
   069C 1C                 2657 	.db #0x1C
   069D 18                 2658 	.db #0x18
   069E 1A                 2659 	.db #0x1A
   069F 1C                 2660 	.db #0x1C
   06A0 18                 2661 	.db #0x18
   06A1 1A                 2662 	.db #0x1A
   06A2 1E                 2663 	.db #0x1E
   06A3 00                 2664 	.db #0x00
   06A4 1C                 2665 	.db #0x1C
   06A5 1D                 2666 	.db #0x1D
   06A6 1C                 2667 	.db #0x1C
   06A7 1C                 2668 	.db #0x1C
   06A8 1D                 2669 	.db #0x1D
   06A9 18                 2670 	.db #0x18
   06AA 0F                 2671 	.db #0x0F
   06AB 1C                 2672 	.db #0x1C
   06AC 1C                 2673 	.db #0x1C
   06AD 18                 2674 	.db #0x18
   06AE 1A                 2675 	.db #0x1A
   06AF 1C                 2676 	.db #0x1C
   06B0 18                 2677 	.db #0x18
   06B1 1A                 2678 	.db #0x1A
   06B2 1F                 2679 	.db #0x1F
   06B3 1C                 2680 	.db #0x1C
   06B4 1D                 2681 	.db #0x1D
   06B5 02                 2682 	.db #0x02
   06B6 1C                 2683 	.db #0x1C
   06B7 02                 2684 	.db #0x02
   06B8 1D                 2685 	.db #0x1D
   06B9 1F                 2686 	.db #0x1F
   06BA 18                 2687 	.db #0x18
   06BB 1C                 2688 	.db #0x1C
   06BC 1C                 2689 	.db #0x1C
   06BD 18                 2690 	.db #0x18
   06BE 1A                 2691 	.db #0x1A
   06BF 1C                 2692 	.db #0x1C
   06C0 18                 2693 	.db #0x18
   06C1 1A                 2694 	.db #0x1A
   06C2 1F                 2695 	.db #0x1F
   06C3 03                 2696 	.db #0x03
   06C4 1C                 2697 	.db #0x1C
   06C5 1D                 2698 	.db #0x1D
   06C6 1C                 2699 	.db #0x1C
   06C7 1C                 2700 	.db #0x1C
   06C8 1C                 2701 	.db #0x1C
   06C9 1C                 2702 	.db #0x1C
   06CA 1D                 2703 	.db #0x1D
   06CB 1C                 2704 	.db #0x1C
   06CC 0E                 2705 	.db #0x0E
   06CD 14                 2706 	.db #0x14
   06CE 04                 2707 	.db #0x04
   06CF 0E                 2708 	.db #0x0E
   06D0 14                 2709 	.db #0x14
   06D1 0A                 2710 	.db #0x0A
   06D2 1E                 2711 	.db #0x1E
   06D3 00                 2712 	.db #0x00
   06D4 0B                 2713 	.db #0x0B
   06D5 0A                 2714 	.db #0x0A
   06D6 0B                 2715 	.db #0x0B
   06D7 0A                 2716 	.db #0x0A
   06D8 0B                 2717 	.db #0x0B
   06D9 0A                 2718 	.db #0x0A
   06DA 1D                 2719 	.db #0x1D
   06DB 1C                 2720 	.db #0x1C
   06DC 14                 2721 	.db #0x14
   06DD 04                 2722 	.db #0x04
   06DE 0E                 2723 	.db #0x0E
   06DF 14                 2724 	.db #0x14
   06E0 0A                 2725 	.db #0x0A
   06E1 1F                 2726 	.db #0x1F
   06E2 1E                 2727 	.db #0x1E
   06E3 1C                 2728 	.db #0x1C
   06E4 1F                 2729 	.db #0x1F
   06E5 1E                 2730 	.db #0x1E
   06E6 1F                 2731 	.db #0x1F
   06E7 1E                 2732 	.db #0x1E
   06E8 1F                 2733 	.db #0x1F
   06E9 1E                 2734 	.db #0x1E
   06EA 1D                 2735 	.db #0x1D
   06EB 1C                 2736 	.db #0x1C
   06EC 1A                 2737 	.db #0x1A
   06ED 1C                 2738 	.db #0x1C
   06EE 18                 2739 	.db #0x18
   06EF 1A                 2740 	.db #0x1A
   06F0 1F                 2741 	.db #0x1F
   06F1 12                 2742 	.db #0x12
   06F2 18                 2743 	.db #0x18
   06F3 18                 2744 	.db #0x18
   06F4 19                 2745 	.db #0x19
   06F5 19                 2746 	.db #0x19
   06F6 13                 2747 	.db #0x13
   06F7 1E                 2748 	.db #0x1E
   06F8 1F                 2749 	.db #0x1F
   06F9 1E                 2750 	.db #0x1E
   06FA 1D                 2751 	.db #0x1D
   06FB 1C                 2752 	.db #0x1C
   06FC 1B                 2753 	.db #0x1B
   06FD 1D                 2754 	.db #0x1D
   06FE 19                 2755 	.db #0x19
   06FF 1B                 2756 	.db #0x1B
   0700 1E                 2757 	.db #0x1E
   0701 18                 2758 	.db #0x18
   0702 18                 2759 	.db #0x18
   0703 18                 2760 	.db #0x18
   0704 19                 2761 	.db #0x19
   0705 19                 2762 	.db #0x19
   0706 19                 2763 	.db #0x19
   0707 13                 2764 	.db #0x13
   0708 1F                 2765 	.db #0x1F
   0709 00                 2766 	.db #0x00
   070A 1C                 2767 	.db #0x1C
   070B 1C                 2768 	.db #0x1C
   070C 1B                 2769 	.db #0x1B
   070D 1D                 2770 	.db #0x1D
   070E 19                 2771 	.db #0x19
   070F 1B                 2772 	.db #0x1B
   0710 1F                 2773 	.db #0x1F
   0711 18                 2774 	.db #0x18
   0712 18                 2775 	.db #0x18
   0713 0C                 2776 	.db #0x0C
   0714 1C                 2777 	.db #0x1C
   0715 1C                 2778 	.db #0x1C
   0716 1C                 2779 	.db #0x1C
   0717 1C                 2780 	.db #0x1C
   0718 1C                 2781 	.db #0x1C
   0719 1C                 2782 	.db #0x1C
   071A 1C                 2783 	.db #0x1C
   071B 1C                 2784 	.db #0x1C
   071C 17                 2785 	.db #0x17
   071D 07                 2786 	.db #0x07
   071E 0D                 2787 	.db #0x0D
   071F 17                 2788 	.db #0x17
   0720 09                 2789 	.db #0x09
   0721 1E                 2790 	.db #0x1E
   0722 1F                 2791 	.db #0x1F
   0723 1D                 2792 	.db #0x1D
   0724 1D                 2793 	.db #0x1D
   0725 1D                 2794 	.db #0x1D
   0726 1C                 2795 	.db #0x1C
   0727 1D                 2796 	.db #0x1D
   0728 1C                 2797 	.db #0x1C
   0729 1C                 2798 	.db #0x1C
   072A 1C                 2799 	.db #0x1C
   072B 1C                 2800 	.db #0x1C
   072C                    2801 _tri_inva4:
   072C 1E                 2802 	.db #0x1E
   072D 00                 2803 	.db #0x00
   072E 05                 2804 	.db #0x05
   072F 0A                 2805 	.db #0x0A
   0730 1E                 2806 	.db #0x1E
   0731 00                 2807 	.db #0x00
   0732 06                 2808 	.db #0x06
   0733 16                 2809 	.db #0x16
   0734 0F                 2810 	.db #0x0F
   0735 01                 2811 	.db #0x01
   0736 1F                 2812 	.db #0x1F
   0737 11                 2813 	.db #0x11
   0738 0C                 2814 	.db #0x0C
   0739 01                 2815 	.db #0x01
   073A 1F                 2816 	.db #0x1F
   073B 1F                 2817 	.db #0x1F
   073C 12                 2818 	.db #0x12
   073D 0F                 2819 	.db #0x0F
   073E 02                 2820 	.db #0x02
   073F 1E                 2821 	.db #0x1E
   0740 12                 2822 	.db #0x12
   0741 0F                 2823 	.db #0x0F
   0742 05                 2824 	.db #0x05
   0743 15                 2825 	.db #0x15
   0744 0C                 2826 	.db #0x0C
   0745 06                 2827 	.db #0x06
   0746 09                 2828 	.db #0x09
   0747 1F                 2829 	.db #0x1F
   0748 03                 2830 	.db #0x03
   0749 06                 2831 	.db #0x06
   074A 09                 2832 	.db #0x09
   074B 1F                 2833 	.db #0x1F
   074C 15                 2834 	.db #0x15
   074D 10                 2835 	.db #0x10
   074E 1E                 2836 	.db #0x1E
   074F 08                 2837 	.db #0x08
   0750 15                 2838 	.db #0x15
   0751 10                 2839 	.db #0x10
   0752 1E                 2840 	.db #0x1E
   0753 1F                 2841 	.db #0x1F
   0754 1F                 2842 	.db #0x1F
   0755 0B                 2843 	.db #0x0B
   0756 16                 2844 	.db #0x16
   0757 13                 2845 	.db #0x13
   0758 1F                 2846 	.db #0x1F
   0759 0B                 2847 	.db #0x0B
   075A 16                 2848 	.db #0x16
   075B 13                 2849 	.db #0x13
   075C 05                 2850 	.db #0x05
   075D 1E                 2851 	.db #0x1E
   075E 00                 2852 	.db #0x00
   075F 05                 2853 	.db #0x05
   0760 0A                 2854 	.db #0x0A
   0761 1E                 2855 	.db #0x1E
   0762 08                 2856 	.db #0x08
   0763 15                 2857 	.db #0x15
   0764 13                 2858 	.db #0x13
   0765 1F                 2859 	.db #0x1F
   0766 11                 2860 	.db #0x11
   0767 0D                 2861 	.db #0x0D
   0768 01                 2862 	.db #0x01
   0769 1F                 2863 	.db #0x1F
   076A 0C                 2864 	.db #0x0C
   076B 0D                 2865 	.db #0x0D
   076C 02                 2866 	.db #0x02
   076D 1E                 2867 	.db #0x1E
   076E 0E                 2868 	.db #0x0E
   076F 0F                 2869 	.db #0x0F
   0770 1E                 2870 	.db #0x1E
   0771 00                 2871 	.db #0x00
   0772 05                 2872 	.db #0x05
   0773 15                 2873 	.db #0x15
   0774 0C                 2874 	.db #0x0C
   0775 01                 2875 	.db #0x01
   0776 1F                 2876 	.db #0x1F
   0777 07                 2877 	.db #0x07
   0778 07                 2878 	.db #0x07
   0779 1F                 2879 	.db #0x1F
   077A 06                 2880 	.db #0x06
   077B 07                 2881 	.db #0x07
   077C 1E                 2882 	.db #0x1E
   077D 1E                 2883 	.db #0x1E
   077E 15                 2884 	.db #0x15
   077F 15                 2885 	.db #0x15
   0780 1E                 2886 	.db #0x1E
   0781 0F                 2887 	.db #0x0F
   0782 02                 2888 	.db #0x02
   0783 1E                 2889 	.db #0x1E
   0784 07                 2890 	.db #0x07
   0785 06                 2891 	.db #0x06
   0786 1F                 2892 	.db #0x1F
   0787 17                 2893 	.db #0x17
   0788 17                 2894 	.db #0x17
   0789 1E                 2895 	.db #0x1E
   078A 17                 2896 	.db #0x17
   078B 16                 2897 	.db #0x16
   078C 1F                 2898 	.db #0x1F
   078D 1F                 2899 	.db #0x1F
   078E 04                 2900 	.db #0x04
   078F 05                 2901 	.db #0x05
   0790 1F                 2902 	.db #0x1F
   0791 14                 2903 	.db #0x14
   0792 09                 2904 	.db #0x09
   0793 11                 2905 	.db #0x11
   0794 17                 2906 	.db #0x17
   0795 0A                 2907 	.db #0x0A
   0796 1E                 2908 	.db #0x1E
   0797 0D                 2909 	.db #0x0D
   0798 0D                 2910 	.db #0x0D
   0799 1E                 2911 	.db #0x1E
   079A 0D                 2912 	.db #0x0D
   079B 0C                 2913 	.db #0x0C
   079C 09                 2914 	.db #0x09
   079D 1F                 2915 	.db #0x1F
   079E 0E                 2916 	.db #0x0E
   079F 0F                 2917 	.db #0x0F
   07A0 1F                 2918 	.db #0x1F
   07A1 04                 2919 	.db #0x04
   07A2 04                 2920 	.db #0x04
   07A3 1F                 2921 	.db #0x1F
   07A4 1F                 2922 	.db #0x1F
   07A5 1E                 2923 	.db #0x1E
   07A6 08                 2924 	.db #0x08
   07A7 06                 2925 	.db #0x06
   07A8 07                 2926 	.db #0x07
   07A9 1E                 2927 	.db #0x1E
   07AA 07                 2928 	.db #0x07
   07AB 06                 2929 	.db #0x06
   07AC 04                 2930 	.db #0x04
   07AD 1F                 2931 	.db #0x1F
   07AE 11                 2932 	.db #0x11
   07AF 14                 2933 	.db #0x14
   07B0 1F                 2934 	.db #0x1F
   07B1 03                 2935 	.db #0x03
   07B2 0E                 2936 	.db #0x0E
   07B3 14                 2937 	.db #0x14
   07B4 07                 2938 	.db #0x07
   07B5 0D                 2939 	.db #0x0D
   07B6 17                 2940 	.db #0x17
   07B7 0A                 2941 	.db #0x0A
   07B8 1E                 2942 	.db #0x1E
   07B9 12                 2943 	.db #0x12
   07BA 17                 2944 	.db #0x17
   07BB 0A                 2945 	.db #0x0A
   07BC 0E                 2946 	.db #0x0E
   07BD 1F                 2947 	.db #0x1F
   07BE 1F                 2948 	.db #0x1F
   07BF 04                 2949 	.db #0x04
   07C0 01                 2950 	.db #0x01
   07C1 1F                 2951 	.db #0x1F
   07C2 11                 2952 	.db #0x11
   07C3 17                 2953 	.db #0x17
   07C4 07                 2954 	.db #0x07
   07C5 0D                 2955 	.db #0x0D
   07C6 10                 2956 	.db #0x10
   07C7 1E                 2957 	.db #0x1E
   07C8 00                 2958 	.db #0x00
   07C9 0D                 2959 	.db #0x0D
   07CA 10                 2960 	.db #0x10
   07CB 1E                 2961 	.db #0x1E
   07CC 14                 2962 	.db #0x14
   07CD 09                 2963 	.db #0x09
   07CE 1F                 2964 	.db #0x1F
   07CF 03                 2965 	.db #0x03
   07D0 0E                 2966 	.db #0x0E
   07D1 13                 2967 	.db #0x13
   07D2 1F                 2968 	.db #0x1F
   07D3 1F                 2969 	.db #0x1F
   07D4 1F                 2970 	.db #0x1F
   07D5 1E                 2971 	.db #0x1E
   07D6 1E                 2972 	.db #0x1E
   07D7 08                 2973 	.db #0x08
   07D8 07                 2974 	.db #0x07
   07D9 02                 2975 	.db #0x02
   07DA 1E                 2976 	.db #0x1E
   07DB 1E                 2977 	.db #0x1E
   07DC 0B                 2978 	.db #0x0B
   07DD 04                 2979 	.db #0x04
   07DE 01                 2980 	.db #0x01
   07DF 1F                 2981 	.db #0x1F
   07E0 11                 2982 	.db #0x11
   07E1 14                 2983 	.db #0x14
   07E2 04                 2984 	.db #0x04
   07E3 0E                 2985 	.db #0x0E
   07E4 17                 2986 	.db #0x17
   07E5 07                 2987 	.db #0x07
   07E6 0D                 2988 	.db #0x0D
   07E7 17                 2989 	.db #0x17
   07E8 0A                 2990 	.db #0x0A
   07E9 1E                 2991 	.db #0x1E
   07EA 1E                 2992 	.db #0x1E
   07EB 1E                 2993 	.db #0x1E
                           2994 ;demo.c:245: void my_isr(void) interrupt
                           2995 ;	---------------------------------
                           2996 ; Function my_isr
                           2997 ; ---------------------------------
   07EC                    2998 _my_isr_start::
   07EC                    2999 _my_isr:
   07EC F5                 3000 	push	af
   07ED C5                 3001 	push	bc
   07EE D5                 3002 	push	de
   07EF E5                 3003 	push	hl
   07F0 FD E5              3004 	push	iy
                           3005 ;demo.c:247: DI;
   07F2 F3                 3006 		di 
                           3007 ;demo.c:249: READ_VDP_STATUS;
   07F3 DB 99              3008 		in a,(#0x99) 
                           3009 ;demo.c:251: PLY_Play();
   07F5 CDr00s00           3010 	call	_PLY_Play
                           3011 ;demo.c:252: PLY_SendRegisters();
   07F8 CDr00s00           3012 	call	_PLY_SendRegisters
                           3013 ;demo.c:254: vbicount+=1;
   07FB FD 21rAAs44        3014 	ld	iy,#_vbicount
   07FF FD 34 00           3015 	inc	0 (iy)
   0802 20 07              3016 	jr	NZ,00103$
   0804 FD 21rAAs44        3017 	ld	iy,#_vbicount
   0808 FD 34 01           3018 	inc	1 (iy)
   080B                    3019 00103$:
                           3020 ;demo.c:255: tick++;
   080B FD 21rACs44        3021 	ld	iy,#_tick
   080F FD 34 00           3022 	inc	0 (iy)
   0812 20 07              3023 	jr	NZ,00104$
   0814 FD 21rACs44        3024 	ld	iy,#_tick
   0818 FD 34 01           3025 	inc	1 (iy)
   081B                    3026 00104$:
                           3027 ;demo.c:257: EI;
   081B FB                 3028 		ei 
   081C FD E1              3029 	pop	iy
   081E E1                 3030 	pop	hl
   081F D1                 3031 	pop	de
   0820 C1                 3032 	pop	bc
   0821 F1                 3033 	pop	af
   0822 ED 4D              3034 	reti
   0824                    3035 _my_isr_end::
                           3036 ;demo.c:260: void color_isr(void) interrupt
                           3037 ;	---------------------------------
                           3038 ; Function color_isr
                           3039 ; ---------------------------------
   0824                    3040 _color_isr_start::
   0824                    3041 _color_isr:
   0824 F5                 3042 	push	af
   0825 C5                 3043 	push	bc
   0826 D5                 3044 	push	de
   0827 E5                 3045 	push	hl
   0828 FD E5              3046 	push	iy
                           3047 ;demo.c:262: DI;
   082A F3                 3048 		di 
                           3049 ;demo.c:264: if(isNthBitSet(vdp2_status(1),0)) {
   082B 3E 01              3050 	ld	a,#0x01
   082D F5                 3051 	push	af
   082E 33                 3052 	inc	sp
   082F CDr00s00           3053 	call	_vdp2_status
   0832 33                 3054 	inc	sp
   0833 4D                 3055 	ld	c,l
   0834 21 00 00           3056 	ld	hl,#0x0000
   0837 E5                 3057 	push	hl
   0838 79                 3058 	ld	a,c
   0839 F5                 3059 	push	af
   083A 33                 3060 	inc	sp
   083B CDr00s00           3061 	call	_isNthBitSet
   083E F1                 3062 	pop	af
   083F 33                 3063 	inc	sp
   0840 44                 3064 	ld	b,h
   0841 4D                 3065 	ld	c,l
   0842 79                 3066 	ld	a,c
   0843 B0                 3067 	or	a,b
   0844 28 19              3068 	jr	Z,00102$
                           3069 ;demo.c:265: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0846 21rAAs44           3070 	ld	hl,#_vbicount + 0
   0849 4E                 3071 	ld	c,(hl)
   084A 06 00              3072 	ld	b,#0x00
   084C 21r00s00           3073 	ld	hl,#_sintab
   084F 09                 3074 	add	hl,bc
   0850 7E                 3075 	ld	a,(hl)
   0851 F5                 3076 	push	af
   0852 33                 3077 	inc	sp
   0853 3E 17              3078 	ld	a,#0x17
   0855 F5                 3079 	push	af
   0856 33                 3080 	inc	sp
   0857 CDr00s00           3081 	call	_vdp_register
   085A F1                 3082 	pop	af
                           3083 ;demo.c:266: READ_VDP_STATUS;
   085B DB 99              3084 		in a,(#0x99) 
   085D 18 18              3085 	jr	00103$
   085F                    3086 00102$:
                           3087 ;demo.c:269: READ_VDP_STATUS;
   085F DB 99              3088 		in a,(#0x99) 
                           3089 ;demo.c:270: vbicount++;
   0861 FD 21rAAs44        3090 	ld	iy,#_vbicount
   0865 FD 34 00           3091 	inc	0 (iy)
   0868 20 07              3092 	jr	NZ,00107$
   086A FD 21rAAs44        3093 	ld	iy,#_vbicount
   086E FD 34 01           3094 	inc	1 (iy)
   0871                    3095 00107$:
                           3096 ;demo.c:273: PLY_Play();
   0871 CDr00s00           3097 	call	_PLY_Play
                           3098 ;demo.c:274: PLY_SendRegisters();
   0874 CDr00s00           3099 	call	_PLY_SendRegisters
   0877                    3100 00103$:
                           3101 ;demo.c:277: EI;
   0877 FB                 3102 		ei 
   0878 FD E1              3103 	pop	iy
   087A E1                 3104 	pop	hl
   087B D1                 3105 	pop	de
   087C C1                 3106 	pop	bc
   087D F1                 3107 	pop	af
   087E ED 4D              3108 	reti
   0880                    3109 _color_isr_end::
                           3110 ;demo.c:284: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           3111 ;	---------------------------------
                           3112 ; Function ge5_load
                           3113 ; ---------------------------------
   0880                    3114 _ge5_load_start::
   0880                    3115 _ge5_load:
   0880 DD E5              3116 	push	ix
   0882 DD 21 00 00        3117 	ld	ix,#0
   0886 DD 39              3118 	add	ix,sp
   0888 21 D2 FF           3119 	ld	hl,#-46
   088B 39                 3120 	add	hl,sp
   088C F9                 3121 	ld	sp,hl
                           3122 ;demo.c:288: if(debugprint == 1) {
   088D DD 7E 09           3123 	ld	a,9 (ix)
   0890 D6 01              3124 	sub	a,#0x01
   0892 20 06              3125 	jr	NZ,00125$
   0894 DD 7E 0A           3126 	ld	a,10 (ix)
   0897 B7                 3127 	or	a,a
   0898 28 02              3128 	jr	Z,00126$
   089A                    3129 00125$:
   089A 18 1B              3130 	jr	00102$
   089C                    3131 00126$:
                           3132 ;demo.c:289: puts("loading ge5file: ");
   089C 21r7Bs09           3133 	ld	hl,#__str_0
   089F E5                 3134 	push	hl
   08A0 CDr00s00           3135 	call	_puts
   08A3 F1                 3136 	pop	af
                           3137 ;demo.c:290: puts(file_name);
   08A4 DD 6E 04           3138 	ld	l,4 (ix)
   08A7 DD 66 05           3139 	ld	h,5 (ix)
   08AA E5                 3140 	push	hl
   08AB CDr00s00           3141 	call	_puts
   08AE F1                 3142 	pop	af
                           3143 ;demo.c:291: puts("\r\n");
   08AF 21r8Ds09           3144 	ld	hl,#__str_1
   08B2 E5                 3145 	push	hl
   08B3 CDr00s00           3146 	call	_puts
   08B6 F1                 3147 	pop	af
   08B7                    3148 00102$:
                           3149 ;demo.c:294: memset((uint8_t *) &f, 0, sizeof(fcb));
   08B7 21 00 00           3150 	ld	hl,#0x0000
   08BA 39                 3151 	add	hl,sp
   08BB 4D                 3152 	ld	c,l
   08BC 44                 3153 	ld	b,h
   08BD 21 2E 00           3154 	ld	hl,#0x002E
   08C0 E5                 3155 	push	hl
   08C1 3E 00              3156 	ld	a,#0x00
   08C3 F5                 3157 	push	af
   08C4 33                 3158 	inc	sp
   08C5 C5                 3159 	push	bc
   08C6 CDr00s00           3160 	call	_memset
   08C9 F1                 3161 	pop	af
   08CA F1                 3162 	pop	af
   08CB 33                 3163 	inc	sp
                           3164 ;demo.c:296: f.record_size = 128;
   08CC 21 00 00           3165 	ld	hl,#0x0000
   08CF 39                 3166 	add	hl,sp
   08D0 4D                 3167 	ld	c,l
   08D1 44                 3168 	ld	b,h
   08D2 21 0F 00           3169 	ld	hl,#0x000F
   08D5 09                 3170 	add	hl,bc
   08D6 EB                 3171 	ex	de,hl
   08D7 3E 80              3172 	ld	a,#0x80
   08D9 12                 3173 	ld	(de),a
                           3174 ;demo.c:297: f.drive = 0;
   08DA 3E 00              3175 	ld	a,#0x00
   08DC 02                 3176 	ld	(bc),a
                           3177 ;demo.c:299: memcpy(f.name, file_name, 11);
   08DD DD 5E 04           3178 	ld	e,4 (ix)
   08E0 DD 56 05           3179 	ld	d,5 (ix)
   08E3 03                 3180 	inc	bc
   08E4 21 0B 00           3181 	ld	hl,#0x000B
   08E7 E5                 3182 	push	hl
   08E8 D5                 3183 	push	de
   08E9 C5                 3184 	push	bc
   08EA CDr00s00           3185 	call	_memcpy
   08ED F1                 3186 	pop	af
   08EE F1                 3187 	pop	af
   08EF F1                 3188 	pop	af
                           3189 ;demo.c:301: if (open(&f) != 0) return 0;
   08F0 21 00 00           3190 	ld	hl,#0x0000
   08F3 39                 3191 	add	hl,sp
   08F4 E5                 3192 	push	hl
   08F5 CDr00s00           3193 	call	_open
   08F8 F1                 3194 	pop	af
   08F9 AF                 3195 	xor	a,a
   08FA B5                 3196 	or	a,l
   08FB 28 05              3197 	jr	Z,00104$
   08FD 2E 00              3198 	ld	l,#0x00
   08FF C3r76s09           3199 	jp	00116$
   0902                    3200 00104$:
                           3201 ;demo.c:302: vdp_set_write_address(vramh, vraml);
   0902 DD 6E 07           3202 	ld	l,7 (ix)
   0905 DD 66 08           3203 	ld	h,8 (ix)
   0908 E5                 3204 	push	hl
   0909 DD 7E 06           3205 	ld	a,6 (ix)
   090C F5                 3206 	push	af
   090D 33                 3207 	inc	sp
   090E CDr00s00           3208 	call	_vdp_set_write_address
   0911 F1                 3209 	pop	af
   0912 33                 3210 	inc	sp
                           3211 ;demo.c:304: for (i = 0; i < 213; i++) {
   0913 0E 00              3212 	ld	c,#0x00
   0915                    3213 00112$:
   0915 79                 3214 	ld	a,c
   0916 D6 D5              3215 	sub	a,#0xD5
   0918 D2r6Bs09           3216 	jp	NC,00115$
                           3217 ;demo.c:305: if (block_set_data_ptr(scratch) != 0) return 0;
   091B C5                 3218 	push	bc
   091C 21r4As43           3219 	ld	hl,#_scratch
   091F E5                 3220 	push	hl
   0920 CDr00s00           3221 	call	_block_set_data_ptr
   0923 F1                 3222 	pop	af
   0924 7D                 3223 	ld	a,l
   0925 C1                 3224 	pop	bc
   0926 47                 3225 	ld	b,a
   0927 B7                 3226 	or	a,a
   0928 28 05              3227 	jr	Z,00106$
   092A 2E 00              3228 	ld	l,#0x00
   092C C3r76s09           3229 	jp	00116$
   092F                    3230 00106$:
                           3231 ;demo.c:306: if (block_read(&f) != 0) return 0;
   092F 21 00 00           3232 	ld	hl,#0x0000
   0932 39                 3233 	add	hl,sp
   0933 C5                 3234 	push	bc
   0934 E5                 3235 	push	hl
   0935 CDr00s00           3236 	call	_block_read
   0938 F1                 3237 	pop	af
   0939 7D                 3238 	ld	a,l
   093A C1                 3239 	pop	bc
   093B 47                 3240 	ld	b,a
   093C B7                 3241 	or	a,a
   093D 28 04              3242 	jr	Z,00108$
   093F 2E 00              3243 	ld	l,#0x00
   0941 18 33              3244 	jr	00116$
   0943                    3245 00108$:
                           3246 ;demo.c:308: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0943 AF                 3247 	xor	a,a
   0944 B1                 3248 	or	a,c
   0945 20 11              3249 	jr	NZ,00110$
   0947 11r51s43           3250 	ld	de,#_scratch + 7
   094A C5                 3251 	push	bc
   094B 3E 79              3252 	ld	a,#0x79
   094D F5                 3253 	push	af
   094E 33                 3254 	inc	sp
   094F D5                 3255 	push	de
   0950 CDr00s00           3256 	call	_vdp_load_screen
   0953 F1                 3257 	pop	af
   0954 33                 3258 	inc	sp
   0955 C1                 3259 	pop	bc
   0956 18 0F              3260 	jr	00114$
   0958                    3261 00110$:
                           3262 ;demo.c:309: else vdp_load_screen(scratch, 128);
   0958 C5                 3263 	push	bc
   0959 3E 80              3264 	ld	a,#0x80
   095B F5                 3265 	push	af
   095C 33                 3266 	inc	sp
   095D 21r4As43           3267 	ld	hl,#_scratch
   0960 E5                 3268 	push	hl
   0961 CDr00s00           3269 	call	_vdp_load_screen
   0964 F1                 3270 	pop	af
   0965 33                 3271 	inc	sp
   0966 C1                 3272 	pop	bc
   0967                    3273 00114$:
                           3274 ;demo.c:304: for (i = 0; i < 213; i++) {
   0967 0C                 3275 	inc	c
   0968 C3r15s09           3276 	jp	00112$
   096B                    3277 00115$:
                           3278 ;demo.c:312: close(&f);
   096B 21 00 00           3279 	ld	hl,#0x0000
   096E 39                 3280 	add	hl,sp
   096F E5                 3281 	push	hl
   0970 CDr00s00           3282 	call	_close
   0973 F1                 3283 	pop	af
                           3284 ;demo.c:314: return 1;
   0974 2E 01              3285 	ld	l,#0x01
   0976                    3286 00116$:
   0976 DD F9              3287 	ld	sp,ix
   0978 DD E1              3288 	pop	ix
   097A C9                 3289 	ret
   097B                    3290 _ge5_load_end::
   097B                    3291 __str_0:
   097B 6C 6F 61 64 69 6E  3292 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   098C 00                 3293 	.db 0x00
   098D                    3294 __str_1:
   098D 0D                 3295 	.db 0x0D
   098E 0A                 3296 	.db 0x0A
   098F 00                 3297 	.db 0x00
                           3298 ;demo.c:317: void scratch_clear() {
                           3299 ;	---------------------------------
                           3300 ; Function scratch_clear
                           3301 ; ---------------------------------
   0990                    3302 _scratch_clear_start::
   0990                    3303 _scratch_clear:
                           3304 ;demo.c:318: memset((uint8_t *) &scratch, 0, 128);
   0990 21 80 00           3305 	ld	hl,#0x0080
   0993 E5                 3306 	push	hl
   0994 3E 00              3307 	ld	a,#0x00
   0996 F5                 3308 	push	af
   0997 33                 3309 	inc	sp
   0998 21r4As43           3310 	ld	hl,#_scratch
   099B E5                 3311 	push	hl
   099C CDr00s00           3312 	call	_memset
   099F F1                 3313 	pop	af
   09A0 F1                 3314 	pop	af
   09A1 33                 3315 	inc	sp
   09A2 C9                 3316 	ret
   09A3                    3317 _scratch_clear_end::
                           3318 ;demo.c:321: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3319 ;	---------------------------------
                           3320 ; Function pal_load
                           3321 ; ---------------------------------
   09A3                    3322 _pal_load_start::
   09A3                    3323 _pal_load:
   09A3 DD E5              3324 	push	ix
   09A5 DD 21 00 00        3325 	ld	ix,#0
   09A9 DD 39              3326 	add	ix,sp
   09AB 21 D2 FF           3327 	ld	hl,#-46
   09AE 39                 3328 	add	hl,sp
   09AF F9                 3329 	ld	sp,hl
                           3330 ;demo.c:324: if(debugprint == 1) {
   09B0 DD 7E 07           3331 	ld	a,7 (ix)
   09B3 D6 01              3332 	sub	a,#0x01
   09B5 20 06              3333 	jr	NZ,00115$
   09B7 DD 7E 08           3334 	ld	a,8 (ix)
   09BA B7                 3335 	or	a,a
   09BB 28 02              3336 	jr	Z,00116$
   09BD                    3337 00115$:
   09BD 18 1B              3338 	jr	00102$
   09BF                    3339 00116$:
                           3340 ;demo.c:325: puts("loading palfile: ");
   09BF 21r6Ds0A           3341 	ld	hl,#__str_2
   09C2 E5                 3342 	push	hl
   09C3 CDr00s00           3343 	call	_puts
   09C6 F1                 3344 	pop	af
                           3345 ;demo.c:326: puts(file_name);
   09C7 DD 6E 04           3346 	ld	l,4 (ix)
   09CA DD 66 05           3347 	ld	h,5 (ix)
   09CD E5                 3348 	push	hl
   09CE CDr00s00           3349 	call	_puts
   09D1 F1                 3350 	pop	af
                           3351 ;demo.c:327: puts("\r\n");
   09D2 21r7Fs0A           3352 	ld	hl,#__str_3
   09D5 E5                 3353 	push	hl
   09D6 CDr00s00           3354 	call	_puts
   09D9 F1                 3355 	pop	af
   09DA                    3356 00102$:
                           3357 ;demo.c:330: memset((uint8_t *) &f, 0, sizeof(fcb));
   09DA 21 00 00           3358 	ld	hl,#0x0000
   09DD 39                 3359 	add	hl,sp
   09DE 4D                 3360 	ld	c,l
   09DF 44                 3361 	ld	b,h
   09E0 21 2E 00           3362 	ld	hl,#0x002E
   09E3 E5                 3363 	push	hl
   09E4 3E 00              3364 	ld	a,#0x00
   09E6 F5                 3365 	push	af
   09E7 33                 3366 	inc	sp
   09E8 C5                 3367 	push	bc
   09E9 CDr00s00           3368 	call	_memset
   09EC F1                 3369 	pop	af
   09ED F1                 3370 	pop	af
   09EE 33                 3371 	inc	sp
                           3372 ;demo.c:331: scratch_clear();
   09EF CDr90s09           3373 	call	_scratch_clear
                           3374 ;demo.c:333: f.record_size = ss;
   09F2 21 00 00           3375 	ld	hl,#0x0000
   09F5 39                 3376 	add	hl,sp
   09F6 4D                 3377 	ld	c,l
   09F7 44                 3378 	ld	b,h
   09F8 21 0F 00           3379 	ld	hl,#0x000F
   09FB 09                 3380 	add	hl,bc
   09FC EB                 3381 	ex	de,hl
   09FD DD 7E 06           3382 	ld	a,6 (ix)
   0A00 12                 3383 	ld	(de),a
                           3384 ;demo.c:334: f.drive = 0;
   0A01 3E 00              3385 	ld	a,#0x00
   0A03 02                 3386 	ld	(bc),a
                           3387 ;demo.c:336: memcpy(f.name, file_name, 11);
   0A04 DD 5E 04           3388 	ld	e,4 (ix)
   0A07 DD 56 05           3389 	ld	d,5 (ix)
   0A0A 03                 3390 	inc	bc
   0A0B 21 0B 00           3391 	ld	hl,#0x000B
   0A0E E5                 3392 	push	hl
   0A0F D5                 3393 	push	de
   0A10 C5                 3394 	push	bc
   0A11 CDr00s00           3395 	call	_memcpy
   0A14 F1                 3396 	pop	af
   0A15 F1                 3397 	pop	af
   0A16 F1                 3398 	pop	af
                           3399 ;demo.c:338: if (open(&f) != 0) return 0;
   0A17 21 00 00           3400 	ld	hl,#0x0000
   0A1A 39                 3401 	add	hl,sp
   0A1B E5                 3402 	push	hl
   0A1C CDr00s00           3403 	call	_open
   0A1F F1                 3404 	pop	af
   0A20 AF                 3405 	xor	a,a
   0A21 B5                 3406 	or	a,l
   0A22 28 04              3407 	jr	Z,00104$
   0A24 2E 00              3408 	ld	l,#0x00
   0A26 18 40              3409 	jr	00109$
   0A28                    3410 00104$:
                           3411 ;demo.c:339: if (block_set_data_ptr(scratch) != 0) return 0;
   0A28 21r4As43           3412 	ld	hl,#_scratch
   0A2B E5                 3413 	push	hl
   0A2C CDr00s00           3414 	call	_block_set_data_ptr
   0A2F F1                 3415 	pop	af
   0A30 AF                 3416 	xor	a,a
   0A31 B5                 3417 	or	a,l
   0A32 28 04              3418 	jr	Z,00106$
   0A34 2E 00              3419 	ld	l,#0x00
   0A36 18 30              3420 	jr	00109$
   0A38                    3421 00106$:
                           3422 ;demo.c:340: if (block_read(&f) != 0) return 0;
   0A38 21 00 00           3423 	ld	hl,#0x0000
   0A3B 39                 3424 	add	hl,sp
   0A3C E5                 3425 	push	hl
   0A3D CDr00s00           3426 	call	_block_read
   0A40 F1                 3427 	pop	af
   0A41 AF                 3428 	xor	a,a
   0A42 B5                 3429 	or	a,l
   0A43 28 04              3430 	jr	Z,00108$
   0A45 2E 00              3431 	ld	l,#0x00
   0A47 18 1F              3432 	jr	00109$
   0A49                    3433 00108$:
                           3434 ;demo.c:342: memcpy(cur_palette, scratch+7, ss);
   0A49 DD 4E 06           3435 	ld	c,6 (ix)
   0A4C 06 00              3436 	ld	b,#0x00
   0A4E 11r51s43           3437 	ld	de,#_scratch + 7
   0A51 C5                 3438 	push	bc
   0A52 D5                 3439 	push	de
   0A53 21rCAs43           3440 	ld	hl,#_cur_palette
   0A56 E5                 3441 	push	hl
   0A57 CDr00s00           3442 	call	_memcpy
   0A5A F1                 3443 	pop	af
   0A5B F1                 3444 	pop	af
   0A5C F1                 3445 	pop	af
                           3446 ;demo.c:344: close(&f);
   0A5D 21 00 00           3447 	ld	hl,#0x0000
   0A60 39                 3448 	add	hl,sp
   0A61 E5                 3449 	push	hl
   0A62 CDr00s00           3450 	call	_close
   0A65 F1                 3451 	pop	af
                           3452 ;demo.c:345: return 1;
   0A66 2E 01              3453 	ld	l,#0x01
   0A68                    3454 00109$:
   0A68 DD F9              3455 	ld	sp,ix
   0A6A DD E1              3456 	pop	ix
   0A6C C9                 3457 	ret
   0A6D                    3458 _pal_load_end::
   0A6D                    3459 __str_2:
   0A6D 6C 6F 61 64 69 6E  3460 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0A7E 00                 3461 	.db 0x00
   0A7F                    3462 __str_3:
   0A7F 0D                 3463 	.db 0x0D
   0A80 0A                 3464 	.db 0x0A
   0A81 00                 3465 	.db 0x00
                           3466 ;demo.c:349: void pause() {
                           3467 ;	---------------------------------
                           3468 ; Function pause
                           3469 ; ---------------------------------
   0A82                    3470 _pause_start::
   0A82                    3471 _pause:
                           3472 ;demo.c:350: uint8_t i,j,k = 0;
                           3473 ;demo.c:351: for (i = 0; i < 255; i++) {	
   0A82 01 00 00           3474 	ld	bc,#0x0000
   0A85                    3475 00104$:
   0A85 78                 3476 	ld	a,b
   0A86 D6 FF              3477 	sub	a,#0xFF
   0A88 D0                 3478 	ret	NC
                           3479 ;demo.c:352: for (j = 0; j < 255; j++) {
   0A89 59                 3480 	ld	e,c
   0A8A 16 FF              3481 	ld	d,#0xFF
   0A8C                    3482 00103$:
                           3483 ;demo.c:353: k++;
   0A8C 1C                 3484 	inc	e
   0A8D 15                 3485 	dec	d
                           3486 ;demo.c:352: for (j = 0; j < 255; j++) {
   0A8E AF                 3487 	xor	a,a
   0A8F B2                 3488 	or	a,d
   0A90 20 FA              3489 	jr	NZ,00103$
                           3490 ;demo.c:351: for (i = 0; i < 255; i++) {	
   0A92 4B                 3491 	ld	c,e
   0A93 04                 3492 	inc	b
   0A94 18 EF              3493 	jr	00104$
   0A96                    3494 _pause_end::
                           3495 ;demo.c:359: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3496 ;	---------------------------------
                           3497 ; Function raw_load
                           3498 ; ---------------------------------
   0A96                    3499 _raw_load_start::
   0A96                    3500 _raw_load:
   0A96 DD E5              3501 	push	ix
   0A98 DD 21 00 00        3502 	ld	ix,#0
   0A9C DD 39              3503 	add	ix,sp
   0A9E 21 D2 FF           3504 	ld	hl,#-46
   0AA1 39                 3505 	add	hl,sp
   0AA2 F9                 3506 	ld	sp,hl
                           3507 ;demo.c:364: if(debugprint == 1) {
   0AA3 DD 7E 0A           3508 	ld	a,10 (ix)
   0AA6 D6 01              3509 	sub	a,#0x01
   0AA8 20 06              3510 	jr	NZ,00120$
   0AAA DD 7E 0B           3511 	ld	a,11 (ix)
   0AAD B7                 3512 	or	a,a
   0AAE 28 02              3513 	jr	Z,00121$
   0AB0                    3514 00120$:
   0AB0 18 1B              3515 	jr	00102$
   0AB2                    3516 00121$:
                           3517 ;demo.c:365: puts("loading rawfile: ");
   0AB2 21r84s0B           3518 	ld	hl,#__str_4
   0AB5 E5                 3519 	push	hl
   0AB6 CDr00s00           3520 	call	_puts
   0AB9 F1                 3521 	pop	af
                           3522 ;demo.c:366: puts(file_name);
   0ABA DD 6E 04           3523 	ld	l,4 (ix)
   0ABD DD 66 05           3524 	ld	h,5 (ix)
   0AC0 E5                 3525 	push	hl
   0AC1 CDr00s00           3526 	call	_puts
   0AC4 F1                 3527 	pop	af
                           3528 ;demo.c:367: puts("\r\n");
   0AC5 21r96s0B           3529 	ld	hl,#__str_5
   0AC8 E5                 3530 	push	hl
   0AC9 CDr00s00           3531 	call	_puts
   0ACC F1                 3532 	pop	af
   0ACD                    3533 00102$:
                           3534 ;demo.c:370: memset((uint8_t *) &f, 0, sizeof(fcb));
   0ACD 21 00 00           3535 	ld	hl,#0x0000
   0AD0 39                 3536 	add	hl,sp
   0AD1 4D                 3537 	ld	c,l
   0AD2 44                 3538 	ld	b,h
   0AD3 21 2E 00           3539 	ld	hl,#0x002E
   0AD6 E5                 3540 	push	hl
   0AD7 3E 00              3541 	ld	a,#0x00
   0AD9 F5                 3542 	push	af
   0ADA 33                 3543 	inc	sp
   0ADB C5                 3544 	push	bc
   0ADC CDr00s00           3545 	call	_memset
   0ADF F1                 3546 	pop	af
   0AE0 F1                 3547 	pop	af
   0AE1 33                 3548 	inc	sp
                           3549 ;demo.c:371: scratch_clear();
   0AE2 CDr90s09           3550 	call	_scratch_clear
                           3551 ;demo.c:373: f.record_size = 128;
   0AE5 21 00 00           3552 	ld	hl,#0x0000
   0AE8 39                 3553 	add	hl,sp
   0AE9 4D                 3554 	ld	c,l
   0AEA 44                 3555 	ld	b,h
   0AEB 21 0F 00           3556 	ld	hl,#0x000F
   0AEE 09                 3557 	add	hl,bc
   0AEF EB                 3558 	ex	de,hl
   0AF0 3E 80              3559 	ld	a,#0x80
   0AF2 12                 3560 	ld	(de),a
                           3561 ;demo.c:374: f.drive = 0;
   0AF3 3E 00              3562 	ld	a,#0x00
   0AF5 02                 3563 	ld	(bc),a
                           3564 ;demo.c:376: memcpy(f.name, file_name, 11);
   0AF6 DD 5E 04           3565 	ld	e,4 (ix)
   0AF9 DD 56 05           3566 	ld	d,5 (ix)
   0AFC 03                 3567 	inc	bc
   0AFD 21 0B 00           3568 	ld	hl,#0x000B
   0B00 E5                 3569 	push	hl
   0B01 D5                 3570 	push	de
   0B02 C5                 3571 	push	bc
   0B03 CDr00s00           3572 	call	_memcpy
   0B06 F1                 3573 	pop	af
   0B07 F1                 3574 	pop	af
   0B08 F1                 3575 	pop	af
                           3576 ;demo.c:378: if (open(&f) != 0) return 0;
   0B09 21 00 00           3577 	ld	hl,#0x0000
   0B0C 39                 3578 	add	hl,sp
   0B0D E5                 3579 	push	hl
   0B0E CDr00s00           3580 	call	_open
   0B11 F1                 3581 	pop	af
   0B12 AF                 3582 	xor	a,a
   0B13 B5                 3583 	or	a,l
   0B14 28 05              3584 	jr	Z,00119$
   0B16 2E 00              3585 	ld	l,#0x00
   0B18 C3r7Fs0B           3586 	jp	00112$
                           3587 ;demo.c:380: while(total < size) {
   0B1B                    3588 00119$:
   0B1B 01 00 00           3589 	ld	bc,#0x0000
   0B1E                    3590 00109$:
   0B1E 79                 3591 	ld	a,c
   0B1F DD 96 06           3592 	sub	a,6 (ix)
   0B22 78                 3593 	ld	a,b
   0B23 DD 9E 07           3594 	sbc	a,7 (ix)
   0B26 F2r74s0B           3595 	jp	P,00111$
                           3596 ;demo.c:381: if (block_set_data_ptr(scratch) != 0) return 0;
   0B29 C5                 3597 	push	bc
   0B2A 21r4As43           3598 	ld	hl,#_scratch
   0B2D E5                 3599 	push	hl
   0B2E CDr00s00           3600 	call	_block_set_data_ptr
   0B31 F1                 3601 	pop	af
   0B32 5D                 3602 	ld	e,l
   0B33 C1                 3603 	pop	bc
   0B34 AF                 3604 	xor	a,a
   0B35 B3                 3605 	or	a,e
   0B36 28 04              3606 	jr	Z,00106$
   0B38 2E 00              3607 	ld	l,#0x00
   0B3A 18 43              3608 	jr	00112$
   0B3C                    3609 00106$:
                           3610 ;demo.c:382: if (block_read(&f) != 0) return 0;
   0B3C 21 00 00           3611 	ld	hl,#0x0000
   0B3F 39                 3612 	add	hl,sp
   0B40 C5                 3613 	push	bc
   0B41 E5                 3614 	push	hl
   0B42 CDr00s00           3615 	call	_block_read
   0B45 F1                 3616 	pop	af
   0B46 5D                 3617 	ld	e,l
   0B47 C1                 3618 	pop	bc
   0B48 AF                 3619 	xor	a,a
   0B49 B3                 3620 	or	a,e
   0B4A 28 04              3621 	jr	Z,00108$
   0B4C 2E 00              3622 	ld	l,#0x00
   0B4E 18 2F              3623 	jr	00112$
   0B50                    3624 00108$:
                           3625 ;demo.c:384: memcpy(buffer+total,scratch,incr);
   0B50 DD 7E 08           3626 	ld	a,8 (ix)
   0B53 81                 3627 	add	a,c
   0B54 5F                 3628 	ld	e,a
   0B55 DD 7E 09           3629 	ld	a,9 (ix)
   0B58 88                 3630 	adc	a,b
   0B59 57                 3631 	ld	d,a
   0B5A C5                 3632 	push	bc
   0B5B 21 80 00           3633 	ld	hl,#0x0080
   0B5E E5                 3634 	push	hl
   0B5F 21r4As43           3635 	ld	hl,#_scratch
   0B62 E5                 3636 	push	hl
   0B63 D5                 3637 	push	de
   0B64 CDr00s00           3638 	call	_memcpy
   0B67 F1                 3639 	pop	af
   0B68 F1                 3640 	pop	af
   0B69 F1                 3641 	pop	af
   0B6A C1                 3642 	pop	bc
                           3643 ;demo.c:386: total+=incr;
   0B6B 21 80 00           3644 	ld	hl,#0x0080
   0B6E 09                 3645 	add	hl,bc
   0B6F 4D                 3646 	ld	c,l
   0B70 44                 3647 	ld	b,h
   0B71 C3r1Es0B           3648 	jp	00109$
   0B74                    3649 00111$:
                           3650 ;demo.c:389: close(&f);
   0B74 21 00 00           3651 	ld	hl,#0x0000
   0B77 39                 3652 	add	hl,sp
   0B78 E5                 3653 	push	hl
   0B79 CDr00s00           3654 	call	_close
   0B7C F1                 3655 	pop	af
                           3656 ;demo.c:391: return 1;
   0B7D 2E 01              3657 	ld	l,#0x01
   0B7F                    3658 00112$:
   0B7F DD F9              3659 	ld	sp,ix
   0B81 DD E1              3660 	pop	ix
   0B83 C9                 3661 	ret
   0B84                    3662 _raw_load_end::
   0B84                    3663 __str_4:
   0B84 6C 6F 61 64 69 6E  3664 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0B95 00                 3665 	.db 0x00
   0B96                    3666 __str_5:
   0B96 0D                 3667 	.db 0x0D
   0B97 0A                 3668 	.db 0x0A
   0B98 00                 3669 	.db 0x00
                           3670 ;demo.c:394: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3671 ;	---------------------------------
                           3672 ; Function pck_load
                           3673 ; ---------------------------------
   0B99                    3674 _pck_load_start::
   0B99                    3675 _pck_load:
   0B99 DD E5              3676 	push	ix
   0B9B DD 21 00 00        3677 	ld	ix,#0
   0B9F DD 39              3678 	add	ix,sp
                           3679 ;demo.c:395: if(debugprint == 1) {
   0BA1 DD 7E 0C           3680 	ld	a,12 (ix)
   0BA4 D6 01              3681 	sub	a,#0x01
   0BA6 20 06              3682 	jr	NZ,00106$
   0BA8 DD 7E 0D           3683 	ld	a,13 (ix)
   0BAB B7                 3684 	or	a,a
   0BAC 28 02              3685 	jr	Z,00107$
   0BAE                    3686 00106$:
   0BAE 18 1B              3687 	jr	00102$
   0BB0                    3688 00107$:
                           3689 ;demo.c:396: puts("loading pckfile: ");
   0BB0 21r12s0C           3690 	ld	hl,#__str_6
   0BB3 E5                 3691 	push	hl
   0BB4 CDr00s00           3692 	call	_puts
   0BB7 F1                 3693 	pop	af
                           3694 ;demo.c:397: puts(file_name);
   0BB8 DD 6E 04           3695 	ld	l,4 (ix)
   0BBB DD 66 05           3696 	ld	h,5 (ix)
   0BBE E5                 3697 	push	hl
   0BBF CDr00s00           3698 	call	_puts
   0BC2 F1                 3699 	pop	af
                           3700 ;demo.c:398: puts("\r\n");
   0BC3 21r24s0C           3701 	ld	hl,#__str_7
   0BC6 E5                 3702 	push	hl
   0BC7 CDr00s00           3703 	call	_puts
   0BCA F1                 3704 	pop	af
   0BCB                    3705 00102$:
                           3706 ;demo.c:400: memset((uint8_t *) &packbuffer, 0, size);
   0BCB DD 4E 06           3707 	ld	c,6 (ix)
   0BCE DD 46 07           3708 	ld	b,7 (ix)
   0BD1 C5                 3709 	push	bc
   0BD2 C5                 3710 	push	bc
   0BD3 3E 00              3711 	ld	a,#0x00
   0BD5 F5                 3712 	push	af
   0BD6 33                 3713 	inc	sp
   0BD7 21rC8s01           3714 	ld	hl,#_packbuffer
   0BDA E5                 3715 	push	hl
   0BDB CDr00s00           3716 	call	_memset
   0BDE F1                 3717 	pop	af
   0BDF F1                 3718 	pop	af
   0BE0 33                 3719 	inc	sp
   0BE1 C1                 3720 	pop	bc
                           3721 ;demo.c:401: raw_load(file_name, size, packbuffer,0);
   0BE2 21 00 00           3722 	ld	hl,#0x0000
   0BE5 E5                 3723 	push	hl
   0BE6 21rC8s01           3724 	ld	hl,#_packbuffer
   0BE9 E5                 3725 	push	hl
   0BEA C5                 3726 	push	bc
   0BEB DD 6E 04           3727 	ld	l,4 (ix)
   0BEE DD 66 05           3728 	ld	h,5 (ix)
   0BF1 E5                 3729 	push	hl
   0BF2 CDr96s0A           3730 	call	_raw_load
   0BF5 F1                 3731 	pop	af
   0BF6 F1                 3732 	pop	af
   0BF7 F1                 3733 	pop	af
   0BF8 F1                 3734 	pop	af
                           3735 ;demo.c:402: bitbuster(packbuffer,address,vram_offset);
   0BF9 DD 7E 0A           3736 	ld	a,10 (ix)
   0BFC F5                 3737 	push	af
   0BFD 33                 3738 	inc	sp
   0BFE DD 6E 08           3739 	ld	l,8 (ix)
   0C01 DD 66 09           3740 	ld	h,9 (ix)
   0C04 E5                 3741 	push	hl
   0C05 21rC8s01           3742 	ld	hl,#_packbuffer
   0C08 E5                 3743 	push	hl
   0C09 CDr00s00           3744 	call	_bitbuster
   0C0C F1                 3745 	pop	af
   0C0D F1                 3746 	pop	af
   0C0E 33                 3747 	inc	sp
   0C0F DD E1              3748 	pop	ix
   0C11 C9                 3749 	ret
   0C12                    3750 _pck_load_end::
   0C12                    3751 __str_6:
   0C12 6C 6F 61 64 69 6E  3752 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0C23 00                 3753 	.db 0x00
   0C24                    3754 __str_7:
   0C24 0D                 3755 	.db 0x0D
   0C25 0A                 3756 	.db 0x0A
   0C26 00                 3757 	.db 0x00
                           3758 ;demo.c:405: void fadein() {
                           3759 ;	---------------------------------
                           3760 ; Function fadein
                           3761 ; ---------------------------------
   0C27                    3762 _fadein_start::
   0C27                    3763 _fadein:
   0C27 DD E5              3764 	push	ix
   0C29 DD 21 00 00        3765 	ld	ix,#0
   0C2D DD 39              3766 	add	ix,sp
   0C2F F5                 3767 	push	af
                           3768 ;demo.c:408: if (tick < 8) return;
   0C30 3ArACs44           3769 	ld	a,(#_tick+0)
   0C33 D6 08              3770 	sub	a,#0x08
   0C35 3ArADs44           3771 	ld	a,(#_tick+1)
   0C38 DE 00              3772 	sbc	a,#0x00
   0C3A F2r40s0C           3773 	jp	P,00102$
   0C3D C3rEEs0C           3774 	jp	00113$
   0C40                    3775 00102$:
                           3776 ;demo.c:410: tick = 0;
   0C40 21rACs44           3777 	ld	hl,#_tick + 0
   0C43 36 00              3778 	ld	(hl), #0x00
   0C45 21rADs44           3779 	ld	hl,#_tick + 1
   0C48 36 00              3780 	ld	(hl), #0x00
                           3781 ;demo.c:412: for(i = 0; i < 32; i+=2) {
   0C4A 0E 00              3782 	ld	c,#0x00
   0C4C                    3783 00109$:
   0C4C 79                 3784 	ld	a,c
   0C4D D6 20              3785 	sub	a,#0x20
   0C4F D2rE6s0C           3786 	jp	NC,00112$
                           3787 ;demo.c:413: uint8_t r = scratch[i] >> 4;
   0C52 3Er4A              3788 	ld	a,#<_scratch
   0C54 81                 3789 	add	a,c
   0C55 5F                 3790 	ld	e,a
   0C56 3Es43              3791 	ld	a,#>_scratch
   0C58 CE 00              3792 	adc	a,#0x00
   0C5A 57                 3793 	ld	d,a
   0C5B 1A                 3794 	ld	a,(de)
   0C5C 47                 3795 	ld	b,a
   0C5D 58                 3796 	ld	e,b
   0C5E CB 3B              3797 	srl	e
   0C60 CB 3B              3798 	srl	e
   0C62 CB 3B              3799 	srl	e
   0C64 CB 3B              3800 	srl	e
                           3801 ;demo.c:414: uint8_t b = scratch[i] & 0xf;
   0C66 78                 3802 	ld	a,b
   0C67 E6 0F              3803 	and	a,#0x0F
   0C69 DD 77 FF           3804 	ld	-1 (ix),a
                           3805 ;demo.c:415: uint8_t g = scratch[i+1];
   0C6C 51                 3806 	ld	d,c
   0C6D 14                 3807 	inc	d
   0C6E 3Er4A              3808 	ld	a,#<_scratch
   0C70 82                 3809 	add	a,d
   0C71 6F                 3810 	ld	l,a
   0C72 3Es43              3811 	ld	a,#>_scratch
   0C74 CE 00              3812 	adc	a,#0x00
   0C76 67                 3813 	ld	h,a
   0C77 56                 3814 	ld	d,(hl)
   0C78 DD 72 FE           3815 	ld	-2 (ix),d
                           3816 ;demo.c:417: if (r < (cur_palette[i] >> 4)) r++;
   0C7B 3ErCA              3817 	ld	a,#<_cur_palette
   0C7D 81                 3818 	add	a,c
   0C7E 6F                 3819 	ld	l,a
   0C7F 3Es43              3820 	ld	a,#>_cur_palette
   0C81 CE 00              3821 	adc	a,#0x00
   0C83 67                 3822 	ld	h,a
   0C84 56                 3823 	ld	d,(hl)
   0C85 CB 3A              3824 	srl	d
   0C87 CB 3A              3825 	srl	d
   0C89 CB 3A              3826 	srl	d
   0C8B CB 3A              3827 	srl	d
   0C8D 7B                 3828 	ld	a,e
   0C8E 92                 3829 	sub	a,d
   0C8F 30 01              3830 	jr	NC,00104$
   0C91 1C                 3831 	inc	e
   0C92                    3832 00104$:
                           3833 ;demo.c:418: if (b < (cur_palette[i] & 0xf)) b++;
   0C92 3ErCA              3834 	ld	a,#<_cur_palette
   0C94 81                 3835 	add	a,c
   0C95 6F                 3836 	ld	l,a
   0C96 3Es43              3837 	ld	a,#>_cur_palette
   0C98 CE 00              3838 	adc	a,#0x00
   0C9A 67                 3839 	ld	h,a
   0C9B 7E                 3840 	ld	a,(hl)
   0C9C E6 0F              3841 	and	a,#0x0F
   0C9E 47                 3842 	ld	b,a
   0C9F DD 7E FF           3843 	ld	a,-1 (ix)
   0CA2 90                 3844 	sub	a,b
   0CA3 30 03              3845 	jr	NC,00106$
   0CA5 DD 34 FF           3846 	inc	-1 (ix)
   0CA8                    3847 00106$:
                           3848 ;demo.c:420: scratch[i] = (r << 4) | b;
   0CA8 3Er4A              3849 	ld	a,#<_scratch
   0CAA 81                 3850 	add	a,c
   0CAB 47                 3851 	ld	b,a
   0CAC 3Es43              3852 	ld	a,#>_scratch
   0CAE CE 00              3853 	adc	a,#0x00
   0CB0 57                 3854 	ld	d,a
   0CB1 7B                 3855 	ld	a,e
   0CB2 07                 3856 	rlca
   0CB3 07                 3857 	rlca
   0CB4 07                 3858 	rlca
   0CB5 07                 3859 	rlca
   0CB6 E6 F0              3860 	and	a,#0xF0
   0CB8 DD B6 FF           3861 	or	a,-1 (ix)
   0CBB 68                 3862 	ld	l,b
   0CBC 62                 3863 	ld	h,d
   0CBD 77                 3864 	ld	(hl),a
                           3865 ;demo.c:421: if (g < cur_palette[i+1]) scratch[i+1]++;
   0CBE 41                 3866 	ld	b,c
   0CBF 04                 3867 	inc	b
   0CC0 3ErCA              3868 	ld	a,#<_cur_palette
   0CC2 80                 3869 	add	a,b
   0CC3 5F                 3870 	ld	e,a
   0CC4 3Es43              3871 	ld	a,#>_cur_palette
   0CC6 CE 00              3872 	adc	a,#0x00
   0CC8 57                 3873 	ld	d,a
   0CC9 1A                 3874 	ld	a,(de)
   0CCA 5F                 3875 	ld	e,a
   0CCB DD 7E FE           3876 	ld	a,-2 (ix)
   0CCE 93                 3877 	sub	a,e
   0CCF 30 10              3878 	jr	NC,00111$
   0CD1 3Er4A              3879 	ld	a,#<_scratch
   0CD3 80                 3880 	add	a,b
   0CD4 47                 3881 	ld	b,a
   0CD5 3Es43              3882 	ld	a,#>_scratch
   0CD7 CE 00              3883 	adc	a,#0x00
   0CD9 5F                 3884 	ld	e,a
   0CDA 68                 3885 	ld	l,b
   0CDB 67                 3886 	ld	h,a
   0CDC 7E                 3887 	ld	a,(hl)
   0CDD 3C                 3888 	inc	a
   0CDE 68                 3889 	ld	l,b
   0CDF 63                 3890 	ld	h,e
   0CE0 77                 3891 	ld	(hl),a
   0CE1                    3892 00111$:
                           3893 ;demo.c:412: for(i = 0; i < 32; i+=2) {
   0CE1 0C                 3894 	inc	c
   0CE2 0C                 3895 	inc	c
   0CE3 C3r4Cs0C           3896 	jp	00109$
   0CE6                    3897 00112$:
                           3898 ;demo.c:425: vdp_load_palette(scratch);
   0CE6 21r4As43           3899 	ld	hl,#_scratch
   0CE9 E5                 3900 	push	hl
   0CEA CDr00s00           3901 	call	_vdp_load_palette
   0CED F1                 3902 	pop	af
   0CEE                    3903 00113$:
   0CEE DD F9              3904 	ld	sp,ix
   0CF0 DD E1              3905 	pop	ix
   0CF2 C9                 3906 	ret
   0CF3                    3907 _fadein_end::
                           3908 ;demo.c:437: void do_ymmm() {
                           3909 ;	---------------------------------
                           3910 ; Function do_ymmm
                           3911 ; ---------------------------------
   0CF3                    3912 _do_ymmm_start::
   0CF3                    3913 _do_ymmm:
   0CF3 DD E5              3914 	push	ix
   0CF5 DD 21 00 00        3915 	ld	ix,#0
   0CF9 DD 39              3916 	add	ix,sp
   0CFB F5                 3917 	push	af
                           3918 ;demo.c:441: if (tick > 32) { tick = 0; flipper++;}
   0CFC 3E 20              3919 	ld	a,#0x20
   0CFE FD 21rACs44        3920 	ld	iy,#_tick
   0D02 FD 96 00           3921 	sub	a,0 (iy)
   0D05 3E 00              3922 	ld	a,#0x00
   0D07 FD 21rACs44        3923 	ld	iy,#_tick
   0D0B FD 9E 01           3924 	sbc	a,1 (iy)
   0D0E F2r2Bs0D           3925 	jp	P,00102$
   0D11 21rACs44           3926 	ld	hl,#_tick + 0
   0D14 36 00              3927 	ld	(hl), #0x00
   0D16 21rADs44           3928 	ld	hl,#_tick + 1
   0D19 36 00              3929 	ld	(hl), #0x00
   0D1B FD 21r0Fs45        3930 	ld	iy,#_flipper
   0D1F FD 34 00           3931 	inc	0 (iy)
   0D22 20 07              3932 	jr	NZ,00115$
   0D24 FD 21r0Fs45        3933 	ld	iy,#_flipper
   0D28 FD 34 01           3934 	inc	1 (iy)
   0D2B                    3935 00115$:
   0D2B                    3936 00102$:
                           3937 ;demo.c:442: if (flipper > 10) { flipper = 0;}
   0D2B 3E 0A              3938 	ld	a,#0x0A
   0D2D FD 21r0Fs45        3939 	ld	iy,#_flipper
   0D31 FD 96 00           3940 	sub	a,0 (iy)
   0D34 3E 00              3941 	ld	a,#0x00
   0D36 FD 21r0Fs45        3942 	ld	iy,#_flipper
   0D3A FD 9E 01           3943 	sbc	a,1 (iy)
   0D3D F2r4As0D           3944 	jp	P,00104$
   0D40 21r0Fs45           3945 	ld	hl,#_flipper + 0
   0D43 36 00              3946 	ld	(hl), #0x00
   0D45 21r10s45           3947 	ld	hl,#_flipper + 1
   0D48 36 00              3948 	ld	(hl), #0x00
   0D4A                    3949 00104$:
                           3950 ;demo.c:444: ymmmf++;
   0D4A FD 21r11s45        3951 	ld	iy,#_ymmmf
   0D4E FD 34 00           3952 	inc	0 (iy)
   0D51 20 07              3953 	jr	NZ,00116$
   0D53 FD 21r11s45        3954 	ld	iy,#_ymmmf
   0D57 FD 34 01           3955 	inc	1 (iy)
   0D5A                    3956 00116$:
                           3957 ;demo.c:445: for (yofff = 0; yofff<212-step;yofff+=step) {
   0D5A 21r0Ds45           3958 	ld	hl,#_yofff + 0
   0D5D 36 00              3959 	ld	(hl), #0x00
   0D5F                    3960 00105$:
   0D5F 21r0Ds45           3961 	ld	hl,#_yofff + 0
   0D62 4E                 3962 	ld	c,(hl)
   0D63 06 00              3963 	ld	b,#0x00
   0D65 79                 3964 	ld	a,c
   0D66 D6 D2              3965 	sub	a,#0xD2
   0D68 78                 3966 	ld	a,b
   0D69 DE 00              3967 	sbc	a,#0x00
   0D6B F2rDFs0D           3968 	jp	P,00109$
                           3969 ;demo.c:446: xo = (sintabx[(yofff+ymmmf) & 255]);
   0D6E 21r11s45           3970 	ld	hl,#_ymmmf
   0D71 79                 3971 	ld	a,c
   0D72 86                 3972 	add	a,(hl)
   0D73 5F                 3973 	ld	e,a
   0D74 78                 3974 	ld	a,b
   0D75 23                 3975 	inc	hl
   0D76 8E                 3976 	adc	a,(hl)
   0D77 16 00              3977 	ld	d,#0x00
   0D79 21r2Cs00           3978 	ld	hl,#_sintabx
   0D7C 19                 3979 	add	hl,de
   0D7D 7E                 3980 	ld	a,(hl)
   0D7E DD 77 FE           3981 	ld	-2 (ix),a
   0D81 DD 36 FF 00        3982 	ld	-1 (ix),#0x00
                           3983 ;demo.c:449: cmd.source_x = 0;
   0D85 21rAEs44           3984 	ld	hl,#_cmd
   0D88 36 00              3985 	ld	(hl),#0x00
   0D8A 23                 3986 	inc	hl
   0D8B 36 00              3987 	ld	(hl),#0x00
                           3988 ;demo.c:450: cmd.source_y = 0+yofff;
   0D8D 11rB0s44           3989 	ld	de,#_cmd + 2
   0D90 EB                 3990 	ex	de,hl
   0D91 71                 3991 	ld	(hl),c
   0D92 23                 3992 	inc	hl
   0D93 70                 3993 	ld	(hl),b
                           3994 ;demo.c:451: cmd.dest_x = xo;
   0D94 11rB2s44           3995 	ld	de,#_cmd + 4
   0D97 EB                 3996 	ex	de,hl
   0D98 DD 7E FE           3997 	ld	a,-2 (ix)
   0D9B 77                 3998 	ld	(hl),a
   0D9C 23                 3999 	inc	hl
   0D9D DD 7E FF           4000 	ld	a,-1 (ix)
   0DA0 77                 4001 	ld	(hl),a
                           4002 ;demo.c:452: cmd.dest_y = 3+yofff;
   0DA1 11rB4s44           4003 	ld	de,#_cmd + 6
   0DA4 03                 4004 	inc	bc
   0DA5 03                 4005 	inc	bc
   0DA6 03                 4006 	inc	bc
   0DA7 6B                 4007 	ld	l,e
   0DA8 62                 4008 	ld	h,d
   0DA9 71                 4009 	ld	(hl),c
   0DAA 23                 4010 	inc	hl
   0DAB 70                 4011 	ld	(hl),b
                           4012 ;demo.c:453: cmd.size_x = 256;
   0DAC 21rB6s44           4013 	ld	hl, #_cmd + 8
   0DAF 36 00              4014 	ld	(hl),#0x00
   0DB1 23                 4015 	inc	hl
   0DB2 36 01              4016 	ld	(hl),#0x01
                           4017 ;demo.c:454: cmd.size_y = 1;
   0DB4 21rB8s44           4018 	ld	hl, #_cmd + 10
   0DB7 36 01              4019 	ld	(hl),#0x01
   0DB9 23                 4020 	inc	hl
   0DBA 36 00              4021 	ld	(hl),#0x00
                           4022 ;demo.c:455: cmd.data = 0;
                           4023 ;demo.c:456: cmd.argument = 0;
   0DBC 3E 00              4024 	ld	a,#0x00
   0DBE 32rBAs44           4025 	ld	(#_cmd + 12),a
   0DC1 32rBBs44           4026 	ld	(#_cmd + 13),a
                           4027 ;demo.c:457: cmd.command = 0xD0;
   0DC4 3E D0              4028 	ld	a,#0xD0
   0DC6 32rBCs44           4029 	ld	(#_cmd + 14),a
                           4030 ;demo.c:460: vdp_copier(&cmd);
   0DC9 21rAEs44           4031 	ld	hl,#_cmd
   0DCC E5                 4032 	push	hl
   0DCD CDr00s00           4033 	call	_vdp_copier
   0DD0 F1                 4034 	pop	af
                           4035 ;demo.c:445: for (yofff = 0; yofff<212-step;yofff+=step) {
   0DD1 21r0Ds45           4036 	ld	hl,#_yofff + 0
   0DD4 4E                 4037 	ld	c,(hl)
   0DD5 21r0Ds45           4038 	ld	hl,#_yofff
   0DD8 79                 4039 	ld	a,c
   0DD9 C6 02              4040 	add	a,#0x02
   0DDB 77                 4041 	ld	(hl),a
   0DDC C3r5Fs0D           4042 	jp	00105$
   0DDF                    4043 00109$:
   0DDF DD F9              4044 	ld	sp,ix
   0DE1 DD E1              4045 	pop	ix
   0DE3 C9                 4046 	ret
   0DE4                    4047 _do_ymmm_end::
                           4048 ;demo.c:477: void do_blocks() {
                           4049 ;	---------------------------------
                           4050 ; Function do_blocks
                           4051 ; ---------------------------------
   0DE4                    4052 _do_blocks_start::
   0DE4                    4053 _do_blocks:
   0DE4 DD E5              4054 	push	ix
   0DE6 DD 21 00 00        4055 	ld	ix,#0
   0DEA DD 39              4056 	add	ix,sp
   0DEC 21 FA FF           4057 	ld	hl,#-6
   0DEF 39                 4058 	add	hl,sp
   0DF0 F9                 4059 	ld	sp,hl
                           4060 ;demo.c:479: int ys = 0;
   0DF1 DD 36 FC 00        4061 	ld	-4 (ix),#0x00
   0DF5 DD 36 FD 00        4062 	ld	-3 (ix),#0x00
                           4063 ;demo.c:480: int ye = 0;
   0DF9 DD 36 FA 00        4064 	ld	-6 (ix),#0x00
   0DFD DD 36 FB 00        4065 	ld	-5 (ix),#0x00
                           4066 ;demo.c:482: vdp_register(VDP_VOFFSET,0);
   0E01 21 17 00           4067 	ld	hl,#0x0017
   0E04 E5                 4068 	push	hl
   0E05 CDr00s00           4069 	call	_vdp_register
   0E08 F1                 4070 	pop	af
                           4071 ;demo.c:484: if (block_init == 0) {
   0E09 AF                 4072 	xor	a,a
   0E0A FD 21r13s45        4073 	ld	iy,#_block_init
   0E0E FD B6 00           4074 	or	a,0 (iy)
   0E11 C2r79s0E           4075 	jp	NZ,00108$
                           4076 ;demo.c:486: vdp_set_screen5();
   0E14 CDr00s00           4077 	call	_vdp_set_screen5
                           4078 ;demo.c:488: vdp_register(2, 0x5F);
   0E17 21 02 5F           4079 	ld	hl,#0x5F02
   0E1A E5                 4080 	push	hl
   0E1B CDr00s00           4081 	call	_vdp_register
   0E1E F1                 4082 	pop	af
                           4083 ;demo.c:490: for(i=0;i<16;i++) btab[i] = i*16;
   0E1F DD 36 FE 00        4084 	ld	-2 (ix),#0x00
   0E23 DD 36 FF 00        4085 	ld	-1 (ix),#0x00
   0E27                    4086 00110$:
   0E27 DD 7E FE           4087 	ld	a,-2 (ix)
   0E2A D6 10              4088 	sub	a,#0x10
   0E2C DD 7E FF           4089 	ld	a,-1 (ix)
   0E2F DE 00              4090 	sbc	a,#0x00
   0E31 F2r69s0E           4091 	jp	P,00113$
   0E34 DD 4E FE           4092 	ld	c,-2 (ix)
   0E37 DD 46 FF           4093 	ld	b,-1 (ix)
   0E3A CB 21              4094 	sla	c
   0E3C CB 10              4095 	rl	b
   0E3E 21r1Cs45           4096 	ld	hl,#_btab
   0E41 09                 4097 	add	hl,bc
   0E42 4D                 4098 	ld	c,l
   0E43 44                 4099 	ld	b,h
   0E44 DD 5E FE           4100 	ld	e,-2 (ix)
   0E47 DD 56 FF           4101 	ld	d,-1 (ix)
   0E4A CB 23              4102 	sla	e
   0E4C CB 12              4103 	rl	d
   0E4E CB 23              4104 	sla	e
   0E50 CB 12              4105 	rl	d
   0E52 CB 23              4106 	sla	e
   0E54 CB 12              4107 	rl	d
   0E56 CB 23              4108 	sla	e
   0E58 CB 12              4109 	rl	d
   0E5A 69                 4110 	ld	l,c
   0E5B 60                 4111 	ld	h,b
   0E5C 73                 4112 	ld	(hl),e
   0E5D 23                 4113 	inc	hl
   0E5E 72                 4114 	ld	(hl),d
   0E5F DD 34 FE           4115 	inc	-2 (ix)
   0E62 20 03              4116 	jr	NZ,00139$
   0E64 DD 34 FF           4117 	inc	-1 (ix)
   0E67                    4118 00139$:
   0E67 18 BE              4119 	jr	00110$
   0E69                    4120 00113$:
                           4121 ;demo.c:491: vdp_load_palette(block_palette);
   0E69 21r0As44           4122 	ld	hl,#_block_palette
   0E6C E5                 4123 	push	hl
   0E6D CDr00s00           4124 	call	_vdp_load_palette
   0E70 F1                 4125 	pop	af
                           4126 ;demo.c:493: block_init = 1;
   0E71 21r13s45           4127 	ld	hl,#_block_init + 0
   0E74 36 01              4128 	ld	(hl), #0x01
   0E76 C3r02s10           4129 	jp	00122$
   0E79                    4130 00108$:
                           4131 ;demo.c:497: if (flof == 0) { ys = 0; ye = 8; }
   0E79 3Ar3Cs45           4132 	ld	a,(#_flof+0)
   0E7C FD 21r3Cs45        4133 	ld	iy,#_flof
   0E80 FD B6 01           4134 	or	a,1 (iy)
   0E83 20 10              4135 	jr	NZ,00102$
   0E85 DD 36 FC 00        4136 	ld	-4 (ix),#0x00
   0E89 DD 36 FD 00        4137 	ld	-3 (ix),#0x00
   0E8D DD 36 FA 08        4138 	ld	-6 (ix),#0x08
   0E91 DD 36 FB 00        4139 	ld	-5 (ix),#0x00
   0E95                    4140 00102$:
                           4141 ;demo.c:498: if (flof == 1) { ys = 8; ye = 16; }
   0E95 3Ar3Cs45           4142 	ld	a,(#_flof+0)
   0E98 D6 01              4143 	sub	a,#0x01
   0E9A 20 06              4144 	jr	NZ,00140$
   0E9C 3Ar3Ds45           4145 	ld	a,(#_flof+1)
   0E9F B7                 4146 	or	a,a
   0EA0 28 02              4147 	jr	Z,00141$
   0EA2                    4148 00140$:
   0EA2 18 10              4149 	jr	00104$
   0EA4                    4150 00141$:
   0EA4 DD 36 FC 08        4151 	ld	-4 (ix),#0x08
   0EA8 DD 36 FD 00        4152 	ld	-3 (ix),#0x00
   0EAC DD 36 FA 10        4153 	ld	-6 (ix),#0x10
   0EB0 DD 36 FB 00        4154 	ld	-5 (ix),#0x00
   0EB4                    4155 00104$:
                           4156 ;demo.c:500: for(bty=3;bty<11;bty++) {
   0EB4 FD 21r1As45        4157 	ld	iy,#_bty
   0EB8 FD 36 00 03        4158 	ld	0 (iy),#0x03
   0EBC FD 21r1As45        4159 	ld	iy,#_bty
   0EC0 FD 36 01 00        4160 	ld	1 (iy),#0x00
   0EC4                    4161 00118$:
   0EC4 3Ar1As45           4162 	ld	a,(#_bty+0)
   0EC7 D6 0B              4163 	sub	a,#0x0B
   0EC9 3Ar1Bs45           4164 	ld	a,(#_bty+1)
   0ECC DE 00              4165 	sbc	a,#0x00
   0ECE F2rD9s0F           4166 	jp	P,00121$
                           4167 ;demo.c:501: for(btx=ys;btx<ye;btx++) {
   0ED1 DD 7E FC           4168 	ld	a,-4 (ix)
   0ED4 FD 21r18s45        4169 	ld	iy,#_btx
   0ED8 FD 77 00           4170 	ld	0 (iy),a
   0EDB DD 7E FD           4171 	ld	a,-3 (ix)
   0EDE FD 21r18s45        4172 	ld	iy,#_btx
   0EE2 FD 77 01           4173 	ld	1 (iy),a
   0EE5                    4174 00114$:
   0EE5 3Ar18s45           4175 	ld	a,(#_btx+0)
   0EE8 DD 96 FA           4176 	sub	a,-6 (ix)
   0EEB 3Ar19s45           4177 	ld	a,(#_btx+1)
   0EEE DD 9E FB           4178 	sbc	a,-5 (ix)
   0EF1 F2rC6s0F           4179 	jp	P,00120$
                           4180 ;demo.c:502: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0EF4 3Ar00s00           4181 	ld	a,(#_PLY_PSGReg8+0)
   0EF7 FD 21r00s00        4182 	ld	iy,#_PLY_PSGReg9
   0EFB FD A6 00           4183 	and	a,0 (iy)
   0EFE 21r00s00           4184 	ld	hl,#_PLY_PSGReg10 + 0
   0F01 B6                 4185 	or	a,(hl)
   0F02 4F                 4186 	ld	c,a
   0F03 CB 39              4187 	srl	c
   0F05 21r14s45           4188 	ld	hl,#_bsx + 0
   0F08 71                 4189 	ld	(hl), c
   0F09 21r15s45           4190 	ld	hl,#_bsx + 1
   0F0C 36 00              4191 	ld	(hl), #0x00
                           4192 ;demo.c:503: bsy = PLY_PSGReg10;
   0F0E 3Ar00s00           4193 	ld	a,(#_PLY_PSGReg10+0)
   0F11 21r16s45           4194 	ld	hl,#_bsy + 0
   0F14 77                 4195 	ld	(hl), a
   0F15 21r17s45           4196 	ld	hl,#_bsy + 1
   0F18 36 00              4197 	ld	(hl), #0x00
                           4198 ;demo.c:504: cmd.source_x = btab[bsx];
   0F1A 21r14s45           4199 	ld	hl,#_bsx + 0
   0F1D 4E                 4200 	ld	c,(hl)
   0F1E 21r15s45           4201 	ld	hl,#_bsx + 1
   0F21 46                 4202 	ld	b,(hl)
   0F22 CB 21              4203 	sla	c
   0F24 CB 10              4204 	rl	b
   0F26 21r1Cs45           4205 	ld	hl,#_btab
   0F29 09                 4206 	add	hl,bc
   0F2A 4E                 4207 	ld	c,(hl)
   0F2B 23                 4208 	inc	hl
   0F2C 46                 4209 	ld	b,(hl)
   0F2D 21rAEs44           4210 	ld	hl,#_cmd
   0F30 71                 4211 	ld	(hl),c
   0F31 23                 4212 	inc	hl
   0F32 70                 4213 	ld	(hl),b
                           4214 ;demo.c:505: cmd.source_y = 768+btab[bsy];
   0F33 01rB0s44           4215 	ld	bc,#_cmd + 2
   0F36 21r16s45           4216 	ld	hl,#_bsy + 0
   0F39 5E                 4217 	ld	e,(hl)
   0F3A 21r17s45           4218 	ld	hl,#_bsy + 1
   0F3D 56                 4219 	ld	d,(hl)
   0F3E CB 23              4220 	sla	e
   0F40 CB 12              4221 	rl	d
   0F42 21r1Cs45           4222 	ld	hl,#_btab
   0F45 19                 4223 	add	hl,de
   0F46 5E                 4224 	ld	e,(hl)
   0F47 23                 4225 	inc	hl
   0F48 56                 4226 	ld	d,(hl)
   0F49 21 00 03           4227 	ld	hl,#0x0300
   0F4C 19                 4228 	add	hl,de
   0F4D EB                 4229 	ex	de,hl
   0F4E 69                 4230 	ld	l,c
   0F4F 60                 4231 	ld	h,b
   0F50 73                 4232 	ld	(hl),e
   0F51 23                 4233 	inc	hl
   0F52 72                 4234 	ld	(hl),d
                           4235 ;demo.c:506: cmd.dest_x = btab[btx];
   0F53 01rB2s44           4236 	ld	bc,#_cmd + 4
   0F56 21r18s45           4237 	ld	hl,#_btx + 0
   0F59 5E                 4238 	ld	e,(hl)
   0F5A 21r19s45           4239 	ld	hl,#_btx + 1
   0F5D 56                 4240 	ld	d,(hl)
   0F5E CB 23              4241 	sla	e
   0F60 CB 12              4242 	rl	d
   0F62 21r1Cs45           4243 	ld	hl,#_btab
   0F65 19                 4244 	add	hl,de
   0F66 5E                 4245 	ld	e,(hl)
   0F67 23                 4246 	inc	hl
   0F68 56                 4247 	ld	d,(hl)
   0F69 69                 4248 	ld	l,c
   0F6A 60                 4249 	ld	h,b
   0F6B 73                 4250 	ld	(hl),e
   0F6C 23                 4251 	inc	hl
   0F6D 72                 4252 	ld	(hl),d
                           4253 ;demo.c:507: cmd.dest_y = 512+btab[bty];
   0F6E 01rB4s44           4254 	ld	bc,#_cmd + 6
   0F71 21r1As45           4255 	ld	hl,#_bty + 0
   0F74 5E                 4256 	ld	e,(hl)
   0F75 21r1Bs45           4257 	ld	hl,#_bty + 1
   0F78 56                 4258 	ld	d,(hl)
   0F79 CB 23              4259 	sla	e
   0F7B CB 12              4260 	rl	d
   0F7D 21r1Cs45           4261 	ld	hl,#_btab
   0F80 19                 4262 	add	hl,de
   0F81 5E                 4263 	ld	e,(hl)
   0F82 23                 4264 	inc	hl
   0F83 56                 4265 	ld	d,(hl)
   0F84 21 00 02           4266 	ld	hl,#0x0200
   0F87 19                 4267 	add	hl,de
   0F88 EB                 4268 	ex	de,hl
   0F89 69                 4269 	ld	l,c
   0F8A 60                 4270 	ld	h,b
   0F8B 73                 4271 	ld	(hl),e
   0F8C 23                 4272 	inc	hl
   0F8D 72                 4273 	ld	(hl),d
                           4274 ;demo.c:508: cmd.size_x = 16;
   0F8E 21rB6s44           4275 	ld	hl, #_cmd + 8
   0F91 36 10              4276 	ld	(hl),#0x10
   0F93 23                 4277 	inc	hl
   0F94 36 00              4278 	ld	(hl),#0x00
                           4279 ;demo.c:509: cmd.size_y = 16;
   0F96 21rB8s44           4280 	ld	hl, #_cmd + 10
   0F99 36 10              4281 	ld	(hl),#0x10
   0F9B 23                 4282 	inc	hl
   0F9C 36 00              4283 	ld	(hl),#0x00
                           4284 ;demo.c:510: cmd.data = 0;
                           4285 ;demo.c:511: cmd.argument = 0x00;
   0F9E 3E 00              4286 	ld	a,#0x00
   0FA0 32rBAs44           4287 	ld	(#_cmd + 12),a
   0FA3 32rBBs44           4288 	ld	(#_cmd + 13),a
                           4289 ;demo.c:512: cmd.command = 0xD0;
   0FA6 3E D0              4290 	ld	a,#0xD0
   0FA8 32rBCs44           4291 	ld	(#_cmd + 14),a
                           4292 ;demo.c:513: vdp_copier(&cmd);
   0FAB 21rAEs44           4293 	ld	hl,#_cmd
   0FAE E5                 4294 	push	hl
   0FAF CDr00s00           4295 	call	_vdp_copier
   0FB2 F1                 4296 	pop	af
                           4297 ;demo.c:501: for(btx=ys;btx<ye;btx++) {
   0FB3 FD 21r18s45        4298 	ld	iy,#_btx
   0FB7 FD 34 00           4299 	inc	0 (iy)
   0FBA 20 07              4300 	jr	NZ,00150$
   0FBC FD 21r18s45        4301 	ld	iy,#_btx
   0FC0 FD 34 01           4302 	inc	1 (iy)
   0FC3                    4303 00150$:
   0FC3 C3rE5s0E           4304 	jp	00114$
   0FC6                    4305 00120$:
                           4306 ;demo.c:500: for(bty=3;bty<11;bty++) {
   0FC6 FD 21r1As45        4307 	ld	iy,#_bty
   0FCA FD 34 00           4308 	inc	0 (iy)
   0FCD 20 07              4309 	jr	NZ,00151$
   0FCF FD 21r1As45        4310 	ld	iy,#_bty
   0FD3 FD 34 01           4311 	inc	1 (iy)
   0FD6                    4312 00151$:
   0FD6 C3rC4s0E           4313 	jp	00118$
   0FD9                    4314 00121$:
                           4315 ;demo.c:517: flof++;
   0FD9 FD 21r3Cs45        4316 	ld	iy,#_flof
   0FDD FD 34 00           4317 	inc	0 (iy)
   0FE0 20 07              4318 	jr	NZ,00152$
   0FE2 FD 21r3Cs45        4319 	ld	iy,#_flof
   0FE6 FD 34 01           4320 	inc	1 (iy)
   0FE9                    4321 00152$:
                           4322 ;demo.c:518: if (flof == 2) flof = 0;
   0FE9 3Ar3Cs45           4323 	ld	a,(#_flof+0)
   0FEC D6 02              4324 	sub	a,#0x02
   0FEE 20 06              4325 	jr	NZ,00153$
   0FF0 3Ar3Ds45           4326 	ld	a,(#_flof+1)
   0FF3 B7                 4327 	or	a,a
   0FF4 28 02              4328 	jr	Z,00154$
   0FF6                    4329 00153$:
   0FF6 18 0A              4330 	jr	00122$
   0FF8                    4331 00154$:
   0FF8 21r3Cs45           4332 	ld	hl,#_flof + 0
   0FFB 36 00              4333 	ld	(hl), #0x00
   0FFD 21r3Ds45           4334 	ld	hl,#_flof + 1
   1000 36 00              4335 	ld	(hl), #0x00
   1002                    4336 00122$:
   1002 DD F9              4337 	ld	sp,ix
   1004 DD E1              4338 	pop	ix
   1006 C9                 4339 	ret
   1007                    4340 _do_blocks_end::
                           4341 ;demo.c:526: void raster_effu() {
                           4342 ;	---------------------------------
                           4343 ; Function raster_effu
                           4344 ; ---------------------------------
   1007                    4345 _raster_effu_start::
   1007                    4346 _raster_effu:
                           4347 ;demo.c:527: vdp_register(VDP_VOFFSET,0);
   1007 21 17 00           4348 	ld	hl,#0x0017
   100A E5                 4349 	push	hl
   100B CDr00s00           4350 	call	_vdp_register
   100E F1                 4351 	pop	af
                           4352 ;demo.c:528: waitVB();
   100F 76                 4353 		halt 
                           4354 ;demo.c:530: vdp_register(1,0x40); // disable vblank
   1010 21 01 40           4355 	ld	hl,#0x4001
   1013 E5                 4356 	push	hl
   1014 CDr00s00           4357 	call	_vdp_register
                           4358 ;demo.c:532: for (linenum = 40; linenum < 212; linenum+=4) {
   1017 3E 28              4359 	ld	a,#0x28
   1019 32r3Es45           4360 	ld	(#_linenum + 0),a
   101C F1                 4361 	pop	af
   101D FD 21r3Es45        4362 	ld	iy,#_linenum
   1021 FD 36 01 00        4363 	ld	1 (iy),#0x00
   1025                    4364 00101$:
   1025 3Ar3Es45           4365 	ld	a,(#_linenum+0)
   1028 D6 D4              4366 	sub	a,#0xD4
   102A 3Ar3Fs45           4367 	ld	a,(#_linenum+1)
   102D DE 00              4368 	sbc	a,#0x00
   102F F2r60s10           4369 	jp	P,00104$
                           4370 ;demo.c:533: vdp_register(19,linenum); // interrupt on line
   1032 3Ar3Es45           4371 	ld	a,(#_linenum+0)
   1035 F5                 4372 	push	af
   1036 33                 4373 	inc	sp
   1037 3E 13              4374 	ld	a,#0x13
   1039 F5                 4375 	push	af
   103A 33                 4376 	inc	sp
   103B CDr00s00           4377 	call	_vdp_register
   103E F1                 4378 	pop	af
                           4379 ;demo.c:534: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   103F 21 00 16           4380 	ld	hl,#0x1600
   1042 E5                 4381 	push	hl
   1043 CDr00s00           4382 	call	_vdp_register
   1046 F1                 4383 	pop	af
                           4384 ;demo.c:536: waitVB();
   1047 76                 4385 		halt 
                           4386 ;demo.c:532: for (linenum = 40; linenum < 212; linenum+=4) {
   1048 21r3Es45           4387 	ld	hl,#_linenum
   104B 7E                 4388 	ld	a,(hl)
   104C C6 04              4389 	add	a,#0x04
   104E 23                 4390 	inc	hl
   104F 2B                 4391 	dec	hl
   1050 C5                 4392 	push	bc
   1051 4F                 4393 	ld	c, a
   1052 23                 4394 	inc	hl
   1053 7E                 4395 	ld	a, (hl)
   1054 47                 4396 	ld	b, a
   1055 79                 4397 	ld	a, c
   1056 2B                 4398 	dec	hl
   1057 77                 4399 	ld	(hl), a
   1058 78                 4400 	ld	a, b
   1059 C1                 4401 	pop	bc
   105A CE 00              4402 	adc	a,#0x00
   105C 23                 4403 	inc	hl
   105D 77                 4404 	ld	(hl),a
   105E 18 C5              4405 	jr	00101$
   1060                    4406 00104$:
                           4407 ;demo.c:539: vdp_register(VDP_VOFFSET,0);
   1060 21 17 00           4408 	ld	hl,#0x0017
   1063 E5                 4409 	push	hl
   1064 CDr00s00           4410 	call	_vdp_register
   1067 F1                 4411 	pop	af
                           4412 ;demo.c:553: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   1068 21 00 06           4413 	ld	hl,#0x0600
   106B E5                 4414 	push	hl
   106C CDr00s00           4415 	call	_vdp_register
   106F F1                 4416 	pop	af
                           4417 ;demo.c:554: vdp_register(1,0x60); // enable vblank
   1070 21 01 60           4418 	ld	hl,#0x6001
   1073 E5                 4419 	push	hl
   1074 CDr00s00           4420 	call	_vdp_register
   1077 F1                 4421 	pop	af
   1078 C9                 4422 	ret
   1079                    4423 _raster_effu_end::
                           4424 ;demo.c:586: void do_2xletter(char cc) {
                           4425 ;	---------------------------------
                           4426 ; Function do_2xletter
                           4427 ; ---------------------------------
   1079                    4428 _do_2xletter_start::
   1079                    4429 _do_2xletter:
   1079 DD E5              4430 	push	ix
   107B DD 21 00 00        4431 	ld	ix,#0
   107F DD 39              4432 	add	ix,sp
   1081 21 F2 FF           4433 	ld	hl,#-14
   1084 39                 4434 	add	hl,sp
   1085 F9                 4435 	ld	sp,hl
                           4436 ;demo.c:587: int cidx = cc - 65;
   1086 DD 4E 04           4437 	ld	c,4 (ix)
   1089 DD 7E 04           4438 	ld	a,4 (ix)
   108C 17                 4439 	rla	
   108D 9F                 4440 	sbc	a,a
   108E 47                 4441 	ld	b,a
   108F 79                 4442 	ld	a,c
   1090 C6 BF              4443 	add	a,#0xBF
   1092 DD 77 FE           4444 	ld	-2 (ix),a
   1095 78                 4445 	ld	a,b
   1096 CE FF              4446 	adc	a,#0xFF
   1098 DD 77 FF           4447 	ld	-1 (ix),a
                           4448 ;demo.c:590: for (y=0;y<8;y++) {
   109B 3ErA7              4449 	ld	a,#<_font_w
   109D DD 86 FE           4450 	add	a,-2 (ix)
   10A0 5F                 4451 	ld	e,a
   10A1 3Es13              4452 	ld	a,#>_font_w
   10A3 DD 8E FF           4453 	adc	a,-1 (ix)
   10A6 57                 4454 	ld	d,a
   10A7 DD 36 FA 00        4455 	ld	-6 (ix),#0x00
   10AB DD 36 FB 00        4456 	ld	-5 (ix),#0x00
   10AF DD 36 F6 00        4457 	ld	-10 (ix),#0x00
   10B3 DD 36 F7 00        4458 	ld	-9 (ix),#0x00
   10B7                    4459 00105$:
   10B7 DD 7E FA           4460 	ld	a,-6 (ix)
   10BA D6 08              4461 	sub	a,#0x08
   10BC DD 7E FB           4462 	ld	a,-5 (ix)
   10BF DE 00              4463 	sbc	a,#0x00
   10C1 F2rFFs12           4464 	jp	P,00108$
                           4465 ;demo.c:591: for (x=0;x<font_w[cidx];x++) {
   10C4 DD 36 FC 00        4466 	ld	-4 (ix),#0x00
   10C8 DD 36 FD 00        4467 	ld	-3 (ix),#0x00
   10CC DD 36 F4 00        4468 	ld	-12 (ix),#0x00
   10D0 DD 36 F5 00        4469 	ld	-11 (ix),#0x00
   10D4                    4470 00101$:
   10D4 1A                 4471 	ld	a,(de)
   10D5 4F                 4472 	ld	c,a
   10D6 06 00              4473 	ld	b,#0x00
   10D8 DD 7E FC           4474 	ld	a,-4 (ix)
   10DB 91                 4475 	sub	a,c
   10DC DD 7E FD           4476 	ld	a,-3 (ix)
   10DF 98                 4477 	sbc	a,b
   10E0 F2rD7s12           4478 	jp	P,00115$
                           4479 ;demo.c:592: cmd.source_x = 127+font_x[cidx]+x;
   10E3 3Er27              4480 	ld	a,#<_font_x
   10E5 DD 86 FE           4481 	add	a,-2 (ix)
   10E8 4F                 4482 	ld	c,a
   10E9 3Es13              4483 	ld	a,#>_font_x
   10EB DD 8E FF           4484 	adc	a,-1 (ix)
   10EE 47                 4485 	ld	b,a
   10EF 0A                 4486 	ld	a,(bc)
   10F0 4F                 4487 	ld	c,a
   10F1 06 00              4488 	ld	b,#0x00
   10F3 21 7F 00           4489 	ld	hl,#0x007F
   10F6 09                 4490 	add	hl,bc
   10F7 4D                 4491 	ld	c,l
   10F8 44                 4492 	ld	b,h
   10F9 79                 4493 	ld	a,c
   10FA DD 86 FC           4494 	add	a,-4 (ix)
   10FD 4F                 4495 	ld	c,a
   10FE 78                 4496 	ld	a,b
   10FF DD 8E FD           4497 	adc	a,-3 (ix)
   1102 47                 4498 	ld	b,a
   1103 21rAEs44           4499 	ld	hl,#_cmd
   1106 71                 4500 	ld	(hl),c
   1107 23                 4501 	inc	hl
   1108 70                 4502 	ld	(hl),b
                           4503 ;demo.c:593: cmd.source_y = 512+font_y[cidx]+y;
   1109 23                 4504 	inc	hl
   110A DD 75 F2           4505 	ld	-14 (ix),l
   110D DD 74 F3           4506 	ld	-13 (ix),h
   1110 3Er67              4507 	ld	a,#<_font_y
   1112 DD 86 FE           4508 	add	a,-2 (ix)
   1115 4F                 4509 	ld	c,a
   1116 3Es13              4510 	ld	a,#>_font_y
   1118 DD 8E FF           4511 	adc	a,-1 (ix)
   111B 47                 4512 	ld	b,a
   111C 0A                 4513 	ld	a,(bc)
   111D 4F                 4514 	ld	c,a
   111E 06 00              4515 	ld	b,#0x00
   1120 21 00 02           4516 	ld	hl,#0x0200
   1123 09                 4517 	add	hl,bc
   1124 4D                 4518 	ld	c,l
   1125 44                 4519 	ld	b,h
   1126 79                 4520 	ld	a,c
   1127 DD 86 FA           4521 	add	a,-6 (ix)
   112A 4F                 4522 	ld	c,a
   112B 78                 4523 	ld	a,b
   112C DD 8E FB           4524 	adc	a,-5 (ix)
   112F 47                 4525 	ld	b,a
   1130 DD 6E F2           4526 	ld	l,-14 (ix)
   1133 DD 66 F3           4527 	ld	h,-13 (ix)
   1136 71                 4528 	ld	(hl),c
   1137 23                 4529 	inc	hl
   1138 70                 4530 	ld	(hl),b
                           4531 ;demo.c:594: cmd.size_x = 1;
   1139 21rB6s44           4532 	ld	hl, #_cmd + 8
   113C 36 01              4533 	ld	(hl),#0x01
   113E 23                 4534 	inc	hl
   113F 36 00              4535 	ld	(hl),#0x00
                           4536 ;demo.c:595: cmd.size_y = 1;
   1141 21rB8s44           4537 	ld	hl, #_cmd + 10
   1144 36 01              4538 	ld	(hl),#0x01
   1146 23                 4539 	inc	hl
   1147 36 00              4540 	ld	(hl),#0x00
                           4541 ;demo.c:596: cmd.argument = 0x00;
   1149 3E 00              4542 	ld	a,#0x00
   114B 32rBBs44           4543 	ld	(#_cmd + 13),a
                           4544 ;demo.c:597: cmd.command = 0x40; // get pixel
   114E 3E 40              4545 	ld	a,#0x40
   1150 32rBCs44           4546 	ld	(#_cmd + 14),a
                           4547 ;demo.c:598: vdp_copier(&cmd);
   1153 D5                 4548 	push	de
   1154 21rAEs44           4549 	ld	hl,#_cmd
   1157 E5                 4550 	push	hl
   1158 CDr00s00           4551 	call	_vdp_copier
   115B F1                 4552 	pop	af
   115C D1                 4553 	pop	de
                           4554 ;demo.c:600: col = vdp2_status(7);
   115D D5                 4555 	push	de
   115E 3E 07              4556 	ld	a,#0x07
   1160 F5                 4557 	push	af
   1161 33                 4558 	inc	sp
   1162 CDr00s00           4559 	call	_vdp2_status
   1165 33                 4560 	inc	sp
   1166 4D                 4561 	ld	c,l
   1167 D1                 4562 	pop	de
   1168 DD 71 F8           4563 	ld	-8 (ix),c
   116B DD 36 F9 00        4564 	ld	-7 (ix),#0x00
                           4565 ;demo.c:602: cmd.data = col;
   116F 01rBAs44           4566 	ld	bc,#_cmd + 12
   1172 DD 7E F8           4567 	ld	a,-8 (ix)
   1175 02                 4568 	ld	(bc),a
                           4569 ;demo.c:603: cmd.dest_x = lx+x*3;
   1176 21rB2s44           4570 	ld	hl,#_cmd + 4
   1179 DD 75 F2           4571 	ld	-14 (ix),l
   117C DD 74 F3           4572 	ld	-13 (ix),h
   117F 21r40s45           4573 	ld	hl,#_lx + 0
   1182 4E                 4574 	ld	c,(hl)
   1183 06 00              4575 	ld	b,#0x00
   1185 79                 4576 	ld	a,c
   1186 DD 86 F4           4577 	add	a,-12 (ix)
   1189 4F                 4578 	ld	c,a
   118A 78                 4579 	ld	a,b
   118B DD 8E F5           4580 	adc	a,-11 (ix)
   118E 47                 4581 	ld	b,a
   118F DD 6E F2           4582 	ld	l,-14 (ix)
   1192 DD 66 F3           4583 	ld	h,-13 (ix)
   1195 71                 4584 	ld	(hl),c
   1196 23                 4585 	inc	hl
   1197 70                 4586 	ld	(hl),b
                           4587 ;demo.c:604: cmd.dest_y = ly+y*3;
   1198 21rB4s44           4588 	ld	hl,#_cmd + 6
   119B DD 75 F2           4589 	ld	-14 (ix),l
   119E DD 74 F3           4590 	ld	-13 (ix),h
   11A1 21r41s45           4591 	ld	hl,#_ly + 0
   11A4 4E                 4592 	ld	c,(hl)
   11A5 06 00              4593 	ld	b,#0x00
   11A7 79                 4594 	ld	a,c
   11A8 DD 86 F6           4595 	add	a,-10 (ix)
   11AB 4F                 4596 	ld	c,a
   11AC 78                 4597 	ld	a,b
   11AD DD 8E F7           4598 	adc	a,-9 (ix)
   11B0 47                 4599 	ld	b,a
   11B1 DD 6E F2           4600 	ld	l,-14 (ix)
   11B4 DD 66 F3           4601 	ld	h,-13 (ix)
   11B7 71                 4602 	ld	(hl),c
   11B8 23                 4603 	inc	hl
   11B9 70                 4604 	ld	(hl),b
                           4605 ;demo.c:607: cmd.argument = 0x00;
   11BA 3E 00              4606 	ld	a,#0x00
   11BC 32rBBs44           4607 	ld	(#_cmd + 13),a
                           4608 ;demo.c:608: cmd.command = 0x50; // rect
   11BF 3E 50              4609 	ld	a,#0x50
   11C1 32rBCs44           4610 	ld	(#_cmd + 14),a
                           4611 ;demo.c:609: vdp_copier(&cmd);
   11C4 D5                 4612 	push	de
   11C5 21rAEs44           4613 	ld	hl,#_cmd
   11C8 E5                 4614 	push	hl
   11C9 CDr00s00           4615 	call	_vdp_copier
   11CC F1                 4616 	pop	af
   11CD D1                 4617 	pop	de
                           4618 ;demo.c:610: cmd.dest_x = 1+lx+x*3;
   11CE 21rB2s44           4619 	ld	hl,#_cmd + 4
   11D1 DD 75 F2           4620 	ld	-14 (ix),l
   11D4 DD 74 F3           4621 	ld	-13 (ix),h
   11D7 21r40s45           4622 	ld	hl,#_lx + 0
   11DA 4E                 4623 	ld	c,(hl)
   11DB 06 00              4624 	ld	b,#0x00
   11DD 03                 4625 	inc	bc
   11DE 79                 4626 	ld	a,c
   11DF DD 86 F4           4627 	add	a,-12 (ix)
   11E2 4F                 4628 	ld	c,a
   11E3 78                 4629 	ld	a,b
   11E4 DD 8E F5           4630 	adc	a,-11 (ix)
   11E7 47                 4631 	ld	b,a
   11E8 DD 6E F2           4632 	ld	l,-14 (ix)
   11EB DD 66 F3           4633 	ld	h,-13 (ix)
   11EE 71                 4634 	ld	(hl),c
   11EF 23                 4635 	inc	hl
   11F0 70                 4636 	ld	(hl),b
                           4637 ;demo.c:611: cmd.dest_y = ly+y*3;
   11F1 21rB4s44           4638 	ld	hl,#_cmd + 6
   11F4 DD 75 F2           4639 	ld	-14 (ix),l
   11F7 DD 74 F3           4640 	ld	-13 (ix),h
   11FA 21r41s45           4641 	ld	hl,#_ly + 0
   11FD 4E                 4642 	ld	c,(hl)
   11FE 06 00              4643 	ld	b,#0x00
   1200 79                 4644 	ld	a,c
   1201 DD 86 F6           4645 	add	a,-10 (ix)
   1204 4F                 4646 	ld	c,a
   1205 78                 4647 	ld	a,b
   1206 DD 8E F7           4648 	adc	a,-9 (ix)
   1209 47                 4649 	ld	b,a
   120A DD 6E F2           4650 	ld	l,-14 (ix)
   120D DD 66 F3           4651 	ld	h,-13 (ix)
   1210 71                 4652 	ld	(hl),c
   1211 23                 4653 	inc	hl
   1212 70                 4654 	ld	(hl),b
                           4655 ;demo.c:612: vdp_copier(&cmd);
   1213 D5                 4656 	push	de
   1214 21rAEs44           4657 	ld	hl,#_cmd
   1217 E5                 4658 	push	hl
   1218 CDr00s00           4659 	call	_vdp_copier
   121B F1                 4660 	pop	af
   121C D1                 4661 	pop	de
                           4662 ;demo.c:613: cmd.dest_x = 1+lx+x*3;
   121D 21rB2s44           4663 	ld	hl,#_cmd + 4
   1220 DD 75 F2           4664 	ld	-14 (ix),l
   1223 DD 74 F3           4665 	ld	-13 (ix),h
   1226 21r40s45           4666 	ld	hl,#_lx + 0
   1229 4E                 4667 	ld	c,(hl)
   122A 06 00              4668 	ld	b,#0x00
   122C 03                 4669 	inc	bc
   122D 79                 4670 	ld	a,c
   122E DD 86 F4           4671 	add	a,-12 (ix)
   1231 4F                 4672 	ld	c,a
   1232 78                 4673 	ld	a,b
   1233 DD 8E F5           4674 	adc	a,-11 (ix)
   1236 47                 4675 	ld	b,a
   1237 DD 6E F2           4676 	ld	l,-14 (ix)
   123A DD 66 F3           4677 	ld	h,-13 (ix)
   123D 71                 4678 	ld	(hl),c
   123E 23                 4679 	inc	hl
   123F 70                 4680 	ld	(hl),b
                           4681 ;demo.c:614: cmd.dest_y = 1+ly+y*3;
   1240 21rB4s44           4682 	ld	hl,#_cmd + 6
   1243 DD 75 F2           4683 	ld	-14 (ix),l
   1246 DD 74 F3           4684 	ld	-13 (ix),h
   1249 21r41s45           4685 	ld	hl,#_ly + 0
   124C 4E                 4686 	ld	c,(hl)
   124D 06 00              4687 	ld	b,#0x00
   124F 03                 4688 	inc	bc
   1250 79                 4689 	ld	a,c
   1251 DD 86 F6           4690 	add	a,-10 (ix)
   1254 4F                 4691 	ld	c,a
   1255 78                 4692 	ld	a,b
   1256 DD 8E F7           4693 	adc	a,-9 (ix)
   1259 47                 4694 	ld	b,a
   125A DD 6E F2           4695 	ld	l,-14 (ix)
   125D DD 66 F3           4696 	ld	h,-13 (ix)
   1260 71                 4697 	ld	(hl),c
   1261 23                 4698 	inc	hl
   1262 70                 4699 	ld	(hl),b
                           4700 ;demo.c:615: vdp_copier(&cmd);
   1263 D5                 4701 	push	de
   1264 21rAEs44           4702 	ld	hl,#_cmd
   1267 E5                 4703 	push	hl
   1268 CDr00s00           4704 	call	_vdp_copier
   126B F1                 4705 	pop	af
   126C D1                 4706 	pop	de
                           4707 ;demo.c:616: cmd.dest_x = lx+x*3;
   126D 21rB2s44           4708 	ld	hl,#_cmd + 4
   1270 DD 75 F2           4709 	ld	-14 (ix),l
   1273 DD 74 F3           4710 	ld	-13 (ix),h
   1276 21r40s45           4711 	ld	hl,#_lx + 0
   1279 4E                 4712 	ld	c,(hl)
   127A 06 00              4713 	ld	b,#0x00
   127C 79                 4714 	ld	a,c
   127D DD 86 F4           4715 	add	a,-12 (ix)
   1280 4F                 4716 	ld	c,a
   1281 78                 4717 	ld	a,b
   1282 DD 8E F5           4718 	adc	a,-11 (ix)
   1285 47                 4719 	ld	b,a
   1286 DD 6E F2           4720 	ld	l,-14 (ix)
   1289 DD 66 F3           4721 	ld	h,-13 (ix)
   128C 71                 4722 	ld	(hl),c
   128D 23                 4723 	inc	hl
   128E 70                 4724 	ld	(hl),b
                           4725 ;demo.c:617: cmd.dest_y = 1+ly+y*3;
   128F 21rB4s44           4726 	ld	hl,#_cmd + 6
   1292 DD 75 F2           4727 	ld	-14 (ix),l
   1295 DD 74 F3           4728 	ld	-13 (ix),h
   1298 21r41s45           4729 	ld	hl,#_ly + 0
   129B 4E                 4730 	ld	c,(hl)
   129C 06 00              4731 	ld	b,#0x00
   129E 03                 4732 	inc	bc
   129F 79                 4733 	ld	a,c
   12A0 DD 86 F6           4734 	add	a,-10 (ix)
   12A3 4F                 4735 	ld	c,a
   12A4 78                 4736 	ld	a,b
   12A5 DD 8E F7           4737 	adc	a,-9 (ix)
   12A8 47                 4738 	ld	b,a
   12A9 DD 6E F2           4739 	ld	l,-14 (ix)
   12AC DD 66 F3           4740 	ld	h,-13 (ix)
   12AF 71                 4741 	ld	(hl),c
   12B0 23                 4742 	inc	hl
   12B1 70                 4743 	ld	(hl),b
                           4744 ;demo.c:618: vdp_copier(&cmd);
   12B2 D5                 4745 	push	de
   12B3 21rAEs44           4746 	ld	hl,#_cmd
   12B6 E5                 4747 	push	hl
   12B7 CDr00s00           4748 	call	_vdp_copier
   12BA F1                 4749 	pop	af
   12BB D1                 4750 	pop	de
                           4751 ;demo.c:591: for (x=0;x<font_w[cidx];x++) {
   12BC DD 7E F4           4752 	ld	a,-12 (ix)
   12BF C6 03              4753 	add	a,#0x03
   12C1 DD 77 F4           4754 	ld	-12 (ix),a
   12C4 DD 7E F5           4755 	ld	a,-11 (ix)
   12C7 CE 00              4756 	adc	a,#0x00
   12C9 DD 77 F5           4757 	ld	-11 (ix),a
   12CC DD 34 FC           4758 	inc	-4 (ix)
   12CF 20 03              4759 	jr	NZ,00117$
   12D1 DD 34 FD           4760 	inc	-3 (ix)
   12D4                    4761 00117$:
   12D4 C3rD4s10           4762 	jp	00101$
   12D7                    4763 00115$:
   12D7 DD 7E FC           4764 	ld	a,-4 (ix)
   12DA DD 77 F2           4765 	ld	-14 (ix),a
   12DD DD 7E FD           4766 	ld	a,-3 (ix)
   12E0 DD 77 F3           4767 	ld	-13 (ix),a
                           4768 ;demo.c:620: waitVB();
   12E3 76                 4769 		halt 
                           4770 ;demo.c:590: for (y=0;y<8;y++) {
   12E4 DD 7E F6           4771 	ld	a,-10 (ix)
   12E7 C6 03              4772 	add	a,#0x03
   12E9 DD 77 F6           4773 	ld	-10 (ix),a
   12EC DD 7E F7           4774 	ld	a,-9 (ix)
   12EF CE 00              4775 	adc	a,#0x00
   12F1 DD 77 F7           4776 	ld	-9 (ix),a
   12F4 DD 34 FA           4777 	inc	-6 (ix)
   12F7 20 03              4778 	jr	NZ,00118$
   12F9 DD 34 FB           4779 	inc	-5 (ix)
   12FC                    4780 00118$:
   12FC C3rB7s10           4781 	jp	00105$
   12FF                    4782 00108$:
                           4783 ;demo.c:623: lx+=font_w[cidx]-1+(x*4);
   12FF 3ErA7              4784 	ld	a,#<_font_w
   1301 DD 86 FE           4785 	add	a,-2 (ix)
   1304 4F                 4786 	ld	c,a
   1305 3Es13              4787 	ld	a,#>_font_w
   1307 DD 8E FF           4788 	adc	a,-1 (ix)
   130A 47                 4789 	ld	b,a
   130B 0A                 4790 	ld	a,(bc)
   130C 4F                 4791 	ld	c,a
   130D 0D                 4792 	dec	c
   130E DD 46 F2           4793 	ld	b,-14 (ix)
   1311 CB 20              4794 	sla	b
   1313 CB 20              4795 	sla	b
   1315 79                 4796 	ld	a,c
   1316 80                 4797 	add	a,b
   1317 4F                 4798 	ld	c,a
   1318 21r40s45           4799 	ld	hl,#_lx + 0
   131B 46                 4800 	ld	b,(hl)
   131C 21r40s45           4801 	ld	hl,#_lx
   131F 78                 4802 	ld	a,b
   1320 81                 4803 	add	a,c
   1321 77                 4804 	ld	(hl),a
   1322 DD F9              4805 	ld	sp,ix
   1324 DD E1              4806 	pop	ix
   1326 C9                 4807 	ret
   1327                    4808 _do_2xletter_end::
   1327                    4809 _font_x:
   1327 01                 4810 	.db #0x01
   1328 09                 4811 	.db #0x09
   1329 11                 4812 	.db #0x11
   132A 19                 4813 	.db #0x19
   132B 21                 4814 	.db #0x21
   132C 29                 4815 	.db #0x29
   132D 31                 4816 	.db #0x31
   132E 39                 4817 	.db #0x39
   132F 41                 4818 	.db #0x41
   1330 46                 4819 	.db #0x46
   1331 4E                 4820 	.db #0x4E
   1332 56                 4821 	.db #0x56
   1333 5E                 4822 	.db #0x5E
   1334 01                 4823 	.db #0x01
   1335 0A                 4824 	.db #0x0A
   1336 12                 4825 	.db #0x12
   1337 1A                 4826 	.db #0x1A
   1338 23                 4827 	.db #0x23
   1339 2B                 4828 	.db #0x2B
   133A 33                 4829 	.db #0x33
   133B 3C                 4830 	.db #0x3C
   133C 44                 4831 	.db #0x44
   133D 4C                 4832 	.db #0x4C
   133E 56                 4833 	.db #0x56
   133F 5E                 4834 	.db #0x5E
   1340 67                 4835 	.db #0x67
   1341 00                 4836 	.db #0x00
   1342 00                 4837 	.db #0x00
   1343 00                 4838 	.db #0x00
   1344 00                 4839 	.db #0x00
   1345 00                 4840 	.db #0x00
   1346 00                 4841 	.db #0x00
   1347 01                 4842 	.db #0x01
   1348 09                 4843 	.db #0x09
   1349 11                 4844 	.db #0x11
   134A 18                 4845 	.db #0x18
   134B 20                 4846 	.db #0x20
   134C 28                 4847 	.db #0x28
   134D 2F                 4848 	.db #0x2F
   134E 37                 4849 	.db #0x37
   134F 3F                 4850 	.db #0x3F
   1350 45                 4851 	.db #0x45
   1351 4C                 4852 	.db #0x4C
   1352 54                 4853 	.db #0x54
   1353 5A                 4854 	.db #0x5A
   1354 64                 4855 	.db #0x64
   1355 01                 4856 	.db #0x01
   1356 09                 4857 	.db #0x09
   1357 11                 4858 	.db #0x11
   1358 19                 4859 	.db #0x19
   1359 21                 4860 	.db #0x21
   135A 29                 4861 	.db #0x29
   135B 30                 4862 	.db #0x30
   135C 38                 4863 	.db #0x38
   135D 40                 4864 	.db #0x40
   135E 4A                 4865 	.db #0x4A
   135F 52                 4866 	.db #0x52
   1360 5A                 4867 	.db #0x5A
   1361 00                 4868 	.db 0x00
   1362 00                 4869 	.db 0x00
   1363 00                 4870 	.db 0x00
   1364 00                 4871 	.db 0x00
   1365 00                 4872 	.db 0x00
   1366 00                 4873 	.db 0x00
   1367                    4874 _font_y:
   1367 1C                 4875 	.db #0x1C
   1368 1C                 4876 	.db #0x1C
   1369 1C                 4877 	.db #0x1C
   136A 1C                 4878 	.db #0x1C
   136B 1C                 4879 	.db #0x1C
   136C 1C                 4880 	.db #0x1C
   136D 1C                 4881 	.db #0x1C
   136E 1C                 4882 	.db #0x1C
   136F 1C                 4883 	.db #0x1C
   1370 1C                 4884 	.db #0x1C
   1371 1C                 4885 	.db #0x1C
   1372 1C                 4886 	.db #0x1C
   1373 1C                 4887 	.db #0x1C
   1374 25                 4888 	.db #0x25
   1375 25                 4889 	.db #0x25
   1376 25                 4890 	.db #0x25
   1377 25                 4891 	.db #0x25
   1378 25                 4892 	.db #0x25
   1379 25                 4893 	.db #0x25
   137A 25                 4894 	.db #0x25
   137B 25                 4895 	.db #0x25
   137C 25                 4896 	.db #0x25
   137D 25                 4897 	.db #0x25
   137E 25                 4898 	.db #0x25
   137F 25                 4899 	.db #0x25
   1380 25                 4900 	.db #0x25
   1381 00                 4901 	.db #0x00
   1382 00                 4902 	.db #0x00
   1383 00                 4903 	.db #0x00
   1384 00                 4904 	.db #0x00
   1385 00                 4905 	.db #0x00
   1386 00                 4906 	.db #0x00
   1387 37                 4907 	.db #0x37
   1388 37                 4908 	.db #0x37
   1389 37                 4909 	.db #0x37
   138A 37                 4910 	.db #0x37
   138B 37                 4911 	.db #0x37
   138C 37                 4912 	.db #0x37
   138D 37                 4913 	.db #0x37
   138E 37                 4914 	.db #0x37
   138F 37                 4915 	.db #0x37
   1390 37                 4916 	.db #0x37
   1391 37                 4917 	.db #0x37
   1392 37                 4918 	.db #0x37
   1393 37                 4919 	.db #0x37
   1394 37                 4920 	.db #0x37
   1395 40                 4921 	.db #0x40
   1396 40                 4922 	.db #0x40
   1397 40                 4923 	.db #0x40
   1398 40                 4924 	.db #0x40
   1399 40                 4925 	.db #0x40
   139A 40                 4926 	.db #0x40
   139B 40                 4927 	.db #0x40
   139C 40                 4928 	.db #0x40
   139D 40                 4929 	.db #0x40
   139E 40                 4930 	.db #0x40
   139F 40                 4931 	.db #0x40
   13A0 40                 4932 	.db #0x40
   13A1 00                 4933 	.db 0x00
   13A2 00                 4934 	.db 0x00
   13A3 00                 4935 	.db 0x00
   13A4 00                 4936 	.db 0x00
   13A5 00                 4937 	.db 0x00
   13A6 00                 4938 	.db 0x00
   13A7                    4939 _font_w:
   13A7 07                 4940 	.db #0x07
   13A8 07                 4941 	.db #0x07
   13A9 07                 4942 	.db #0x07
   13AA 07                 4943 	.db #0x07
   13AB 07                 4944 	.db #0x07
   13AC 07                 4945 	.db #0x07
   13AD 07                 4946 	.db #0x07
   13AE 07                 4947 	.db #0x07
   13AF 04                 4948 	.db #0x04
   13B0 07                 4949 	.db #0x07
   13B1 07                 4950 	.db #0x07
   13B2 07                 4951 	.db #0x07
   13B3 09                 4952 	.db #0x09
   13B4 08                 4953 	.db #0x08
   13B5 07                 4954 	.db #0x07
   13B6 07                 4955 	.db #0x07
   13B7 08                 4956 	.db #0x08
   13B8 07                 4957 	.db #0x07
   13B9 07                 4958 	.db #0x07
   13BA 08                 4959 	.db #0x08
   13BB 07                 4960 	.db #0x07
   13BC 07                 4961 	.db #0x07
   13BD 09                 4962 	.db #0x09
   13BE 07                 4963 	.db #0x07
   13BF 08                 4964 	.db #0x08
   13C0 07                 4965 	.db #0x07
   13C1 00                 4966 	.db #0x00
   13C2 00                 4967 	.db #0x00
   13C3 00                 4968 	.db #0x00
   13C4 00                 4969 	.db #0x00
   13C5 00                 4970 	.db #0x00
   13C6 00                 4971 	.db #0x00
   13C7 07                 4972 	.db #0x07
   13C8 07                 4973 	.db #0x07
   13C9 06                 4974 	.db #0x06
   13CA 07                 4975 	.db #0x07
   13CB 07                 4976 	.db #0x07
   13CC 07                 4977 	.db #0x07
   13CD 07                 4978 	.db #0x07
   13CE 07                 4979 	.db #0x07
   13CF 05                 4980 	.db #0x05
   13D0 06                 4981 	.db #0x06
   13D1 07                 4982 	.db #0x07
   13D2 05                 4983 	.db #0x05
   13D3 09                 4984 	.db #0x09
   13D4 07                 4985 	.db #0x07
   13D5 07                 4986 	.db #0x07
   13D6 07                 4987 	.db #0x07
   13D7 07                 4988 	.db #0x07
   13D8 07                 4989 	.db #0x07
   13D9 07                 4990 	.db #0x07
   13DA 06                 4991 	.db #0x06
   13DB 07                 4992 	.db #0x07
   13DC 07                 4993 	.db #0x07
   13DD 09                 4994 	.db #0x09
   13DE 07                 4995 	.db #0x07
   13DF 07                 4996 	.db #0x07
   13E0 07                 4997 	.db #0x07
   13E1 00                 4998 	.db 0x00
   13E2 00                 4999 	.db 0x00
   13E3 00                 5000 	.db 0x00
   13E4 00                 5001 	.db 0x00
   13E5 00                 5002 	.db 0x00
   13E6 00                 5003 	.db 0x00
                           5004 ;demo.c:627: void do_letter(char cc) {
                           5005 ;	---------------------------------
                           5006 ; Function do_letter
                           5007 ; ---------------------------------
   13E7                    5008 _do_letter_start::
   13E7                    5009 _do_letter:
   13E7 DD E5              5010 	push	ix
   13E9 DD 21 00 00        5011 	ld	ix,#0
   13ED DD 39              5012 	add	ix,sp
   13EF F5                 5013 	push	af
                           5014 ;demo.c:628: int cidx = cc - 65;
   13F0 DD 4E 04           5015 	ld	c,4 (ix)
   13F3 DD 7E 04           5016 	ld	a,4 (ix)
   13F6 17                 5017 	rla	
   13F7 9F                 5018 	sbc	a,a
   13F8 47                 5019 	ld	b,a
   13F9 79                 5020 	ld	a,c
   13FA C6 BF              5021 	add	a,#0xBF
   13FC DD 77 FE           5022 	ld	-2 (ix),a
   13FF 78                 5023 	ld	a,b
   1400 CE FF              5024 	adc	a,#0xFF
   1402 DD 77 FF           5025 	ld	-1 (ix),a
                           5026 ;demo.c:629: cmd.source_x = 127+font_x[cidx];
   1405 3Er27              5027 	ld	a,#<_font_x
   1407 DD 86 FE           5028 	add	a,-2 (ix)
   140A 5F                 5029 	ld	e,a
   140B 3Es13              5030 	ld	a,#>_font_x
   140D DD 8E FF           5031 	adc	a,-1 (ix)
   1410 57                 5032 	ld	d,a
   1411 1A                 5033 	ld	a,(de)
   1412 5F                 5034 	ld	e,a
   1413 16 00              5035 	ld	d,#0x00
   1415 21 7F 00           5036 	ld	hl,#0x007F
   1418 19                 5037 	add	hl,de
   1419 EB                 5038 	ex	de,hl
   141A 21rAEs44           5039 	ld	hl,#_cmd
   141D 73                 5040 	ld	(hl),e
   141E 23                 5041 	inc	hl
   141F 72                 5042 	ld	(hl),d
                           5043 ;demo.c:630: cmd.source_y = 512+font_y[cidx];
   1420 11rB0s44           5044 	ld	de,#_cmd + 2
   1423 3Er67              5045 	ld	a,#<_font_y
   1425 DD 86 FE           5046 	add	a,-2 (ix)
   1428 4F                 5047 	ld	c,a
   1429 3Es13              5048 	ld	a,#>_font_y
   142B DD 8E FF           5049 	adc	a,-1 (ix)
   142E 47                 5050 	ld	b,a
   142F 0A                 5051 	ld	a,(bc)
   1430 4F                 5052 	ld	c,a
   1431 06 00              5053 	ld	b,#0x00
   1433 21 00 02           5054 	ld	hl,#0x0200
   1436 09                 5055 	add	hl,bc
   1437 4D                 5056 	ld	c,l
   1438 44                 5057 	ld	b,h
   1439 EB                 5058 	ex	de,hl
   143A 71                 5059 	ld	(hl),c
   143B 23                 5060 	inc	hl
   143C 70                 5061 	ld	(hl),b
                           5062 ;demo.c:631: cmd.dest_x = lx;
   143D 01rB2s44           5063 	ld	bc,#_cmd + 4
   1440 21r40s45           5064 	ld	hl,#_lx + 0
   1443 5E                 5065 	ld	e,(hl)
   1444 16 00              5066 	ld	d,#0x00
   1446 69                 5067 	ld	l,c
   1447 60                 5068 	ld	h,b
   1448 73                 5069 	ld	(hl),e
   1449 23                 5070 	inc	hl
   144A 72                 5071 	ld	(hl),d
                           5072 ;demo.c:632: cmd.dest_y = ly;
   144B 01rB4s44           5073 	ld	bc,#_cmd + 6
   144E 21r41s45           5074 	ld	hl,#_ly + 0
   1451 5E                 5075 	ld	e,(hl)
   1452 16 00              5076 	ld	d,#0x00
   1454 69                 5077 	ld	l,c
   1455 60                 5078 	ld	h,b
   1456 73                 5079 	ld	(hl),e
   1457 23                 5080 	inc	hl
   1458 72                 5081 	ld	(hl),d
                           5082 ;demo.c:633: cmd.size_x = font_w[cidx];
   1459 01rB6s44           5083 	ld	bc,#_cmd + 8
   145C 3ErA7              5084 	ld	a,#<_font_w
   145E DD 86 FE           5085 	add	a,-2 (ix)
   1461 5F                 5086 	ld	e,a
   1462 3Es13              5087 	ld	a,#>_font_w
   1464 DD 8E FF           5088 	adc	a,-1 (ix)
   1467 57                 5089 	ld	d,a
   1468 1A                 5090 	ld	a,(de)
   1469 5F                 5091 	ld	e,a
   146A 16 00              5092 	ld	d,#0x00
   146C 69                 5093 	ld	l,c
   146D 60                 5094 	ld	h,b
   146E 73                 5095 	ld	(hl),e
   146F 23                 5096 	inc	hl
   1470 72                 5097 	ld	(hl),d
                           5098 ;demo.c:634: cmd.size_y = 8;
   1471 21rB8s44           5099 	ld	hl, #_cmd + 10
   1474 36 08              5100 	ld	(hl),#0x08
   1476 23                 5101 	inc	hl
   1477 36 00              5102 	ld	(hl),#0x00
                           5103 ;demo.c:635: cmd.argument = 0x00;
   1479 3E 00              5104 	ld	a,#0x00
   147B 32rBBs44           5105 	ld	(#_cmd + 13),a
                           5106 ;demo.c:636: cmd.command = 0x90; // logical vram to vram
   147E 3E 90              5107 	ld	a,#0x90
   1480 32rBCs44           5108 	ld	(#_cmd + 14),a
                           5109 ;demo.c:637: vdp_copier(&cmd);
   1483 21rAEs44           5110 	ld	hl,#_cmd
   1486 E5                 5111 	push	hl
   1487 CDr00s00           5112 	call	_vdp_copier
   148A F1                 5113 	pop	af
                           5114 ;demo.c:638: lx+=font_w[cidx]-1;
   148B 3ErA7              5115 	ld	a,#<_font_w
   148D DD 86 FE           5116 	add	a,-2 (ix)
   1490 4F                 5117 	ld	c,a
   1491 3Es13              5118 	ld	a,#>_font_w
   1493 DD 8E FF           5119 	adc	a,-1 (ix)
   1496 47                 5120 	ld	b,a
   1497 0A                 5121 	ld	a,(bc)
   1498 4F                 5122 	ld	c,a
   1499 0D                 5123 	dec	c
   149A 21r40s45           5124 	ld	hl,#_lx
   149D 7E                 5125 	ld	a,(hl)
   149E 81                 5126 	add	a,c
   149F 77                 5127 	ld	(hl),a
   14A0 DD F9              5128 	ld	sp,ix
   14A2 DD E1              5129 	pop	ix
   14A4 C9                 5130 	ret
   14A5                    5131 _do_letter_end::
                           5132 ;demo.c:642: void do_letter_tall(char cc) {
                           5133 ;	---------------------------------
                           5134 ; Function do_letter_tall
                           5135 ; ---------------------------------
   14A5                    5136 _do_letter_tall_start::
   14A5                    5137 _do_letter_tall:
   14A5 DD E5              5138 	push	ix
   14A7 DD 21 00 00        5139 	ld	ix,#0
   14AB DD 39              5140 	add	ix,sp
   14AD F5                 5141 	push	af
                           5142 ;demo.c:643: int cidx = cc - 65;
   14AE DD 4E 04           5143 	ld	c,4 (ix)
   14B1 DD 7E 04           5144 	ld	a,4 (ix)
   14B4 17                 5145 	rla	
   14B5 9F                 5146 	sbc	a,a
   14B6 47                 5147 	ld	b,a
   14B7 79                 5148 	ld	a,c
   14B8 C6 BF              5149 	add	a,#0xBF
   14BA DD 77 FE           5150 	ld	-2 (ix),a
   14BD 78                 5151 	ld	a,b
   14BE CE FF              5152 	adc	a,#0xFF
   14C0 DD 77 FF           5153 	ld	-1 (ix),a
                           5154 ;demo.c:644: cmd.source_x = 127+font_x[cidx];
   14C3 3Er27              5155 	ld	a,#<_font_x
   14C5 DD 86 FE           5156 	add	a,-2 (ix)
   14C8 5F                 5157 	ld	e,a
   14C9 3Es13              5158 	ld	a,#>_font_x
   14CB DD 8E FF           5159 	adc	a,-1 (ix)
   14CE 57                 5160 	ld	d,a
   14CF 1A                 5161 	ld	a,(de)
   14D0 5F                 5162 	ld	e,a
   14D1 16 00              5163 	ld	d,#0x00
   14D3 21 7F 00           5164 	ld	hl,#0x007F
   14D6 19                 5165 	add	hl,de
   14D7 EB                 5166 	ex	de,hl
   14D8 21rAEs44           5167 	ld	hl,#_cmd
   14DB 73                 5168 	ld	(hl),e
   14DC 23                 5169 	inc	hl
   14DD 72                 5170 	ld	(hl),d
                           5171 ;demo.c:645: cmd.source_y = 512+font_y[cidx]-1;
   14DE 11rB0s44           5172 	ld	de,#_cmd + 2
   14E1 3Er67              5173 	ld	a,#<_font_y
   14E3 DD 86 FE           5174 	add	a,-2 (ix)
   14E6 4F                 5175 	ld	c,a
   14E7 3Es13              5176 	ld	a,#>_font_y
   14E9 DD 8E FF           5177 	adc	a,-1 (ix)
   14EC 47                 5178 	ld	b,a
   14ED 0A                 5179 	ld	a,(bc)
   14EE 4F                 5180 	ld	c,a
   14EF 06 00              5181 	ld	b,#0x00
   14F1 21 FF 01           5182 	ld	hl,#0x01FF
   14F4 09                 5183 	add	hl,bc
   14F5 4D                 5184 	ld	c,l
   14F6 44                 5185 	ld	b,h
   14F7 EB                 5186 	ex	de,hl
   14F8 71                 5187 	ld	(hl),c
   14F9 23                 5188 	inc	hl
   14FA 70                 5189 	ld	(hl),b
                           5190 ;demo.c:646: cmd.dest_x = lx;
   14FB 01rB2s44           5191 	ld	bc,#_cmd + 4
   14FE 21r40s45           5192 	ld	hl,#_lx + 0
   1501 5E                 5193 	ld	e,(hl)
   1502 16 00              5194 	ld	d,#0x00
   1504 69                 5195 	ld	l,c
   1505 60                 5196 	ld	h,b
   1506 73                 5197 	ld	(hl),e
   1507 23                 5198 	inc	hl
   1508 72                 5199 	ld	(hl),d
                           5200 ;demo.c:647: cmd.dest_y = ly;
   1509 01rB4s44           5201 	ld	bc,#_cmd + 6
   150C 21r41s45           5202 	ld	hl,#_ly + 0
   150F 5E                 5203 	ld	e,(hl)
   1510 16 00              5204 	ld	d,#0x00
   1512 69                 5205 	ld	l,c
   1513 60                 5206 	ld	h,b
   1514 73                 5207 	ld	(hl),e
   1515 23                 5208 	inc	hl
   1516 72                 5209 	ld	(hl),d
                           5210 ;demo.c:648: cmd.size_x = font_w[cidx];
   1517 01rB6s44           5211 	ld	bc,#_cmd + 8
   151A 3ErA7              5212 	ld	a,#<_font_w
   151C DD 86 FE           5213 	add	a,-2 (ix)
   151F 5F                 5214 	ld	e,a
   1520 3Es13              5215 	ld	a,#>_font_w
   1522 DD 8E FF           5216 	adc	a,-1 (ix)
   1525 57                 5217 	ld	d,a
   1526 1A                 5218 	ld	a,(de)
   1527 5F                 5219 	ld	e,a
   1528 16 00              5220 	ld	d,#0x00
   152A 69                 5221 	ld	l,c
   152B 60                 5222 	ld	h,b
   152C 73                 5223 	ld	(hl),e
   152D 23                 5224 	inc	hl
   152E 72                 5225 	ld	(hl),d
                           5226 ;demo.c:649: cmd.size_y = 10;
   152F 21rB8s44           5227 	ld	hl, #_cmd + 10
   1532 36 0A              5228 	ld	(hl),#0x0A
   1534 23                 5229 	inc	hl
   1535 36 00              5230 	ld	(hl),#0x00
                           5231 ;demo.c:650: cmd.argument = 0x00;
   1537 3E 00              5232 	ld	a,#0x00
   1539 32rBBs44           5233 	ld	(#_cmd + 13),a
                           5234 ;demo.c:651: cmd.command = 0x90; // logical vram to vram
   153C 3E 90              5235 	ld	a,#0x90
   153E 32rBCs44           5236 	ld	(#_cmd + 14),a
                           5237 ;demo.c:652: vdp_copier(&cmd);
   1541 21rAEs44           5238 	ld	hl,#_cmd
   1544 E5                 5239 	push	hl
   1545 CDr00s00           5240 	call	_vdp_copier
   1548 F1                 5241 	pop	af
                           5242 ;demo.c:653: lx+=font_w[cidx]-1;
   1549 3ErA7              5243 	ld	a,#<_font_w
   154B DD 86 FE           5244 	add	a,-2 (ix)
   154E 4F                 5245 	ld	c,a
   154F 3Es13              5246 	ld	a,#>_font_w
   1551 DD 8E FF           5247 	adc	a,-1 (ix)
   1554 47                 5248 	ld	b,a
   1555 0A                 5249 	ld	a,(bc)
   1556 4F                 5250 	ld	c,a
   1557 0D                 5251 	dec	c
   1558 21r40s45           5252 	ld	hl,#_lx
   155B 7E                 5253 	ld	a,(hl)
   155C 81                 5254 	add	a,c
   155D 77                 5255 	ld	(hl),a
   155E DD F9              5256 	ld	sp,ix
   1560 DD E1              5257 	pop	ix
   1562 C9                 5258 	ret
   1563                    5259 _do_letter_tall_end::
                           5260 ;demo.c:656: void drawstr(char* str, uint8_t x, uint8_t y) {
                           5261 ;	---------------------------------
                           5262 ; Function drawstr
                           5263 ; ---------------------------------
   1563                    5264 _drawstr_start::
   1563                    5265 _drawstr:
   1563 DD E5              5266 	push	ix
   1565 DD 21 00 00        5267 	ld	ix,#0
   1569 DD 39              5268 	add	ix,sp
                           5269 ;demo.c:657: char* c = str;
   156B DD 4E 04           5270 	ld	c,4 (ix)
   156E DD 46 05           5271 	ld	b,5 (ix)
                           5272 ;demo.c:658: lx = x;
   1571 DD 5E 06           5273 	ld	e,6 (ix)
   1574 21r40s45           5274 	ld	hl,#_lx + 0
   1577 73                 5275 	ld	(hl), e
                           5276 ;demo.c:659: ly = y;
   1578 DD 7E 07           5277 	ld	a,7 (ix)
   157B 21r41s45           5278 	ld	hl,#_ly + 0
   157E 77                 5279 	ld	(hl), a
                           5280 ;demo.c:660: while (*c) {
   157F                    5281 00107$:
   157F 0A                 5282 	ld	a,(bc)
   1580 57                 5283 	ld	d,a
   1581 B7                 5284 	or	a,a
   1582 28 42              5285 	jr	Z,00110$
                           5286 ;demo.c:661: char ltr = *c++; 
   1584 03                 5287 	inc	bc
                           5288 ;demo.c:662: if (ltr == ' ') lx+=4;
   1585 7A                 5289 	ld	a,d
   1586 D6 20              5290 	sub	a,#0x20
   1588 20 1E              5291 	jr	NZ,00105$
   158A FD 21r40s45        5292 	ld	iy,#_lx
   158E FD 34 00           5293 	inc	0 (iy)
   1591 FD 21r40s45        5294 	ld	iy,#_lx
   1595 FD 34 00           5295 	inc	0 (iy)
   1598 FD 21r40s45        5296 	ld	iy,#_lx
   159C FD 34 00           5297 	inc	0 (iy)
   159F FD 21r40s45        5298 	ld	iy,#_lx
   15A3 FD 34 00           5299 	inc	0 (iy)
   15A6 18 D7              5300 	jr	00107$
   15A8                    5301 00105$:
                           5302 ;demo.c:663: else if (ltr == '_') { ly+=9; lx = x; }
   15A8 7A                 5303 	ld	a,d
   15A9 D6 5F              5304 	sub	a,#0x5F
   15AB 20 0D              5305 	jr	NZ,00102$
   15AD 21r41s45           5306 	ld	hl,#_ly
   15B0 7E                 5307 	ld	a,(hl)
   15B1 C6 09              5308 	add	a,#0x09
   15B3 77                 5309 	ld	(hl),a
   15B4 21r40s45           5310 	ld	hl,#_lx + 0
   15B7 73                 5311 	ld	(hl), e
   15B8 18 C5              5312 	jr	00107$
   15BA                    5313 00102$:
                           5314 ;demo.c:664: else do_letter(ltr);
   15BA C5                 5315 	push	bc
   15BB D5                 5316 	push	de
   15BC D5                 5317 	push	de
   15BD 33                 5318 	inc	sp
   15BE CDrE7s13           5319 	call	_do_letter
   15C1 33                 5320 	inc	sp
   15C2 D1                 5321 	pop	de
   15C3 C1                 5322 	pop	bc
   15C4 18 B9              5323 	jr	00107$
   15C6                    5324 00110$:
   15C6 DD E1              5325 	pop	ix
   15C8 C9                 5326 	ret
   15C9                    5327 _drawstr_end::
                           5328 ;demo.c:671: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           5329 ;	---------------------------------
                           5330 ; Function drawstrslow
                           5331 ; ---------------------------------
   15C9                    5332 _drawstrslow_start::
   15C9                    5333 _drawstrslow:
   15C9 DD E5              5334 	push	ix
   15CB DD 21 00 00        5335 	ld	ix,#0
   15CF DD 39              5336 	add	ix,sp
                           5337 ;demo.c:672: char* c = str+ltrpointer;
   15D1 21r42s45           5338 	ld	hl,#_ltrpointer
   15D4 DD 7E 04           5339 	ld	a,4 (ix)
   15D7 86                 5340 	add	a,(hl)
   15D8 4F                 5341 	ld	c,a
   15D9 DD 7E 05           5342 	ld	a,5 (ix)
   15DC 23                 5343 	inc	hl
   15DD 8E                 5344 	adc	a,(hl)
   15DE 47                 5345 	ld	b,a
                           5346 ;demo.c:673: if (ltrpointer > slowend) return;
   15DF 21r44s45           5347 	ld	hl,#_slowend
   15E2 7E                 5348 	ld	a,(hl)
   15E3 FD 21r42s45        5349 	ld	iy,#_ltrpointer
   15E7 FD 96 00           5350 	sub	a,0 (iy)
   15EA 23                 5351 	inc	hl
   15EB 7E                 5352 	ld	a,(hl)
   15EC FD 21r42s45        5353 	ld	iy,#_ltrpointer
   15F0 FD 9E 01           5354 	sbc	a,1 (iy)
   15F3 F2rF9s15           5355 	jp	P,00102$
   15F6 C3r64s16           5356 	jp	00114$
   15F9                    5357 00102$:
                           5358 ;demo.c:674: if (ltrpointer == 0) {
   15F9 3Ar42s45           5359 	ld	a,(#_ltrpointer+0)
   15FC 21r43s45           5360 	ld	hl,#_ltrpointer + 1
   15FF B6                 5361 	or	a,(hl)
   1600 20 0E              5362 	jr	NZ,00111$
                           5363 ;demo.c:675: lx = x;
   1602 DD 7E 06           5364 	ld	a,6 (ix)
   1605 21r40s45           5365 	ld	hl,#_lx + 0
   1608 77                 5366 	ld	(hl), a
                           5367 ;demo.c:676: ly = y;
   1609 DD 7E 07           5368 	ld	a,7 (ix)
   160C 21r41s45           5369 	ld	hl,#_ly + 0
   160F 77                 5370 	ld	(hl), a
                           5371 ;demo.c:678: while (*c) {
   1610                    5372 00111$:
   1610 0A                 5373 	ld	a,(bc)
   1611 4F                 5374 	ld	c,a
   1612 B7                 5375 	or	a,a
   1613 28 3F              5376 	jr	Z,00113$
                           5377 ;demo.c:679: char ltr = *c++; 
                           5378 ;demo.c:680: if (ltr == ' ') lx+=4;
   1615 79                 5379 	ld	a,c
   1616 D6 20              5380 	sub	a,#0x20
   1618 20 1E              5381 	jr	NZ,00109$
   161A FD 21r40s45        5382 	ld	iy,#_lx
   161E FD 34 00           5383 	inc	0 (iy)
   1621 FD 21r40s45        5384 	ld	iy,#_lx
   1625 FD 34 00           5385 	inc	0 (iy)
   1628 FD 21r40s45        5386 	ld	iy,#_lx
   162C FD 34 00           5387 	inc	0 (iy)
   162F FD 21r40s45        5388 	ld	iy,#_lx
   1633 FD 34 00           5389 	inc	0 (iy)
   1636 18 1C              5390 	jr	00113$
   1638                    5391 00109$:
                           5392 ;demo.c:681: else if (ltr == '_') { ly+=9; lx = x; }
   1638 79                 5393 	ld	a,c
   1639 D6 5F              5394 	sub	a,#0x5F
   163B 20 10              5395 	jr	NZ,00106$
   163D 21r41s45           5396 	ld	hl,#_ly
   1640 7E                 5397 	ld	a,(hl)
   1641 C6 09              5398 	add	a,#0x09
   1643 77                 5399 	ld	(hl),a
   1644 DD 7E 06           5400 	ld	a,6 (ix)
   1647 21r40s45           5401 	ld	hl,#_lx + 0
   164A 77                 5402 	ld	(hl), a
   164B 18 07              5403 	jr	00113$
   164D                    5404 00106$:
                           5405 ;demo.c:682: else do_letter(ltr);
   164D 79                 5406 	ld	a,c
   164E F5                 5407 	push	af
   164F 33                 5408 	inc	sp
   1650 CDrE7s13           5409 	call	_do_letter
   1653 33                 5410 	inc	sp
                           5411 ;demo.c:683: break;
   1654                    5412 00113$:
                           5413 ;demo.c:686: ltrpointer++;
   1654 FD 21r42s45        5414 	ld	iy,#_ltrpointer
   1658 FD 34 00           5415 	inc	0 (iy)
   165B 20 07              5416 	jr	NZ,00125$
   165D FD 21r42s45        5417 	ld	iy,#_ltrpointer
   1661 FD 34 01           5418 	inc	1 (iy)
   1664                    5419 00125$:
   1664                    5420 00114$:
   1664 DD E1              5421 	pop	ix
   1666 C9                 5422 	ret
   1667                    5423 _drawstrslow_end::
                           5424 ;demo.c:689: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           5425 ;	---------------------------------
                           5426 ; Function drawstr2x
                           5427 ; ---------------------------------
   1667                    5428 _drawstr2x_start::
   1667                    5429 _drawstr2x:
   1667 DD E5              5430 	push	ix
   1669 DD 21 00 00        5431 	ld	ix,#0
   166D DD 39              5432 	add	ix,sp
                           5433 ;demo.c:690: char* c = str;
   166F DD 4E 04           5434 	ld	c,4 (ix)
   1672 DD 46 05           5435 	ld	b,5 (ix)
                           5436 ;demo.c:691: lx = x;
   1675 DD 5E 06           5437 	ld	e,6 (ix)
   1678 21r40s45           5438 	ld	hl,#_lx + 0
   167B 73                 5439 	ld	(hl), e
                           5440 ;demo.c:692: ly = y;
   167C DD 7E 07           5441 	ld	a,7 (ix)
   167F 21r41s45           5442 	ld	hl,#_ly + 0
   1682 77                 5443 	ld	(hl), a
                           5444 ;demo.c:693: while (*c) {
   1683                    5445 00107$:
   1683 0A                 5446 	ld	a,(bc)
   1684 57                 5447 	ld	d,a
   1685 B7                 5448 	or	a,a
   1686 28 2D              5449 	jr	Z,00110$
                           5450 ;demo.c:694: char ltr = *c++; 
   1688 03                 5451 	inc	bc
                           5452 ;demo.c:695: if (ltr == ' ') lx+=4*4;
   1689 7A                 5453 	ld	a,d
   168A D6 20              5454 	sub	a,#0x20
   168C 20 09              5455 	jr	NZ,00105$
   168E 21r40s45           5456 	ld	hl,#_lx
   1691 7E                 5457 	ld	a,(hl)
   1692 C6 10              5458 	add	a,#0x10
   1694 77                 5459 	ld	(hl),a
   1695 18 EC              5460 	jr	00107$
   1697                    5461 00105$:
                           5462 ;demo.c:696: else if (ltr == '_') { ly+=9*4; lx = x; }
   1697 7A                 5463 	ld	a,d
   1698 D6 5F              5464 	sub	a,#0x5F
   169A 20 0D              5465 	jr	NZ,00102$
   169C 21r41s45           5466 	ld	hl,#_ly
   169F 7E                 5467 	ld	a,(hl)
   16A0 C6 24              5468 	add	a,#0x24
   16A2 77                 5469 	ld	(hl),a
   16A3 21r40s45           5470 	ld	hl,#_lx + 0
   16A6 73                 5471 	ld	(hl), e
   16A7 18 DA              5472 	jr	00107$
   16A9                    5473 00102$:
                           5474 ;demo.c:697: else do_2xletter(ltr);
   16A9 C5                 5475 	push	bc
   16AA D5                 5476 	push	de
   16AB D5                 5477 	push	de
   16AC 33                 5478 	inc	sp
   16AD CDr79s10           5479 	call	_do_2xletter
   16B0 33                 5480 	inc	sp
   16B1 D1                 5481 	pop	de
   16B2 C1                 5482 	pop	bc
   16B3 18 CE              5483 	jr	00107$
   16B5                    5484 00110$:
   16B5 DD E1              5485 	pop	ix
   16B7 C9                 5486 	ret
   16B8                    5487 _drawstr2x_end::
                           5488 ;demo.c:702: void drawsine(char* str, uint8_t x, uint8_t y) {
                           5489 ;	---------------------------------
                           5490 ; Function drawsine
                           5491 ; ---------------------------------
   16B8                    5492 _drawsine_start::
   16B8                    5493 _drawsine:
   16B8 DD E5              5494 	push	ix
   16BA DD 21 00 00        5495 	ld	ix,#0
   16BE DD 39              5496 	add	ix,sp
   16C0 3B                 5497 	dec	sp
                           5498 ;demo.c:703: char* c = str;
   16C1 DD 4E 04           5499 	ld	c,4 (ix)
   16C4 DD 46 05           5500 	ld	b,5 (ix)
                           5501 ;demo.c:704: lx = x;
   16C7 DD 7E 06           5502 	ld	a,6 (ix)
   16CA 21r40s45           5503 	ld	hl,#_lx + 0
   16CD 77                 5504 	ld	(hl), a
                           5505 ;demo.c:706: while (*c) {
   16CE                    5506 00104$:
   16CE 0A                 5507 	ld	a,(bc)
   16CF 5F                 5508 	ld	e,a
   16D0 B7                 5509 	or	a,a
   16D1 CAr37s17           5510 	jp	Z,00107$
                           5511 ;demo.c:707: char ltr = *c++; 
   16D4 03                 5512 	inc	bc
   16D5 DD 73 FF           5513 	ld	-1 (ix),e
                           5514 ;demo.c:708: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   16D8 21r40s45           5515 	ld	hl,#_lx + 0
   16DB 5E                 5516 	ld	e,(hl)
   16DC 16 00              5517 	ld	d,#0x00
   16DE 21rAAs44           5518 	ld	hl,#_vbicount
   16E1 7B                 5519 	ld	a,e
   16E2 86                 5520 	add	a,(hl)
   16E3 5F                 5521 	ld	e,a
   16E4 7A                 5522 	ld	a,d
   16E5 23                 5523 	inc	hl
   16E6 8E                 5524 	adc	a,(hl)
   16E7 57                 5525 	ld	d,a
   16E8 CB 2A              5526 	sra	d
   16EA CB 1B              5527 	rr	e
   16EC 16 00              5528 	ld	d,#0x00
   16EE 21r2Cs00           5529 	ld	hl,#_sintabx
   16F1 19                 5530 	add	hl,de
   16F2 5E                 5531 	ld	e,(hl)
   16F3 CB 3B              5532 	srl	e
   16F5 CB 3B              5533 	srl	e
   16F7 CB 3B              5534 	srl	e
   16F9 CB 3B              5535 	srl	e
   16FB 21r41s45           5536 	ld	hl,#_ly
   16FE DD 7E 07           5537 	ld	a,7 (ix)
   1701 83                 5538 	add	a,e
   1702 77                 5539 	ld	(hl),a
                           5540 ;demo.c:709: if (ltr == ' ') lx+=4;
   1703 DD 7E FF           5541 	ld	a,-1 (ix)
   1706 D6 20              5542 	sub	a,#0x20
   1708 20 1F              5543 	jr	NZ,00102$
   170A FD 21r40s45        5544 	ld	iy,#_lx
   170E FD 34 00           5545 	inc	0 (iy)
   1711 FD 21r40s45        5546 	ld	iy,#_lx
   1715 FD 34 00           5547 	inc	0 (iy)
   1718 FD 21r40s45        5548 	ld	iy,#_lx
   171C FD 34 00           5549 	inc	0 (iy)
   171F FD 21r40s45        5550 	ld	iy,#_lx
   1723 FD 34 00           5551 	inc	0 (iy)
   1726 C3rCEs16           5552 	jp	00104$
   1729                    5553 00102$:
                           5554 ;demo.c:710: else do_letter_tall(ltr);
   1729 C5                 5555 	push	bc
   172A DD 7E FF           5556 	ld	a,-1 (ix)
   172D F5                 5557 	push	af
   172E 33                 5558 	inc	sp
   172F CDrA5s14           5559 	call	_do_letter_tall
   1732 33                 5560 	inc	sp
   1733 C1                 5561 	pop	bc
   1734 C3rCEs16           5562 	jp	00104$
   1737                    5563 00107$:
   1737 DD F9              5564 	ld	sp,ix
   1739 DD E1              5565 	pop	ix
   173B C9                 5566 	ret
   173C                    5567 _drawsine_end::
                           5568 ;demo.c:714: void font() {
                           5569 ;	---------------------------------
                           5570 ; Function font
                           5571 ; ---------------------------------
   173C                    5572 _font_start::
   173C                    5573 _font:
                           5574 ;demo.c:715: slowend = 128;
   173C 21r44s45           5575 	ld	hl,#_slowend + 0
   173F 36 80              5576 	ld	(hl), #0x80
   1741 21r45s45           5577 	ld	hl,#_slowend + 1
   1744 36 00              5578 	ld	(hl), #0x00
                           5579 ;demo.c:716: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1746 21 4A 3C           5580 	ld	hl,#0x3C4A
   1749 E5                 5581 	push	hl
   174A 21r54s17           5582 	ld	hl,#__str_8
   174D E5                 5583 	push	hl
   174E CDrC9s15           5584 	call	_drawstrslow
   1751 F1                 5585 	pop	af
   1752 F1                 5586 	pop	af
   1753 C9                 5587 	ret
   1754                    5588 _font_end::
   1754                    5589 __str_8:
   1754 44 49 47 49 54 41  5590 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   1790 4F 4E 5F 5F 20 20  5591 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   17CC 59 20 50 45 4F 50  5592 	.ascii "Y PEOPLE"
        4C 45
   17D4 00                 5593 	.db 0x00
                           5594 ;demo.c:724: void twister() {
                           5595 ;	---------------------------------
                           5596 ; Function twister
                           5597 ; ---------------------------------
   17D5                    5598 _twister_start::
   17D5                    5599 _twister:
   17D5 DD E5              5600 	push	ix
   17D7 DD 21 00 00        5601 	ld	ix,#0
   17DB DD 39              5602 	add	ix,sp
   17DD F5                 5603 	push	af
                           5604 ;demo.c:728: if (twinited == 0) {
   17DE 3Ar48s45           5605 	ld	a,(#_twinited+0)
   17E1 FD 21r48s45        5606 	ld	iy,#_twinited
   17E5 FD B6 01           5607 	or	a,1 (iy)
   17E8 C2r62s18           5608 	jp	NZ,00102$
                           5609 ;demo.c:729: cmd.size_x = 256;
   17EB 21rB6s44           5610 	ld	hl, #_cmd + 8
   17EE 36 00              5611 	ld	(hl),#0x00
   17F0 23                 5612 	inc	hl
   17F1 36 01              5613 	ld	(hl),#0x01
                           5614 ;demo.c:730: cmd.size_y = 1;
   17F3 21rB8s44           5615 	ld	hl, #_cmd + 10
   17F6 36 01              5616 	ld	(hl),#0x01
   17F8 23                 5617 	inc	hl
   17F9 36 00              5618 	ld	(hl),#0x00
                           5619 ;demo.c:731: cmd.data = 0;
                           5620 ;demo.c:732: cmd.argument = 0x00; // from 70xY to left
   17FB 3E 00              5621 	ld	a,#0x00
   17FD 32rBAs44           5622 	ld	(#_cmd + 12),a
   1800 32rBBs44           5623 	ld	(#_cmd + 13),a
                           5624 ;demo.c:733: cmd.command = 0xd0; // vram to vram, y only
   1803 01rBCs44           5625 	ld	bc,#_cmd + 14
   1806 3E D0              5626 	ld	a,#0xD0
   1808 02                 5627 	ld	(bc),a
                           5628 ;demo.c:734: cmd.source_x = 0;
   1809 21rAEs44           5629 	ld	hl,#_cmd
   180C 36 00              5630 	ld	(hl),#0x00
   180E 23                 5631 	inc	hl
   180F 36 00              5632 	ld	(hl),#0x00
                           5633 ;demo.c:735: cmd.dest_x = 0;
   1811 21rB2s44           5634 	ld	hl, #_cmd + 4
   1814 36 00              5635 	ld	(hl),#0x00
   1816 23                 5636 	inc	hl
   1817 36 00              5637 	ld	(hl),#0x00
                           5638 ;demo.c:737: for (y = 0; y < 212; y+=1) {
   1819 01 00 00           5639 	ld	bc,#0x0000
   181C                    5640 00103$:
   181C 79                 5641 	ld	a,c
   181D D6 D4              5642 	sub	a,#0xD4
   181F 78                 5643 	ld	a,b
   1820 DE 00              5644 	sbc	a,#0x00
   1822 F2r43s18           5645 	jp	P,00106$
                           5646 ;demo.c:738: waitVB();
   1825 76                 5647 		halt 
                           5648 ;demo.c:739: cmd.source_y = 0;
   1826 11rB0s44           5649 	ld	de,#_cmd + 2
   1829 EB                 5650 	ex	de,hl
   182A 36 00              5651 	ld	(hl),#0x00
   182C 23                 5652 	inc	hl
   182D 36 00              5653 	ld	(hl),#0x00
                           5654 ;demo.c:740: cmd.dest_y = y;
   182F 11rB4s44           5655 	ld	de,#_cmd + 6
   1832 EB                 5656 	ex	de,hl
   1833 71                 5657 	ld	(hl),c
   1834 23                 5658 	inc	hl
   1835 70                 5659 	ld	(hl),b
                           5660 ;demo.c:741: vdp_copier(&cmd);
   1836 C5                 5661 	push	bc
   1837 21rAEs44           5662 	ld	hl,#_cmd
   183A E5                 5663 	push	hl
   183B CDr00s00           5664 	call	_vdp_copier
   183E F1                 5665 	pop	af
   183F C1                 5666 	pop	bc
                           5667 ;demo.c:737: for (y = 0; y < 212; y+=1) {
   1840 03                 5668 	inc	bc
   1841 18 D9              5669 	jr	00103$
   1843                    5670 00106$:
                           5671 ;demo.c:745: twinited = 1;
   1843 21r48s45           5672 	ld	hl,#_twinited + 0
   1846 36 01              5673 	ld	(hl), #0x01
   1848 21r49s45           5674 	ld	hl,#_twinited + 1
   184B 36 00              5675 	ld	(hl), #0x00
                           5676 ;demo.c:746: vdp_load_palette(twister_palette);
   184D 21r2As44           5677 	ld	hl,#_twister_palette
   1850 E5                 5678 	push	hl
   1851 CDr00s00           5679 	call	_vdp_load_palette
   1854 F1                 5680 	pop	af
                           5681 ;demo.c:747: drawstr2x("DSS",80,15);
   1855 21 50 0F           5682 	ld	hl,#0x0F50
   1858 E5                 5683 	push	hl
   1859 21r6Es19           5684 	ld	hl,#__str_9
   185C E5                 5685 	push	hl
   185D CDr67s16           5686 	call	_drawstr2x
   1860 F1                 5687 	pop	af
   1861 F1                 5688 	pop	af
   1862                    5689 00102$:
                           5690 ;demo.c:751: cmd.size_x = 70;
   1862 21rB6s44           5691 	ld	hl, #_cmd + 8
   1865 36 46              5692 	ld	(hl),#0x46
   1867 23                 5693 	inc	hl
   1868 36 00              5694 	ld	(hl),#0x00
                           5695 ;demo.c:752: cmd.size_y = 2;
   186A 21rB8s44           5696 	ld	hl, #_cmd + 10
   186D 36 02              5697 	ld	(hl),#0x02
   186F 23                 5698 	inc	hl
   1870 36 00              5699 	ld	(hl),#0x00
                           5700 ;demo.c:753: cmd.data = 0;
   1872 3E 00              5701 	ld	a,#0x00
   1874 32rBAs44           5702 	ld	(#_cmd + 12),a
                           5703 ;demo.c:754: cmd.argument = 0x04; // from 70xY to left
   1877 3E 04              5704 	ld	a,#0x04
   1879 32rBBs44           5705 	ld	(#_cmd + 13),a
                           5706 ;demo.c:755: cmd.command = 0xe0; // vram to vram, y only
   187C 01rBCs44           5707 	ld	bc,#_cmd + 14
   187F 3E E0              5708 	ld	a,#0xE0
   1881 02                 5709 	ld	(bc),a
                           5710 ;demo.c:756: cmd.source_x = 70;
   1882 21rAEs44           5711 	ld	hl,#_cmd
   1885 36 46              5712 	ld	(hl),#0x46
   1887 23                 5713 	inc	hl
   1888 36 00              5714 	ld	(hl),#0x00
                           5715 ;demo.c:757: cmd.dest_x = 70;
   188A 21rB2s44           5716 	ld	hl, #_cmd + 4
   188D 36 46              5717 	ld	(hl),#0x46
   188F 23                 5718 	inc	hl
   1890 36 00              5719 	ld	(hl),#0x00
                           5720 ;demo.c:759: for (y = 0; y < 212; y+=2) {
   1892 DD 36 FE 00        5721 	ld	-2 (ix),#0x00
   1896 DD 36 FF 00        5722 	ld	-1 (ix),#0x00
   189A                    5723 00107$:
   189A DD 7E FE           5724 	ld	a,-2 (ix)
   189D D6 D4              5725 	sub	a,#0xD4
   189F DD 7E FF           5726 	ld	a,-1 (ix)
   18A2 DE 00              5727 	sbc	a,#0x00
   18A4 F2rFDs18           5728 	jp	P,00110$
                           5729 ;demo.c:760: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   18A7 11rB0s44           5730 	ld	de,#_cmd + 2
   18AA DD 4E FE           5731 	ld	c,-2 (ix)
   18AD DD 46 FF           5732 	ld	b,-1 (ix)
   18B0 CB 28              5733 	sra	b
   18B2 CB 19              5734 	rr	c
   18B4 3Ar46s45           5735 	ld	a,(#_ff+0)
   18B7 81                 5736 	add	a,c
   18B8 4F                 5737 	ld	c,a
   18B9 3Ar47s45           5738 	ld	a,(#_ff+1)
   18BC 88                 5739 	adc	a,b
   18BD 06 00              5740 	ld	b,#0x00
   18BF 21r00s00           5741 	ld	hl,#_sintab
   18C2 09                 5742 	add	hl,bc
   18C3 7E                 5743 	ld	a,(hl)
   18C4 4F                 5744 	ld	c,a
   18C5 CB 29              5745 	sra	c
   18C7 79                 5746 	ld	a,c
   18C8 17                 5747 	rla	
   18C9 9F                 5748 	sbc	a,a
   18CA 47                 5749 	ld	b,a
   18CB 21 40 02           5750 	ld	hl,#0x0240
   18CE 09                 5751 	add	hl,bc
   18CF 4D                 5752 	ld	c,l
   18D0 44                 5753 	ld	b,h
   18D1 6B                 5754 	ld	l,e
   18D2 62                 5755 	ld	h,d
   18D3 71                 5756 	ld	(hl),c
   18D4 23                 5757 	inc	hl
   18D5 70                 5758 	ld	(hl),b
                           5759 ;demo.c:761: cmd.dest_y = y;
   18D6 21rB4s44           5760 	ld	hl, #_cmd + 6
   18D9 DD 7E FE           5761 	ld	a,-2 (ix)
   18DC 77                 5762 	ld	(hl),a
   18DD 23                 5763 	inc	hl
   18DE DD 7E FF           5764 	ld	a,-1 (ix)
   18E1 77                 5765 	ld	(hl),a
                           5766 ;demo.c:762: vdp_copier(&cmd);
   18E2 21rAEs44           5767 	ld	hl,#_cmd
   18E5 E5                 5768 	push	hl
   18E6 CDr00s00           5769 	call	_vdp_copier
   18E9 F1                 5770 	pop	af
                           5771 ;demo.c:759: for (y = 0; y < 212; y+=2) {
   18EA DD 7E FE           5772 	ld	a,-2 (ix)
   18ED C6 02              5773 	add	a,#0x02
   18EF DD 77 FE           5774 	ld	-2 (ix),a
   18F2 DD 7E FF           5775 	ld	a,-1 (ix)
   18F5 CE 00              5776 	adc	a,#0x00
   18F7 DD 77 FF           5777 	ld	-1 (ix),a
   18FA C3r9As18           5778 	jp	00107$
   18FD                    5779 00110$:
                           5780 ;demo.c:766: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   18FD 21r46s45           5781 	ld	hl,#_ff + 0
   1900 4E                 5782 	ld	c,(hl)
   1901 21r47s45           5783 	ld	hl,#_ff + 1
   1904 46                 5784 	ld	b,(hl)
   1905 CB 28              5785 	sra	b
   1907 CB 19              5786 	rr	c
   1909 CB 28              5787 	sra	b
   190B CB 19              5788 	rr	c
   190D 21r00s00           5789 	ld	hl,#_PLY_PSGReg9 + 0
   1910 5E                 5790 	ld	e,(hl)
   1911 16 00              5791 	ld	d,#0x00
   1913 21r46s45           5792 	ld	hl,#_ff
   1916 7B                 5793 	ld	a,e
   1917 86                 5794 	add	a,(hl)
   1918 5F                 5795 	ld	e,a
   1919 7A                 5796 	ld	a,d
   191A 23                 5797 	inc	hl
   191B 8E                 5798 	adc	a,(hl)
   191C 57                 5799 	ld	d,a
   191D CB 2A              5800 	sra	d
   191F CB 1B              5801 	rr	e
   1921 CB 2A              5802 	sra	d
   1923 CB 1B              5803 	rr	e
   1925 CB 2A              5804 	sra	d
   1927 CB 1B              5805 	rr	e
   1929 43                 5806 	ld	b,e
   192A 21r00s00           5807 	ld	hl,#_PLY_PSGReg8 + 0
   192D 5E                 5808 	ld	e,(hl)
   192E 16 00              5809 	ld	d,#0x00
   1930 21r46s45           5810 	ld	hl,#_ff
   1933 7B                 5811 	ld	a,e
   1934 86                 5812 	add	a,(hl)
   1935 5F                 5813 	ld	e,a
   1936 7A                 5814 	ld	a,d
   1937 23                 5815 	inc	hl
   1938 8E                 5816 	adc	a,(hl)
   1939 57                 5817 	ld	d,a
   193A CB 2A              5818 	sra	d
   193C CB 1B              5819 	rr	e
   193E CB 2A              5820 	sra	d
   1940 CB 1B              5821 	rr	e
   1942 79                 5822 	ld	a,c
   1943 F5                 5823 	push	af
   1944 33                 5824 	inc	sp
   1945 C5                 5825 	push	bc
   1946 33                 5826 	inc	sp
   1947 53                 5827 	ld	d,e
   1948 1E 04              5828 	ld	e,#0x04
   194A D5                 5829 	push	de
   194B CDr00s00           5830 	call	_msx2_palette
   194E F1                 5831 	pop	af
   194F F1                 5832 	pop	af
                           5833 ;demo.c:768: font();
   1950 CDr3Cs17           5834 	call	_font
                           5835 ;demo.c:770: ff+=4;
   1953 21r46s45           5836 	ld	hl,#_ff
   1956 7E                 5837 	ld	a,(hl)
   1957 C6 04              5838 	add	a,#0x04
   1959 23                 5839 	inc	hl
   195A 2B                 5840 	dec	hl
   195B C5                 5841 	push	bc
   195C 4F                 5842 	ld	c, a
   195D 23                 5843 	inc	hl
   195E 7E                 5844 	ld	a, (hl)
   195F 47                 5845 	ld	b, a
   1960 79                 5846 	ld	a, c
   1961 2B                 5847 	dec	hl
   1962 77                 5848 	ld	(hl), a
   1963 78                 5849 	ld	a, b
   1964 C1                 5850 	pop	bc
   1965 CE 00              5851 	adc	a,#0x00
   1967 23                 5852 	inc	hl
   1968 77                 5853 	ld	(hl),a
   1969 DD F9              5854 	ld	sp,ix
   196B DD E1              5855 	pop	ix
   196D C9                 5856 	ret
   196E                    5857 _twister_end::
   196E                    5858 __str_9:
   196E 44 53 53           5859 	.ascii "DSS"
   1971 00                 5860 	.db 0x00
                           5861 ;demo.c:781: void bulbs() {
                           5862 ;	---------------------------------
                           5863 ; Function bulbs
                           5864 ; ---------------------------------
   1972                    5865 _bulbs_start::
   1972                    5866 _bulbs:
   1972 DD E5              5867 	push	ix
   1974 DD 21 00 00        5868 	ld	ix,#0
   1978 DD 39              5869 	add	ix,sp
   197A 21 FA FF           5870 	ld	hl,#-6
   197D 39                 5871 	add	hl,sp
   197E F9                 5872 	ld	sp,hl
                           5873 ;demo.c:785: ender+=enderdir;
   197F 21r52s45           5874 	ld	hl,#_enderdir
   1982 D5                 5875 	push	de
   1983 FD 21r50s45        5876 	ld	iy,#_ender
   1987 FD E5              5877 	push	iy
   1989 D1                 5878 	pop	de
   198A 1A                 5879 	ld	a,(de)
   198B 86                 5880 	add	a,(hl)
   198C 13                 5881 	inc	de
   198D 1B                 5882 	dec	de
   198E C5                 5883 	push	bc
   198F 4F                 5884 	ld	c, a
   1990 13                 5885 	inc	de
   1991 1A                 5886 	ld	a, (de)
   1992 47                 5887 	ld	b, a
   1993 79                 5888 	ld	a, c
   1994 1B                 5889 	dec	de
   1995 12                 5890 	ld	(de), a
   1996 78                 5891 	ld	a, b
   1997 C1                 5892 	pop	bc
   1998 23                 5893 	inc	hl
   1999 8E                 5894 	adc	a,(hl)
   199A 13                 5895 	inc	de
   199B 12                 5896 	ld	(de),a
   199C D1                 5897 	pop	de
                           5898 ;demo.c:786: if (ender < 2) { enderdir = -enderdir; }
   199D 3Ar50s45           5899 	ld	a,(#_ender+0)
   19A0 D6 02              5900 	sub	a,#0x02
   19A2 3Ar51s45           5901 	ld	a,(#_ender+1)
   19A5 DE 00              5902 	sbc	a,#0x00
   19A7 F2rCBs19           5903 	jp	P,00102$
   19AA AF                 5904 	xor	a,a
   19AB FD 21r52s45        5905 	ld	iy,#_enderdir
   19AF 3E 00              5906 	ld	a,#0x00
   19B1 FD 9E 00           5907 	sbc	a,0 (iy)
   19B4 FD 21r52s45        5908 	ld	iy,#_enderdir
   19B8 FD 77 00           5909 	ld	0 (iy),a
   19BB FD 21r52s45        5910 	ld	iy,#_enderdir
   19BF 3E 00              5911 	ld	a,#0x00
   19C1 FD 9E 01           5912 	sbc	a,1 (iy)
   19C4 FD 21r52s45        5913 	ld	iy,#_enderdir
   19C8 FD 77 01           5914 	ld	1 (iy),a
   19CB                    5915 00102$:
                           5916 ;demo.c:787: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   19CB 3Ar50s45           5917 	ld	a,(#_ender+0)
   19CE D6 D4              5918 	sub	a,#0xD4
   19D0 3Ar51s45           5919 	ld	a,(#_ender+1)
   19D3 DE 00              5920 	sbc	a,#0x00
   19D5 FArFBs19           5921 	jp	M,00104$
   19D8 AF                 5922 	xor	a,a
   19D9 FD 21r52s45        5923 	ld	iy,#_enderdir
   19DD 3E 00              5924 	ld	a,#0x00
   19DF FD 9E 00           5925 	sbc	a,0 (iy)
   19E2 21r52s45           5926 	ld	hl,#_enderdir + 0
   19E5 77                 5927 	ld	(hl), a
   19E6 FD 21r52s45        5928 	ld	iy,#_enderdir
   19EA 3E 00              5929 	ld	a,#0x00
   19EC FD 9E 01           5930 	sbc	a,1 (iy)
   19EF 21r53s45           5931 	ld	hl,#_enderdir + 1
   19F2 77                 5932 	ld	(hl), a
   19F3 2Ar54s45           5933 	ld	hl,(_sy)
   19F6 2B                 5934 	dec	hl
   19F7 2B                 5935 	dec	hl
   19F8 22r54s45           5936 	ld	(_sy),hl
   19FB                    5937 00104$:
                           5938 ;demo.c:789: enderend = ender + 92;
   19FB 3Ar50s45           5939 	ld	a,(#_ender+0)
   19FE C6 5C              5940 	add	a,#0x5C
   1A00 DD 77 FE           5941 	ld	-2 (ix),a
   1A03 3Ar51s45           5942 	ld	a,(#_ender+1)
   1A06 CE 00              5943 	adc	a,#0x00
   1A08 DD 77 FF           5944 	ld	-1 (ix),a
                           5945 ;demo.c:791: if (enderend > 212) enderend = 212;
   1A0B 3E D4              5946 	ld	a,#0xD4
   1A0D DD 96 FE           5947 	sub	a,-2 (ix)
   1A10 3E 00              5948 	ld	a,#0x00
   1A12 DD 9E FF           5949 	sbc	a,-1 (ix)
   1A15 F2r20s1A           5950 	jp	P,00106$
   1A18 DD 36 FE D4        5951 	ld	-2 (ix),#0xD4
   1A1C DD 36 FF 00        5952 	ld	-1 (ix),#0x00
   1A20                    5953 00106$:
                           5954 ;demo.c:792: if (enderend > 212-16) sy = 16-(212-enderend);
   1A20 3E C4              5955 	ld	a,#0xC4
   1A22 DD 96 FE           5956 	sub	a,-2 (ix)
   1A25 3E 00              5957 	ld	a,#0x00
   1A27 DD 9E FF           5958 	sbc	a,-1 (ix)
   1A2A F2r45s1A           5959 	jp	P,00108$
   1A2D 3E D4              5960 	ld	a,#0xD4
   1A2F DD 96 FE           5961 	sub	a,-2 (ix)
   1A32 5F                 5962 	ld	e,a
   1A33 3E 00              5963 	ld	a,#0x00
   1A35 DD 9E FF           5964 	sbc	a,-1 (ix)
   1A38 57                 5965 	ld	d,a
   1A39 21r54s45           5966 	ld	hl,#_sy
   1A3C 3E 10              5967 	ld	a,#0x10
   1A3E 93                 5968 	sub	a,e
   1A3F 77                 5969 	ld	(hl),a
   1A40 3E 00              5970 	ld	a,#0x00
   1A42 9A                 5971 	sbc	a,d
   1A43 23                 5972 	inc	hl
   1A44 77                 5973 	ld	(hl),a
   1A45                    5974 00108$:
                           5975 ;demo.c:794: if(bulbflipper == 1) {
   1A45 3Ar4As45           5976 	ld	a,(#_bulbflipper+0)
   1A48 D6 01              5977 	sub	a,#0x01
   1A4A 20 06              5978 	jr	NZ,00133$
   1A4C 3Ar4Bs45           5979 	ld	a,(#_bulbflipper+1)
   1A4F B7                 5980 	or	a,a
   1A50 28 03              5981 	jr	Z,00134$
   1A52                    5982 00133$:
   1A52 C3r0Bs1B           5983 	jp	00110$
   1A55                    5984 00134$:
                           5985 ;demo.c:795: cmd.size_x = 72;
   1A55 11rB6s44           5986 	ld	de,#_cmd + 8
   1A58 EB                 5987 	ex	de,hl
   1A59 36 48              5988 	ld	(hl),#0x48
   1A5B 23                 5989 	inc	hl
   1A5C 36 00              5990 	ld	(hl),#0x00
                           5991 ;demo.c:796: cmd.size_y = sy;
   1A5E 11rB8s44           5992 	ld	de,#_cmd + 10
   1A61 ED 4Br54s45        5993 	ld	bc,(_sy)
   1A65 6B                 5994 	ld	l,e
   1A66 62                 5995 	ld	h,d
   1A67 71                 5996 	ld	(hl),c
   1A68 23                 5997 	inc	hl
   1A69 70                 5998 	ld	(hl),b
                           5999 ;demo.c:797: cmd.data = 0;
   1A6A 3E 00              6000 	ld	a,#0x00
   1A6C 32rBAs44           6001 	ld	(#_cmd + 12),a
                           6002 ;demo.c:798: cmd.argument = 0x04; // from 72xY to left
   1A6F 3E 04              6003 	ld	a,#0x04
   1A71 32rBBs44           6004 	ld	(#_cmd + 13),a
                           6005 ;demo.c:799: cmd.command = 0xe0; // vram to vram, y only
   1A74 01rBCs44           6006 	ld	bc,#_cmd + 14
   1A77 3E E0              6007 	ld	a,#0xE0
   1A79 02                 6008 	ld	(bc),a
                           6009 ;demo.c:800: cmd.source_x = 72;
   1A7A 21rAEs44           6010 	ld	hl,#_cmd
   1A7D 36 48              6011 	ld	(hl),#0x48
   1A7F 23                 6012 	inc	hl
   1A80 36 00              6013 	ld	(hl),#0x00
                           6014 ;demo.c:801: cmd.dest_x = 72;
   1A82 21rB2s44           6015 	ld	hl, #_cmd + 4
   1A85 36 48              6016 	ld	(hl),#0x48
   1A87 23                 6017 	inc	hl
   1A88 36 00              6018 	ld	(hl),#0x00
                           6019 ;demo.c:803: for (y = ender; y < enderend; y+=16) {
   1A8A ED 4Br50s45        6020 	ld	bc,(_ender)
   1A8E DD 71 FC           6021 	ld	-4 (ix),c
   1A91 DD 70 FD           6022 	ld	-3 (ix),b
   1A94                    6023 00112$:
   1A94 DD 7E FC           6024 	ld	a,-4 (ix)
   1A97 DD 96 FE           6025 	sub	a,-2 (ix)
   1A9A DD 7E FD           6026 	ld	a,-3 (ix)
   1A9D DD 9E FF           6027 	sbc	a,-1 (ix)
   1AA0 F2rF2s1A           6028 	jp	P,00115$
                           6029 ;demo.c:804: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1AA3 01rB0s44           6030 	ld	bc,#_cmd + 2
   1AA6 3Ar4Cs45           6031 	ld	a,(#_ff1+0)
   1AA9 DD 86 FC           6032 	add	a,-4 (ix)
   1AAC 5F                 6033 	ld	e,a
   1AAD 3Ar4Ds45           6034 	ld	a,(#_ff1+1)
   1AB0 DD 8E FD           6035 	adc	a,-3 (ix)
   1AB3 16 00              6036 	ld	d,#0x00
   1AB5 21r00s00           6037 	ld	hl,#_sintab
   1AB8 19                 6038 	add	hl,de
   1AB9 5E                 6039 	ld	e,(hl)
   1ABA CB 2B              6040 	sra	e
   1ABC 7B                 6041 	ld	a,e
   1ABD 17                 6042 	rla	
   1ABE 9F                 6043 	sbc	a,a
   1ABF 57                 6044 	ld	d,a
   1AC0 21 40 01           6045 	ld	hl,#0x0140
   1AC3 19                 6046 	add	hl,de
   1AC4 EB                 6047 	ex	de,hl
   1AC5 69                 6048 	ld	l,c
   1AC6 60                 6049 	ld	h,b
   1AC7 73                 6050 	ld	(hl),e
   1AC8 23                 6051 	inc	hl
   1AC9 72                 6052 	ld	(hl),d
                           6053 ;demo.c:805: cmd.dest_y = y;
   1ACA 11rB4s44           6054 	ld	de,#_cmd + 6
   1ACD EB                 6055 	ex	de,hl
   1ACE DD 7E FC           6056 	ld	a,-4 (ix)
   1AD1 77                 6057 	ld	(hl),a
   1AD2 23                 6058 	inc	hl
   1AD3 DD 7E FD           6059 	ld	a,-3 (ix)
   1AD6 77                 6060 	ld	(hl),a
                           6061 ;demo.c:806: vdp_copier(&cmd);
   1AD7 21rAEs44           6062 	ld	hl,#_cmd
   1ADA E5                 6063 	push	hl
   1ADB CDr00s00           6064 	call	_vdp_copier
   1ADE F1                 6065 	pop	af
                           6066 ;demo.c:803: for (y = ender; y < enderend; y+=16) {
   1ADF DD 7E FC           6067 	ld	a,-4 (ix)
   1AE2 C6 10              6068 	add	a,#0x10
   1AE4 DD 77 FC           6069 	ld	-4 (ix),a
   1AE7 DD 7E FD           6070 	ld	a,-3 (ix)
   1AEA CE 00              6071 	adc	a,#0x00
   1AEC DD 77 FD           6072 	ld	-3 (ix),a
   1AEF C3r94s1A           6073 	jp	00112$
   1AF2                    6074 00115$:
                           6075 ;demo.c:808: ff1+=4;
   1AF2 21r4Cs45           6076 	ld	hl,#_ff1
   1AF5 7E                 6077 	ld	a,(hl)
   1AF6 C6 04              6078 	add	a,#0x04
   1AF8 23                 6079 	inc	hl
   1AF9 2B                 6080 	dec	hl
   1AFA C5                 6081 	push	bc
   1AFB 4F                 6082 	ld	c, a
   1AFC 23                 6083 	inc	hl
   1AFD 7E                 6084 	ld	a, (hl)
   1AFE 47                 6085 	ld	b, a
   1AFF 79                 6086 	ld	a, c
   1B00 2B                 6087 	dec	hl
   1B01 77                 6088 	ld	(hl), a
   1B02 78                 6089 	ld	a, b
   1B03 C1                 6090 	pop	bc
   1B04 CE 00              6091 	adc	a,#0x00
   1B06 23                 6092 	inc	hl
   1B07 77                 6093 	ld	(hl),a
   1B08 C3rB0s1B           6094 	jp	00111$
   1B0B                    6095 00110$:
                           6096 ;demo.c:812: cmd.size_x = 72;
   1B0B 11rB6s44           6097 	ld	de,#_cmd + 8
   1B0E EB                 6098 	ex	de,hl
   1B0F 36 48              6099 	ld	(hl),#0x48
   1B11 23                 6100 	inc	hl
   1B12 36 00              6101 	ld	(hl),#0x00
                           6102 ;demo.c:813: cmd.size_y = sy;
   1B14 01rB8s44           6103 	ld	bc,#_cmd + 10
   1B17 ED 5Br54s45        6104 	ld	de,(_sy)
   1B1B 69                 6105 	ld	l,c
   1B1C 60                 6106 	ld	h,b
   1B1D 73                 6107 	ld	(hl),e
   1B1E 23                 6108 	inc	hl
   1B1F 72                 6109 	ld	(hl),d
                           6110 ;demo.c:814: cmd.data = 0;
   1B20 11rBAs44           6111 	ld	de,#_cmd + 12
   1B23 3E 00              6112 	ld	a,#0x00
   1B25 12                 6113 	ld	(de),a
                           6114 ;demo.c:815: cmd.argument = 0x00; // from 182xY to right
   1B26 11rBBs44           6115 	ld	de,#_cmd + 13
   1B29 3E 00              6116 	ld	a,#0x00
   1B2B 12                 6117 	ld	(de),a
                           6118 ;demo.c:816: cmd.command = 0xe0; // vram to vram, y only
   1B2C 11rBCs44           6119 	ld	de,#_cmd + 14
   1B2F 3E E0              6120 	ld	a,#0xE0
   1B31 12                 6121 	ld	(de),a
                           6122 ;demo.c:817: cmd.source_x = 182;
   1B32 21rAEs44           6123 	ld	hl,#_cmd
   1B35 36 B6              6124 	ld	(hl),#0xB6
   1B37 23                 6125 	inc	hl
   1B38 36 00              6126 	ld	(hl),#0x00
                           6127 ;demo.c:818: cmd.dest_x = 182;
   1B3A 11rB2s44           6128 	ld	de,#_cmd + 4
   1B3D 6B                 6129 	ld	l,e
   1B3E 62                 6130 	ld	h,d
   1B3F 36 B6              6131 	ld	(hl),#0xB6
   1B41 23                 6132 	inc	hl
   1B42 36 00              6133 	ld	(hl),#0x00
                           6134 ;demo.c:820: for (y = ender; y < enderend; y+=16) {
   1B44 ED 4Br50s45        6135 	ld	bc,(_ender)
   1B48                    6136 00116$:
   1B48 79                 6137 	ld	a,c
   1B49 DD 96 FE           6138 	sub	a,-2 (ix)
   1B4C 78                 6139 	ld	a,b
   1B4D DD 9E FF           6140 	sbc	a,-1 (ix)
   1B50 F2r9As1B           6141 	jp	P,00119$
                           6142 ;demo.c:821: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1B53 21rB0s44           6143 	ld	hl,#_cmd + 2
   1B56 DD 75 FA           6144 	ld	-6 (ix),l
   1B59 DD 74 FB           6145 	ld	-5 (ix),h
   1B5C 3Ar4Es45           6146 	ld	a,(#_ff2+0)
   1B5F 81                 6147 	add	a,c
   1B60 5F                 6148 	ld	e,a
   1B61 3Ar4Fs45           6149 	ld	a,(#_ff2+1)
   1B64 88                 6150 	adc	a,b
   1B65 16 00              6151 	ld	d,#0x00
   1B67 21r00s00           6152 	ld	hl,#_sintab
   1B6A 19                 6153 	add	hl,de
   1B6B 5E                 6154 	ld	e,(hl)
   1B6C CB 2B              6155 	sra	e
   1B6E 7B                 6156 	ld	a,e
   1B6F 17                 6157 	rla	
   1B70 9F                 6158 	sbc	a,a
   1B71 57                 6159 	ld	d,a
   1B72 21 40 01           6160 	ld	hl,#0x0140
   1B75 19                 6161 	add	hl,de
   1B76 EB                 6162 	ex	de,hl
   1B77 DD 6E FA           6163 	ld	l,-6 (ix)
   1B7A DD 66 FB           6164 	ld	h,-5 (ix)
   1B7D 73                 6165 	ld	(hl),e
   1B7E 23                 6166 	inc	hl
   1B7F 72                 6167 	ld	(hl),d
                           6168 ;demo.c:822: cmd.dest_y = y;
   1B80 11rB4s44           6169 	ld	de,#_cmd + 6
   1B83 EB                 6170 	ex	de,hl
   1B84 71                 6171 	ld	(hl),c
   1B85 23                 6172 	inc	hl
   1B86 70                 6173 	ld	(hl),b
                           6174 ;demo.c:823: vdp_copier(&cmd);
   1B87 C5                 6175 	push	bc
   1B88 21rAEs44           6176 	ld	hl,#_cmd
   1B8B E5                 6177 	push	hl
   1B8C CDr00s00           6178 	call	_vdp_copier
   1B8F F1                 6179 	pop	af
   1B90 C1                 6180 	pop	bc
                           6181 ;demo.c:820: for (y = ender; y < enderend; y+=16) {
   1B91 21 10 00           6182 	ld	hl,#0x0010
   1B94 09                 6183 	add	hl,bc
   1B95 4D                 6184 	ld	c,l
   1B96 44                 6185 	ld	b,h
   1B97 C3r48s1B           6186 	jp	00116$
   1B9A                    6187 00119$:
                           6188 ;demo.c:825: ff2+=4;
   1B9A 21r4Es45           6189 	ld	hl,#_ff2
   1B9D 7E                 6190 	ld	a,(hl)
   1B9E C6 04              6191 	add	a,#0x04
   1BA0 23                 6192 	inc	hl
   1BA1 2B                 6193 	dec	hl
   1BA2 C5                 6194 	push	bc
   1BA3 4F                 6195 	ld	c, a
   1BA4 23                 6196 	inc	hl
   1BA5 7E                 6197 	ld	a, (hl)
   1BA6 47                 6198 	ld	b, a
   1BA7 79                 6199 	ld	a, c
   1BA8 2B                 6200 	dec	hl
   1BA9 77                 6201 	ld	(hl), a
   1BAA 78                 6202 	ld	a, b
   1BAB C1                 6203 	pop	bc
   1BAC CE 00              6204 	adc	a,#0x00
   1BAE 23                 6205 	inc	hl
   1BAF 77                 6206 	ld	(hl),a
   1BB0                    6207 00111$:
                           6208 ;demo.c:828: bulbflipper = -bulbflipper;
   1BB0 AF                 6209 	xor	a,a
   1BB1 FD 21r4As45        6210 	ld	iy,#_bulbflipper
   1BB5 3E 00              6211 	ld	a,#0x00
   1BB7 FD 9E 00           6212 	sbc	a,0 (iy)
   1BBA 21r4As45           6213 	ld	hl,#_bulbflipper + 0
   1BBD 77                 6214 	ld	(hl), a
   1BBE FD 21r4As45        6215 	ld	iy,#_bulbflipper
   1BC2 3E 00              6216 	ld	a,#0x00
   1BC4 FD 9E 01           6217 	sbc	a,1 (iy)
   1BC7 21r4Bs45           6218 	ld	hl,#_bulbflipper + 1
   1BCA 77                 6219 	ld	(hl), a
   1BCB DD F9              6220 	ld	sp,ix
   1BCD DD E1              6221 	pop	ix
   1BCF C9                 6222 	ret
   1BD0                    6223 _bulbs_end::
                           6224 ;demo.c:842: void animplay() {
                           6225 ;	---------------------------------
                           6226 ; Function animplay
                           6227 ; ---------------------------------
   1BD0                    6228 _animplay_start::
   1BD0                    6229 _animplay:
   1BD0 DD E5              6230 	push	ix
   1BD2 DD 21 00 00        6231 	ld	ix,#0
   1BD6 DD 39              6232 	add	ix,sp
   1BD8 F5                 6233 	push	af
   1BD9 3B                 6234 	dec	sp
                           6235 ;demo.c:847: if (anim_init == 0) {
   1BDA 3Ar5Es45           6236 	ld	a,(#_anim_init+0)
   1BDD 21r5Fs45           6237 	ld	hl,#_anim_init + 1
   1BE0 B6                 6238 	or	a,(hl)
   1BE1 C2r7Cs1D           6239 	jp	NZ,00120$
                           6240 ;demo.c:848: drawsine("L O A D I N G",8,180);
   1BE4 21 08 B4           6241 	ld	hl,#0xB408
   1BE7 E5                 6242 	push	hl
   1BE8 21r64s1E           6243 	ld	hl,#__str_10
   1BEB E5                 6244 	push	hl
   1BEC CDrB8s16           6245 	call	_drawsine
   1BEF F1                 6246 	pop	af
   1BF0 F1                 6247 	pop	af
                           6248 ;demo.c:851: uninstall_isr();
   1BF1 CDr00s00           6249 	call	_uninstall_isr
                           6250 ;demo.c:852: PLY_Stop();
   1BF4 CDr00s00           6251 	call	_PLY_Stop
                           6252 ;demo.c:853: PLY_SendRegisters();
   1BF7 CDr00s00           6253 	call	_PLY_SendRegisters
                           6254 ;demo.c:855: pause();
   1BFA CDr82s0A           6255 	call	_pause
                           6256 ;demo.c:856: pause();
   1BFD CDr82s0A           6257 	call	_pause
                           6258 ;demo.c:858: scratch_clear();
   1C00 CDr90s09           6259 	call	_scratch_clear
                           6260 ;demo.c:859: vdp_load_palette(scratch);
   1C03 21r4As43           6261 	ld	hl,#_scratch
   1C06 E5                 6262 	push	hl
   1C07 CDr00s00           6263 	call	_vdp_load_palette
   1C0A F1                 6264 	pop	af
                           6265 ;demo.c:861: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1C0B 21 00 00           6266 	ld	hl,#0x0000
   1C0E E5                 6267 	push	hl
   1C0F 2E 01              6268 	ld	l, #0x01
   1C11 E5                 6269 	push	hl
   1C12 2E 00              6270 	ld	l, #0x00
   1C14 E5                 6271 	push	hl
   1C15 21 09 37           6272 	ld	hl,#0x3709
   1C18 E5                 6273 	push	hl
   1C19 21r72s1E           6274 	ld	hl,#__str_11
   1C1C E5                 6275 	push	hl
   1C1D CDr99s0B           6276 	call	_pck_load
   1C20 FD 21 0A 00        6277 	ld	iy,#0x000A
   1C24 FD 39              6278 	add	iy,sp
   1C26 FD F9              6279 	ld	sp,iy
                           6280 ;demo.c:865: cmd.size_x = 256;
   1C28 21rB6s44           6281 	ld	hl, #_cmd + 8
   1C2B 36 00              6282 	ld	(hl),#0x00
   1C2D 23                 6283 	inc	hl
   1C2E 36 01              6284 	ld	(hl),#0x01
                           6285 ;demo.c:866: cmd.size_y = 212;
   1C30 21rB8s44           6286 	ld	hl, #_cmd + 10
   1C33 36 D4              6287 	ld	(hl),#0xD4
   1C35 23                 6288 	inc	hl
   1C36 36 00              6289 	ld	(hl),#0x00
                           6290 ;demo.c:867: cmd.data = 0;
                           6291 ;demo.c:868: cmd.argument = 0x00;
   1C38 3E 00              6292 	ld	a,#0x00
   1C3A 32rBAs44           6293 	ld	(#_cmd + 12),a
   1C3D 32rBBs44           6294 	ld	(#_cmd + 13),a
                           6295 ;demo.c:869: cmd.command = 0xd0; 
   1C40 01rBCs44           6296 	ld	bc,#_cmd + 14
   1C43 3E D0              6297 	ld	a,#0xD0
   1C45 02                 6298 	ld	(bc),a
                           6299 ;demo.c:870: cmd.source_x = 0;
   1C46 21rAEs44           6300 	ld	hl,#_cmd
   1C49 36 00              6301 	ld	(hl),#0x00
   1C4B 23                 6302 	inc	hl
   1C4C 36 00              6303 	ld	(hl),#0x00
                           6304 ;demo.c:871: cmd.source_y = 0;
   1C4E 21rB0s44           6305 	ld	hl, #_cmd + 2
   1C51 36 00              6306 	ld	(hl),#0x00
   1C53 23                 6307 	inc	hl
   1C54 36 00              6308 	ld	(hl),#0x00
                           6309 ;demo.c:872: cmd.dest_x = 0;
   1C56 21rB2s44           6310 	ld	hl, #_cmd + 4
   1C59 36 00              6311 	ld	(hl),#0x00
   1C5B 23                 6312 	inc	hl
   1C5C 36 00              6313 	ld	(hl),#0x00
                           6314 ;demo.c:873: cmd.dest_y = 256;
   1C5E 21rB4s44           6315 	ld	hl, #_cmd + 6
   1C61 36 00              6316 	ld	(hl),#0x00
   1C63 23                 6317 	inc	hl
   1C64 36 01              6318 	ld	(hl),#0x01
                           6319 ;demo.c:874: vdp_copier(&cmd);
   1C66 21rAEs44           6320 	ld	hl,#_cmd
   1C69 E5                 6321 	push	hl
   1C6A CDr00s00           6322 	call	_vdp_copier
   1C6D F1                 6323 	pop	af
                           6324 ;demo.c:876: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1C6E 21 00 00           6325 	ld	hl,#0x0000
   1C71 E5                 6326 	push	hl
   1C72 2E 01              6327 	ld	l, #0x01
   1C74 E5                 6328 	push	hl
   1C75 2E 00              6329 	ld	l, #0x00
   1C77 E5                 6330 	push	hl
   1C78 21 76 3E           6331 	ld	hl,#0x3E76
   1C7B E5                 6332 	push	hl
   1C7C 21r7Es1E           6333 	ld	hl,#__str_12
   1C7F E5                 6334 	push	hl
   1C80 CDr99s0B           6335 	call	_pck_load
   1C83 FD 21 0A 00        6336 	ld	iy,#0x000A
   1C87 FD 39              6337 	add	iy,sp
   1C89 FD F9              6338 	ld	sp,iy
                           6339 ;demo.c:878: cmd.size_x = 256;
   1C8B 21rB6s44           6340 	ld	hl, #_cmd + 8
   1C8E 36 00              6341 	ld	(hl),#0x00
   1C90 23                 6342 	inc	hl
   1C91 36 01              6343 	ld	(hl),#0x01
                           6344 ;demo.c:879: cmd.size_y = 212;
   1C93 21rB8s44           6345 	ld	hl, #_cmd + 10
   1C96 36 D4              6346 	ld	(hl),#0xD4
   1C98 23                 6347 	inc	hl
   1C99 36 00              6348 	ld	(hl),#0x00
                           6349 ;demo.c:880: cmd.data = 0;
                           6350 ;demo.c:881: cmd.argument = 0x00;
   1C9B 3E 00              6351 	ld	a,#0x00
   1C9D 32rBAs44           6352 	ld	(#_cmd + 12),a
   1CA0 32rBBs44           6353 	ld	(#_cmd + 13),a
                           6354 ;demo.c:882: cmd.command = 0xd0; 
   1CA3 01rBCs44           6355 	ld	bc,#_cmd + 14
   1CA6 3E D0              6356 	ld	a,#0xD0
   1CA8 02                 6357 	ld	(bc),a
                           6358 ;demo.c:883: cmd.source_x = 0;
   1CA9 21rAEs44           6359 	ld	hl,#_cmd
   1CAC 36 00              6360 	ld	(hl),#0x00
   1CAE 23                 6361 	inc	hl
   1CAF 36 00              6362 	ld	(hl),#0x00
                           6363 ;demo.c:884: cmd.source_y = 0;
   1CB1 21rB0s44           6364 	ld	hl, #_cmd + 2
   1CB4 36 00              6365 	ld	(hl),#0x00
   1CB6 23                 6366 	inc	hl
   1CB7 36 00              6367 	ld	(hl),#0x00
                           6368 ;demo.c:885: cmd.dest_x = 0;
   1CB9 21rB2s44           6369 	ld	hl, #_cmd + 4
   1CBC 36 00              6370 	ld	(hl),#0x00
   1CBE 23                 6371 	inc	hl
   1CBF 36 00              6372 	ld	(hl),#0x00
                           6373 ;demo.c:886: cmd.dest_y = 512;
   1CC1 21rB4s44           6374 	ld	hl, #_cmd + 6
   1CC4 36 00              6375 	ld	(hl),#0x00
   1CC6 23                 6376 	inc	hl
   1CC7 36 02              6377 	ld	(hl),#0x02
                           6378 ;demo.c:887: vdp_copier(&cmd);
   1CC9 21rAEs44           6379 	ld	hl,#_cmd
   1CCC E5                 6380 	push	hl
   1CCD CDr00s00           6381 	call	_vdp_copier
   1CD0 F1                 6382 	pop	af
                           6383 ;demo.c:890: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   1CD1 21 00 00           6384 	ld	hl,#0x0000
   1CD4 E5                 6385 	push	hl
   1CD5 2E 01              6386 	ld	l, #0x01
   1CD7 E5                 6387 	push	hl
   1CD8 2E 00              6388 	ld	l, #0x00
   1CDA E5                 6389 	push	hl
   1CDB 21 9E 3A           6390 	ld	hl,#0x3A9E
   1CDE E5                 6391 	push	hl
   1CDF 21r8As1E           6392 	ld	hl,#__str_13
   1CE2 E5                 6393 	push	hl
   1CE3 CDr99s0B           6394 	call	_pck_load
   1CE6 FD 21 0A 00        6395 	ld	iy,#0x000A
   1CEA FD 39              6396 	add	iy,sp
   1CEC FD F9              6397 	ld	sp,iy
                           6398 ;demo.c:892: cmd.size_x = 256;
   1CEE 21rB6s44           6399 	ld	hl, #_cmd + 8
   1CF1 36 00              6400 	ld	(hl),#0x00
   1CF3 23                 6401 	inc	hl
   1CF4 36 01              6402 	ld	(hl),#0x01
                           6403 ;demo.c:893: cmd.size_y = 212;
   1CF6 21rB8s44           6404 	ld	hl, #_cmd + 10
   1CF9 36 D4              6405 	ld	(hl),#0xD4
   1CFB 23                 6406 	inc	hl
   1CFC 36 00              6407 	ld	(hl),#0x00
                           6408 ;demo.c:894: cmd.data = 0;
                           6409 ;demo.c:895: cmd.argument = 0x00;
   1CFE 3E 00              6410 	ld	a,#0x00
   1D00 32rBAs44           6411 	ld	(#_cmd + 12),a
   1D03 32rBBs44           6412 	ld	(#_cmd + 13),a
                           6413 ;demo.c:896: cmd.command = 0xd0; 
   1D06 01rBCs44           6414 	ld	bc,#_cmd + 14
   1D09 3E D0              6415 	ld	a,#0xD0
   1D0B 02                 6416 	ld	(bc),a
                           6417 ;demo.c:897: cmd.source_x = 0;
   1D0C 21rAEs44           6418 	ld	hl,#_cmd
   1D0F 36 00              6419 	ld	(hl),#0x00
   1D11 23                 6420 	inc	hl
   1D12 36 00              6421 	ld	(hl),#0x00
                           6422 ;demo.c:898: cmd.source_y = 0;
   1D14 21rB0s44           6423 	ld	hl, #_cmd + 2
   1D17 36 00              6424 	ld	(hl),#0x00
   1D19 23                 6425 	inc	hl
   1D1A 36 00              6426 	ld	(hl),#0x00
                           6427 ;demo.c:899: cmd.dest_x = 0;
   1D1C 21rB2s44           6428 	ld	hl, #_cmd + 4
   1D1F 36 00              6429 	ld	(hl),#0x00
   1D21 23                 6430 	inc	hl
   1D22 36 00              6431 	ld	(hl),#0x00
                           6432 ;demo.c:900: cmd.dest_y = 768;
   1D24 21rB4s44           6433 	ld	hl, #_cmd + 6
   1D27 36 00              6434 	ld	(hl),#0x00
   1D29 23                 6435 	inc	hl
   1D2A 36 03              6436 	ld	(hl),#0x03
                           6437 ;demo.c:901: vdp_copier(&cmd);
   1D2C 21rAEs44           6438 	ld	hl,#_cmd
   1D2F E5                 6439 	push	hl
   1D30 CDr00s00           6440 	call	_vdp_copier
   1D33 F1                 6441 	pop	af
                           6442 ;demo.c:903: vdp_register(9,130); // 50hz,212
   1D34 21 09 82           6443 	ld	hl,#0x8209
   1D37 E5                 6444 	push	hl
   1D38 CDr00s00           6445 	call	_vdp_register
   1D3B F1                 6446 	pop	af
                           6447 ;demo.c:905: scratch_clear();
   1D3C CDr90s09           6448 	call	_scratch_clear
                           6449 ;demo.c:907: vdp_set_write_address(0, 0);
   1D3F 21 00 00           6450 	ld	hl,#0x0000
   1D42 E5                 6451 	push	hl
   1D43 3E 00              6452 	ld	a,#0x00
   1D45 F5                 6453 	push	af
   1D46 33                 6454 	inc	sp
   1D47 CDr00s00           6455 	call	_vdp_set_write_address
   1D4A F1                 6456 	pop	af
   1D4B 33                 6457 	inc	sp
                           6458 ;demo.c:909: for (y = 0; y < 212; y++) { 
   1D4C 0E D4              6459 	ld	c,#0xD4
   1D4E                    6460 00109$:
                           6461 ;demo.c:910: vdp_load_screen(scratch, 128);
   1D4E C5                 6462 	push	bc
   1D4F 3E 80              6463 	ld	a,#0x80
   1D51 F5                 6464 	push	af
   1D52 33                 6465 	inc	sp
   1D53 21r4As43           6466 	ld	hl,#_scratch
   1D56 E5                 6467 	push	hl
   1D57 CDr00s00           6468 	call	_vdp_load_screen
   1D5A F1                 6469 	pop	af
   1D5B 33                 6470 	inc	sp
   1D5C C1                 6471 	pop	bc
   1D5D 0D                 6472 	dec	c
                           6473 ;demo.c:909: for (y = 0; y < 212; y++) { 
   1D5E AF                 6474 	xor	a,a
   1D5F B1                 6475 	or	a,c
   1D60 20 EC              6476 	jr	NZ,00109$
                           6477 ;demo.c:913: install_isr(my_isr);
   1D62 21rECs07           6478 	ld	hl,#_my_isr
   1D65 E5                 6479 	push	hl
   1D66 CDr00s00           6480 	call	_install_isr
   1D69 F1                 6481 	pop	af
                           6482 ;demo.c:914: anim_init = 1;
   1D6A 21r5Es45           6483 	ld	hl,#_anim_init + 0
   1D6D 36 01              6484 	ld	(hl), #0x01
   1D6F 21r5Fs45           6485 	ld	hl,#_anim_init + 1
   1D72 36 00              6486 	ld	(hl), #0x00
                           6487 ;demo.c:915: vdp_load_palette(tf_palette);
   1D74 21r4As44           6488 	ld	hl,#_tf_palette
   1D77 E5                 6489 	push	hl
   1D78 CDr00s00           6490 	call	_vdp_load_palette
   1D7B F1                 6491 	pop	af
                           6492 ;demo.c:918: for (y = 0; y < 106; y+=1) {
   1D7C                    6493 00120$:
   1D7C DD 36 FF 00        6494 	ld	-1 (ix),#0x00
   1D80                    6495 00110$:
   1D80 DD 7E FF           6496 	ld	a,-1 (ix)
   1D83 D6 6A              6497 	sub	a,#0x6A
   1D85 D2r05s1E           6498 	jp	NC,00113$
                           6499 ;demo.c:919: cmd.source_x = 0;
   1D88 21rAEs44           6500 	ld	hl,#_cmd
   1D8B 36 00              6501 	ld	(hl),#0x00
   1D8D 23                 6502 	inc	hl
   1D8E 36 00              6503 	ld	(hl),#0x00
                           6504 ;demo.c:920: cmd.source_y = 256+po+frames+(y>>1);
   1D90 11rB0s44           6505 	ld	de,#_cmd + 2
   1D93 3Ar5As45           6506 	ld	a,(#_po+0)
   1D96 4F                 6507 	ld	c,a
   1D97 3Ar5Bs45           6508 	ld	a,(#_po+1)
   1D9A C6 01              6509 	add	a,#0x01
   1D9C 47                 6510 	ld	b,a
   1D9D 21r5Cs45           6511 	ld	hl,#_frames
   1DA0 79                 6512 	ld	a,c
   1DA1 86                 6513 	add	a,(hl)
   1DA2 DD 77 FD           6514 	ld	-3 (ix),a
   1DA5 78                 6515 	ld	a,b
   1DA6 23                 6516 	inc	hl
   1DA7 8E                 6517 	adc	a,(hl)
   1DA8 DD 77 FE           6518 	ld	-2 (ix),a
   1DAB DD 4E FF           6519 	ld	c,-1 (ix)
   1DAE CB 39              6520 	srl	c
   1DB0 06 00              6521 	ld	b,#0x00
   1DB2 DD 7E FD           6522 	ld	a,-3 (ix)
   1DB5 81                 6523 	add	a,c
   1DB6 4F                 6524 	ld	c,a
   1DB7 DD 7E FE           6525 	ld	a,-2 (ix)
   1DBA 88                 6526 	adc	a,b
   1DBB 47                 6527 	ld	b,a
   1DBC 6B                 6528 	ld	l,e
   1DBD 62                 6529 	ld	h,d
   1DBE 71                 6530 	ld	(hl),c
   1DBF 23                 6531 	inc	hl
   1DC0 70                 6532 	ld	(hl),b
                           6533 ;demo.c:921: cmd.dest_x = 0;
   1DC1 21rB2s44           6534 	ld	hl, #_cmd + 4
   1DC4 36 00              6535 	ld	(hl),#0x00
   1DC6 23                 6536 	inc	hl
   1DC7 36 00              6537 	ld	(hl),#0x00
                           6538 ;demo.c:922: cmd.dest_y = (y<<1);
   1DC9 01rB4s44           6539 	ld	bc,#_cmd + 6
   1DCC DD 5E FF           6540 	ld	e,-1 (ix)
   1DCF 16 00              6541 	ld	d,#0x00
   1DD1 CB 23              6542 	sla	e
   1DD3 CB 12              6543 	rl	d
   1DD5 69                 6544 	ld	l,c
   1DD6 60                 6545 	ld	h,b
   1DD7 73                 6546 	ld	(hl),e
   1DD8 23                 6547 	inc	hl
   1DD9 72                 6548 	ld	(hl),d
                           6549 ;demo.c:923: cmd.size_x = 256;
   1DDA 21rB6s44           6550 	ld	hl, #_cmd + 8
   1DDD 36 00              6551 	ld	(hl),#0x00
   1DDF 23                 6552 	inc	hl
   1DE0 36 01              6553 	ld	(hl),#0x01
                           6554 ;demo.c:924: cmd.size_y = 1;
   1DE2 21rB8s44           6555 	ld	hl, #_cmd + 10
   1DE5 36 01              6556 	ld	(hl),#0x01
   1DE7 23                 6557 	inc	hl
   1DE8 36 00              6558 	ld	(hl),#0x00
                           6559 ;demo.c:925: cmd.data = 0;
                           6560 ;demo.c:926: cmd.argument = 0x00;
   1DEA 3E 00              6561 	ld	a,#0x00
   1DEC 32rBAs44           6562 	ld	(#_cmd + 12),a
   1DEF 32rBBs44           6563 	ld	(#_cmd + 13),a
                           6564 ;demo.c:927: cmd.command = 0xD0;
   1DF2 3E D0              6565 	ld	a,#0xD0
   1DF4 32rBCs44           6566 	ld	(#_cmd + 14),a
                           6567 ;demo.c:928: vdp_copier(&cmd);
   1DF7 21rAEs44           6568 	ld	hl,#_cmd
   1DFA E5                 6569 	push	hl
   1DFB CDr00s00           6570 	call	_vdp_copier
   1DFE F1                 6571 	pop	af
                           6572 ;demo.c:918: for (y = 0; y < 106; y+=1) {
   1DFF DD 34 FF           6573 	inc	-1 (ix)
   1E02 C3r80s1D           6574 	jp	00110$
   1E05                    6575 00113$:
                           6576 ;demo.c:931: frames+=53;
   1E05 21r5Cs45           6577 	ld	hl,#_frames
   1E08 7E                 6578 	ld	a,(hl)
   1E09 C6 35              6579 	add	a,#0x35
   1E0B 23                 6580 	inc	hl
   1E0C 2B                 6581 	dec	hl
   1E0D C5                 6582 	push	bc
   1E0E 4F                 6583 	ld	c, a
   1E0F 23                 6584 	inc	hl
   1E10 7E                 6585 	ld	a, (hl)
   1E11 47                 6586 	ld	b, a
   1E12 79                 6587 	ld	a, c
   1E13 2B                 6588 	dec	hl
   1E14 77                 6589 	ld	(hl), a
   1E15 78                 6590 	ld	a, b
   1E16 C1                 6591 	pop	bc
   1E17 CE 00              6592 	adc	a,#0x00
   1E19 23                 6593 	inc	hl
   1E1A 77                 6594 	ld	(hl),a
                           6595 ;demo.c:932: if (frames >= 212) { frames = 0; po+=256; }
   1E1B 3Ar5Cs45           6596 	ld	a,(#_frames+0)
   1E1E D6 D4              6597 	sub	a,#0xD4
   1E20 3Ar5Ds45           6598 	ld	a,(#_frames+1)
   1E23 DE 00              6599 	sbc	a,#0x00
   1E25 FAr48s1E           6600 	jp	M,00104$
   1E28 21r5Cs45           6601 	ld	hl,#_frames + 0
   1E2B 36 00              6602 	ld	(hl), #0x00
   1E2D 21r5Ds45           6603 	ld	hl,#_frames + 1
   1E30 36 00              6604 	ld	(hl), #0x00
   1E32 21r5As45           6605 	ld	hl,#_po
   1E35 7E                 6606 	ld	a,(hl)
   1E36 C6 00              6607 	add	a,#0x00
   1E38 23                 6608 	inc	hl
   1E39 2B                 6609 	dec	hl
   1E3A C5                 6610 	push	bc
   1E3B 4F                 6611 	ld	c, a
   1E3C 23                 6612 	inc	hl
   1E3D 7E                 6613 	ld	a, (hl)
   1E3E 47                 6614 	ld	b, a
   1E3F 79                 6615 	ld	a, c
   1E40 2B                 6616 	dec	hl
   1E41 77                 6617 	ld	(hl), a
   1E42 78                 6618 	ld	a, b
   1E43 C1                 6619 	pop	bc
   1E44 CE 01              6620 	adc	a,#0x01
   1E46 23                 6621 	inc	hl
   1E47 77                 6622 	ld	(hl),a
   1E48                    6623 00104$:
                           6624 ;demo.c:933: if (po >= 768) {
   1E48 3Ar5As45           6625 	ld	a,(#_po+0)
   1E4B D6 00              6626 	sub	a,#0x00
   1E4D 3Ar5Bs45           6627 	ld	a,(#_po+1)
   1E50 DE 03              6628 	sbc	a,#0x03
   1E52 FAr5Fs1E           6629 	jp	M,00114$
                           6630 ;demo.c:934: po = 0;
   1E55 21r5As45           6631 	ld	hl,#_po + 0
   1E58 36 00              6632 	ld	(hl), #0x00
   1E5A 21r5Bs45           6633 	ld	hl,#_po + 1
   1E5D 36 00              6634 	ld	(hl), #0x00
   1E5F                    6635 00114$:
   1E5F DD F9              6636 	ld	sp,ix
   1E61 DD E1              6637 	pop	ix
   1E63 C9                 6638 	ret
   1E64                    6639 _animplay_end::
   1E64                    6640 __str_10:
   1E64 4C 20 4F 20 41 20  6641 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1E71 00                 6642 	.db 0x00
   1E72                    6643 __str_11:
   1E72 4C 46 31 20 20 20  6644 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1E7D 00                 6645 	.db 0x00
   1E7E                    6646 __str_12:
   1E7E 4C 46 32 20 20 20  6647 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1E89 00                 6648 	.db 0x00
   1E8A                    6649 __str_13:
   1E8A 4C 46 33 20 20 20  6650 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1E95 00                 6651 	.db 0x00
                           6652 ;demo.c:950: void drawbox(uint8_t x, uint8_t y) {
                           6653 ;	---------------------------------
                           6654 ; Function drawbox
                           6655 ; ---------------------------------
   1E96                    6656 _drawbox_start::
   1E96                    6657 _drawbox:
   1E96 DD E5              6658 	push	ix
   1E98 DD 21 00 00        6659 	ld	ix,#0
   1E9C DD 39              6660 	add	ix,sp
                           6661 ;demo.c:951: cmd.source_x = boxes_x[boxi];
   1E9E 21r76s45           6662 	ld	hl,#_boxi
   1EA1 3Er67              6663 	ld	a,#<_boxes_x
   1EA3 86                 6664 	add	a,(hl)
   1EA4 4F                 6665 	ld	c,a
   1EA5 3Es45              6666 	ld	a,#>_boxes_x
   1EA7 CE 00              6667 	adc	a,#0x00
   1EA9 47                 6668 	ld	b,a
   1EAA 0A                 6669 	ld	a,(bc)
   1EAB 4F                 6670 	ld	c,a
   1EAC 06 00              6671 	ld	b,#0x00
   1EAE 21rAEs44           6672 	ld	hl,#_cmd
   1EB1 71                 6673 	ld	(hl),c
   1EB2 23                 6674 	inc	hl
   1EB3 70                 6675 	ld	(hl),b
                           6676 ;demo.c:952: cmd.source_y = boxes_y[boxi];
   1EB4 01rB0s44           6677 	ld	bc,#_cmd + 2
   1EB7 3Ar76s45           6678 	ld	a,(#_boxi+0)
   1EBA 87                 6679 	add	a,a
   1EBB C6r6C              6680 	add	a,#<_boxes_y
   1EBD 6F                 6681 	ld	l,a
   1EBE 3Es45              6682 	ld	a,#>_boxes_y
   1EC0 CE 00              6683 	adc	a,#0x00
   1EC2 67                 6684 	ld	h,a
   1EC3 5E                 6685 	ld	e,(hl)
   1EC4 23                 6686 	inc	hl
   1EC5 56                 6687 	ld	d,(hl)
   1EC6 69                 6688 	ld	l,c
   1EC7 60                 6689 	ld	h,b
   1EC8 73                 6690 	ld	(hl),e
   1EC9 23                 6691 	inc	hl
   1ECA 72                 6692 	ld	(hl),d
                           6693 ;demo.c:953: cmd.dest_x = x;
   1ECB 01rB2s44           6694 	ld	bc,#_cmd + 4
   1ECE DD 5E 04           6695 	ld	e,4 (ix)
   1ED1 16 00              6696 	ld	d,#0x00
   1ED3 69                 6697 	ld	l,c
   1ED4 60                 6698 	ld	h,b
   1ED5 73                 6699 	ld	(hl),e
   1ED6 23                 6700 	inc	hl
   1ED7 72                 6701 	ld	(hl),d
                           6702 ;demo.c:954: cmd.dest_y = y;
   1ED8 01rB4s44           6703 	ld	bc,#_cmd + 6
   1EDB DD 5E 05           6704 	ld	e,5 (ix)
   1EDE 16 00              6705 	ld	d,#0x00
   1EE0 69                 6706 	ld	l,c
   1EE1 60                 6707 	ld	h,b
   1EE2 73                 6708 	ld	(hl),e
   1EE3 23                 6709 	inc	hl
   1EE4 72                 6710 	ld	(hl),d
                           6711 ;demo.c:955: cmd.size_x = 36;
   1EE5 21rB6s44           6712 	ld	hl, #_cmd + 8
   1EE8 36 24              6713 	ld	(hl),#0x24
   1EEA 23                 6714 	inc	hl
   1EEB 36 00              6715 	ld	(hl),#0x00
                           6716 ;demo.c:956: cmd.size_y = 36;
   1EED 21rB8s44           6717 	ld	hl, #_cmd + 10
   1EF0 36 24              6718 	ld	(hl),#0x24
   1EF2 23                 6719 	inc	hl
   1EF3 36 00              6720 	ld	(hl),#0x00
                           6721 ;demo.c:957: cmd.data = 0;
                           6722 ;demo.c:958: cmd.argument = 0x00;
   1EF5 3E 00              6723 	ld	a,#0x00
   1EF7 32rBAs44           6724 	ld	(#_cmd + 12),a
   1EFA 32rBBs44           6725 	ld	(#_cmd + 13),a
                           6726 ;demo.c:959: cmd.command = 0x98; // TIMP sprite
   1EFD 3E 98              6727 	ld	a,#0x98
   1EFF 32rBCs44           6728 	ld	(#_cmd + 14),a
                           6729 ;demo.c:960: vdp_copier(&cmd);
   1F02 21rAEs44           6730 	ld	hl,#_cmd
   1F05 E5                 6731 	push	hl
   1F06 CDr00s00           6732 	call	_vdp_copier
   1F09 F1                 6733 	pop	af
                           6734 ;demo.c:962: prevx = x;
   1F0A DD 7E 04           6735 	ld	a,4 (ix)
   1F0D 21r63s45           6736 	ld	hl,#_prevx + 0
   1F10 77                 6737 	ld	(hl), a
   1F11 21r64s45           6738 	ld	hl,#_prevx + 1
   1F14 36 00              6739 	ld	(hl), #0x00
                           6740 ;demo.c:963: prevy = y;
   1F16 DD 7E 05           6741 	ld	a,5 (ix)
   1F19 21r65s45           6742 	ld	hl,#_prevy + 0
   1F1C 77                 6743 	ld	(hl), a
   1F1D 21r66s45           6744 	ld	hl,#_prevy + 1
   1F20 36 00              6745 	ld	(hl), #0x00
   1F22 DD E1              6746 	pop	ix
   1F24 C9                 6747 	ret
   1F25                    6748 _drawbox_end::
                           6749 ;demo.c:977: void boxes() {
                           6750 ;	---------------------------------
                           6751 ; Function boxes
                           6752 ; ---------------------------------
   1F25                    6753 _boxes_start::
   1F25                    6754 _boxes:
   1F25 DD E5              6755 	push	ix
   1F27 DD 21 00 00        6756 	ld	ix,#0
   1F2B DD 39              6757 	add	ix,sp
   1F2D F5                 6758 	push	af
                           6759 ;demo.c:981: if (bx < 0) return;
   1F2E FD 21r77s45        6760 	ld	iy,#_bx
   1F32 FD CB 01 7E        6761 	bit	7,1 (iy)
   1F36 C2rA5s23           6762 	jp	NZ,00149$
                           6763 ;demo.c:983: if (bonc == 1) {
   1F39 3Ar7Fs45           6764 	ld	a,(#_bonc+0)
   1F3C D6 01              6765 	sub	a,#0x01
   1F3E 20 06              6766 	jr	NZ,00178$
   1F40 3Ar80s45           6767 	ld	a,(#_bonc+1)
   1F43 B7                 6768 	or	a,a
   1F44 28 02              6769 	jr	Z,00179$
   1F46                    6770 00178$:
   1F46 18 4D              6771 	jr	00104$
   1F48                    6772 00179$:
                           6773 ;demo.c:985: cmd.source_x = 0;
   1F48 21rAEs44           6774 	ld	hl,#_cmd
   1F4B 36 00              6775 	ld	(hl),#0x00
   1F4D 23                 6776 	inc	hl
   1F4E 36 00              6777 	ld	(hl),#0x00
                           6778 ;demo.c:986: cmd.source_y = 256;
   1F50 21rB0s44           6779 	ld	hl, #_cmd + 2
   1F53 36 00              6780 	ld	(hl),#0x00
   1F55 23                 6781 	inc	hl
   1F56 36 01              6782 	ld	(hl),#0x01
                           6783 ;demo.c:987: cmd.dest_x = pbx;
   1F58 01rB2s44           6784 	ld	bc,#_cmd + 4
   1F5B ED 5Br81s45        6785 	ld	de,(_pbx)
   1F5F 69                 6786 	ld	l,c
   1F60 60                 6787 	ld	h,b
   1F61 73                 6788 	ld	(hl),e
   1F62 23                 6789 	inc	hl
   1F63 72                 6790 	ld	(hl),d
                           6791 ;demo.c:988: cmd.dest_y = pbt;
   1F64 01rB4s44           6792 	ld	bc,#_cmd + 6
   1F67 ED 5Br83s45        6793 	ld	de,(_pbt)
   1F6B 69                 6794 	ld	l,c
   1F6C 60                 6795 	ld	h,b
   1F6D 73                 6796 	ld	(hl),e
   1F6E 23                 6797 	inc	hl
   1F6F 72                 6798 	ld	(hl),d
                           6799 ;demo.c:989: cmd.size_x = 36;
   1F70 21rB6s44           6800 	ld	hl, #_cmd + 8
   1F73 36 24              6801 	ld	(hl),#0x24
   1F75 23                 6802 	inc	hl
   1F76 36 00              6803 	ld	(hl),#0x00
                           6804 ;demo.c:990: cmd.size_y = 36;
   1F78 21rB8s44           6805 	ld	hl, #_cmd + 10
   1F7B 36 24              6806 	ld	(hl),#0x24
   1F7D 23                 6807 	inc	hl
   1F7E 36 00              6808 	ld	(hl),#0x00
                           6809 ;demo.c:991: cmd.data = 0;
                           6810 ;demo.c:992: cmd.argument = 0x00;
   1F80 3E 00              6811 	ld	a,#0x00
   1F82 32rBAs44           6812 	ld	(#_cmd + 12),a
   1F85 32rBBs44           6813 	ld	(#_cmd + 13),a
                           6814 ;demo.c:993: cmd.command = 0xD0; // HMMM
   1F88 3E D0              6815 	ld	a,#0xD0
   1F8A 32rBCs44           6816 	ld	(#_cmd + 14),a
                           6817 ;demo.c:994: vdp_copier(&cmd);
   1F8D 21rAEs44           6818 	ld	hl,#_cmd
   1F90 E5                 6819 	push	hl
   1F91 CDr00s00           6820 	call	_vdp_copier
   1F94 F1                 6821 	pop	af
   1F95                    6822 00104$:
                           6823 ;demo.c:997: if (boxes_init == 0) {
   1F95 AF                 6824 	xor	a,a
   1F96 21r60s45           6825 	ld	hl,#_boxes_init + 0
   1F99 B6                 6826 	or	a,(hl)
   1F9A C2rF5s20           6827 	jp	NZ,00106$
                           6828 ;demo.c:998: boxes_init = 1;
   1F9D FD 21r60s45        6829 	ld	iy,#_boxes_init
   1FA1 FD 36 00 01        6830 	ld	0 (iy),#0x01
                           6831 ;demo.c:1000: cmd.size_x = 8;
   1FA5 21rB6s44           6832 	ld	hl, #_cmd + 8
   1FA8 36 08              6833 	ld	(hl),#0x08
   1FAA 23                 6834 	inc	hl
   1FAB 36 00              6835 	ld	(hl),#0x00
                           6836 ;demo.c:1001: cmd.size_y = 212;
   1FAD 21rB8s44           6837 	ld	hl, #_cmd + 10
   1FB0 36 D4              6838 	ld	(hl),#0xD4
   1FB2 23                 6839 	inc	hl
   1FB3 36 00              6840 	ld	(hl),#0x00
                           6841 ;demo.c:1002: cmd.data = 0;
                           6842 ;demo.c:1003: cmd.argument = 0x00; // from 70xY to left
   1FB5 3E 00              6843 	ld	a,#0x00
   1FB7 32rBAs44           6844 	ld	(#_cmd + 12),a
   1FBA 32rBBs44           6845 	ld	(#_cmd + 13),a
                           6846 ;demo.c:1004: cmd.command = 0xd0; // vram to vram, y only
   1FBD 01rBCs44           6847 	ld	bc,#_cmd + 14
   1FC0 3E D0              6848 	ld	a,#0xD0
   1FC2 02                 6849 	ld	(bc),a
                           6850 ;demo.c:1005: cmd.source_x = 248;
   1FC3 21rAEs44           6851 	ld	hl,#_cmd
   1FC6 36 F8              6852 	ld	(hl),#0xF8
   1FC8 23                 6853 	inc	hl
   1FC9 36 00              6854 	ld	(hl),#0x00
                           6855 ;demo.c:1006: cmd.source_y = 0;
   1FCB 21rB0s44           6856 	ld	hl, #_cmd + 2
   1FCE 36 00              6857 	ld	(hl),#0x00
   1FD0 23                 6858 	inc	hl
   1FD1 36 00              6859 	ld	(hl),#0x00
                           6860 ;demo.c:1007: cmd.dest_y = 0;
   1FD3 01rB4s44           6861 	ld	bc,#_cmd + 6
   1FD6 69                 6862 	ld	l,c
   1FD7 60                 6863 	ld	h,b
   1FD8 36 00              6864 	ld	(hl),#0x00
   1FDA 23                 6865 	inc	hl
   1FDB 36 00              6866 	ld	(hl),#0x00
                           6867 ;demo.c:1009: for (x = 248; x >= 0; x-=8) {
   1FDD DD 36 FE F8        6868 	ld	-2 (ix),#0xF8
   1FE1 DD 36 FF 00        6869 	ld	-1 (ix),#0x00
   1FE5                    6870 00137$:
   1FE5 DD CB FF 7E        6871 	bit	7,-1 (ix)
   1FE9 C2r74s20           6872 	jp	NZ,00140$
                           6873 ;demo.c:1010: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1FEC 21r46s45           6874 	ld	hl,#_ff + 0
   1FEF 5E                 6875 	ld	e,(hl)
   1FF0 21r47s45           6876 	ld	hl,#_ff + 1
   1FF3 56                 6877 	ld	d,(hl)
   1FF4 CB 2A              6878 	sra	d
   1FF6 CB 1B              6879 	rr	e
   1FF8 CB 2A              6880 	sra	d
   1FFA CB 1B              6881 	rr	e
   1FFC 21r46s45           6882 	ld	hl,#_ff + 0
   1FFF 56                 6883 	ld	d,(hl)
   2000 21r47s45           6884 	ld	hl,#_ff + 1
   2003 4E                 6885 	ld	c,(hl)
   2004 CB 29              6886 	sra	c
   2006 CB 1A              6887 	rr	d
   2008 CB 29              6888 	sra	c
   200A CB 1A              6889 	rr	d
   200C CB 29              6890 	sra	c
   200E CB 1A              6891 	rr	d
   2010 7B                 6892 	ld	a,e
   2011 F5                 6893 	push	af
   2012 33                 6894 	inc	sp
   2013 D5                 6895 	push	de
   2014 33                 6896 	inc	sp
   2015 53                 6897 	ld	d,e
   2016 1E 04              6898 	ld	e,#0x04
   2018 D5                 6899 	push	de
   2019 CDr00s00           6900 	call	_msx2_palette
   201C F1                 6901 	pop	af
   201D F1                 6902 	pop	af
                           6903 ;demo.c:1011: ff+=2;
   201E 21r46s45           6904 	ld	hl,#_ff
   2021 7E                 6905 	ld	a,(hl)
   2022 C6 02              6906 	add	a,#0x02
   2024 23                 6907 	inc	hl
   2025 2B                 6908 	dec	hl
   2026 C5                 6909 	push	bc
   2027 4F                 6910 	ld	c, a
   2028 23                 6911 	inc	hl
   2029 7E                 6912 	ld	a, (hl)
   202A 47                 6913 	ld	b, a
   202B 79                 6914 	ld	a, c
   202C 2B                 6915 	dec	hl
   202D 77                 6916 	ld	(hl), a
   202E 78                 6917 	ld	a, b
   202F C1                 6918 	pop	bc
   2030 CE 00              6919 	adc	a,#0x00
   2032 23                 6920 	inc	hl
   2033 77                 6921 	ld	(hl),a
                           6922 ;demo.c:1012: waitVB();
   2034 76                 6923 		halt 
                           6924 ;demo.c:1013: cmd.dest_x = x;
   2035 21rB2s44           6925 	ld	hl, #_cmd + 4
   2038 DD 7E FE           6926 	ld	a,-2 (ix)
   203B 77                 6927 	ld	(hl),a
   203C 23                 6928 	inc	hl
   203D DD 7E FF           6929 	ld	a,-1 (ix)
   2040 77                 6930 	ld	(hl),a
                           6931 ;demo.c:1014: cmd.dest_y = 0;
   2041 21rB4s44           6932 	ld	hl, #_cmd + 6
   2044 36 00              6933 	ld	(hl),#0x00
   2046 23                 6934 	inc	hl
   2047 36 00              6935 	ld	(hl),#0x00
                           6936 ;demo.c:1015: vdp_copier(&cmd);
   2049 21rAEs44           6937 	ld	hl,#_cmd
   204C E5                 6938 	push	hl
   204D CDr00s00           6939 	call	_vdp_copier
   2050 F1                 6940 	pop	af
                           6941 ;demo.c:1016: cmd.dest_y = 256;
   2051 21rB4s44           6942 	ld	hl, #_cmd + 6
   2054 36 00              6943 	ld	(hl),#0x00
   2056 23                 6944 	inc	hl
   2057 36 01              6945 	ld	(hl),#0x01
                           6946 ;demo.c:1017: vdp_copier(&cmd);
   2059 21rAEs44           6947 	ld	hl,#_cmd
   205C E5                 6948 	push	hl
   205D CDr00s00           6949 	call	_vdp_copier
   2060 F1                 6950 	pop	af
                           6951 ;demo.c:1009: for (x = 248; x >= 0; x-=8) {
   2061 DD 7E FE           6952 	ld	a,-2 (ix)
   2064 C6 F8              6953 	add	a,#0xF8
   2066 DD 77 FE           6954 	ld	-2 (ix),a
   2069 DD 7E FF           6955 	ld	a,-1 (ix)
   206C CE FF              6956 	adc	a,#0xFF
   206E DD 77 FF           6957 	ld	-1 (ix),a
   2071 C3rE5s1F           6958 	jp	00137$
   2074                    6959 00140$:
                           6960 ;demo.c:1020: vdp_load_palette(boxes_palette);
   2074 21r6As44           6961 	ld	hl,#_boxes_palette
   2077 E5                 6962 	push	hl
   2078 CDr00s00           6963 	call	_vdp_load_palette
   207B F1                 6964 	pop	af
                           6965 ;demo.c:1022: for (x=0;x < 8;x++) {
   207C DD 36 FE 00        6966 	ld	-2 (ix),#0x00
   2080 DD 36 FF 00        6967 	ld	-1 (ix),#0x00
   2084                    6968 00145$:
   2084 DD 7E FE           6969 	ld	a,-2 (ix)
   2087 D6 08              6970 	sub	a,#0x08
   2089 DD 7E FF           6971 	ld	a,-1 (ix)
   208C DE 00              6972 	sbc	a,#0x00
   208E F2rE8s20           6973 	jp	P,00148$
                           6974 ;demo.c:1024: for (y=0;y < 9;y++) {
   2091 11 00 00           6975 	ld	de,#0x0000
   2094                    6976 00141$:
   2094 7B                 6977 	ld	a,e
   2095 D6 09              6978 	sub	a,#0x09
   2097 7A                 6979 	ld	a,d
   2098 DE 00              6980 	sbc	a,#0x00
   209A F2rDDs20           6981 	jp	P,00147$
                           6982 ;demo.c:1025: boxes_x[4] = 0;
   209D 01r6Bs45           6983 	ld	bc,#_boxes_x + 4
   20A0 3E 00              6984 	ld	a,#0x00
   20A2 02                 6985 	ld	(bc),a
                           6986 ;demo.c:1026: boxes_y[4] = 768+2*36;
   20A3 21r74s45           6987 	ld	hl, #_boxes_y + 8
   20A6 36 48              6988 	ld	(hl),#0x48
   20A8 23                 6989 	inc	hl
   20A9 36 03              6990 	ld	(hl),#0x03
                           6991 ;demo.c:1027: boxi = 4;
   20AB 21r76s45           6992 	ld	hl,#_boxi + 0
   20AE 36 04              6993 	ld	(hl), #0x04
                           6994 ;demo.c:1028: drawbox((x*36),y*18);
   20B0 4B                 6995 	ld	c,e
   20B1 D5                 6996 	push	de
   20B2 79                 6997 	ld	a,c
   20B3 5F                 6998 	ld	e,a
   20B4 87                 6999 	add	a,a
   20B5 87                 7000 	add	a,a
   20B6 87                 7001 	add	a,a
   20B7 83                 7002 	add	a,e
   20B8 87                 7003 	add	a,a
   20B9 D1                 7004 	pop	de
   20BA 4F                 7005 	ld	c,a
   20BB DD 46 FE           7006 	ld	b,-2 (ix)
   20BE D5                 7007 	push	de
   20BF 78                 7008 	ld	a,b
   20C0 5F                 7009 	ld	e,a
   20C1 87                 7010 	add	a,a
   20C2 87                 7011 	add	a,a
   20C3 87                 7012 	add	a,a
   20C4 83                 7013 	add	a,e
   20C5 87                 7014 	add	a,a
   20C6 87                 7015 	add	a,a
   20C7 D1                 7016 	pop	de
   20C8 47                 7017 	ld	b,a
   20C9 D5                 7018 	push	de
   20CA 79                 7019 	ld	a,c
   20CB F5                 7020 	push	af
   20CC 33                 7021 	inc	sp
   20CD C5                 7022 	push	bc
   20CE 33                 7023 	inc	sp
   20CF CDr96s1E           7024 	call	_drawbox
   20D2 F1                 7025 	pop	af
   20D3 D1                 7026 	pop	de
                           7027 ;demo.c:1029: boxi = 0;
   20D4 21r76s45           7028 	ld	hl,#_boxi + 0
   20D7 36 00              7029 	ld	(hl), #0x00
                           7030 ;demo.c:1024: for (y=0;y < 9;y++) {
   20D9 13                 7031 	inc	de
   20DA C3r94s20           7032 	jp	00141$
   20DD                    7033 00147$:
                           7034 ;demo.c:1022: for (x=0;x < 8;x++) {
   20DD DD 34 FE           7035 	inc	-2 (ix)
   20E0 20 03              7036 	jr	NZ,00182$
   20E2 DD 34 FF           7037 	inc	-1 (ix)
   20E5                    7038 00182$:
   20E5 C3r84s20           7039 	jp	00145$
   20E8                    7040 00148$:
                           7041 ;demo.c:1033: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   20E8 21 08 B6           7042 	ld	hl,#0xB608
   20EB E5                 7043 	push	hl
   20EC 21rAAs23           7044 	ld	hl,#__str_14
   20EF E5                 7045 	push	hl
   20F0 CDrB8s16           7046 	call	_drawsine
   20F3 F1                 7047 	pop	af
   20F4 F1                 7048 	pop	af
   20F5                    7049 00106$:
                           7050 ;demo.c:1036: if (bt >= 80) bt+=8;
   20F5 3Ar7Bs45           7051 	ld	a,(#_bt+0)
   20F8 D6 50              7052 	sub	a,#0x50
   20FA 3Ar7Cs45           7053 	ld	a,(#_bt+1)
   20FD DE 00              7054 	sbc	a,#0x00
   20FF FAr18s21           7055 	jp	M,00108$
   2102 21r7Bs45           7056 	ld	hl,#_bt
   2105 7E                 7057 	ld	a,(hl)
   2106 C6 08              7058 	add	a,#0x08
   2108 23                 7059 	inc	hl
   2109 2B                 7060 	dec	hl
   210A C5                 7061 	push	bc
   210B 4F                 7062 	ld	c, a
   210C 23                 7063 	inc	hl
   210D 7E                 7064 	ld	a, (hl)
   210E 47                 7065 	ld	b, a
   210F 79                 7066 	ld	a, c
   2110 2B                 7067 	dec	hl
   2111 77                 7068 	ld	(hl), a
   2112 78                 7069 	ld	a, b
   2113 C1                 7070 	pop	bc
   2114 CE 00              7071 	adc	a,#0x00
   2116 23                 7072 	inc	hl
   2117 77                 7073 	ld	(hl),a
   2118                    7074 00108$:
                           7075 ;demo.c:1037: if (bt < 80 && bt >= 60) bt+=7;
   2118 3Ar7Bs45           7076 	ld	a,(#_bt+0)
   211B D6 50              7077 	sub	a,#0x50
   211D 3Ar7Cs45           7078 	ld	a,(#_bt+1)
   2120 DE 00              7079 	sbc	a,#0x00
   2122 F2r48s21           7080 	jp	P,00110$
   2125 3Ar7Bs45           7081 	ld	a,(#_bt+0)
   2128 D6 3C              7082 	sub	a,#0x3C
   212A 3Ar7Cs45           7083 	ld	a,(#_bt+1)
   212D DE 00              7084 	sbc	a,#0x00
   212F FAr48s21           7085 	jp	M,00110$
   2132 21r7Bs45           7086 	ld	hl,#_bt
   2135 7E                 7087 	ld	a,(hl)
   2136 C6 07              7088 	add	a,#0x07
   2138 23                 7089 	inc	hl
   2139 2B                 7090 	dec	hl
   213A C5                 7091 	push	bc
   213B 4F                 7092 	ld	c, a
   213C 23                 7093 	inc	hl
   213D 7E                 7094 	ld	a, (hl)
   213E 47                 7095 	ld	b, a
   213F 79                 7096 	ld	a, c
   2140 2B                 7097 	dec	hl
   2141 77                 7098 	ld	(hl), a
   2142 78                 7099 	ld	a, b
   2143 C1                 7100 	pop	bc
   2144 CE 00              7101 	adc	a,#0x00
   2146 23                 7102 	inc	hl
   2147 77                 7103 	ld	(hl),a
   2148                    7104 00110$:
                           7105 ;demo.c:1038: if (bt < 60 && bt >= 40) bt+=6;
   2148 3Ar7Bs45           7106 	ld	a,(#_bt+0)
   214B D6 3C              7107 	sub	a,#0x3C
   214D 3Ar7Cs45           7108 	ld	a,(#_bt+1)
   2150 DE 00              7109 	sbc	a,#0x00
   2152 F2r78s21           7110 	jp	P,00113$
   2155 3Ar7Bs45           7111 	ld	a,(#_bt+0)
   2158 D6 28              7112 	sub	a,#0x28
   215A 3Ar7Cs45           7113 	ld	a,(#_bt+1)
   215D DE 00              7114 	sbc	a,#0x00
   215F FAr78s21           7115 	jp	M,00113$
   2162 21r7Bs45           7116 	ld	hl,#_bt
   2165 7E                 7117 	ld	a,(hl)
   2166 C6 06              7118 	add	a,#0x06
   2168 23                 7119 	inc	hl
   2169 2B                 7120 	dec	hl
   216A C5                 7121 	push	bc
   216B 4F                 7122 	ld	c, a
   216C 23                 7123 	inc	hl
   216D 7E                 7124 	ld	a, (hl)
   216E 47                 7125 	ld	b, a
   216F 79                 7126 	ld	a, c
   2170 2B                 7127 	dec	hl
   2171 77                 7128 	ld	(hl), a
   2172 78                 7129 	ld	a, b
   2173 C1                 7130 	pop	bc
   2174 CE 00              7131 	adc	a,#0x00
   2176 23                 7132 	inc	hl
   2177 77                 7133 	ld	(hl),a
   2178                    7134 00113$:
                           7135 ;demo.c:1039: if (bt < 40 && bt >= 10) bt+=5;
   2178 3Ar7Bs45           7136 	ld	a,(#_bt+0)
   217B D6 28              7137 	sub	a,#0x28
   217D 3Ar7Cs45           7138 	ld	a,(#_bt+1)
   2180 DE 00              7139 	sbc	a,#0x00
   2182 F2rA8s21           7140 	jp	P,00116$
   2185 3Ar7Bs45           7141 	ld	a,(#_bt+0)
   2188 D6 0A              7142 	sub	a,#0x0A
   218A 3Ar7Cs45           7143 	ld	a,(#_bt+1)
   218D DE 00              7144 	sbc	a,#0x00
   218F FArA8s21           7145 	jp	M,00116$
   2192 21r7Bs45           7146 	ld	hl,#_bt
   2195 7E                 7147 	ld	a,(hl)
   2196 C6 05              7148 	add	a,#0x05
   2198 23                 7149 	inc	hl
   2199 2B                 7150 	dec	hl
   219A C5                 7151 	push	bc
   219B 4F                 7152 	ld	c, a
   219C 23                 7153 	inc	hl
   219D 7E                 7154 	ld	a, (hl)
   219E 47                 7155 	ld	b, a
   219F 79                 7156 	ld	a, c
   21A0 2B                 7157 	dec	hl
   21A1 77                 7158 	ld	(hl), a
   21A2 78                 7159 	ld	a, b
   21A3 C1                 7160 	pop	bc
   21A4 CE 00              7161 	adc	a,#0x00
   21A6 23                 7162 	inc	hl
   21A7 77                 7163 	ld	(hl),a
   21A8                    7164 00116$:
                           7165 ;demo.c:1040: if (bt < 10 ) bt+=4;
   21A8 3Ar7Bs45           7166 	ld	a,(#_bt+0)
   21AB D6 0A              7167 	sub	a,#0x0A
   21AD 3Ar7Cs45           7168 	ld	a,(#_bt+1)
   21B0 DE 00              7169 	sbc	a,#0x00
   21B2 F2rCBs21           7170 	jp	P,00119$
   21B5 21r7Bs45           7171 	ld	hl,#_bt
   21B8 7E                 7172 	ld	a,(hl)
   21B9 C6 04              7173 	add	a,#0x04
   21BB 23                 7174 	inc	hl
   21BC 2B                 7175 	dec	hl
   21BD C5                 7176 	push	bc
   21BE 4F                 7177 	ld	c, a
   21BF 23                 7178 	inc	hl
   21C0 7E                 7179 	ld	a, (hl)
   21C1 47                 7180 	ld	b, a
   21C2 79                 7181 	ld	a, c
   21C3 2B                 7182 	dec	hl
   21C4 77                 7183 	ld	(hl), a
   21C5 78                 7184 	ld	a, b
   21C6 C1                 7185 	pop	bc
   21C7 CE 00              7186 	adc	a,#0x00
   21C9 23                 7187 	inc	hl
   21CA 77                 7188 	ld	(hl),a
   21CB                    7189 00119$:
                           7190 ;demo.c:1043: cmd.source_x = bx;
   21CB ED 4Br77s45        7191 	ld	bc,(_bx)
   21CF 21rAEs44           7192 	ld	hl,#_cmd
   21D2 71                 7193 	ld	(hl),c
   21D3 23                 7194 	inc	hl
   21D4 70                 7195 	ld	(hl),b
                           7196 ;demo.c:1044: cmd.source_y = bt;
   21D5 01rB0s44           7197 	ld	bc,#_cmd + 2
   21D8 ED 5Br7Bs45        7198 	ld	de,(_bt)
   21DC 69                 7199 	ld	l,c
   21DD 60                 7200 	ld	h,b
   21DE 73                 7201 	ld	(hl),e
   21DF 23                 7202 	inc	hl
   21E0 72                 7203 	ld	(hl),d
                           7204 ;demo.c:1045: cmd.dest_x = 0;
   21E1 21rB2s44           7205 	ld	hl, #_cmd + 4
   21E4 36 00              7206 	ld	(hl),#0x00
   21E6 23                 7207 	inc	hl
   21E7 36 00              7208 	ld	(hl),#0x00
                           7209 ;demo.c:1046: cmd.dest_y = 256;
   21E9 21rB4s44           7210 	ld	hl, #_cmd + 6
   21EC 36 00              7211 	ld	(hl),#0x00
   21EE 23                 7212 	inc	hl
   21EF 36 01              7213 	ld	(hl),#0x01
                           7214 ;demo.c:1047: cmd.size_x = 36;
   21F1 21rB6s44           7215 	ld	hl, #_cmd + 8
   21F4 36 24              7216 	ld	(hl),#0x24
   21F6 23                 7217 	inc	hl
   21F7 36 00              7218 	ld	(hl),#0x00
                           7219 ;demo.c:1048: cmd.size_y = 36;
   21F9 21rB8s44           7220 	ld	hl, #_cmd + 10
   21FC 36 24              7221 	ld	(hl),#0x24
   21FE 23                 7222 	inc	hl
   21FF 36 00              7223 	ld	(hl),#0x00
                           7224 ;demo.c:1049: cmd.data = 0;
                           7225 ;demo.c:1050: cmd.argument = 0x00;
   2201 3E 00              7226 	ld	a,#0x00
   2203 32rBAs44           7227 	ld	(#_cmd + 12),a
   2206 32rBBs44           7228 	ld	(#_cmd + 13),a
                           7229 ;demo.c:1051: cmd.command = 0xD0; // HMMM
   2209 3E D0              7230 	ld	a,#0xD0
   220B 32rBCs44           7231 	ld	(#_cmd + 14),a
                           7232 ;demo.c:1052: vdp_copier(&cmd);
   220E 21rAEs44           7233 	ld	hl,#_cmd
   2211 E5                 7234 	push	hl
   2212 CDr00s00           7235 	call	_vdp_copier
   2215 F1                 7236 	pop	af
                           7237 ;demo.c:1054: pbx = bx;
   2216 2Ar77s45           7238 	ld	hl,(_bx)
   2219 FD 21r81s45        7239 	ld	iy,#_pbx
   221D FD 75 00           7240 	ld	0 (iy),l
   2220 FD 21r81s45        7241 	ld	iy,#_pbx
   2224 FD 74 01           7242 	ld	1 (iy),h
                           7243 ;demo.c:1055: pbt = bt;
   2227 2Ar7Bs45           7244 	ld	hl,(_bt)
   222A FD 21r83s45        7245 	ld	iy,#_pbt
   222E FD 75 00           7246 	ld	0 (iy),l
   2231 FD 21r83s45        7247 	ld	iy,#_pbt
   2235 FD 74 01           7248 	ld	1 (iy),h
                           7249 ;demo.c:1060: bonc = 1;
   2238 21r7Fs45           7250 	ld	hl,#_bonc + 0
   223B 36 01              7251 	ld	(hl), #0x01
   223D 21r80s45           7252 	ld	hl,#_bonc + 1
   2240 36 00              7253 	ld	(hl), #0x00
                           7254 ;demo.c:1061: if (bt > by) {
   2242 21r79s45           7255 	ld	hl,#_by
   2245 7E                 7256 	ld	a,(hl)
   2246 FD 21r7Bs45        7257 	ld	iy,#_bt
   224A FD 96 00           7258 	sub	a,0 (iy)
   224D 23                 7259 	inc	hl
   224E 7E                 7260 	ld	a,(hl)
   224F FD 21r7Bs45        7261 	ld	iy,#_bt
   2253 FD 9E 01           7262 	sbc	a,1 (iy)
   2256 F2r94s23           7263 	jp	P,00135$
                           7264 ;demo.c:1062: bt = by;
   2259 2Ar79s45           7265 	ld	hl,(_by)
   225C FD 21r7Bs45        7266 	ld	iy,#_bt
   2260 FD 75 00           7267 	ld	0 (iy),l
   2263 FD 21r7Bs45        7268 	ld	iy,#_bt
   2267 FD 74 01           7269 	ld	1 (iy),h
                           7270 ;demo.c:1063: drawbox(bx,bt);
   226A 21r7Bs45           7271 	ld	hl,#_bt + 0
   226D 4E                 7272 	ld	c,(hl)
   226E 21r77s45           7273 	ld	hl,#_bx + 0
   2271 46                 7274 	ld	b,(hl)
   2272 79                 7275 	ld	a,c
   2273 F5                 7276 	push	af
   2274 33                 7277 	inc	sp
   2275 C5                 7278 	push	bc
   2276 33                 7279 	inc	sp
   2277 CDr96s1E           7280 	call	_drawbox
   227A F1                 7281 	pop	af
                           7282 ;demo.c:1064: bt = 0;
   227B 21r7Bs45           7283 	ld	hl,#_bt + 0
   227E 36 00              7284 	ld	(hl), #0x00
   2280 21r7Cs45           7285 	ld	hl,#_bt + 1
   2283 36 00              7286 	ld	(hl), #0x00
                           7287 ;demo.c:1065: if (by > 48) {
   2285 3E 30              7288 	ld	a,#0x30
   2287 FD 21r79s45        7289 	ld	iy,#_by
   228B FD 96 00           7290 	sub	a,0 (iy)
   228E 3E 00              7291 	ld	a,#0x00
   2290 FD 21r79s45        7292 	ld	iy,#_by
   2294 FD 9E 01           7293 	sbc	a,1 (iy)
   2297 F2rEFs22           7294 	jp	P,00123$
                           7295 ;demo.c:1066: bonc = 0;
   229A 21r7Fs45           7296 	ld	hl,#_bonc + 0
   229D 36 00              7297 	ld	(hl), #0x00
   229F 21r80s45           7298 	ld	hl,#_bonc + 1
   22A2 36 00              7299 	ld	(hl), #0x00
                           7300 ;demo.c:1067: by-=16;
   22A4 21r79s45           7301 	ld	hl,#_by
   22A7 7E                 7302 	ld	a,(hl)
   22A8 C6 F0              7303 	add	a,#0xF0
   22AA 77                 7304 	ld	(hl),a
   22AB 23                 7305 	inc	hl
   22AC 7E                 7306 	ld	a,(hl)
   22AD CE FF              7307 	adc	a,#0xFF
   22AF 77                 7308 	ld	(hl),a
                           7309 ;demo.c:1068: prevbox_of = boxes_of[boxi];
   22B0 3Ar76s45           7310 	ld	a,(#_boxi+0)
   22B3 87                 7311 	add	a,a
   22B4 C6r85              7312 	add	a,#<_boxes_of
   22B6 6F                 7313 	ld	l,a
   22B7 3Es45              7314 	ld	a,#>_boxes_of
   22B9 CE 00              7315 	adc	a,#0x00
   22BB 67                 7316 	ld	h,a
   22BC 4E                 7317 	ld	c,(hl)
   22BD 23                 7318 	inc	hl
   22BE 21r8Fs45           7319 	ld	hl,#_prevbox_of + 0
   22C1 71                 7320 	ld	(hl), c
                           7321 ;demo.c:1069: by+=prevbox_of;
   22C2 21r8Fs45           7322 	ld	hl,#_prevbox_of + 0
   22C5 4E                 7323 	ld	c,(hl)
   22C6 06 00              7324 	ld	b,#0x00
   22C8 21r79s45           7325 	ld	hl,#_by
   22CB 7E                 7326 	ld	a,(hl)
   22CC 81                 7327 	add	a,c
   22CD 23                 7328 	inc	hl
   22CE 2B                 7329 	dec	hl
   22CF C5                 7330 	push	bc
   22D0 4F                 7331 	ld	c, a
   22D1 23                 7332 	inc	hl
   22D2 7E                 7333 	ld	a, (hl)
   22D3 47                 7334 	ld	b, a
   22D4 79                 7335 	ld	a, c
   22D5 2B                 7336 	dec	hl
   22D6 77                 7337 	ld	(hl), a
   22D7 78                 7338 	ld	a, b
   22D8 C1                 7339 	pop	bc
   22D9 88                 7340 	adc	a,b
   22DA 23                 7341 	inc	hl
   22DB 77                 7342 	ld	(hl),a
                           7343 ;demo.c:1070: boxi++;
   22DC FD 21r76s45        7344 	ld	iy,#_boxi
   22E0 FD 34 00           7345 	inc	0 (iy)
                           7346 ;demo.c:1071: if (boxi >= 4) boxi = 0;
   22E3 3Ar76s45           7347 	ld	a,(#_boxi+0)
   22E6 D6 04              7348 	sub	a,#0x04
   22E8 38 05              7349 	jr	C,00123$
   22EA 21r76s45           7350 	ld	hl,#_boxi + 0
   22ED 36 00              7351 	ld	(hl), #0x00
   22EF                    7352 00123$:
                           7353 ;demo.c:1074: if (by <= 48) {
   22EF 3E 30              7354 	ld	a,#0x30
   22F1 FD 21r79s45        7355 	ld	iy,#_by
   22F5 FD 96 00           7356 	sub	a,0 (iy)
   22F8 3E 00              7357 	ld	a,#0x00
   22FA FD 21r79s45        7358 	ld	iy,#_by
   22FE FD 9E 01           7359 	sbc	a,1 (iy)
   2301 FArA5s23           7360 	jp	M,00149$
                           7361 ;demo.c:1075: bx-=16;
   2304 21r77s45           7362 	ld	hl,#_bx
   2307 7E                 7363 	ld	a,(hl)
   2308 C6 F0              7364 	add	a,#0xF0
   230A 77                 7365 	ld	(hl),a
   230B 23                 7366 	inc	hl
   230C 7E                 7367 	ld	a,(hl)
   230D CE FF              7368 	adc	a,#0xFF
   230F 77                 7369 	ld	(hl),a
                           7370 ;demo.c:1077: if (bx>128)bo+=8;
   2310 3E 80              7371 	ld	a,#0x80
   2312 FD 21r77s45        7372 	ld	iy,#_bx
   2316 FD 96 00           7373 	sub	a,0 (iy)
   2319 3E 00              7374 	ld	a,#0x00
   231B FD 21r77s45        7375 	ld	iy,#_bx
   231F FD 9E 01           7376 	sbc	a,1 (iy)
   2322 07                 7377 	rlca
   2323 E6 01              7378 	and	a,#0x01
   2325 4F                 7379 	ld	c,a
   2326 B7                 7380 	or	a,a
   2327 28 18              7381 	jr	Z,00125$
   2329 21r7Ds45           7382 	ld	hl,#_bo
   232C 7E                 7383 	ld	a,(hl)
   232D C6 08              7384 	add	a,#0x08
   232F 23                 7385 	inc	hl
   2330 2B                 7386 	dec	hl
   2331 C5                 7387 	push	bc
   2332 4F                 7388 	ld	c, a
   2333 23                 7389 	inc	hl
   2334 7E                 7390 	ld	a, (hl)
   2335 47                 7391 	ld	b, a
   2336 79                 7392 	ld	a, c
   2337 2B                 7393 	dec	hl
   2338 77                 7394 	ld	(hl), a
   2339 78                 7395 	ld	a, b
   233A C1                 7396 	pop	bc
   233B CE 00              7397 	adc	a,#0x00
   233D 23                 7398 	inc	hl
   233E 77                 7399 	ld	(hl),a
   233F 18 0C              7400 	jr	00126$
   2341                    7401 00125$:
                           7402 ;demo.c:1078: else bo-=8;
   2341 21r7Ds45           7403 	ld	hl,#_bo
   2344 7E                 7404 	ld	a,(hl)
   2345 C6 F8              7405 	add	a,#0xF8
   2347 77                 7406 	ld	(hl),a
   2348 23                 7407 	inc	hl
   2349 7E                 7408 	ld	a,(hl)
   234A CE FF              7409 	adc	a,#0xFF
   234C 77                 7410 	ld	(hl),a
   234D                    7411 00126$:
                           7412 ;demo.c:1079: if (bo > 192) bo = 0;
   234D 3E C0              7413 	ld	a,#0xC0
   234F FD 21r7Ds45        7414 	ld	iy,#_bo
   2353 FD 96 00           7415 	sub	a,0 (iy)
   2356 3E 00              7416 	ld	a,#0x00
   2358 FD 21r7Ds45        7417 	ld	iy,#_bo
   235C FD 9E 01           7418 	sbc	a,1 (iy)
   235F F2r6Cs23           7419 	jp	P,00128$
   2362 21r7Ds45           7420 	ld	hl,#_bo + 0
   2365 36 00              7421 	ld	(hl), #0x00
   2367 21r7Es45           7422 	ld	hl,#_bo + 1
   236A 36 00              7423 	ld	(hl), #0x00
   236C                    7424 00128$:
                           7425 ;demo.c:1080: if (bx>128)by=84+bo;
   236C AF                 7426 	xor	a,a
   236D B1                 7427 	or	a,c
   236E 28 12              7428 	jr	Z,00130$
   2370 21r79s45           7429 	ld	hl,#_by
   2373 3Ar7Ds45           7430 	ld	a,(#_bo+0)
   2376 C6 54              7431 	add	a,#0x54
   2378 77                 7432 	ld	(hl),a
   2379 3Ar7Es45           7433 	ld	a,(#_bo+1)
   237C CE 00              7434 	adc	a,#0x00
   237E 23                 7435 	inc	hl
   237F 77                 7436 	ld	(hl),a
   2380 18 23              7437 	jr	00149$
   2382                    7438 00130$:
                           7439 ;demo.c:1081: else by=36+36+84+bo;
   2382 21r79s45           7440 	ld	hl,#_by
   2385 3Ar7Ds45           7441 	ld	a,(#_bo+0)
   2388 C6 9C              7442 	add	a,#0x9C
   238A 77                 7443 	ld	(hl),a
   238B 3Ar7Es45           7444 	ld	a,(#_bo+1)
   238E CE 00              7445 	adc	a,#0x00
   2390 23                 7446 	inc	hl
   2391 77                 7447 	ld	(hl),a
   2392 18 11              7448 	jr	00149$
   2394                    7449 00135$:
                           7450 ;demo.c:1084: drawbox(bx,bt);
   2394 21r7Bs45           7451 	ld	hl,#_bt + 0
   2397 4E                 7452 	ld	c,(hl)
   2398 21r77s45           7453 	ld	hl,#_bx + 0
   239B 46                 7454 	ld	b,(hl)
   239C 79                 7455 	ld	a,c
   239D F5                 7456 	push	af
   239E 33                 7457 	inc	sp
   239F C5                 7458 	push	bc
   23A0 33                 7459 	inc	sp
   23A1 CDr96s1E           7460 	call	_drawbox
   23A4 F1                 7461 	pop	af
   23A5                    7462 00149$:
   23A5 DD F9              7463 	ld	sp,ix
   23A7 DD E1              7464 	pop	ix
   23A9 C9                 7465 	ret
   23AA                    7466 _boxes_end::
   23AA                    7467 __str_14:
   23AA 4C 45 54 20 55 53  7468 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   23D5 00                 7469 	.db 0x00
                           7470 ;demo.c:1095: void thewave() {
                           7471 ;	---------------------------------
                           7472 ; Function thewave
                           7473 ; ---------------------------------
   23D6                    7474 _thewave_start::
   23D6                    7475 _thewave:
   23D6 DD E5              7476 	push	ix
   23D8 DD 21 00 00        7477 	ld	ix,#0
   23DC DD 39              7478 	add	ix,sp
   23DE 21 F5 FF           7479 	ld	hl,#-11
   23E1 39                 7480 	add	hl,sp
   23E2 F9                 7481 	ld	sp,hl
                           7482 ;demo.c:1104: if (initwave == 0) {
   23E3 AF                 7483 	xor	a,a
   23E4 21r90s45           7484 	ld	hl,#_initwave + 0
   23E7 B6                 7485 	or	a,(hl)
   23E8 C2r70s26           7486 	jp	NZ,00113$
                           7487 ;demo.c:1105: initwave = 1;
   23EB 21r90s45           7488 	ld	hl,#_initwave + 0
   23EE 36 01              7489 	ld	(hl), #0x01
                           7490 ;demo.c:1106: for (y = 0; y < 212; y++) {
   23F0 DD 36 FE 00        7491 	ld	-2 (ix),#0x00
   23F4                    7492 00128$:
   23F4 DD 7E FE           7493 	ld	a,-2 (ix)
   23F7 D6 D4              7494 	sub	a,#0xD4
   23F9 D2r6Cs24           7495 	jp	NC,00131$
                           7496 ;demo.c:1107: cmd.size_x = 256;
   23FC 11rB6s44           7497 	ld	de,#_cmd + 8
   23FF EB                 7498 	ex	de,hl
   2400 36 00              7499 	ld	(hl),#0x00
   2402 23                 7500 	inc	hl
   2403 36 01              7501 	ld	(hl),#0x01
                           7502 ;demo.c:1108: cmd.size_y = 2;
   2405 11rB8s44           7503 	ld	de,#_cmd + 10
   2408 EB                 7504 	ex	de,hl
   2409 36 02              7505 	ld	(hl),#0x02
   240B 23                 7506 	inc	hl
   240C 36 00              7507 	ld	(hl),#0x00
                           7508 ;demo.c:1109: cmd.data = 0;
   240E 11rBAs44           7509 	ld	de,#_cmd + 12
   2411 3E 00              7510 	ld	a,#0x00
   2413 12                 7511 	ld	(de),a
                           7512 ;demo.c:1110: cmd.argument = 0x00; // from 70xY to left
   2414 11rBBs44           7513 	ld	de,#_cmd + 13
   2417 3E 00              7514 	ld	a,#0x00
   2419 12                 7515 	ld	(de),a
                           7516 ;demo.c:1111: cmd.command = 0xd0; // vram to vram, y only
   241A 11rBCs44           7517 	ld	de,#_cmd + 14
   241D 3E D0              7518 	ld	a,#0xD0
   241F 12                 7519 	ld	(de),a
                           7520 ;demo.c:1113: cmd.source_x = 0;
   2420 21rAEs44           7521 	ld	hl,#_cmd
   2423 36 00              7522 	ld	(hl),#0x00
   2425 23                 7523 	inc	hl
   2426 36 00              7524 	ld	(hl),#0x00
                           7525 ;demo.c:1114: cmd.source_y = 0;
   2428 11rB0s44           7526 	ld	de,#_cmd + 2
   242B EB                 7527 	ex	de,hl
   242C 36 00              7528 	ld	(hl),#0x00
   242E 23                 7529 	inc	hl
   242F 36 00              7530 	ld	(hl),#0x00
                           7531 ;demo.c:1115: cmd.dest_x = 0;
   2431 11rB2s44           7532 	ld	de,#_cmd + 4
   2434 EB                 7533 	ex	de,hl
   2435 36 00              7534 	ld	(hl),#0x00
   2437 23                 7535 	inc	hl
   2438 36 00              7536 	ld	(hl),#0x00
                           7537 ;demo.c:1116: cmd.dest_y = 0+y;
   243A 11rB4s44           7538 	ld	de,#_cmd + 6
   243D DD 4E FE           7539 	ld	c,-2 (ix)
   2440 06 00              7540 	ld	b,#0x00
   2442 EB                 7541 	ex	de,hl
   2443 71                 7542 	ld	(hl),c
   2444 23                 7543 	inc	hl
   2445 70                 7544 	ld	(hl),b
                           7545 ;demo.c:1117: vdp_copier(&cmd);
   2446 C5                 7546 	push	bc
   2447 21rAEs44           7547 	ld	hl,#_cmd
   244A E5                 7548 	push	hl
   244B CDr00s00           7549 	call	_vdp_copier
   244E F1                 7550 	pop	af
   244F C1                 7551 	pop	bc
                           7552 ;demo.c:1118: cmd.dest_y = 256+y;
   2450 11rB4s44           7553 	ld	de,#_cmd + 6
   2453 21 00 01           7554 	ld	hl,#0x0100
   2456 09                 7555 	add	hl,bc
   2457 4D                 7556 	ld	c,l
   2458 44                 7557 	ld	b,h
   2459 EB                 7558 	ex	de,hl
   245A 71                 7559 	ld	(hl),c
   245B 23                 7560 	inc	hl
   245C 70                 7561 	ld	(hl),b
                           7562 ;demo.c:1119: vdp_copier(&cmd);
   245D 21rAEs44           7563 	ld	hl,#_cmd
   2460 E5                 7564 	push	hl
   2461 CDr00s00           7565 	call	_vdp_copier
   2464 F1                 7566 	pop	af
                           7567 ;demo.c:1120: waitVB();
   2465 76                 7568 		halt 
                           7569 ;demo.c:1106: for (y = 0; y < 212; y++) {
   2466 DD 34 FE           7570 	inc	-2 (ix)
   2469 C3rF4s23           7571 	jp	00128$
   246C                    7572 00131$:
                           7573 ;demo.c:1124: for (y = 9; y < 15; y+=1) {
   246C DD 36 FE 09        7574 	ld	-2 (ix),#0x09
   2470                    7575 00132$:
   2470 DD 7E FE           7576 	ld	a,-2 (ix)
   2473 D6 0F              7577 	sub	a,#0x0F
   2475 D2r70s26           7578 	jp	NC,00113$
                           7579 ;demo.c:1125: for (x = 0; x < 21; x+=1) {
   2478 DD 7E FE           7580 	ld	a,-2 (ix)
   247B 87                 7581 	add	a,a
   247C DD 77 F7           7582 	ld	-9 (ix),a
   247F DD 36 FF 00        7583 	ld	-1 (ix),#0x00
   2483                    7584 00108$:
   2483 DD 7E FF           7585 	ld	a,-1 (ix)
   2486 D6 15              7586 	sub	a,#0x15
   2488 D2r6As26           7587 	jp	NC,00134$
                           7588 ;demo.c:1126: if (x > 6 && x < 13) continue; 
   248B 3E 06              7589 	ld	a,#0x06
   248D DD 96 FF           7590 	sub	a,-1 (ix)
   2490 30 08              7591 	jr	NC,00102$
   2492 DD 7E FF           7592 	ld	a,-1 (ix)
   2495 D6 0D              7593 	sub	a,#0x0D
   2497 DAr64s26           7594 	jp	C,00110$
   249A                    7595 00102$:
                           7596 ;demo.c:1128: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   249A 3E 06              7597 	ld	a,#0x06
   249C DD 96 FF           7598 	sub	a,-1 (ix)
   249F DArF5s24           7599 	jp	C,00105$
   24A2 DD 56 FF           7600 	ld	d,-1 (ix)
   24A5 0E 00              7601 	ld	c,#0x00
   24A7 CB 22              7602 	sla	d
   24A9 CB 11              7603 	rl	c
   24AB CB 22              7604 	sla	d
   24AD CB 11              7605 	rl	c
   24AF CB 22              7606 	sla	d
   24B1 CB 11              7607 	rl	c
   24B3 7A                 7608 	ld	a,d
   24B4 C6 69              7609 	add	a,#0x69
   24B6 57                 7610 	ld	d,a
   24B7 79                 7611 	ld	a,c
   24B8 CE 00              7612 	adc	a,#0x00
   24BA 47                 7613 	ld	b,a
   24BB DD 5E FE           7614 	ld	e,-2 (ix)
   24BE 0E 00              7615 	ld	c,#0x00
   24C0 CB 23              7616 	sla	e
   24C2 CB 11              7617 	rl	c
   24C4 CB 23              7618 	sla	e
   24C6 CB 11              7619 	rl	c
   24C8 CB 23              7620 	sla	e
   24CA CB 11              7621 	rl	c
   24CC 7A                 7622 	ld	a,d
   24CD 83                 7623 	add	a,e
   24CE 5F                 7624 	ld	e,a
   24CF 78                 7625 	ld	a,b
   24D0 89                 7626 	adc	a,c
   24D1 0E 00              7627 	ld	c,#0x00
   24D3 3Er00              7628 	ld	a,#<_sintab
   24D5 83                 7629 	add	a,e
   24D6 5F                 7630 	ld	e,a
   24D7 3Es00              7631 	ld	a,#>_sintab
   24D9 89                 7632 	adc	a,c
   24DA 6B                 7633 	ld	l,e
   24DB 67                 7634 	ld	h,a
   24DC 5E                 7635 	ld	e,(hl)
   24DD CB 2B              7636 	sra	e
   24DF CB 2B              7637 	sra	e
   24E1 CB 2B              7638 	sra	e
   24E3 CB 2B              7639 	sra	e
   24E5 7B                 7640 	ld	a,e
   24E6 17                 7641 	rla	
   24E7 9F                 7642 	sbc	a,a
   24E8 4F                 7643 	ld	c,a
   24E9 7B                 7644 	ld	a,e
   24EA C6 07              7645 	add	a,#0x07
   24EC DD 77 FC           7646 	ld	-4 (ix),a
   24EF 79                 7647 	ld	a,c
   24F0 CE 00              7648 	adc	a,#0x00
   24F2 DD 77 FD           7649 	ld	-3 (ix),a
   24F5                    7650 00105$:
                           7651 ;demo.c:1129: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   24F5 DD 7E FF           7652 	ld	a,-1 (ix)
   24F8 D6 0D              7653 	sub	a,#0x0D
   24FA DAr5Bs25           7654 	jp	C,00107$
   24FD DD 5E FF           7655 	ld	e,-1 (ix)
   2500 16 00              7656 	ld	d,#0x00
   2502 21 17 00           7657 	ld	hl,#0x0017
   2505 19                 7658 	add	hl,de
   2506 EB                 7659 	ex	de,hl
   2507 CB 23              7660 	sla	e
   2509 CB 12              7661 	rl	d
   250B CB 23              7662 	sla	e
   250D CB 12              7663 	rl	d
   250F CB 23              7664 	sla	e
   2511 CB 12              7665 	rl	d
   2513 21 69 00           7666 	ld	hl,#0x0069
   2516 19                 7667 	add	hl,de
   2517 45                 7668 	ld	b,l
   2518 54                 7669 	ld	d,h
   2519 DD 4E FE           7670 	ld	c,-2 (ix)
   251C 1E 00              7671 	ld	e,#0x00
   251E 79                 7672 	ld	a,c
   251F C6 13              7673 	add	a,#0x13
   2521 4F                 7674 	ld	c,a
   2522 7B                 7675 	ld	a,e
   2523 CE 00              7676 	adc	a,#0x00
   2525 5F                 7677 	ld	e,a
   2526 CB 21              7678 	sla	c
   2528 CB 13              7679 	rl	e
   252A CB 21              7680 	sla	c
   252C CB 13              7681 	rl	e
   252E CB 21              7682 	sla	c
   2530 CB 13              7683 	rl	e
   2532 78                 7684 	ld	a,b
   2533 81                 7685 	add	a,c
   2534 4F                 7686 	ld	c,a
   2535 7A                 7687 	ld	a,d
   2536 8B                 7688 	adc	a,e
   2537 1E 00              7689 	ld	e,#0x00
   2539 3Er00              7690 	ld	a,#<_sintab
   253B 81                 7691 	add	a,c
   253C 4F                 7692 	ld	c,a
   253D 3Es00              7693 	ld	a,#>_sintab
   253F 8B                 7694 	adc	a,e
   2540 69                 7695 	ld	l,c
   2541 67                 7696 	ld	h,a
   2542 4E                 7697 	ld	c,(hl)
   2543 CB 29              7698 	sra	c
   2545 CB 29              7699 	sra	c
   2547 CB 29              7700 	sra	c
   2549 CB 29              7701 	sra	c
   254B 79                 7702 	ld	a,c
   254C 17                 7703 	rla	
   254D 9F                 7704 	sbc	a,a
   254E 5F                 7705 	ld	e,a
   254F 79                 7706 	ld	a,c
   2550 C6 07              7707 	add	a,#0x07
   2552 DD 77 FC           7708 	ld	-4 (ix),a
   2555 7B                 7709 	ld	a,e
   2556 CE 00              7710 	adc	a,#0x00
   2558 DD 77 FD           7711 	ld	-3 (ix),a
   255B                    7712 00107$:
                           7713 ;demo.c:1131: cmd.size_x = 11;
   255B 11rB6s44           7714 	ld	de,#_cmd + 8
   255E EB                 7715 	ex	de,hl
   255F 36 0B              7716 	ld	(hl),#0x0B
   2561 23                 7717 	inc	hl
   2562 36 00              7718 	ld	(hl),#0x00
                           7719 ;demo.c:1132: cmd.size_y = 28-(14-px);
   2564 21rB8s44           7720 	ld	hl,#_cmd + 10
   2567 DD 75 F8           7721 	ld	-8 (ix),l
   256A DD 74 F9           7722 	ld	-7 (ix),h
   256D 3E 0E              7723 	ld	a,#0x0E
   256F DD 96 FC           7724 	sub	a,-4 (ix)
   2572 4F                 7725 	ld	c,a
   2573 3E 00              7726 	ld	a,#0x00
   2575 DD 9E FD           7727 	sbc	a,-3 (ix)
   2578 5F                 7728 	ld	e,a
   2579 3E 1C              7729 	ld	a,#0x1C
   257B 91                 7730 	sub	a,c
   257C 57                 7731 	ld	d,a
   257D 3E 00              7732 	ld	a,#0x00
   257F 9B                 7733 	sbc	a,e
   2580 47                 7734 	ld	b,a
   2581 DD 6E F8           7735 	ld	l,-8 (ix)
   2584 DD 66 F9           7736 	ld	h,-7 (ix)
   2587 72                 7737 	ld	(hl),d
   2588 23                 7738 	inc	hl
   2589 70                 7739 	ld	(hl),b
                           7740 ;demo.c:1133: cmd.data = 0;
   258A 21rBAs44           7741 	ld	hl,#_cmd + 12
   258D 36 00              7742 	ld	(hl),#0x00
                           7743 ;demo.c:1134: cmd.argument = 0x00; // from 70xY to left
   258F 21rBBs44           7744 	ld	hl,#_cmd + 13
   2592 36 00              7745 	ld	(hl),#0x00
                           7746 ;demo.c:1135: cmd.command = 0x98; // vram to vram, y only
   2594 21rBCs44           7747 	ld	hl,#_cmd + 14
   2597 36 98              7748 	ld	(hl),#0x98
                           7749 ;demo.c:1137: cmd.source_x = twelvetimes[px];
   2599 DD 46 FC           7750 	ld	b,-4 (ix)
   259C DD 56 FD           7751 	ld	d,-3 (ix)
   259F CB 20              7752 	sla	b
   25A1 CB 12              7753 	rl	d
   25A3 3Er20              7754 	ld	a,#<_twelvetimes
   25A5 80                 7755 	add	a,b
   25A6 47                 7756 	ld	b,a
   25A7 3Es01              7757 	ld	a,#>_twelvetimes
   25A9 8A                 7758 	adc	a,d
   25AA 68                 7759 	ld	l,b
   25AB 67                 7760 	ld	h,a
   25AC 46                 7761 	ld	b,(hl)
   25AD 23                 7762 	inc	hl
   25AE 56                 7763 	ld	d,(hl)
   25AF 21rAEs44           7764 	ld	hl,#_cmd
   25B2 70                 7765 	ld	(hl),b
   25B3 23                 7766 	inc	hl
   25B4 72                 7767 	ld	(hl),d
                           7768 ;demo.c:1138: cmd.source_y = 768+183+(15-px);
   25B5 23                 7769 	inc	hl
   25B6 DD 75 F8           7770 	ld	-8 (ix),l
   25B9 DD 74 F9           7771 	ld	-7 (ix),h
   25BC 3E C6              7772 	ld	a,#0xC6
   25BE DD 96 FC           7773 	sub	a,-4 (ix)
   25C1 47                 7774 	ld	b,a
   25C2 3E 03              7775 	ld	a,#0x03
   25C4 DD 9E FD           7776 	sbc	a,-3 (ix)
   25C7 57                 7777 	ld	d,a
   25C8 DD 6E F8           7778 	ld	l,-8 (ix)
   25CB DD 66 F9           7779 	ld	h,-7 (ix)
   25CE 70                 7780 	ld	(hl),b
   25CF 23                 7781 	inc	hl
   25D0 72                 7782 	ld	(hl),d
                           7783 ;demo.c:1139: cmd.dest_x = 0+twelvetimes[x];
   25D1 21rB2s44           7784 	ld	hl,#_cmd + 4
   25D4 DD 75 F8           7785 	ld	-8 (ix),l
   25D7 DD 74 F9           7786 	ld	-7 (ix),h
   25DA DD 7E FF           7787 	ld	a,-1 (ix)
   25DD 87                 7788 	add	a,a
   25DE C6r20              7789 	add	a,#<_twelvetimes
   25E0 6F                 7790 	ld	l,a
   25E1 3Es01              7791 	ld	a,#>_twelvetimes
   25E3 CE 00              7792 	adc	a,#0x00
   25E5 67                 7793 	ld	h,a
   25E6 46                 7794 	ld	b,(hl)
   25E7 23                 7795 	inc	hl
   25E8 56                 7796 	ld	d,(hl)
   25E9 DD 6E F8           7797 	ld	l,-8 (ix)
   25EC DD 66 F9           7798 	ld	h,-7 (ix)
   25EF 70                 7799 	ld	(hl),b
   25F0 23                 7800 	inc	hl
   25F1 72                 7801 	ld	(hl),d
                           7802 ;demo.c:1140: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   25F2 21rB4s44           7803 	ld	hl,#_cmd + 6
   25F5 DD 75 F8           7804 	ld	-8 (ix),l
   25F8 DD 74 F9           7805 	ld	-7 (ix),h
   25FB 3Er54              7806 	ld	a,#<_eighttimes
   25FD DD 86 F7           7807 	add	a,-9 (ix)
   2600 6F                 7808 	ld	l,a
   2601 3Es01              7809 	ld	a,#>_eighttimes
   2603 CE 00              7810 	adc	a,#0x00
   2605 67                 7811 	ld	h,a
   2606 46                 7812 	ld	b,(hl)
   2607 23                 7813 	inc	hl
   2608 56                 7814 	ld	d,(hl)
   2609 78                 7815 	ld	a,b
   260A C6 04              7816 	add	a,#0x04
   260C 47                 7817 	ld	b,a
   260D 7A                 7818 	ld	a,d
   260E CE 00              7819 	adc	a,#0x00
   2610 57                 7820 	ld	d,a
   2611 78                 7821 	ld	a,b
   2612 81                 7822 	add	a,c
   2613 47                 7823 	ld	b,a
   2614 7A                 7824 	ld	a,d
   2615 8B                 7825 	adc	a,e
   2616 57                 7826 	ld	d,a
   2617 DD 6E F8           7827 	ld	l,-8 (ix)
   261A DD 66 F9           7828 	ld	h,-7 (ix)
   261D 70                 7829 	ld	(hl),b
   261E 23                 7830 	inc	hl
   261F 72                 7831 	ld	(hl),d
                           7832 ;demo.c:1141: vdp_copier(&cmd);
   2620 C5                 7833 	push	bc
   2621 D5                 7834 	push	de
   2622 21rAEs44           7835 	ld	hl,#_cmd
   2625 E5                 7836 	push	hl
   2626 CDr00s00           7837 	call	_vdp_copier
   2629 F1                 7838 	pop	af
   262A D1                 7839 	pop	de
   262B C1                 7840 	pop	bc
                           7841 ;demo.c:1142: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   262C 21rB4s44           7842 	ld	hl,#_cmd + 6
   262F DD 75 F8           7843 	ld	-8 (ix),l
   2632 DD 74 F9           7844 	ld	-7 (ix),h
   2635 3Er54              7845 	ld	a,#<_eighttimes
   2637 DD 86 F7           7846 	add	a,-9 (ix)
   263A 6F                 7847 	ld	l,a
   263B 3Es01              7848 	ld	a,#>_eighttimes
   263D CE 00              7849 	adc	a,#0x00
   263F 67                 7850 	ld	h,a
   2640 46                 7851 	ld	b,(hl)
   2641 23                 7852 	inc	hl
   2642 56                 7853 	ld	d,(hl)
   2643 78                 7854 	ld	a,b
   2644 C6 04              7855 	add	a,#0x04
   2646 47                 7856 	ld	b,a
   2647 7A                 7857 	ld	a,d
   2648 CE 00              7858 	adc	a,#0x00
   264A C6 01              7859 	add	a,#0x01
   264C 57                 7860 	ld	d,a
   264D 78                 7861 	ld	a,b
   264E 81                 7862 	add	a,c
   264F 4F                 7863 	ld	c,a
   2650 7A                 7864 	ld	a,d
   2651 8B                 7865 	adc	a,e
   2652 5F                 7866 	ld	e,a
   2653 DD 6E F8           7867 	ld	l,-8 (ix)
   2656 DD 66 F9           7868 	ld	h,-7 (ix)
   2659 71                 7869 	ld	(hl),c
   265A 23                 7870 	inc	hl
   265B 73                 7871 	ld	(hl),e
                           7872 ;demo.c:1143: vdp_copier(&cmd);
   265C 21rAEs44           7873 	ld	hl,#_cmd
   265F E5                 7874 	push	hl
   2660 CDr00s00           7875 	call	_vdp_copier
   2663 F1                 7876 	pop	af
   2664                    7877 00110$:
                           7878 ;demo.c:1125: for (x = 0; x < 21; x+=1) {
   2664 DD 34 FF           7879 	inc	-1 (ix)
   2667 C3r83s24           7880 	jp	00108$
   266A                    7881 00134$:
                           7882 ;demo.c:1124: for (y = 9; y < 15; y+=1) {
   266A DD 34 FE           7883 	inc	-2 (ix)
   266D C3r70s24           7884 	jp	00132$
   2670                    7885 00113$:
                           7886 ;demo.c:1149: if (buf == -1) { bo = 0; ya = 0; }
   2670 3Ar91s45           7887 	ld	a,(#_buf+0)
   2673 3C                 7888 	inc	a
   2674 20 06              7889 	jr	NZ,00188$
   2676 3Ar92s45           7890 	ld	a,(#_buf+1)
   2679 3C                 7891 	inc	a
   267A 28 02              7892 	jr	Z,00189$
   267C                    7893 00188$:
   267C 18 05              7894 	jr	00115$
   267E                    7895 00189$:
   267E 01 00 00           7896 	ld	bc,#0x0000
   2681 18 03              7897 	jr	00116$
   2683                    7898 00115$:
                           7899 ;demo.c:1150: else { bo = 256; ya = 6;}
   2683 01 00 01           7900 	ld	bc,#0x0100
   2686                    7901 00116$:
                           7902 ;demo.c:1152: cmd.size_x = 72;
   2686 11rB6s44           7903 	ld	de,#_cmd + 8
   2689 EB                 7904 	ex	de,hl
   268A 36 48              7905 	ld	(hl),#0x48
   268C 23                 7906 	inc	hl
   268D 36 00              7907 	ld	(hl),#0x00
                           7908 ;demo.c:1153: cmd.size_y = 80;
   268F 11rB8s44           7909 	ld	de,#_cmd + 10
   2692 EB                 7910 	ex	de,hl
   2693 36 50              7911 	ld	(hl),#0x50
   2695 23                 7912 	inc	hl
   2696 36 00              7913 	ld	(hl),#0x00
                           7914 ;demo.c:1154: cmd.data = 0;
   2698 11rBAs44           7915 	ld	de,#_cmd + 12
   269B 3E 00              7916 	ld	a,#0x00
   269D 12                 7917 	ld	(de),a
                           7918 ;demo.c:1155: cmd.argument = 0x00; // from 70xY to left
   269E 11rBBs44           7919 	ld	de,#_cmd + 13
   26A1 3E 00              7920 	ld	a,#0x00
   26A3 12                 7921 	ld	(de),a
                           7922 ;demo.c:1156: cmd.command = 0xd0; // vram to vram, y only
   26A4 11rBCs44           7923 	ld	de,#_cmd + 14
   26A7 3E D0              7924 	ld	a,#0xD0
   26A9 12                 7925 	ld	(de),a
                           7926 ;demo.c:1157: cmd.source_x = 178;
   26AA 21rAEs44           7927 	ld	hl,#_cmd
   26AD 36 B2              7928 	ld	(hl),#0xB2
   26AF 23                 7929 	inc	hl
   26B0 36 00              7930 	ld	(hl),#0x00
                           7931 ;demo.c:1158: cmd.source_y = 0;
   26B2 11rB0s44           7932 	ld	de,#_cmd + 2
   26B5 EB                 7933 	ex	de,hl
   26B6 36 00              7934 	ld	(hl),#0x00
   26B8 23                 7935 	inc	hl
   26B9 36 00              7936 	ld	(hl),#0x00
                           7937 ;demo.c:1159: cmd.dest_x = 84;
   26BB 11rB2s44           7938 	ld	de,#_cmd + 4
   26BE EB                 7939 	ex	de,hl
   26BF 36 54              7940 	ld	(hl),#0x54
   26C1 23                 7941 	inc	hl
   26C2 36 00              7942 	ld	(hl),#0x00
                           7943 ;demo.c:1160: cmd.dest_y = 72+bo;
   26C4 11rB4s44           7944 	ld	de,#_cmd + 6
   26C7 21 48 00           7945 	ld	hl,#0x0048
   26CA 09                 7946 	add	hl,bc
   26CB 4D                 7947 	ld	c,l
   26CC 44                 7948 	ld	b,h
   26CD EB                 7949 	ex	de,hl
   26CE 71                 7950 	ld	(hl),c
   26CF 23                 7951 	inc	hl
   26D0 70                 7952 	ld	(hl),b
                           7953 ;demo.c:1161: vdp_copier(&cmd);
   26D1 C5                 7954 	push	bc
   26D2 21rAEs44           7955 	ld	hl,#_cmd
   26D5 E5                 7956 	push	hl
   26D6 CDr00s00           7957 	call	_vdp_copier
   26D9 F1                 7958 	pop	af
   26DA C1                 7959 	pop	bc
                           7960 ;demo.c:1163: lukema = ffa;
   26DB 2Ar93s45           7961 	ld	hl,(_ffa)
   26DE DD 75 FA           7962 	ld	-6 (ix),l
   26E1 DD 74 FB           7963 	ld	-5 (ix),h
                           7964 ;demo.c:1164: for (y = 0; y < 5; y+=1) {
   26E4 DD 36 FE 00        7965 	ld	-2 (ix),#0x00
   26E8                    7966 00140$:
   26E8 DD 7E FE           7967 	ld	a,-2 (ix)
   26EB D6 05              7968 	sub	a,#0x05
   26ED D2r4Es28           7969 	jp	NC,00143$
                           7970 ;demo.c:1165: for (x = 0; x < 6; x+=1) {
   26F0 DD 7E FE           7971 	ld	a,-2 (ix)
   26F3 87                 7972 	add	a,a
   26F4 DD 77 F7           7973 	ld	-9 (ix),a
   26F7 DD 36 FF 00        7974 	ld	-1 (ix),#0x00
   26FB                    7975 00136$:
   26FB DD 7E FF           7976 	ld	a,-1 (ix)
   26FE D6 06              7977 	sub	a,#0x06
   2700 D2r48s28           7978 	jp	NC,00142$
                           7979 ;demo.c:1167: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   2703 DD 5E FF           7980 	ld	e,-1 (ix)
   2706 16 00              7981 	ld	d,#0x00
   2708 CB 23              7982 	sla	e
   270A CB 12              7983 	rl	d
   270C CB 23              7984 	sla	e
   270E CB 12              7985 	rl	d
   2710 CB 23              7986 	sla	e
   2712 CB 12              7987 	rl	d
   2714 DD 7E FA           7988 	ld	a,-6 (ix)
   2717 83                 7989 	add	a,e
   2718 DD 77 F8           7990 	ld	-8 (ix),a
   271B DD 7E FB           7991 	ld	a,-5 (ix)
   271E 8A                 7992 	adc	a,d
   271F DD 77 F9           7993 	ld	-7 (ix),a
   2722 DD 5E FE           7994 	ld	e,-2 (ix)
   2725 16 00              7995 	ld	d,#0x00
   2727 CB 23              7996 	sla	e
   2729 CB 12              7997 	rl	d
   272B CB 23              7998 	sla	e
   272D CB 12              7999 	rl	d
   272F DD 7E F8           8000 	ld	a,-8 (ix)
   2732 83                 8001 	add	a,e
   2733 5F                 8002 	ld	e,a
   2734 DD 7E F9           8003 	ld	a,-7 (ix)
   2737 8A                 8004 	adc	a,d
   2738 16 00              8005 	ld	d,#0x00
   273A 21r00s00           8006 	ld	hl,#_sintab
   273D 19                 8007 	add	hl,de
   273E 5E                 8008 	ld	e,(hl)
   273F CB 2B              8009 	sra	e
   2741 CB 2B              8010 	sra	e
   2743 CB 2B              8011 	sra	e
   2745 CB 2B              8012 	sra	e
   2747 7B                 8013 	ld	a,e
   2748 17                 8014 	rla	
   2749 9F                 8015 	sbc	a,a
   274A 57                 8016 	ld	d,a
   274B 21 07 00           8017 	ld	hl,#0x0007
   274E 19                 8018 	add	hl,de
   274F DD 75 FC           8019 	ld	-4 (ix),l
                           8020 ;demo.c:1168: if (px < 0) px = 0; 
   2752 DD 74 FD           8021 	ld	-3 (ix),h
   2755 7C                 8022 	ld	a, h
   2756 CB 7F              8023 	bit	7,a
   2758 28 08              8024 	jr	Z,00118$
   275A DD 36 FC 00        8025 	ld	-4 (ix),#0x00
   275E DD 36 FD 00        8026 	ld	-3 (ix),#0x00
   2762                    8027 00118$:
                           8028 ;demo.c:1169: if (px > 14) px = 14; 
   2762 3E 0E              8029 	ld	a,#0x0E
   2764 DD 96 FC           8030 	sub	a,-4 (ix)
   2767 3E 00              8031 	ld	a,#0x00
   2769 DD 9E FD           8032 	sbc	a,-3 (ix)
   276C F2r77s27           8033 	jp	P,00120$
   276F DD 36 FC 0E        8034 	ld	-4 (ix),#0x0E
   2773 DD 36 FD 00        8035 	ld	-3 (ix),#0x00
   2777                    8036 00120$:
                           8037 ;demo.c:1171: cmd.size_x = 12;
   2777 11rB6s44           8038 	ld	de,#_cmd + 8
   277A EB                 8039 	ex	de,hl
   277B 36 0C              8040 	ld	(hl),#0x0C
   277D 23                 8041 	inc	hl
   277E 36 00              8042 	ld	(hl),#0x00
                           8043 ;demo.c:1172: cmd.size_y = 11;
   2780 11rB8s44           8044 	ld	de,#_cmd + 10
   2783 EB                 8045 	ex	de,hl
   2784 36 0B              8046 	ld	(hl),#0x0B
   2786 23                 8047 	inc	hl
   2787 36 00              8048 	ld	(hl),#0x00
                           8049 ;demo.c:1173: cmd.data = 0;
   2789 11rBAs44           8050 	ld	de,#_cmd + 12
   278C 3E 00              8051 	ld	a,#0x00
   278E 12                 8052 	ld	(de),a
                           8053 ;demo.c:1174: cmd.argument = 0x00; // from 70xY to left
   278F 11rBBs44           8054 	ld	de,#_cmd + 13
   2792 3E 00              8055 	ld	a,#0x00
   2794 12                 8056 	ld	(de),a
                           8057 ;demo.c:1175: cmd.command = 0x98; // vram to vram, y only
   2795 11rBCs44           8058 	ld	de,#_cmd + 14
   2798 3E 98              8059 	ld	a,#0x98
   279A 12                 8060 	ld	(de),a
                           8061 ;demo.c:1177: cmd.source_x = twelvetimes[px];
   279B DD 5E FC           8062 	ld	e,-4 (ix)
   279E DD 56 FD           8063 	ld	d,-3 (ix)
   27A1 CB 23              8064 	sla	e
   27A3 CB 12              8065 	rl	d
   27A5 21r20s01           8066 	ld	hl,#_twelvetimes
   27A8 19                 8067 	add	hl,de
   27A9 5E                 8068 	ld	e,(hl)
   27AA 23                 8069 	inc	hl
   27AB 56                 8070 	ld	d,(hl)
   27AC 21rAEs44           8071 	ld	hl,#_cmd
   27AF 73                 8072 	ld	(hl),e
   27B0 23                 8073 	inc	hl
   27B1 72                 8074 	ld	(hl),d
                           8075 ;demo.c:1178: cmd.source_y = 768+183+16-px;
   27B2 23                 8076 	inc	hl
   27B3 DD 75 F8           8077 	ld	-8 (ix),l
   27B6 DD 74 F9           8078 	ld	-7 (ix),h
   27B9 3E C7              8079 	ld	a,#0xC7
   27BB DD 96 FC           8080 	sub	a,-4 (ix)
   27BE 5F                 8081 	ld	e,a
   27BF 3E 03              8082 	ld	a,#0x03
   27C1 DD 9E FD           8083 	sbc	a,-3 (ix)
   27C4 57                 8084 	ld	d,a
   27C5 DD 6E F8           8085 	ld	l,-8 (ix)
   27C8 DD 66 F9           8086 	ld	h,-7 (ix)
   27CB 73                 8087 	ld	(hl),e
   27CC 23                 8088 	inc	hl
   27CD 72                 8089 	ld	(hl),d
                           8090 ;demo.c:1179: cmd.dest_x = 84+twelvetimes[x];
   27CE 21rB2s44           8091 	ld	hl,#_cmd + 4
   27D1 DD 75 F8           8092 	ld	-8 (ix),l
   27D4 DD 74 F9           8093 	ld	-7 (ix),h
   27D7 DD 7E FF           8094 	ld	a,-1 (ix)
   27DA 87                 8095 	add	a,a
   27DB C6r20              8096 	add	a,#<_twelvetimes
   27DD 6F                 8097 	ld	l,a
   27DE 3Es01              8098 	ld	a,#>_twelvetimes
   27E0 CE 00              8099 	adc	a,#0x00
   27E2 67                 8100 	ld	h,a
   27E3 5E                 8101 	ld	e,(hl)
   27E4 23                 8102 	inc	hl
   27E5 56                 8103 	ld	d,(hl)
   27E6 21 54 00           8104 	ld	hl,#0x0054
   27E9 19                 8105 	add	hl,de
   27EA EB                 8106 	ex	de,hl
   27EB DD 6E F8           8107 	ld	l,-8 (ix)
   27EE DD 66 F9           8108 	ld	h,-7 (ix)
   27F1 73                 8109 	ld	(hl),e
   27F2 23                 8110 	inc	hl
   27F3 72                 8111 	ld	(hl),d
                           8112 ;demo.c:1180: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   27F4 21rB4s44           8113 	ld	hl,#_cmd + 6
   27F7 DD 75 F8           8114 	ld	-8 (ix),l
   27FA DD 74 F9           8115 	ld	-7 (ix),h
   27FD 3Er54              8116 	ld	a,#<_eighttimes
   27FF DD 86 F7           8117 	add	a,-9 (ix)
   2802 6F                 8118 	ld	l,a
   2803 3Es01              8119 	ld	a,#>_eighttimes
   2805 CE 00              8120 	adc	a,#0x00
   2807 67                 8121 	ld	h,a
   2808 5E                 8122 	ld	e,(hl)
   2809 23                 8123 	inc	hl
   280A 56                 8124 	ld	d,(hl)
   280B 13                 8125 	inc	de
   280C 13                 8126 	inc	de
   280D 13                 8127 	inc	de
   280E 13                 8128 	inc	de
   280F 79                 8129 	ld	a,c
   2810 83                 8130 	add	a,e
   2811 DD 77 F5           8131 	ld	-11 (ix),a
   2814 78                 8132 	ld	a,b
   2815 8A                 8133 	adc	a,d
   2816 DD 77 F6           8134 	ld	-10 (ix),a
   2819 3E 0E              8135 	ld	a,#0x0E
   281B DD 96 FC           8136 	sub	a,-4 (ix)
   281E 5F                 8137 	ld	e,a
   281F 3E 00              8138 	ld	a,#0x00
   2821 DD 9E FD           8139 	sbc	a,-3 (ix)
   2824 57                 8140 	ld	d,a
   2825 DD 7E F5           8141 	ld	a,-11 (ix)
   2828 83                 8142 	add	a,e
   2829 5F                 8143 	ld	e,a
   282A DD 7E F6           8144 	ld	a,-10 (ix)
   282D 8A                 8145 	adc	a,d
   282E 57                 8146 	ld	d,a
   282F DD 6E F8           8147 	ld	l,-8 (ix)
   2832 DD 66 F9           8148 	ld	h,-7 (ix)
   2835 73                 8149 	ld	(hl),e
   2836 23                 8150 	inc	hl
   2837 72                 8151 	ld	(hl),d
                           8152 ;demo.c:1181: vdp_copier(&cmd);
   2838 C5                 8153 	push	bc
   2839 21rAEs44           8154 	ld	hl,#_cmd
   283C E5                 8155 	push	hl
   283D CDr00s00           8156 	call	_vdp_copier
   2840 F1                 8157 	pop	af
   2841 C1                 8158 	pop	bc
                           8159 ;demo.c:1165: for (x = 0; x < 6; x+=1) {
   2842 DD 34 FF           8160 	inc	-1 (ix)
   2845 C3rFBs26           8161 	jp	00136$
   2848                    8162 00142$:
                           8163 ;demo.c:1164: for (y = 0; y < 5; y+=1) {
   2848 DD 34 FE           8164 	inc	-2 (ix)
   284B C3rE8s26           8165 	jp	00140$
   284E                    8166 00143$:
                           8167 ;demo.c:1186: for (x = 0; x < 6; x+=1) {
   284E DD 36 FF 00        8168 	ld	-1 (ix),#0x00
   2852                    8169 00144$:
   2852 DD 7E FF           8170 	ld	a,-1 (ix)
   2855 D6 06              8171 	sub	a,#0x06
   2857 D2r98s29           8172 	jp	NC,00147$
                           8173 ;demo.c:1187: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   285A DD 5E FF           8174 	ld	e,-1 (ix)
   285D 16 00              8175 	ld	d,#0x00
   285F CB 23              8176 	sla	e
   2861 CB 12              8177 	rl	d
   2863 CB 23              8178 	sla	e
   2865 CB 12              8179 	rl	d
   2867 CB 23              8180 	sla	e
   2869 CB 12              8181 	rl	d
   286B DD 7E FA           8182 	ld	a,-6 (ix)
   286E 83                 8183 	add	a,e
   286F 5F                 8184 	ld	e,a
   2870 DD 7E FB           8185 	ld	a,-5 (ix)
   2873 8A                 8186 	adc	a,d
   2874 57                 8187 	ld	d,a
   2875 21 14 00           8188 	ld	hl,#0x0014
   2878 19                 8189 	add	hl,de
   2879 5D                 8190 	ld	e,l
   287A 16 00              8191 	ld	d,#0x00
   287C 21r00s00           8192 	ld	hl,#_sintab
   287F 19                 8193 	add	hl,de
   2880 5E                 8194 	ld	e,(hl)
   2881 CB 2B              8195 	sra	e
   2883 CB 2B              8196 	sra	e
   2885 CB 2B              8197 	sra	e
   2887 CB 2B              8198 	sra	e
   2889 7B                 8199 	ld	a,e
   288A 17                 8200 	rla	
   288B 9F                 8201 	sbc	a,a
   288C 57                 8202 	ld	d,a
   288D 21 07 00           8203 	ld	hl,#0x0007
   2890 19                 8204 	add	hl,de
   2891 DD 75 FC           8205 	ld	-4 (ix),l
                           8206 ;demo.c:1188: if (px < 0) px = 0; 
   2894 DD 74 FD           8207 	ld	-3 (ix),h
   2897 7C                 8208 	ld	a, h
   2898 CB 7F              8209 	bit	7,a
   289A 28 08              8210 	jr	Z,00122$
   289C DD 36 FC 00        8211 	ld	-4 (ix),#0x00
   28A0 DD 36 FD 00        8212 	ld	-3 (ix),#0x00
   28A4                    8213 00122$:
                           8214 ;demo.c:1189: if (px > 14) px = 14; 
   28A4 3E 0E              8215 	ld	a,#0x0E
   28A6 DD 96 FC           8216 	sub	a,-4 (ix)
   28A9 3E 00              8217 	ld	a,#0x00
   28AB DD 9E FD           8218 	sbc	a,-3 (ix)
   28AE F2rB9s28           8219 	jp	P,00124$
   28B1 DD 36 FC 0E        8220 	ld	-4 (ix),#0x0E
   28B5 DD 36 FD 00        8221 	ld	-3 (ix),#0x00
   28B9                    8222 00124$:
                           8223 ;demo.c:1191: cmd.size_x = 12;
   28B9 11rB6s44           8224 	ld	de,#_cmd + 8
   28BC EB                 8225 	ex	de,hl
   28BD 36 0C              8226 	ld	(hl),#0x0C
   28BF 23                 8227 	inc	hl
   28C0 36 00              8228 	ld	(hl),#0x00
                           8229 ;demo.c:1192: cmd.size_y = 27-(14-px);
   28C2 21rB8s44           8230 	ld	hl,#_cmd + 10
   28C5 DD 75 F5           8231 	ld	-11 (ix),l
   28C8 DD 74 F6           8232 	ld	-10 (ix),h
   28CB 3E 0E              8233 	ld	a,#0x0E
   28CD DD 96 FC           8234 	sub	a,-4 (ix)
   28D0 DD 77 F8           8235 	ld	-8 (ix),a
   28D3 3E 00              8236 	ld	a,#0x00
   28D5 DD 9E FD           8237 	sbc	a,-3 (ix)
   28D8 DD 77 F9           8238 	ld	-7 (ix),a
   28DB 3E 1B              8239 	ld	a,#0x1B
   28DD DD 96 F8           8240 	sub	a,-8 (ix)
   28E0 5F                 8241 	ld	e,a
   28E1 3E 00              8242 	ld	a,#0x00
   28E3 DD 9E F9           8243 	sbc	a,-7 (ix)
   28E6 57                 8244 	ld	d,a
   28E7 DD 6E F5           8245 	ld	l,-11 (ix)
   28EA DD 66 F6           8246 	ld	h,-10 (ix)
   28ED 73                 8247 	ld	(hl),e
   28EE 23                 8248 	inc	hl
   28EF 72                 8249 	ld	(hl),d
                           8250 ;demo.c:1193: cmd.data = 0;
   28F0 11rBAs44           8251 	ld	de,#_cmd + 12
   28F3 3E 00              8252 	ld	a,#0x00
   28F5 12                 8253 	ld	(de),a
                           8254 ;demo.c:1194: cmd.argument = 0x00; // from 70xY to left
   28F6 11rBBs44           8255 	ld	de,#_cmd + 13
   28F9 3E 00              8256 	ld	a,#0x00
   28FB 12                 8257 	ld	(de),a
                           8258 ;demo.c:1195: cmd.command = 0x98; // vram to vram, y only
   28FC 11rBCs44           8259 	ld	de,#_cmd + 14
   28FF 3E 98              8260 	ld	a,#0x98
   2901 12                 8261 	ld	(de),a
                           8262 ;demo.c:1197: cmd.source_x = twelvetimes[px];
   2902 DD 5E FC           8263 	ld	e,-4 (ix)
   2905 DD 56 FD           8264 	ld	d,-3 (ix)
   2908 CB 23              8265 	sla	e
   290A CB 12              8266 	rl	d
   290C 21r20s01           8267 	ld	hl,#_twelvetimes
   290F 19                 8268 	add	hl,de
   2910 5E                 8269 	ld	e,(hl)
   2911 23                 8270 	inc	hl
   2912 56                 8271 	ld	d,(hl)
   2913 21rAEs44           8272 	ld	hl,#_cmd
   2916 73                 8273 	ld	(hl),e
   2917 23                 8274 	inc	hl
   2918 72                 8275 	ld	(hl),d
                           8276 ;demo.c:1198: cmd.source_y = 768+183+ 16-px;
   2919 23                 8277 	inc	hl
   291A DD 75 F5           8278 	ld	-11 (ix),l
   291D DD 74 F6           8279 	ld	-10 (ix),h
   2920 3E C7              8280 	ld	a,#0xC7
   2922 DD 96 FC           8281 	sub	a,-4 (ix)
   2925 5F                 8282 	ld	e,a
   2926 3E 03              8283 	ld	a,#0x03
   2928 DD 9E FD           8284 	sbc	a,-3 (ix)
   292B 57                 8285 	ld	d,a
   292C DD 6E F5           8286 	ld	l,-11 (ix)
   292F DD 66 F6           8287 	ld	h,-10 (ix)
   2932 73                 8288 	ld	(hl),e
   2933 23                 8289 	inc	hl
   2934 72                 8290 	ld	(hl),d
                           8291 ;demo.c:1199: cmd.dest_x = 84+twelvetimes[x];
   2935 21rB2s44           8292 	ld	hl,#_cmd + 4
   2938 DD 75 F5           8293 	ld	-11 (ix),l
   293B DD 74 F6           8294 	ld	-10 (ix),h
   293E DD 7E FF           8295 	ld	a,-1 (ix)
   2941 87                 8296 	add	a,a
   2942 C6r20              8297 	add	a,#<_twelvetimes
   2944 6F                 8298 	ld	l,a
   2945 3Es01              8299 	ld	a,#>_twelvetimes
   2947 CE 00              8300 	adc	a,#0x00
   2949 67                 8301 	ld	h,a
   294A 5E                 8302 	ld	e,(hl)
   294B 23                 8303 	inc	hl
   294C 56                 8304 	ld	d,(hl)
   294D 21 54 00           8305 	ld	hl,#0x0054
   2950 19                 8306 	add	hl,de
   2951 EB                 8307 	ex	de,hl
   2952 DD 6E F5           8308 	ld	l,-11 (ix)
   2955 DD 66 F6           8309 	ld	h,-10 (ix)
   2958 73                 8310 	ld	(hl),e
   2959 23                 8311 	inc	hl
   295A 72                 8312 	ld	(hl),d
                           8313 ;demo.c:1200: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   295B 21rB4s44           8314 	ld	hl,#_cmd + 6
   295E DD 75 F5           8315 	ld	-11 (ix),l
   2961 DD 74 F6           8316 	ld	-10 (ix),h
   2964 11r5Es01           8317 	ld	de,#_eighttimes + 10
   2967 EB                 8318 	ex	de,hl
   2968 5E                 8319 	ld	e,(hl)
   2969 23                 8320 	inc	hl
   296A 56                 8321 	ld	d,(hl)
   296B 13                 8322 	inc	de
   296C 13                 8323 	inc	de
   296D 13                 8324 	inc	de
   296E 13                 8325 	inc	de
   296F 79                 8326 	ld	a,c
   2970 83                 8327 	add	a,e
   2971 5F                 8328 	ld	e,a
   2972 78                 8329 	ld	a,b
   2973 8A                 8330 	adc	a,d
   2974 57                 8331 	ld	d,a
   2975 7B                 8332 	ld	a,e
   2976 DD 86 F8           8333 	add	a,-8 (ix)
   2979 5F                 8334 	ld	e,a
   297A 7A                 8335 	ld	a,d
   297B DD 8E F9           8336 	adc	a,-7 (ix)
   297E 57                 8337 	ld	d,a
   297F DD 6E F5           8338 	ld	l,-11 (ix)
   2982 DD 66 F6           8339 	ld	h,-10 (ix)
   2985 73                 8340 	ld	(hl),e
   2986 23                 8341 	inc	hl
   2987 72                 8342 	ld	(hl),d
                           8343 ;demo.c:1201: vdp_copier(&cmd);
   2988 C5                 8344 	push	bc
   2989 21rAEs44           8345 	ld	hl,#_cmd
   298C E5                 8346 	push	hl
   298D CDr00s00           8347 	call	_vdp_copier
   2990 F1                 8348 	pop	af
   2991 C1                 8349 	pop	bc
                           8350 ;demo.c:1186: for (x = 0; x < 6; x+=1) {
   2992 DD 34 FF           8351 	inc	-1 (ix)
   2995 C3r52s28           8352 	jp	00144$
   2998                    8353 00147$:
                           8354 ;demo.c:1205: if (buf == -1) vdp_register(2, 0x1F);
   2998 3Ar91s45           8355 	ld	a,(#_buf+0)
   299B 3C                 8356 	inc	a
   299C 20 06              8357 	jr	NZ,00200$
   299E 3Ar92s45           8358 	ld	a,(#_buf+1)
   29A1 3C                 8359 	inc	a
   29A2 28 02              8360 	jr	Z,00201$
   29A4                    8361 00200$:
   29A4 18 0A              8362 	jr	00126$
   29A6                    8363 00201$:
   29A6 21 02 1F           8364 	ld	hl,#0x1F02
   29A9 E5                 8365 	push	hl
   29AA CDr00s00           8366 	call	_vdp_register
   29AD F1                 8367 	pop	af
   29AE 18 08              8368 	jr	00127$
   29B0                    8369 00126$:
                           8370 ;demo.c:1206: else vdp_register(2, 0x3F);
   29B0 21 02 3F           8371 	ld	hl,#0x3F02
   29B3 E5                 8372 	push	hl
   29B4 CDr00s00           8373 	call	_vdp_register
   29B7 F1                 8374 	pop	af
   29B8                    8375 00127$:
                           8376 ;demo.c:1209: buf = -buf;
   29B8 AF                 8377 	xor	a,a
   29B9 FD 21r91s45        8378 	ld	iy,#_buf
   29BD 3E 00              8379 	ld	a,#0x00
   29BF FD 9E 00           8380 	sbc	a,0 (iy)
   29C2 21r91s45           8381 	ld	hl,#_buf + 0
   29C5 77                 8382 	ld	(hl), a
   29C6 FD 21r91s45        8383 	ld	iy,#_buf
   29CA 3E 00              8384 	ld	a,#0x00
   29CC FD 9E 01           8385 	sbc	a,1 (iy)
   29CF 21r92s45           8386 	ld	hl,#_buf + 1
   29D2 77                 8387 	ld	(hl), a
                           8388 ;demo.c:1211: ffa+=8;
   29D3 21r93s45           8389 	ld	hl,#_ffa
   29D6 7E                 8390 	ld	a,(hl)
   29D7 C6 08              8391 	add	a,#0x08
   29D9 23                 8392 	inc	hl
   29DA 2B                 8393 	dec	hl
   29DB C5                 8394 	push	bc
   29DC 4F                 8395 	ld	c, a
   29DD 23                 8396 	inc	hl
   29DE 7E                 8397 	ld	a, (hl)
   29DF 47                 8398 	ld	b, a
   29E0 79                 8399 	ld	a, c
   29E1 2B                 8400 	dec	hl
   29E2 77                 8401 	ld	(hl), a
   29E3 78                 8402 	ld	a, b
   29E4 C1                 8403 	pop	bc
   29E5 CE 00              8404 	adc	a,#0x00
   29E7 23                 8405 	inc	hl
   29E8 77                 8406 	ld	(hl),a
   29E9 DD F9              8407 	ld	sp,ix
   29EB DD E1              8408 	pop	ix
   29ED C9                 8409 	ret
   29EE                    8410 _thewave_end::
                           8411 ;demo.c:1217: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           8412 ;	---------------------------------
                           8413 ; Function drawtritile
                           8414 ; ---------------------------------
   29EE                    8415 _drawtritile_start::
   29EE                    8416 _drawtritile:
   29EE DD E5              8417 	push	ix
   29F0 DD 21 00 00        8418 	ld	ix,#0
   29F4 DD 39              8419 	add	ix,sp
                           8420 ;demo.c:1218: cmd.source_x = tx;
   29F6 DD 4E 04           8421 	ld	c,4 (ix)
   29F9 06 00              8422 	ld	b,#0x00
   29FB 21rAEs44           8423 	ld	hl,#_cmd
   29FE 71                 8424 	ld	(hl),c
   29FF 23                 8425 	inc	hl
   2A00 70                 8426 	ld	(hl),b
                           8427 ;demo.c:1219: cmd.source_y = ty-1;
   2A01 01rB0s44           8428 	ld	bc,#_cmd + 2
   2A04 DD 5E 05           8429 	ld	e,5 (ix)
   2A07 DD 56 06           8430 	ld	d,6 (ix)
   2A0A 1B                 8431 	dec	de
   2A0B 69                 8432 	ld	l,c
   2A0C 60                 8433 	ld	h,b
   2A0D 73                 8434 	ld	(hl),e
   2A0E 23                 8435 	inc	hl
   2A0F 72                 8436 	ld	(hl),d
                           8437 ;demo.c:1220: cmd.dest_x = x;
   2A10 01rB2s44           8438 	ld	bc,#_cmd + 4
   2A13 DD 5E 07           8439 	ld	e,7 (ix)
   2A16 16 00              8440 	ld	d,#0x00
   2A18 69                 8441 	ld	l,c
   2A19 60                 8442 	ld	h,b
   2A1A 73                 8443 	ld	(hl),e
   2A1B 23                 8444 	inc	hl
   2A1C 72                 8445 	ld	(hl),d
                           8446 ;demo.c:1221: cmd.dest_y = y;
   2A1D 01rB4s44           8447 	ld	bc,#_cmd + 6
   2A20 DD 5E 08           8448 	ld	e,8 (ix)
   2A23 16 00              8449 	ld	d,#0x00
   2A25 69                 8450 	ld	l,c
   2A26 60                 8451 	ld	h,b
   2A27 73                 8452 	ld	(hl),e
   2A28 23                 8453 	inc	hl
   2A29 72                 8454 	ld	(hl),d
                           8455 ;demo.c:1222: cmd.size_x = 16;
   2A2A 21rB6s44           8456 	ld	hl, #_cmd + 8
   2A2D 36 10              8457 	ld	(hl),#0x10
   2A2F 23                 8458 	inc	hl
   2A30 36 00              8459 	ld	(hl),#0x00
                           8460 ;demo.c:1223: cmd.size_y = 16;
   2A32 21rB8s44           8461 	ld	hl, #_cmd + 10
   2A35 36 10              8462 	ld	(hl),#0x10
   2A37 23                 8463 	inc	hl
   2A38 36 00              8464 	ld	(hl),#0x00
                           8465 ;demo.c:1224: cmd.data = 0;
                           8466 ;demo.c:1225: cmd.argument = 0x00;
   2A3A 3E 00              8467 	ld	a,#0x00
   2A3C 32rBAs44           8468 	ld	(#_cmd + 12),a
   2A3F 32rBBs44           8469 	ld	(#_cmd + 13),a
                           8470 ;demo.c:1226: cmd.command = 0xd0; // HMMM
   2A42 3E D0              8471 	ld	a,#0xD0
   2A44 32rBCs44           8472 	ld	(#_cmd + 14),a
                           8473 ;demo.c:1227: vdp_copier(&cmd);
   2A47 21rAEs44           8474 	ld	hl,#_cmd
   2A4A E5                 8475 	push	hl
   2A4B CDr00s00           8476 	call	_vdp_copier
   2A4E F1                 8477 	pop	af
   2A4F DD E1              8478 	pop	ix
   2A51 C9                 8479 	ret
   2A52                    8480 _drawtritile_end::
                           8481 ;demo.c:1234: void drawtilescreen(char* tripic) {
                           8482 ;	---------------------------------
                           8483 ; Function drawtilescreen
                           8484 ; ---------------------------------
   2A52                    8485 _drawtilescreen_start::
   2A52                    8486 _drawtilescreen:
   2A52 DD E5              8487 	push	ix
   2A54 DD 21 00 00        8488 	ld	ix,#0
   2A58 DD 39              8489 	add	ix,sp
   2A5A F5                 8490 	push	af
   2A5B 3B                 8491 	dec	sp
                           8492 ;demo.c:1236: if(tilei >= 192) return;
   2A5C 3Ar96s45           8493 	ld	a,(#_tilei+0)
   2A5F D6 C0              8494 	sub	a,#0xC0
   2A61 3Ar97s45           8495 	ld	a,(#_tilei+1)
   2A64 DE 00              8496 	sbc	a,#0x00
   2A66 FAr6Cs2A           8497 	jp	M,00102$
   2A69 C3r37s2B           8498 	jp	00112$
   2A6C                    8499 00102$:
                           8500 ;demo.c:1238: tiletick++;
   2A6C FD 21r9Cs45        8501 	ld	iy,#_tiletick
   2A70 FD 34 00           8502 	inc	0 (iy)
                           8503 ;demo.c:1239: if (tiletick > 6) { tiletick = 0;}
   2A73 3E 06              8504 	ld	a,#0x06
   2A75 FD 21r9Cs45        8505 	ld	iy,#_tiletick
   2A79 FD 96 00           8506 	sub	a,0 (iy)
   2A7C 30 0A              8507 	jr	NC,00104$
   2A7E FD 21r9Cs45        8508 	ld	iy,#_tiletick
   2A82 FD 36 00 00        8509 	ld	0 (iy),#0x00
   2A86 18 03              8510 	jr	00118$
   2A88                    8511 00104$:
                           8512 ;demo.c:1240: else return;
   2A88 C3r37s2B           8513 	jp	00112$
                           8514 ;demo.c:1241: for (i=0;i<20;i++) {
   2A8B                    8515 00118$:
   2A8B DD 36 FF 00        8516 	ld	-1 (ix),#0x00
   2A8F                    8517 00108$:
   2A8F DD 7E FF           8518 	ld	a,-1 (ix)
   2A92 D6 14              8519 	sub	a,#0x14
   2A94 D2r37s2B           8520 	jp	NC,00112$
                           8521 ;demo.c:1242: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2A97 3Ar9As45           8522 	ld	a,(#_tiley+0)
   2A9A DD 77 FD           8523 	ld	-3 (ix),a
   2A9D 3Ar98s45           8524 	ld	a,(#_tilex+0)
   2AA0 DD 77 FE           8525 	ld	-2 (ix),a
   2AA3 21r96s45           8526 	ld	hl,#_tilei
   2AA6 DD 7E 04           8527 	ld	a,4 (ix)
   2AA9 86                 8528 	add	a,(hl)
   2AAA 57                 8529 	ld	d,a
   2AAB DD 7E 05           8530 	ld	a,5 (ix)
   2AAE 23                 8531 	inc	hl
   2AAF 8E                 8532 	adc	a,(hl)
   2AB0 6A                 8533 	ld	l,d
   2AB1 67                 8534 	ld	h,a
   2AB2 56                 8535 	ld	d,(hl)
   2AB3 7A                 8536 	ld	a,d
   2AB4 87                 8537 	add	a,a
   2AB5 C6r88              8538 	add	a,#<_tri_lookup_y
   2AB7 6F                 8539 	ld	l,a
   2AB8 3Es01              8540 	ld	a,#>_tri_lookup_y
   2ABA CE 00              8541 	adc	a,#0x00
   2ABC 67                 8542 	ld	h,a
   2ABD 4E                 8543 	ld	c,(hl)
   2ABE 23                 8544 	inc	hl
   2ABF 5E                 8545 	ld	e,(hl)
   2AC0 3Er00              8546 	ld	a,#<_tri_lookup_x
   2AC2 82                 8547 	add	a,d
   2AC3 6F                 8548 	ld	l,a
   2AC4 3Es01              8549 	ld	a,#>_tri_lookup_x
   2AC6 CE 00              8550 	adc	a,#0x00
   2AC8 67                 8551 	ld	h,a
   2AC9 56                 8552 	ld	d,(hl)
   2ACA DD 66 FD           8553 	ld	h,-3 (ix)
   2ACD DD 6E FE           8554 	ld	l,-2 (ix)
   2AD0 E5                 8555 	push	hl
   2AD1 69                 8556 	ld	l,c
   2AD2 63                 8557 	ld	h,e
   2AD3 E5                 8558 	push	hl
   2AD4 D5                 8559 	push	de
   2AD5 33                 8560 	inc	sp
   2AD6 CDrEEs29           8561 	call	_drawtritile
   2AD9 F1                 8562 	pop	af
   2ADA F1                 8563 	pop	af
   2ADB 33                 8564 	inc	sp
                           8565 ;demo.c:1243: tilex+=16;
   2ADC 21r98s45           8566 	ld	hl,#_tilex
   2ADF 7E                 8567 	ld	a,(hl)
   2AE0 C6 10              8568 	add	a,#0x10
   2AE2 23                 8569 	inc	hl
   2AE3 2B                 8570 	dec	hl
   2AE4 C5                 8571 	push	bc
   2AE5 4F                 8572 	ld	c, a
   2AE6 23                 8573 	inc	hl
   2AE7 7E                 8574 	ld	a, (hl)
   2AE8 47                 8575 	ld	b, a
   2AE9 79                 8576 	ld	a, c
   2AEA 2B                 8577 	dec	hl
   2AEB 77                 8578 	ld	(hl), a
   2AEC 78                 8579 	ld	a, b
   2AED C1                 8580 	pop	bc
   2AEE CE 00              8581 	adc	a,#0x00
   2AF0 23                 8582 	inc	hl
   2AF1 77                 8583 	ld	(hl),a
                           8584 ;demo.c:1244: tilei++;
   2AF2 FD 21r96s45        8585 	ld	iy,#_tilei
   2AF6 FD 34 00           8586 	inc	0 (iy)
   2AF9 20 07              8587 	jr	NZ,00119$
   2AFB FD 21r96s45        8588 	ld	iy,#_tilei
   2AFF FD 34 01           8589 	inc	1 (iy)
   2B02                    8590 00119$:
                           8591 ;demo.c:1245: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   2B02 3Ar98s45           8592 	ld	a,(#_tilex+0)
   2B05 D6 00              8593 	sub	a,#0x00
   2B07 3Ar99s45           8594 	ld	a,(#_tilex+1)
   2B0A DE 01              8595 	sbc	a,#0x01
   2B0C FAr31s2B           8596 	jp	M,00110$
   2B0F 21r98s45           8597 	ld	hl,#_tilex + 0
   2B12 36 00              8598 	ld	(hl), #0x00
   2B14 21r99s45           8599 	ld	hl,#_tilex + 1
   2B17 36 00              8600 	ld	(hl), #0x00
   2B19 21r9As45           8601 	ld	hl,#_tiley
   2B1C 7E                 8602 	ld	a,(hl)
   2B1D C6 10              8603 	add	a,#0x10
   2B1F 23                 8604 	inc	hl
   2B20 2B                 8605 	dec	hl
   2B21 C5                 8606 	push	bc
   2B22 4F                 8607 	ld	c, a
   2B23 23                 8608 	inc	hl
   2B24 7E                 8609 	ld	a, (hl)
   2B25 47                 8610 	ld	b, a
   2B26 79                 8611 	ld	a, c
   2B27 2B                 8612 	dec	hl
   2B28 77                 8613 	ld	(hl), a
   2B29 78                 8614 	ld	a, b
   2B2A C1                 8615 	pop	bc
   2B2B CE 00              8616 	adc	a,#0x00
   2B2D 23                 8617 	inc	hl
   2B2E 77                 8618 	ld	(hl),a
   2B2F 18 06              8619 	jr	00112$
   2B31                    8620 00110$:
                           8621 ;demo.c:1241: for (i=0;i<20;i++) {
   2B31 DD 34 FF           8622 	inc	-1 (ix)
   2B34 C3r8Fs2A           8623 	jp	00108$
   2B37                    8624 00112$:
   2B37 DD F9              8625 	ld	sp,ix
   2B39 DD E1              8626 	pop	ix
   2B3B C9                 8627 	ret
   2B3C                    8628 _drawtilescreen_end::
                           8629 ;demo.c:1250: void drawtilescreen_full(char* tripic) {
                           8630 ;	---------------------------------
                           8631 ; Function drawtilescreen_full
                           8632 ; ---------------------------------
   2B3C                    8633 _drawtilescreen_full_start::
   2B3C                    8634 _drawtilescreen_full:
   2B3C DD E5              8635 	push	ix
   2B3E DD 21 00 00        8636 	ld	ix,#0
   2B42 DD 39              8637 	add	ix,sp
   2B44 21 F8 FF           8638 	ld	hl,#-8
   2B47 39                 8639 	add	hl,sp
   2B48 F9                 8640 	ld	sp,hl
                           8641 ;demo.c:1251: int x = 0;
   2B49 DD 36 FE 00        8642 	ld	-2 (ix),#0x00
   2B4D DD 36 FF 00        8643 	ld	-1 (ix),#0x00
                           8644 ;demo.c:1254: while(i < 192) {
   2B51 DD 36 FC 00        8645 	ld	-4 (ix),#0x00
   2B55 DD 36 FD 00        8646 	ld	-3 (ix),#0x00
   2B59 DD 36 FA 00        8647 	ld	-6 (ix),#0x00
   2B5D DD 36 FB 00        8648 	ld	-5 (ix),#0x00
   2B61                    8649 00103$:
   2B61 DD 7E FA           8650 	ld	a,-6 (ix)
   2B64 D6 C0              8651 	sub	a,#0xC0
   2B66 DD 7E FB           8652 	ld	a,-5 (ix)
   2B69 DE 00              8653 	sbc	a,#0x00
   2B6B F2rF2s2B           8654 	jp	P,00106$
                           8655 ;demo.c:1255: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2B6E DD 7E FC           8656 	ld	a,-4 (ix)
   2B71 DD 77 F8           8657 	ld	-8 (ix),a
   2B74 DD 7E FE           8658 	ld	a,-2 (ix)
   2B77 DD 77 F9           8659 	ld	-7 (ix),a
   2B7A DD 7E 04           8660 	ld	a,4 (ix)
   2B7D DD 86 FA           8661 	add	a,-6 (ix)
   2B80 4F                 8662 	ld	c,a
   2B81 DD 7E 05           8663 	ld	a,5 (ix)
   2B84 DD 8E FB           8664 	adc	a,-5 (ix)
   2B87 47                 8665 	ld	b,a
   2B88 0A                 8666 	ld	a,(bc)
   2B89 4F                 8667 	ld	c,a
   2B8A 87                 8668 	add	a,a
   2B8B C6r88              8669 	add	a,#<_tri_lookup_y
   2B8D 6F                 8670 	ld	l,a
   2B8E 3Es01              8671 	ld	a,#>_tri_lookup_y
   2B90 CE 00              8672 	adc	a,#0x00
   2B92 67                 8673 	ld	h,a
   2B93 46                 8674 	ld	b,(hl)
   2B94 23                 8675 	inc	hl
   2B95 56                 8676 	ld	d,(hl)
   2B96 3Er00              8677 	ld	a,#<_tri_lookup_x
   2B98 81                 8678 	add	a,c
   2B99 6F                 8679 	ld	l,a
   2B9A 3Es01              8680 	ld	a,#>_tri_lookup_x
   2B9C CE 00              8681 	adc	a,#0x00
   2B9E 67                 8682 	ld	h,a
   2B9F 4E                 8683 	ld	c,(hl)
   2BA0 DD 66 F8           8684 	ld	h,-8 (ix)
   2BA3 DD 6E F9           8685 	ld	l,-7 (ix)
   2BA6 E5                 8686 	push	hl
   2BA7 58                 8687 	ld	e,b
   2BA8 D5                 8688 	push	de
   2BA9 79                 8689 	ld	a,c
   2BAA F5                 8690 	push	af
   2BAB 33                 8691 	inc	sp
   2BAC CDrEEs29           8692 	call	_drawtritile
   2BAF F1                 8693 	pop	af
   2BB0 F1                 8694 	pop	af
   2BB1 33                 8695 	inc	sp
                           8696 ;demo.c:1256: x+=16;
   2BB2 DD 7E FE           8697 	ld	a,-2 (ix)
   2BB5 C6 10              8698 	add	a,#0x10
   2BB7 DD 77 FE           8699 	ld	-2 (ix),a
   2BBA DD 7E FF           8700 	ld	a,-1 (ix)
   2BBD CE 00              8701 	adc	a,#0x00
   2BBF DD 77 FF           8702 	ld	-1 (ix),a
                           8703 ;demo.c:1257: if (x >= 256) {x = 0; y+=16;}
   2BC2 DD 7E FE           8704 	ld	a,-2 (ix)
   2BC5 D6 00              8705 	sub	a,#0x00
   2BC7 DD 7E FF           8706 	ld	a,-1 (ix)
   2BCA DE 01              8707 	sbc	a,#0x01
   2BCC FArE7s2B           8708 	jp	M,00102$
   2BCF DD 36 FE 00        8709 	ld	-2 (ix),#0x00
   2BD3 DD 36 FF 00        8710 	ld	-1 (ix),#0x00
   2BD7 DD 7E FC           8711 	ld	a,-4 (ix)
   2BDA C6 10              8712 	add	a,#0x10
   2BDC DD 77 FC           8713 	ld	-4 (ix),a
   2BDF DD 7E FD           8714 	ld	a,-3 (ix)
   2BE2 CE 00              8715 	adc	a,#0x00
   2BE4 DD 77 FD           8716 	ld	-3 (ix),a
   2BE7                    8717 00102$:
                           8718 ;demo.c:1258: i++;
   2BE7 DD 34 FA           8719 	inc	-6 (ix)
   2BEA 20 03              8720 	jr	NZ,00112$
   2BEC DD 34 FB           8721 	inc	-5 (ix)
   2BEF                    8722 00112$:
   2BEF C3r61s2B           8723 	jp	00103$
   2BF2                    8724 00106$:
   2BF2 DD F9              8725 	ld	sp,ix
   2BF4 DD E1              8726 	pop	ix
   2BF6 C9                 8727 	ret
   2BF7                    8728 _drawtilescreen_full_end::
                           8729 ;demo.c:1274: void tritiles() {
                           8730 ;	---------------------------------
                           8731 ; Function tritiles
                           8732 ; ---------------------------------
   2BF7                    8733 _tritiles_start::
   2BF7                    8734 _tritiles:
   2BF7 DD E5              8735 	push	ix
   2BF9 DD 21 00 00        8736 	ld	ix,#0
   2BFD DD 39              8737 	add	ix,sp
   2BFF 21 FB FF           8738 	ld	hl,#-5
   2C02 39                 8739 	add	hl,sp
   2C03 F9                 8740 	ld	sp,hl
                           8741 ;demo.c:1281: if (tri_inited == 0 || tri_inited == 2) {
   2C04 AF                 8742 	xor	a,a
   2C05 FD 21r95s45        8743 	ld	iy,#_tri_inited
   2C09 FD B6 00           8744 	or	a,0 (iy)
   2C0C 28 0C              8745 	jr	Z,00109$
   2C0E FD 21r95s45        8746 	ld	iy,#_tri_inited
   2C12 FD 7E 00           8747 	ld	a,0 (iy)
   2C15 D6 02              8748 	sub	a,#0x02
   2C17 C2r23s2D           8749 	jp	NZ,00110$
   2C1A                    8750 00109$:
                           8751 ;demo.c:1283: cmd.size_x = 2;
   2C1A 21rB6s44           8752 	ld	hl, #_cmd + 8
   2C1D 36 02              8753 	ld	(hl),#0x02
   2C1F 23                 8754 	inc	hl
   2C20 36 00              8755 	ld	(hl),#0x00
                           8756 ;demo.c:1284: cmd.size_y = 212;
   2C22 21rB8s44           8757 	ld	hl, #_cmd + 10
   2C25 36 D4              8758 	ld	(hl),#0xD4
   2C27 23                 8759 	inc	hl
   2C28 36 00              8760 	ld	(hl),#0x00
                           8761 ;demo.c:1285: cmd.data = 0;
                           8762 ;demo.c:1286: cmd.argument = 0x00; // from 70xY to left
   2C2A 3E 00              8763 	ld	a,#0x00
   2C2C 32rBAs44           8764 	ld	(#_cmd + 12),a
   2C2F 32rBBs44           8765 	ld	(#_cmd + 13),a
                           8766 ;demo.c:1287: cmd.command = 0xd0; // vram to vram, y only
   2C32 01rBCs44           8767 	ld	bc,#_cmd + 14
   2C35 3E D0              8768 	ld	a,#0xD0
   2C37 02                 8769 	ld	(bc),a
                           8770 ;demo.c:1288: cmd.source_x = 255;
   2C38 21rAEs44           8771 	ld	hl,#_cmd
   2C3B 36 FF              8772 	ld	(hl),#0xFF
   2C3D 23                 8773 	inc	hl
   2C3E 36 00              8774 	ld	(hl),#0x00
                           8775 ;demo.c:1289: cmd.source_y = 0;
   2C40 21rB0s44           8776 	ld	hl, #_cmd + 2
   2C43 36 00              8777 	ld	(hl),#0x00
   2C45 23                 8778 	inc	hl
   2C46 36 00              8779 	ld	(hl),#0x00
                           8780 ;demo.c:1291: for (x = 0; x < 256; x+=2) {
   2C48 01 00 00           8781 	ld	bc,#0x0000
   2C4B                    8782 00170$:
   2C4B 79                 8783 	ld	a,c
   2C4C D6 00              8784 	sub	a,#0x00
   2C4E 78                 8785 	ld	a,b
   2C4F DE 01              8786 	sbc	a,#0x01
   2C51 F2r86s2C           8787 	jp	P,00173$
                           8788 ;demo.c:1292: waitVB();
   2C54 76                 8789 		halt 
                           8790 ;demo.c:1293: cmd.dest_y = 256;
   2C55 11rB4s44           8791 	ld	de,#_cmd + 6
   2C58 EB                 8792 	ex	de,hl
   2C59 36 00              8793 	ld	(hl),#0x00
   2C5B 23                 8794 	inc	hl
   2C5C 36 01              8795 	ld	(hl),#0x01
                           8796 ;demo.c:1294: cmd.dest_x = x;
   2C5E 11rB2s44           8797 	ld	de,#_cmd + 4
   2C61 EB                 8798 	ex	de,hl
   2C62 71                 8799 	ld	(hl),c
   2C63 23                 8800 	inc	hl
   2C64 70                 8801 	ld	(hl),b
                           8802 ;demo.c:1295: vdp_copier(&cmd);
   2C65 C5                 8803 	push	bc
   2C66 21rAEs44           8804 	ld	hl,#_cmd
   2C69 E5                 8805 	push	hl
   2C6A CDr00s00           8806 	call	_vdp_copier
   2C6D F1                 8807 	pop	af
   2C6E C1                 8808 	pop	bc
                           8809 ;demo.c:1296: cmd.dest_y = 0;
   2C6F 11rB4s44           8810 	ld	de,#_cmd + 6
   2C72 EB                 8811 	ex	de,hl
   2C73 36 00              8812 	ld	(hl),#0x00
   2C75 23                 8813 	inc	hl
   2C76 36 00              8814 	ld	(hl),#0x00
                           8815 ;demo.c:1297: vdp_copier(&cmd);
   2C78 C5                 8816 	push	bc
   2C79 21rAEs44           8817 	ld	hl,#_cmd
   2C7C E5                 8818 	push	hl
   2C7D CDr00s00           8819 	call	_vdp_copier
   2C80 F1                 8820 	pop	af
   2C81 C1                 8821 	pop	bc
                           8822 ;demo.c:1291: for (x = 0; x < 256; x+=2) {
   2C82 03                 8823 	inc	bc
   2C83 03                 8824 	inc	bc
   2C84 18 C5              8825 	jr	00170$
   2C86                    8826 00173$:
                           8827 ;demo.c:1300: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   2C86 AF                 8828 	xor	a,a
   2C87 21r95s45           8829 	ld	hl,#_tri_inited + 0
   2C8A B6                 8830 	or	a,(hl)
   2C8B 20 0A              8831 	jr	NZ,00104$
   2C8D 21r6As44           8832 	ld	hl,#_boxes_palette
   2C90 E5                 8833 	push	hl
   2C91 CDr00s00           8834 	call	_vdp_load_palette
   2C94 F1                 8835 	pop	af
   2C95 18 46              8836 	jr	00105$
   2C97                    8837 00104$:
                           8838 ;demo.c:1301: else if (tri_inited == 2) { 
   2C97 3Ar95s45           8839 	ld	a,(#_tri_inited+0)
   2C9A D6 02              8840 	sub	a,#0x02
   2C9C 20 3F              8841 	jr	NZ,00105$
                           8842 ;demo.c:1302: vdp_load_palette(boxes_palette); 
   2C9E 21r6As44           8843 	ld	hl,#_boxes_palette
   2CA1 E5                 8844 	push	hl
   2CA2 CDr00s00           8845 	call	_vdp_load_palette
   2CA5 F1                 8846 	pop	af
                           8847 ;demo.c:1303: triframes = 0; 
   2CA6 21rA8s45           8848 	ld	hl,#_triframes + 0
   2CA9 36 00              8849 	ld	(hl), #0x00
   2CAB 21rA9s45           8850 	ld	hl,#_triframes + 1
   2CAE 36 00              8851 	ld	(hl), #0x00
                           8852 ;demo.c:1305: tripal[0] = 4;
   2CB0 21r9Ds45           8853 	ld	hl,#_tripal
   2CB3 36 04              8854 	ld	(hl),#0x04
                           8855 ;demo.c:1306: tripal[1] = 4;
   2CB5 3E 04              8856 	ld	a,#0x04
   2CB7 32r9Es45           8857 	ld	(#_tripal + 1),a
                           8858 ;demo.c:1307: tripal[2] = 3;
   2CBA 3E 03              8859 	ld	a,#0x03
   2CBC 32r9Fs45           8860 	ld	(#_tripal + 2),a
                           8861 ;demo.c:1309: tripal[3] = 2;
   2CBF 3E 02              8862 	ld	a,#0x02
   2CC1 32rA0s45           8863 	ld	(#_tripal + 3),a
                           8864 ;demo.c:1310: tripal[4] = 3;
   2CC4 3E 03              8865 	ld	a,#0x03
   2CC6 32rA1s45           8866 	ld	(#_tripal + 4),a
                           8867 ;demo.c:1311: tripal[5] = 4;
   2CC9 3E 04              8868 	ld	a,#0x04
   2CCB 32rA2s45           8869 	ld	(#_tripal + 5),a
                           8870 ;demo.c:1313: tripal[6] = 1;
   2CCE 3E 01              8871 	ld	a,#0x01
   2CD0 32rA3s45           8872 	ld	(#_tripal + 6),a
                           8873 ;demo.c:1314: tripal[7] = 3;
   2CD3 3E 03              8874 	ld	a,#0x03
   2CD5 32rA4s45           8875 	ld	(#_tripal + 7),a
                           8876 ;demo.c:1315: tripal[8] = 1;
   2CD8 3E 01              8877 	ld	a,#0x01
   2CDA 32rA5s45           8878 	ld	(#_tripal + 8),a
   2CDD                    8879 00105$:
                           8880 ;demo.c:1317: tri_inited++;
   2CDD FD 21r95s45        8881 	ld	iy,#_tri_inited
   2CE1 FD 34 00           8882 	inc	0 (iy)
                           8883 ;demo.c:1318: vdp_register(9,2); // 50hz,192
   2CE4 21 09 02           8884 	ld	hl,#0x0209
   2CE7 E5                 8885 	push	hl
   2CE8 CDr00s00           8886 	call	_vdp_register
   2CEB F1                 8887 	pop	af
                           8888 ;demo.c:1320: msx2_palette(15,0,0,0);
   2CEC 21 00 00           8889 	ld	hl,#0x0000
   2CEF E5                 8890 	push	hl
   2CF0 2E 0F              8891 	ld	l, #0x0F
   2CF2 E5                 8892 	push	hl
   2CF3 CDr00s00           8893 	call	_msx2_palette
   2CF6 F1                 8894 	pop	af
   2CF7 F1                 8895 	pop	af
                           8896 ;demo.c:1322: if (tri_inited == 1) drawtilescreen_full(tri_center);
   2CF8 3Ar95s45           8897 	ld	a,(#_tri_inited+0)
   2CFB D6 01              8898 	sub	a,#0x01
   2CFD 20 0A              8899 	jr	NZ,00107$
   2CFF 21r2Cs01           8900 	ld	hl,#_tri_center
   2D02 E5                 8901 	push	hl
   2D03 CDr3Cs2B           8902 	call	_drawtilescreen_full
   2D06 F1                 8903 	pop	af
   2D07 18 08              8904 	jr	00108$
   2D09                    8905 00107$:
                           8906 ;demo.c:1323: else drawtilescreen_full(tri_inva2);
   2D09 21rACs05           8907 	ld	hl,#_tri_inva2
   2D0C E5                 8908 	push	hl
   2D0D CDr3Cs2B           8909 	call	_drawtilescreen_full
   2D10 F1                 8910 	pop	af
   2D11                    8911 00108$:
                           8912 ;demo.c:1324: vdp_register(2, 0x1f);
   2D11 21 02 1F           8913 	ld	hl,#0x1F02
   2D14 E5                 8914 	push	hl
   2D15 CDr00s00           8915 	call	_vdp_register
   2D18 F1                 8916 	pop	af
                           8917 ;demo.c:1325: tick = 0;
   2D19 21rACs44           8918 	ld	hl,#_tick + 0
   2D1C 36 00              8919 	ld	(hl), #0x00
   2D1E 21rADs44           8920 	ld	hl,#_tick + 1
   2D21 36 00              8921 	ld	(hl), #0x00
   2D23                    8922 00110$:
                           8923 ;demo.c:1329: if (tri_inited == 1) triframes++;
   2D23 3Ar95s45           8924 	ld	a,(#_tri_inited+0)
   2D26 D6 01              8925 	sub	a,#0x01
   2D28 20 10              8926 	jr	NZ,00113$
   2D2A FD 21rA8s45        8927 	ld	iy,#_triframes
   2D2E FD 34 00           8928 	inc	0 (iy)
   2D31 20 07              8929 	jr	NZ,00231$
   2D33 FD 21rA8s45        8930 	ld	iy,#_triframes
   2D37 FD 34 01           8931 	inc	1 (iy)
   2D3A                    8932 00231$:
   2D3A                    8933 00113$:
                           8934 ;demo.c:1331: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   2D3A 3ArA8s45           8935 	ld	a,(#_triframes+0)
   2D3D D6 96              8936 	sub	a,#0x96
   2D3F 20 06              8937 	jr	NZ,00232$
   2D41 3ArA9s45           8938 	ld	a,(#_triframes+1)
   2D44 B7                 8939 	or	a,a
   2D45 28 02              8940 	jr	Z,00233$
   2D47                    8941 00232$:
   2D47 18 1E              8942 	jr	00115$
   2D49                    8943 00233$:
   2D49 21r96s45           8944 	ld	hl,#_tilei + 0
   2D4C 36 00              8945 	ld	(hl), #0x00
   2D4E 21r97s45           8946 	ld	hl,#_tilei + 1
   2D51 36 00              8947 	ld	(hl), #0x00
   2D53 21r98s45           8948 	ld	hl,#_tilex + 0
   2D56 36 00              8949 	ld	(hl), #0x00
   2D58 21r99s45           8950 	ld	hl,#_tilex + 1
   2D5B 36 00              8951 	ld	(hl), #0x00
   2D5D 21r9As45           8952 	ld	hl,#_tiley + 0
   2D60 36 00              8953 	ld	(hl), #0x00
   2D62 21r9Bs45           8954 	ld	hl,#_tiley + 1
   2D65 36 00              8955 	ld	(hl), #0x00
   2D67                    8956 00115$:
                           8957 ;demo.c:1332: if (triframes >= 150 && triframes < 300) {
   2D67 3ArA8s45           8958 	ld	a,(#_triframes+0)
   2D6A D6 96              8959 	sub	a,#0x96
   2D6C 3ArA9s45           8960 	ld	a,(#_triframes+1)
   2D6F DE 00              8961 	sbc	a,#0x00
   2D71 FAr89s2D           8962 	jp	M,00117$
   2D74 3ArA8s45           8963 	ld	a,(#_triframes+0)
   2D77 D6 2C              8964 	sub	a,#0x2C
   2D79 3ArA9s45           8965 	ld	a,(#_triframes+1)
   2D7C DE 01              8966 	sbc	a,#0x01
   2D7E F2r89s2D           8967 	jp	P,00117$
                           8968 ;demo.c:1333: drawtilescreen(tri_up);
   2D81 21rECs01           8969 	ld	hl,#_tri_up
   2D84 E5                 8970 	push	hl
   2D85 CDr52s2A           8971 	call	_drawtilescreen
   2D88 F1                 8972 	pop	af
   2D89                    8973 00117$:
                           8974 ;demo.c:1336: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2D89 3ArA8s45           8975 	ld	a,(#_triframes+0)
   2D8C D6 2C              8976 	sub	a,#0x2C
   2D8E 20 07              8977 	jr	NZ,00234$
   2D90 3ArA9s45           8978 	ld	a,(#_triframes+1)
   2D93 D6 01              8979 	sub	a,#0x01
   2D95 28 02              8980 	jr	Z,00235$
   2D97                    8981 00234$:
   2D97 18 1E              8982 	jr	00120$
   2D99                    8983 00235$:
   2D99 21r96s45           8984 	ld	hl,#_tilei + 0
   2D9C 36 00              8985 	ld	(hl), #0x00
   2D9E 21r97s45           8986 	ld	hl,#_tilei + 1
   2DA1 36 00              8987 	ld	(hl), #0x00
   2DA3 21r98s45           8988 	ld	hl,#_tilex + 0
   2DA6 36 00              8989 	ld	(hl), #0x00
   2DA8 21r99s45           8990 	ld	hl,#_tilex + 1
   2DAB 36 00              8991 	ld	(hl), #0x00
   2DAD 21r9As45           8992 	ld	hl,#_tiley + 0
   2DB0 36 00              8993 	ld	(hl), #0x00
   2DB2 21r9Bs45           8994 	ld	hl,#_tiley + 1
   2DB5 36 00              8995 	ld	(hl), #0x00
   2DB7                    8996 00120$:
                           8997 ;demo.c:1337: if (triframes >= 300 && triframes < 450) {
   2DB7 3ArA8s45           8998 	ld	a,(#_triframes+0)
   2DBA D6 2C              8999 	sub	a,#0x2C
   2DBC 3ArA9s45           9000 	ld	a,(#_triframes+1)
   2DBF DE 01              9001 	sbc	a,#0x01
   2DC1 FArD9s2D           9002 	jp	M,00122$
   2DC4 3ArA8s45           9003 	ld	a,(#_triframes+0)
   2DC7 D6 C2              9004 	sub	a,#0xC2
   2DC9 3ArA9s45           9005 	ld	a,(#_triframes+1)
   2DCC DE 01              9006 	sbc	a,#0x01
   2DCE F2rD9s2D           9007 	jp	P,00122$
                           9008 ;demo.c:1338: drawtilescreen(tri_dia);
   2DD1 21rACs02           9009 	ld	hl,#_tri_dia
   2DD4 E5                 9010 	push	hl
   2DD5 CDr52s2A           9011 	call	_drawtilescreen
   2DD8 F1                 9012 	pop	af
   2DD9                    9013 00122$:
                           9014 ;demo.c:1341: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   2DD9 3ArA8s45           9015 	ld	a,(#_triframes+0)
   2DDC D6 C2              9016 	sub	a,#0xC2
   2DDE 20 07              9017 	jr	NZ,00236$
   2DE0 3ArA9s45           9018 	ld	a,(#_triframes+1)
   2DE3 D6 01              9019 	sub	a,#0x01
   2DE5 28 02              9020 	jr	Z,00237$
   2DE7                    9021 00236$:
   2DE7 18 1E              9022 	jr	00125$
   2DE9                    9023 00237$:
   2DE9 21r96s45           9024 	ld	hl,#_tilei + 0
   2DEC 36 00              9025 	ld	(hl), #0x00
   2DEE 21r97s45           9026 	ld	hl,#_tilei + 1
   2DF1 36 00              9027 	ld	(hl), #0x00
   2DF3 21r98s45           9028 	ld	hl,#_tilex + 0
   2DF6 36 00              9029 	ld	(hl), #0x00
   2DF8 21r99s45           9030 	ld	hl,#_tilex + 1
   2DFB 36 00              9031 	ld	(hl), #0x00
   2DFD 21r9As45           9032 	ld	hl,#_tiley + 0
   2E00 36 00              9033 	ld	(hl), #0x00
   2E02 21r9Bs45           9034 	ld	hl,#_tiley + 1
   2E05 36 00              9035 	ld	(hl), #0x00
   2E07                    9036 00125$:
                           9037 ;demo.c:1342: if (triframes >= 450 && triframes < 600) {
   2E07 3ArA8s45           9038 	ld	a,(#_triframes+0)
   2E0A D6 C2              9039 	sub	a,#0xC2
   2E0C 3ArA9s45           9040 	ld	a,(#_triframes+1)
   2E0F DE 01              9041 	sbc	a,#0x01
   2E11 FAr29s2E           9042 	jp	M,00127$
   2E14 3ArA8s45           9043 	ld	a,(#_triframes+0)
   2E17 D6 58              9044 	sub	a,#0x58
   2E19 3ArA9s45           9045 	ld	a,(#_triframes+1)
   2E1C DE 02              9046 	sbc	a,#0x02
   2E1E F2r29s2E           9047 	jp	P,00127$
                           9048 ;demo.c:1343: drawtilescreen(tri_side1);
   2E21 21r6Cs03           9049 	ld	hl,#_tri_side1
   2E24 E5                 9050 	push	hl
   2E25 CDr52s2A           9051 	call	_drawtilescreen
   2E28 F1                 9052 	pop	af
   2E29                    9053 00127$:
                           9054 ;demo.c:1346: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2E29 3ArA8s45           9055 	ld	a,(#_triframes+0)
   2E2C D6 58              9056 	sub	a,#0x58
   2E2E 20 07              9057 	jr	NZ,00238$
   2E30 3ArA9s45           9058 	ld	a,(#_triframes+1)
   2E33 D6 02              9059 	sub	a,#0x02
   2E35 28 02              9060 	jr	Z,00239$
   2E37                    9061 00238$:
   2E37 18 1E              9062 	jr	00130$
   2E39                    9063 00239$:
   2E39 21r96s45           9064 	ld	hl,#_tilei + 0
   2E3C 36 00              9065 	ld	(hl), #0x00
   2E3E 21r97s45           9066 	ld	hl,#_tilei + 1
   2E41 36 00              9067 	ld	(hl), #0x00
   2E43 21r98s45           9068 	ld	hl,#_tilex + 0
   2E46 36 00              9069 	ld	(hl), #0x00
   2E48 21r99s45           9070 	ld	hl,#_tilex + 1
   2E4B 36 00              9071 	ld	(hl), #0x00
   2E4D 21r9As45           9072 	ld	hl,#_tiley + 0
   2E50 36 00              9073 	ld	(hl), #0x00
   2E52 21r9Bs45           9074 	ld	hl,#_tiley + 1
   2E55 36 00              9075 	ld	(hl), #0x00
   2E57                    9076 00130$:
                           9077 ;demo.c:1347: if (triframes >= 600 && triframes < 750) {
   2E57 3ArA8s45           9078 	ld	a,(#_triframes+0)
   2E5A D6 58              9079 	sub	a,#0x58
   2E5C 3ArA9s45           9080 	ld	a,(#_triframes+1)
   2E5F DE 02              9081 	sbc	a,#0x02
   2E61 FAr79s2E           9082 	jp	M,00132$
   2E64 3ArA8s45           9083 	ld	a,(#_triframes+0)
   2E67 D6 EE              9084 	sub	a,#0xEE
   2E69 3ArA9s45           9085 	ld	a,(#_triframes+1)
   2E6C DE 02              9086 	sbc	a,#0x02
   2E6E F2r79s2E           9087 	jp	P,00132$
                           9088 ;demo.c:1348: drawtilescreen(tri_side2);
   2E71 21r2Cs04           9089 	ld	hl,#_tri_side2
   2E74 E5                 9090 	push	hl
   2E75 CDr52s2A           9091 	call	_drawtilescreen
   2E78 F1                 9092 	pop	af
   2E79                    9093 00132$:
                           9094 ;demo.c:1351: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2E79 3ArA8s45           9095 	ld	a,(#_triframes+0)
   2E7C D6 EE              9096 	sub	a,#0xEE
   2E7E 20 07              9097 	jr	NZ,00240$
   2E80 3ArA9s45           9098 	ld	a,(#_triframes+1)
   2E83 D6 02              9099 	sub	a,#0x02
   2E85 28 02              9100 	jr	Z,00241$
   2E87                    9101 00240$:
   2E87 18 1E              9102 	jr	00135$
   2E89                    9103 00241$:
   2E89 21r96s45           9104 	ld	hl,#_tilei + 0
   2E8C 36 00              9105 	ld	(hl), #0x00
   2E8E 21r97s45           9106 	ld	hl,#_tilei + 1
   2E91 36 00              9107 	ld	(hl), #0x00
   2E93 21r98s45           9108 	ld	hl,#_tilex + 0
   2E96 36 00              9109 	ld	(hl), #0x00
   2E98 21r99s45           9110 	ld	hl,#_tilex + 1
   2E9B 36 00              9111 	ld	(hl), #0x00
   2E9D 21r9As45           9112 	ld	hl,#_tiley + 0
   2EA0 36 00              9113 	ld	(hl), #0x00
   2EA2 21r9Bs45           9114 	ld	hl,#_tiley + 1
   2EA5 36 00              9115 	ld	(hl), #0x00
   2EA7                    9116 00135$:
                           9117 ;demo.c:1352: if (triframes >= 750 && triframes < 900) {
   2EA7 3ArA8s45           9118 	ld	a,(#_triframes+0)
   2EAA D6 EE              9119 	sub	a,#0xEE
   2EAC 3ArA9s45           9120 	ld	a,(#_triframes+1)
   2EAF DE 02              9121 	sbc	a,#0x02
   2EB1 FArC9s2E           9122 	jp	M,00137$
   2EB4 3ArA8s45           9123 	ld	a,(#_triframes+0)
   2EB7 D6 84              9124 	sub	a,#0x84
   2EB9 3ArA9s45           9125 	ld	a,(#_triframes+1)
   2EBC DE 03              9126 	sbc	a,#0x03
   2EBE F2rC9s2E           9127 	jp	P,00137$
                           9128 ;demo.c:1353: drawtilescreen(tri_inva1);
   2EC1 21rECs04           9129 	ld	hl,#_tri_inva1
   2EC4 E5                 9130 	push	hl
   2EC5 CDr52s2A           9131 	call	_drawtilescreen
   2EC8 F1                 9132 	pop	af
   2EC9                    9133 00137$:
                           9134 ;demo.c:1356: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   2EC9 3ArA8s45           9135 	ld	a,(#_triframes+0)
   2ECC D6 84              9136 	sub	a,#0x84
   2ECE 20 07              9137 	jr	NZ,00242$
   2ED0 3ArA9s45           9138 	ld	a,(#_triframes+1)
   2ED3 D6 03              9139 	sub	a,#0x03
   2ED5 28 02              9140 	jr	Z,00243$
   2ED7                    9141 00242$:
   2ED7 18 1E              9142 	jr	00140$
   2ED9                    9143 00243$:
   2ED9 21r96s45           9144 	ld	hl,#_tilei + 0
   2EDC 36 00              9145 	ld	(hl), #0x00
   2EDE 21r97s45           9146 	ld	hl,#_tilei + 1
   2EE1 36 00              9147 	ld	(hl), #0x00
   2EE3 21r98s45           9148 	ld	hl,#_tilex + 0
   2EE6 36 00              9149 	ld	(hl), #0x00
   2EE8 21r99s45           9150 	ld	hl,#_tilex + 1
   2EEB 36 00              9151 	ld	(hl), #0x00
   2EED 21r9As45           9152 	ld	hl,#_tiley + 0
   2EF0 36 00              9153 	ld	(hl), #0x00
   2EF2 21r9Bs45           9154 	ld	hl,#_tiley + 1
   2EF5 36 00              9155 	ld	(hl), #0x00
   2EF7                    9156 00140$:
                           9157 ;demo.c:1357: if (triframes >= 900 && triframes < 1050) {
   2EF7 3ArA8s45           9158 	ld	a,(#_triframes+0)
   2EFA D6 84              9159 	sub	a,#0x84
   2EFC 3ArA9s45           9160 	ld	a,(#_triframes+1)
   2EFF DE 03              9161 	sbc	a,#0x03
   2F01 FAr19s2F           9162 	jp	M,00142$
   2F04 3ArA8s45           9163 	ld	a,(#_triframes+0)
   2F07 D6 1A              9164 	sub	a,#0x1A
   2F09 3ArA9s45           9165 	ld	a,(#_triframes+1)
   2F0C DE 04              9166 	sbc	a,#0x04
   2F0E F2r19s2F           9167 	jp	P,00142$
                           9168 ;demo.c:1358: drawtilescreen(tri_inva2);
   2F11 21rACs05           9169 	ld	hl,#_tri_inva2
   2F14 E5                 9170 	push	hl
   2F15 CDr52s2A           9171 	call	_drawtilescreen
   2F18 F1                 9172 	pop	af
   2F19                    9173 00142$:
                           9174 ;demo.c:1361: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2F19 3ArA8s45           9175 	ld	a,(#_triframes+0)
   2F1C D6 1A              9176 	sub	a,#0x1A
   2F1E 20 07              9177 	jr	NZ,00244$
   2F20 3ArA9s45           9178 	ld	a,(#_triframes+1)
   2F23 D6 04              9179 	sub	a,#0x04
   2F25 28 02              9180 	jr	Z,00245$
   2F27                    9181 00244$:
   2F27 18 1E              9182 	jr	00145$
   2F29                    9183 00245$:
   2F29 21r96s45           9184 	ld	hl,#_tilei + 0
   2F2C 36 00              9185 	ld	(hl), #0x00
   2F2E 21r97s45           9186 	ld	hl,#_tilei + 1
   2F31 36 00              9187 	ld	(hl), #0x00
   2F33 21r98s45           9188 	ld	hl,#_tilex + 0
   2F36 36 00              9189 	ld	(hl), #0x00
   2F38 21r99s45           9190 	ld	hl,#_tilex + 1
   2F3B 36 00              9191 	ld	(hl), #0x00
   2F3D 21r9As45           9192 	ld	hl,#_tiley + 0
   2F40 36 00              9193 	ld	(hl), #0x00
   2F42 21r9Bs45           9194 	ld	hl,#_tiley + 1
   2F45 36 00              9195 	ld	(hl), #0x00
   2F47                    9196 00145$:
                           9197 ;demo.c:1362: if (triframes >= 1050 && triframes < 1200) {
   2F47 3ArA8s45           9198 	ld	a,(#_triframes+0)
   2F4A D6 1A              9199 	sub	a,#0x1A
   2F4C 3ArA9s45           9200 	ld	a,(#_triframes+1)
   2F4F DE 04              9201 	sbc	a,#0x04
   2F51 FAr69s2F           9202 	jp	M,00147$
   2F54 3ArA8s45           9203 	ld	a,(#_triframes+0)
   2F57 D6 B0              9204 	sub	a,#0xB0
   2F59 3ArA9s45           9205 	ld	a,(#_triframes+1)
   2F5C DE 04              9206 	sbc	a,#0x04
   2F5E F2r69s2F           9207 	jp	P,00147$
                           9208 ;demo.c:1363: drawtilescreen(tri_inva3);
   2F61 21r6Cs06           9209 	ld	hl,#_tri_inva3
   2F64 E5                 9210 	push	hl
   2F65 CDr52s2A           9211 	call	_drawtilescreen
   2F68 F1                 9212 	pop	af
   2F69                    9213 00147$:
                           9214 ;demo.c:1366: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2F69 3ArA8s45           9215 	ld	a,(#_triframes+0)
   2F6C D6 B0              9216 	sub	a,#0xB0
   2F6E 20 07              9217 	jr	NZ,00246$
   2F70 3ArA9s45           9218 	ld	a,(#_triframes+1)
   2F73 D6 04              9219 	sub	a,#0x04
   2F75 28 02              9220 	jr	Z,00247$
   2F77                    9221 00246$:
   2F77 18 1E              9222 	jr	00150$
   2F79                    9223 00247$:
   2F79 21r96s45           9224 	ld	hl,#_tilei + 0
   2F7C 36 00              9225 	ld	(hl), #0x00
   2F7E 21r97s45           9226 	ld	hl,#_tilei + 1
   2F81 36 00              9227 	ld	(hl), #0x00
   2F83 21r98s45           9228 	ld	hl,#_tilex + 0
   2F86 36 00              9229 	ld	(hl), #0x00
   2F88 21r99s45           9230 	ld	hl,#_tilex + 1
   2F8B 36 00              9231 	ld	(hl), #0x00
   2F8D 21r9As45           9232 	ld	hl,#_tiley + 0
   2F90 36 00              9233 	ld	(hl), #0x00
   2F92 21r9Bs45           9234 	ld	hl,#_tiley + 1
   2F95 36 00              9235 	ld	(hl), #0x00
   2F97                    9236 00150$:
                           9237 ;demo.c:1367: if (triframes >= 1200 && triframes < 1350) {
   2F97 3ArA8s45           9238 	ld	a,(#_triframes+0)
   2F9A D6 B0              9239 	sub	a,#0xB0
   2F9C 3ArA9s45           9240 	ld	a,(#_triframes+1)
   2F9F DE 04              9241 	sbc	a,#0x04
   2FA1 FArB9s2F           9242 	jp	M,00152$
   2FA4 3ArA8s45           9243 	ld	a,(#_triframes+0)
   2FA7 D6 46              9244 	sub	a,#0x46
   2FA9 3ArA9s45           9245 	ld	a,(#_triframes+1)
   2FAC DE 05              9246 	sbc	a,#0x05
   2FAE F2rB9s2F           9247 	jp	P,00152$
                           9248 ;demo.c:1368: drawtilescreen(tri_inva4);
   2FB1 21r2Cs07           9249 	ld	hl,#_tri_inva4
   2FB4 E5                 9250 	push	hl
   2FB5 CDr52s2A           9251 	call	_drawtilescreen
   2FB8 F1                 9252 	pop	af
   2FB9                    9253 00152$:
                           9254 ;demo.c:1371: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   2FB9 3ArA8s45           9255 	ld	a,(#_triframes+0)
   2FBC D6 46              9256 	sub	a,#0x46
   2FBE 20 07              9257 	jr	NZ,00248$
   2FC0 3ArA9s45           9258 	ld	a,(#_triframes+1)
   2FC3 D6 05              9259 	sub	a,#0x05
   2FC5 28 02              9260 	jr	Z,00249$
   2FC7                    9261 00248$:
   2FC7 18 1E              9262 	jr	00155$
   2FC9                    9263 00249$:
   2FC9 21r96s45           9264 	ld	hl,#_tilei + 0
   2FCC 36 00              9265 	ld	(hl), #0x00
   2FCE 21r97s45           9266 	ld	hl,#_tilei + 1
   2FD1 36 00              9267 	ld	(hl), #0x00
   2FD3 21r98s45           9268 	ld	hl,#_tilex + 0
   2FD6 36 00              9269 	ld	(hl), #0x00
   2FD8 21r99s45           9270 	ld	hl,#_tilex + 1
   2FDB 36 00              9271 	ld	(hl), #0x00
   2FDD 21r9As45           9272 	ld	hl,#_tiley + 0
   2FE0 36 00              9273 	ld	(hl), #0x00
   2FE2 21r9Bs45           9274 	ld	hl,#_tiley + 1
   2FE5 36 00              9275 	ld	(hl), #0x00
   2FE7                    9276 00155$:
                           9277 ;demo.c:1372: if (triframes >= 1350 && triframes < 1500) {
   2FE7 3ArA8s45           9278 	ld	a,(#_triframes+0)
   2FEA D6 46              9279 	sub	a,#0x46
   2FEC 3ArA9s45           9280 	ld	a,(#_triframes+1)
   2FEF DE 05              9281 	sbc	a,#0x05
   2FF1 FAr09s30           9282 	jp	M,00157$
   2FF4 3ArA8s45           9283 	ld	a,(#_triframes+0)
   2FF7 D6 DC              9284 	sub	a,#0xDC
   2FF9 3ArA9s45           9285 	ld	a,(#_triframes+1)
   2FFC DE 05              9286 	sbc	a,#0x05
   2FFE F2r09s30           9287 	jp	P,00157$
                           9288 ;demo.c:1373: drawtilescreen(tri_center);
   3001 21r2Cs01           9289 	ld	hl,#_tri_center
   3004 E5                 9290 	push	hl
   3005 CDr52s2A           9291 	call	_drawtilescreen
   3008 F1                 9292 	pop	af
   3009                    9293 00157$:
                           9294 ;demo.c:1376: if (triframes > 1500) triframes = 199;
   3009 3E DC              9295 	ld	a,#0xDC
   300B FD 21rA8s45        9296 	ld	iy,#_triframes
   300F FD 96 00           9297 	sub	a,0 (iy)
   3012 3E 05              9298 	ld	a,#0x05
   3014 FD 21rA8s45        9299 	ld	iy,#_triframes
   3018 FD 9E 01           9300 	sbc	a,1 (iy)
   301B F2r28s30           9301 	jp	P,00160$
   301E 21rA8s45           9302 	ld	hl,#_triframes + 0
   3021 36 C7              9303 	ld	(hl), #0xC7
   3023 21rA9s45           9304 	ld	hl,#_triframes + 1
   3026 36 00              9305 	ld	(hl), #0x00
   3028                    9306 00160$:
                           9307 ;demo.c:1379: msx2_palette(2,0,0,0);
   3028 21 00 00           9308 	ld	hl,#0x0000
   302B E5                 9309 	push	hl
   302C 2E 02              9310 	ld	l, #0x02
   302E E5                 9311 	push	hl
   302F CDr00s00           9312 	call	_msx2_palette
   3032 F1                 9313 	pop	af
   3033 F1                 9314 	pop	af
                           9315 ;demo.c:1380: msx2_palette(11,0,0,0);
   3034 21 00 00           9316 	ld	hl,#0x0000
   3037 E5                 9317 	push	hl
   3038 2E 0B              9318 	ld	l, #0x0B
   303A E5                 9319 	push	hl
   303B CDr00s00           9320 	call	_msx2_palette
   303E F1                 9321 	pop	af
   303F F1                 9322 	pop	af
                           9323 ;demo.c:1382: if (PLY_PSGReg10 > 4) {
   3040 3E 04              9324 	ld	a,#0x04
   3042 FD 21r00s00        9325 	ld	iy,#_PLY_PSGReg10
   3046 FD 96 00           9326 	sub	a,0 (iy)
   3049 D2rDEs30           9327 	jp	NC,00162$
                           9328 ;demo.c:1383: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   304C 21r00s00           9329 	ld	hl,#_PLY_PSGReg10 + 0
   304F 4E                 9330 	ld	c,(hl)
   3050 06 00              9331 	ld	b,#0x00
   3052 21rA6s45           9332 	ld	hl,#_tripaltick + 0
   3055 5E                 9333 	ld	e,(hl)
   3056 16 00              9334 	ld	d,#0x00
   3058 79                 9335 	ld	a,c
   3059 83                 9336 	add	a,e
   305A 4F                 9337 	ld	c,a
   305B 78                 9338 	ld	a,b
   305C 8A                 9339 	adc	a,d
   305D 06 00              9340 	ld	b,#0x00
   305F 21r2Cs00           9341 	ld	hl,#_sintabx
   3062 09                 9342 	add	hl,bc
   3063 7E                 9343 	ld	a,(hl)
   3064 4F                 9344 	ld	c,a
   3065 06 00              9345 	ld	b,#0x00
   3067 3E C0              9346 	ld	a,#0xC0
   3069 91                 9347 	sub	a,c
   306A 4F                 9348 	ld	c,a
   306B 3E 00              9349 	ld	a,#0x00
   306D 98                 9350 	sbc	a,b
   306E 47                 9351 	ld	b,a
   306F CB 28              9352 	sra	b
   3071 CB 19              9353 	rr	c
   3073 CB 28              9354 	sra	b
   3075 CB 19              9355 	rr	c
   3077 CB 28              9356 	sra	b
   3079 CB 19              9357 	rr	c
   307B 41                 9358 	ld	b,c
   307C 0E 17              9359 	ld	c,#0x17
   307E C5                 9360 	push	bc
   307F CDr00s00           9361 	call	_vdp_register
   3082 F1                 9362 	pop	af
                           9363 ;demo.c:1385: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   3083 21r9Fs45           9364 	ld	hl,#_tripal + 2
   3086 4E                 9365 	ld	c,(hl)
   3087 11r9Es45           9366 	ld	de,#_tripal + 1
   308A 1A                 9367 	ld	a,(de)
   308B 47                 9368 	ld	b,a
   308C 21r9Ds45           9369 	ld	hl,#_tripal
   308F 5E                 9370 	ld	e,(hl)
   3090 21r00s00           9371 	ld	hl,#_PLY_PSGReg10 + 0
   3093 56                 9372 	ld	d,(hl)
   3094 7B                 9373 	ld	a,e
   3095 82                 9374 	add	a,d
   3096 5F                 9375 	ld	e,a
   3097 79                 9376 	ld	a,c
   3098 F5                 9377 	push	af
   3099 33                 9378 	inc	sp
   309A C5                 9379 	push	bc
   309B 33                 9380 	inc	sp
   309C 53                 9381 	ld	d,e
   309D 1E 03              9382 	ld	e,#0x03
   309F D5                 9383 	push	de
   30A0 CDr00s00           9384 	call	_msx2_palette
   30A3 F1                 9385 	pop	af
   30A4 F1                 9386 	pop	af
                           9387 ;demo.c:1386: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   30A5 21rA2s45           9388 	ld	hl,#_tripal + 5
   30A8 4E                 9389 	ld	c,(hl)
   30A9 11rA1s45           9390 	ld	de,#_tripal + 4
   30AC 1A                 9391 	ld	a,(de)
   30AD 47                 9392 	ld	b,a
   30AE 21rA0s45           9393 	ld	hl,#_tripal + 3
   30B1 5E                 9394 	ld	e,(hl)
   30B2 79                 9395 	ld	a,c
   30B3 F5                 9396 	push	af
   30B4 33                 9397 	inc	sp
   30B5 C5                 9398 	push	bc
   30B6 33                 9399 	inc	sp
   30B7 53                 9400 	ld	d,e
   30B8 1E 0E              9401 	ld	e,#0x0E
   30BA D5                 9402 	push	de
   30BB CDr00s00           9403 	call	_msx2_palette
   30BE F1                 9404 	pop	af
   30BF F1                 9405 	pop	af
                           9406 ;demo.c:1387: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   30C0 21rA5s45           9407 	ld	hl,#_tripal + 8
   30C3 4E                 9408 	ld	c,(hl)
   30C4 11rA4s45           9409 	ld	de,#_tripal + 7
   30C7 1A                 9410 	ld	a,(de)
   30C8 47                 9411 	ld	b,a
   30C9 21rA3s45           9412 	ld	hl,#_tripal + 6
   30CC 5E                 9413 	ld	e,(hl)
   30CD 79                 9414 	ld	a,c
   30CE F5                 9415 	push	af
   30CF 33                 9416 	inc	sp
   30D0 C5                 9417 	push	bc
   30D1 33                 9418 	inc	sp
   30D2 53                 9419 	ld	d,e
   30D3 1E 06              9420 	ld	e,#0x06
   30D5 D5                 9421 	push	de
   30D6 CDr00s00           9422 	call	_msx2_palette
   30D9 F1                 9423 	pop	af
   30DA F1                 9424 	pop	af
   30DB C3r37s31           9425 	jp	00163$
   30DE                    9426 00162$:
                           9427 ;demo.c:1390: vdp_register(VDP_VOFFSET,0);
   30DE 21 17 00           9428 	ld	hl,#0x0017
   30E1 E5                 9429 	push	hl
   30E2 CDr00s00           9430 	call	_vdp_register
   30E5 F1                 9431 	pop	af
                           9432 ;demo.c:1392: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   30E6 21r9Fs45           9433 	ld	hl,#_tripal + 2
   30E9 4E                 9434 	ld	c,(hl)
   30EA 11r9Es45           9435 	ld	de,#_tripal + 1
   30ED 1A                 9436 	ld	a,(de)
   30EE 47                 9437 	ld	b,a
   30EF 21r9Ds45           9438 	ld	hl,#_tripal
   30F2 5E                 9439 	ld	e,(hl)
   30F3 79                 9440 	ld	a,c
   30F4 F5                 9441 	push	af
   30F5 33                 9442 	inc	sp
   30F6 C5                 9443 	push	bc
   30F7 33                 9444 	inc	sp
   30F8 53                 9445 	ld	d,e
   30F9 1E 03              9446 	ld	e,#0x03
   30FB D5                 9447 	push	de
   30FC CDr00s00           9448 	call	_msx2_palette
   30FF F1                 9449 	pop	af
   3100 F1                 9450 	pop	af
                           9451 ;demo.c:1393: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   3101 21rA2s45           9452 	ld	hl,#_tripal + 5
   3104 4E                 9453 	ld	c,(hl)
   3105 11rA1s45           9454 	ld	de,#_tripal + 4
   3108 1A                 9455 	ld	a,(de)
   3109 47                 9456 	ld	b,a
   310A 21rA0s45           9457 	ld	hl,#_tripal + 3
   310D 5E                 9458 	ld	e,(hl)
   310E 79                 9459 	ld	a,c
   310F F5                 9460 	push	af
   3110 33                 9461 	inc	sp
   3111 C5                 9462 	push	bc
   3112 33                 9463 	inc	sp
   3113 53                 9464 	ld	d,e
   3114 1E 0E              9465 	ld	e,#0x0E
   3116 D5                 9466 	push	de
   3117 CDr00s00           9467 	call	_msx2_palette
   311A F1                 9468 	pop	af
   311B F1                 9469 	pop	af
                           9470 ;demo.c:1394: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   311C 21rA5s45           9471 	ld	hl,#_tripal + 8
   311F 4E                 9472 	ld	c,(hl)
   3120 11rA4s45           9473 	ld	de,#_tripal + 7
   3123 1A                 9474 	ld	a,(de)
   3124 47                 9475 	ld	b,a
   3125 21rA3s45           9476 	ld	hl,#_tripal + 6
   3128 5E                 9477 	ld	e,(hl)
   3129 79                 9478 	ld	a,c
   312A F5                 9479 	push	af
   312B 33                 9480 	inc	sp
   312C C5                 9481 	push	bc
   312D 33                 9482 	inc	sp
   312E 53                 9483 	ld	d,e
   312F 1E 06              9484 	ld	e,#0x06
   3131 D5                 9485 	push	de
   3132 CDr00s00           9486 	call	_msx2_palette
   3135 F1                 9487 	pop	af
   3136 F1                 9488 	pop	af
   3137                    9489 00163$:
                           9490 ;demo.c:1398: if (tick > 28) tick = 0;
   3137 3E 1C              9491 	ld	a,#0x1C
   3139 FD 21rACs44        9492 	ld	iy,#_tick
   313D FD 96 00           9493 	sub	a,0 (iy)
   3140 3E 00              9494 	ld	a,#0x00
   3142 FD 21rACs44        9495 	ld	iy,#_tick
   3146 FD 9E 01           9496 	sbc	a,1 (iy)
   3149 F2r56s31           9497 	jp	P,00165$
   314C 21rACs44           9498 	ld	hl,#_tick + 0
   314F 36 00              9499 	ld	(hl), #0x00
   3151 21rADs44           9500 	ld	hl,#_tick + 1
   3154 36 00              9501 	ld	(hl), #0x00
   3156                    9502 00165$:
                           9503 ;demo.c:1400: tripaltick++;
   3156 FD 21rA6s45        9504 	ld	iy,#_tripaltick
   315A FD 34 00           9505 	inc	0 (iy)
                           9506 ;demo.c:1401: if (tripaltick > 6) {
   315D 3E 06              9507 	ld	a,#0x06
   315F FD 21rA6s45        9508 	ld	iy,#_tripaltick
   3163 FD 96 00           9509 	sub	a,0 (iy)
   3166 D2rEBs31           9510 	jp	NC,00178$
                           9511 ;demo.c:1402: tripaltick2++;
   3169 FD 21rA7s45        9512 	ld	iy,#_tripaltick2
   316D FD 34 00           9513 	inc	0 (iy)
                           9514 ;demo.c:1403: if (tripaltick2 > 6) tripaltick2 = 0;
   3170 3E 06              9515 	ld	a,#0x06
   3172 FD 21rA7s45        9516 	ld	iy,#_tripaltick2
   3176 FD 96 00           9517 	sub	a,0 (iy)
   3179 30 05              9518 	jr	NC,00167$
   317B 21rA7s45           9519 	ld	hl,#_tripaltick2 + 0
   317E 36 00              9520 	ld	(hl), #0x00
   3180                    9521 00167$:
                           9522 ;demo.c:1405: r = tripal[0];
   3180 21r9Ds45           9523 	ld	hl,#_tripal
   3183 4E                 9524 	ld	c,(hl)
   3184 DD 71 FD           9525 	ld	-3 (ix),c
                           9526 ;demo.c:1406: g = tripal[1];
   3187 11r9Es45           9527 	ld	de,#_tripal + 1
   318A 1A                 9528 	ld	a,(de)
   318B DD 77 FC           9529 	ld	-4 (ix),a
                           9530 ;demo.c:1407: b = tripal[2];
   318E 21r9Fs45           9531 	ld	hl,#_tripal + 2
   3191 5E                 9532 	ld	e,(hl)
   3192 DD 73 FB           9533 	ld	-5 (ix),e
                           9534 ;demo.c:1409: for (x = 0; x < 6; x++) {
   3195 DD 36 FE 00        9535 	ld	-2 (ix),#0x00
   3199 DD 36 FF 00        9536 	ld	-1 (ix),#0x00
   319D                    9537 00174$:
   319D DD 7E FE           9538 	ld	a,-2 (ix)
   31A0 D6 06              9539 	sub	a,#0x06
   31A2 DD 7E FF           9540 	ld	a,-1 (ix)
   31A5 DE 00              9541 	sbc	a,#0x00
   31A7 F2rD1s31           9542 	jp	P,00177$
                           9543 ;demo.c:1410: tripal[x] = tripal[x+3];
   31AA 3Er9D              9544 	ld	a,#<_tripal
   31AC DD 86 FE           9545 	add	a,-2 (ix)
   31AF 4F                 9546 	ld	c,a
   31B0 3Es45              9547 	ld	a,#>_tripal
   31B2 DD 8E FF           9548 	adc	a,-1 (ix)
   31B5 47                 9549 	ld	b,a
   31B6 DD 5E FE           9550 	ld	e,-2 (ix)
   31B9 1C                 9551 	inc	e
   31BA 1C                 9552 	inc	e
   31BB 1C                 9553 	inc	e
   31BC 3Er9D              9554 	ld	a,#<_tripal
   31BE 83                 9555 	add	a,e
   31BF 5F                 9556 	ld	e,a
   31C0 3Es45              9557 	ld	a,#>_tripal
   31C2 CE 00              9558 	adc	a,#0x00
   31C4 57                 9559 	ld	d,a
   31C5 1A                 9560 	ld	a,(de)
   31C6 02                 9561 	ld	(bc),a
                           9562 ;demo.c:1409: for (x = 0; x < 6; x++) {
   31C7 DD 34 FE           9563 	inc	-2 (ix)
   31CA 20 03              9564 	jr	NZ,00251$
   31CC DD 34 FF           9565 	inc	-1 (ix)
   31CF                    9566 00251$:
   31CF 18 CC              9567 	jr	00174$
   31D1                    9568 00177$:
                           9569 ;demo.c:1413: tripal[6] = r;
   31D1 01rA3s45           9570 	ld	bc,#_tripal + 6
   31D4 DD 7E FD           9571 	ld	a,-3 (ix)
   31D7 02                 9572 	ld	(bc),a
                           9573 ;demo.c:1414: tripal[7] = g;
   31D8 01rA4s45           9574 	ld	bc,#_tripal + 7
   31DB DD 7E FC           9575 	ld	a,-4 (ix)
   31DE 02                 9576 	ld	(bc),a
                           9577 ;demo.c:1415: tripal[8] = b;
   31DF 01rA5s45           9578 	ld	bc,#_tripal + 8
   31E2 DD 7E FB           9579 	ld	a,-5 (ix)
   31E5 02                 9580 	ld	(bc),a
                           9581 ;demo.c:1416: tripaltick = 0;
   31E6 21rA6s45           9582 	ld	hl,#_tripaltick + 0
   31E9 36 00              9583 	ld	(hl), #0x00
   31EB                    9584 00178$:
   31EB DD F9              9585 	ld	sp,ix
   31ED DD E1              9586 	pop	ix
   31EF C9                 9587 	ret
   31F0                    9588 _tritiles_end::
                           9589 ;demo.c:1421: int abs (int n) {
                           9590 ;	---------------------------------
                           9591 ; Function abs
                           9592 ; ---------------------------------
   31F0                    9593 _abs_start::
   31F0                    9594 _abs:
   31F0 DD E5              9595 	push	ix
   31F2 DD 21 00 00        9596 	ld	ix,#0
   31F6 DD 39              9597 	add	ix,sp
   31F8 21 FA FF           9598 	ld	hl,#-6
   31FB 39                 9599 	add	hl,sp
   31FC F9                 9600 	ld	sp,hl
                           9601 ;demo.c:1422: const int ret[2] = { n, -n };
   31FD 21 02 00           9602 	ld	hl,#0x0002
   3200 39                 9603 	add	hl,sp
   3201 4D                 9604 	ld	c,l
   3202 44                 9605 	ld	b,h
   3203 DD 7E 04           9606 	ld	a,4 (ix)
   3206 77                 9607 	ld	(hl),a
   3207 23                 9608 	inc	hl
   3208 DD 7E 05           9609 	ld	a,5 (ix)
   320B 77                 9610 	ld	(hl),a
   320C 21 02 00           9611 	ld	hl,#0x0002
   320F 09                 9612 	add	hl,bc
   3210 DD 75 FA           9613 	ld	-6 (ix),l
   3213 DD 74 FB           9614 	ld	-5 (ix),h
   3216 AF                 9615 	xor	a,a
   3217 DD 9E 04           9616 	sbc	a,4 (ix)
   321A 5F                 9617 	ld	e,a
   321B 3E 00              9618 	ld	a,#0x00
   321D DD 9E 05           9619 	sbc	a,5 (ix)
   3220 57                 9620 	ld	d,a
   3221 DD 6E FA           9621 	ld	l,-6 (ix)
   3224 DD 66 FB           9622 	ld	h,-5 (ix)
   3227 73                 9623 	ld	(hl),e
   3228 23                 9624 	inc	hl
   3229 72                 9625 	ld	(hl),d
                           9626 ;demo.c:1423: return ret [n<0];
   322A DD 7E 05           9627 	ld	a,5 (ix)
   322D 07                 9628 	rlca
   322E E6 01              9629 	and	a,#0x01
   3230 5F                 9630 	ld	e,a
   3231 CB 23              9631 	sla	e
   3233 79                 9632 	ld	a,c
   3234 83                 9633 	add	a,e
   3235 6F                 9634 	ld	l,a
   3236 78                 9635 	ld	a,b
   3237 CE 00              9636 	adc	a,#0x00
   3239 67                 9637 	ld	h,a
   323A 5E                 9638 	ld	e,(hl)
   323B 23                 9639 	inc	hl
   323C 4E                 9640 	ld	c,(hl)
   323D 6B                 9641 	ld	l,e
   323E 61                 9642 	ld	h,c
   323F DD F9              9643 	ld	sp,ix
   3241 DD E1              9644 	pop	ix
   3243 C9                 9645 	ret
   3244                    9646 _abs_end::
                           9647 ;demo.c:1429: void logoeffu() {
                           9648 ;	---------------------------------
                           9649 ; Function logoeffu
                           9650 ; ---------------------------------
   3244                    9651 _logoeffu_start::
   3244                    9652 _logoeffu:
   3244 DD E5              9653 	push	ix
   3246 DD 21 00 00        9654 	ld	ix,#0
   324A DD 39              9655 	add	ix,sp
   324C F5                 9656 	push	af
   324D F5                 9657 	push	af
                           9658 ;demo.c:1433: fadein();
   324E CDr27s0C           9659 	call	_fadein
                           9660 ;demo.c:1435: v = abs(sintabx[(vbicount) & 255]>>4);
   3251 21rAAs44           9661 	ld	hl,#_vbicount + 0
   3254 4E                 9662 	ld	c,(hl)
   3255 06 00              9663 	ld	b,#0x00
   3257 21r2Cs00           9664 	ld	hl,#_sintabx
   325A 09                 9665 	add	hl,bc
   325B 7E                 9666 	ld	a,(hl)
   325C 4F                 9667 	ld	c,a
   325D CB 39              9668 	srl	c
   325F CB 39              9669 	srl	c
   3261 CB 39              9670 	srl	c
   3263 CB 39              9671 	srl	c
   3265 06 00              9672 	ld	b,#0x00
   3267 C5                 9673 	push	bc
   3268 CDrF0s31           9674 	call	_abs
   326B F1                 9675 	pop	af
   326C 44                 9676 	ld	b,h
   326D DD 75 FC           9677 	ld	-4 (ix),l
   3270 DD 70 FD           9678 	ld	-3 (ix),b
                           9679 ;demo.c:1437: for (y = 0; y < 116; y+=2) {
   3273 DD 36 FE 00        9680 	ld	-2 (ix),#0x00
   3277 DD 36 FF 00        9681 	ld	-1 (ix),#0x00
   327B                    9682 00108$:
   327B DD 7E FE           9683 	ld	a,-2 (ix)
   327E D6 74              9684 	sub	a,#0x74
   3280 DD 7E FF           9685 	ld	a,-1 (ix)
   3283 DE 00              9686 	sbc	a,#0x00
   3285 F2r50s33           9687 	jp	P,00111$
                           9688 ;demo.c:1438: cmd.size_x = 108;
   3288 11rB6s44           9689 	ld	de,#_cmd + 8
   328B EB                 9690 	ex	de,hl
   328C 36 6C              9691 	ld	(hl),#0x6C
   328E 23                 9692 	inc	hl
   328F 36 00              9693 	ld	(hl),#0x00
                           9694 ;demo.c:1439: cmd.size_y = 2;
   3291 11rB8s44           9695 	ld	de,#_cmd + 10
   3294 EB                 9696 	ex	de,hl
   3295 36 02              9697 	ld	(hl),#0x02
   3297 23                 9698 	inc	hl
   3298 36 00              9699 	ld	(hl),#0x00
                           9700 ;demo.c:1440: cmd.data = 0;
   329A 11rBAs44           9701 	ld	de,#_cmd + 12
   329D 3E 00              9702 	ld	a,#0x00
   329F 12                 9703 	ld	(de),a
                           9704 ;demo.c:1441: cmd.argument = 0x00;
   32A0 11rBBs44           9705 	ld	de,#_cmd + 13
   32A3 3E 00              9706 	ld	a,#0x00
   32A5 12                 9707 	ld	(de),a
                           9708 ;demo.c:1442: cmd.command = 0xd0; 
   32A6 11rBCs44           9709 	ld	de,#_cmd + 14
   32A9 3E D0              9710 	ld	a,#0xD0
   32AB 12                 9711 	ld	(de),a
                           9712 ;demo.c:1443: cmd.source_x = 74;
   32AC 21rAEs44           9713 	ld	hl,#_cmd
   32AF 36 4A              9714 	ld	(hl),#0x4A
   32B1 23                 9715 	inc	hl
   32B2 36 00              9716 	ld	(hl),#0x00
                           9717 ;demo.c:1444: cmd.source_y = 256+y;
   32B4 11rB0s44           9718 	ld	de,#_cmd + 2
   32B7 DD 7E FE           9719 	ld	a,-2 (ix)
   32BA C6 00              9720 	add	a,#0x00
   32BC 4F                 9721 	ld	c,a
   32BD DD 7E FF           9722 	ld	a,-1 (ix)
   32C0 CE 01              9723 	adc	a,#0x01
   32C2 47                 9724 	ld	b,a
   32C3 6B                 9725 	ld	l,e
   32C4 62                 9726 	ld	h,d
   32C5 71                 9727 	ld	(hl),c
   32C6 23                 9728 	inc	hl
   32C7 70                 9729 	ld	(hl),b
                           9730 ;demo.c:1445: v+=y;
   32C8 DD 7E FC           9731 	ld	a,-4 (ix)
   32CB DD 86 FE           9732 	add	a,-2 (ix)
   32CE DD 77 FC           9733 	ld	-4 (ix),a
   32D1 DD 7E FD           9734 	ld	a,-3 (ix)
   32D4 DD 8E FF           9735 	adc	a,-1 (ix)
   32D7 DD 77 FD           9736 	ld	-3 (ix),a
                           9737 ;demo.c:1446: v -= powa;
   32DA 21rACs45           9738 	ld	hl,#_powa
   32DD DD 7E FC           9739 	ld	a,-4 (ix)
   32E0 96                 9740 	sub	a,(hl)
   32E1 DD 77 FC           9741 	ld	-4 (ix),a
   32E4 DD 7E FD           9742 	ld	a,-3 (ix)
   32E7 23                 9743 	inc	hl
   32E8 9E                 9744 	sbc	a,(hl)
                           9745 ;demo.c:1447: if (v<0) v = 0;
   32E9 DD 77 FD           9746 	ld	-3 (ix),a
   32EC CB 7F              9747 	bit	7,a
   32EE 28 08              9748 	jr	Z,00102$
   32F0 DD 36 FC 00        9749 	ld	-4 (ix),#0x00
   32F4 DD 36 FD 00        9750 	ld	-3 (ix),#0x00
   32F8                    9751 00102$:
                           9752 ;demo.c:1448: if (v>150) v = 150;
   32F8 3E 96              9753 	ld	a,#0x96
   32FA DD 96 FC           9754 	sub	a,-4 (ix)
   32FD 3E 00              9755 	ld	a,#0x00
   32FF DD 9E FD           9756 	sbc	a,-3 (ix)
   3302 F2r0Ds33           9757 	jp	P,00104$
   3305 DD 36 FC 96        9758 	ld	-4 (ix),#0x96
   3309 DD 36 FD 00        9759 	ld	-3 (ix),#0x00
   330D                    9760 00104$:
                           9761 ;demo.c:1449: cmd.dest_x = 74+v;
   330D 01rB2s44           9762 	ld	bc,#_cmd + 4
   3310 DD 7E FC           9763 	ld	a,-4 (ix)
   3313 C6 4A              9764 	add	a,#0x4A
   3315 5F                 9765 	ld	e,a
   3316 DD 7E FD           9766 	ld	a,-3 (ix)
   3319 CE 00              9767 	adc	a,#0x00
   331B 57                 9768 	ld	d,a
   331C 69                 9769 	ld	l,c
   331D 60                 9770 	ld	h,b
   331E 73                 9771 	ld	(hl),e
   331F 23                 9772 	inc	hl
   3320 72                 9773 	ld	(hl),d
                           9774 ;demo.c:1450: cmd.dest_y = 50+y+1;
   3321 01rB4s44           9775 	ld	bc,#_cmd + 6
   3324 DD 7E FE           9776 	ld	a,-2 (ix)
   3327 C6 33              9777 	add	a,#0x33
   3329 5F                 9778 	ld	e,a
   332A DD 7E FF           9779 	ld	a,-1 (ix)
   332D CE 00              9780 	adc	a,#0x00
   332F 57                 9781 	ld	d,a
   3330 69                 9782 	ld	l,c
   3331 60                 9783 	ld	h,b
   3332 73                 9784 	ld	(hl),e
   3333 23                 9785 	inc	hl
   3334 72                 9786 	ld	(hl),d
                           9787 ;demo.c:1451: vdp_copier(&cmd);
   3335 21rAEs44           9788 	ld	hl,#_cmd
   3338 E5                 9789 	push	hl
   3339 CDr00s00           9790 	call	_vdp_copier
   333C F1                 9791 	pop	af
                           9792 ;demo.c:1437: for (y = 0; y < 116; y+=2) {
   333D DD 7E FE           9793 	ld	a,-2 (ix)
   3340 C6 02              9794 	add	a,#0x02
   3342 DD 77 FE           9795 	ld	-2 (ix),a
   3345 DD 7E FF           9796 	ld	a,-1 (ix)
   3348 CE 00              9797 	adc	a,#0x00
   334A DD 77 FF           9798 	ld	-1 (ix),a
   334D C3r7Bs32           9799 	jp	00108$
   3350                    9800 00111$:
                           9801 ;demo.c:1454: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   3350 21rD9s44           9802 	ld	hl, #_scenetimings + 4
   3353 4E                 9803 	ld	c,(hl)
   3354 23                 9804 	inc	hl
   3355 46                 9805 	ld	b,(hl)
   3356 21 54 00           9806 	ld	hl,#0x0054
   3359 09                 9807 	add	hl,bc
   335A 4D                 9808 	ld	c,l
   335B 44                 9809 	ld	b,h
   335C 79                 9810 	ld	a,c
   335D FD 21rAAs44        9811 	ld	iy,#_vbicount
   3361 FD 96 00           9812 	sub	a,0 (iy)
   3364 78                 9813 	ld	a,b
   3365 FD 21rAAs44        9814 	ld	iy,#_vbicount
   3369 FD 9E 01           9815 	sbc	a,1 (iy)
   336C F2rCEs33           9816 	jp	P,00106$
   336F 3E B6              9817 	ld	a,#0xB6
   3371 FD 21rAEs45        9818 	ld	iy,#_onceclear
   3375 FD 96 00           9819 	sub	a,0 (iy)
   3378 D2rCEs33           9820 	jp	NC,00106$
                           9821 ;demo.c:1455: cmd.size_x = 4;
   337B 21rB6s44           9822 	ld	hl, #_cmd + 8
   337E 36 04              9823 	ld	(hl),#0x04
   3380 23                 9824 	inc	hl
   3381 36 00              9825 	ld	(hl),#0x00
                           9826 ;demo.c:1456: cmd.size_y = 116;
   3383 21rB8s44           9827 	ld	hl, #_cmd + 10
   3386 36 74              9828 	ld	(hl),#0x74
   3388 23                 9829 	inc	hl
   3389 36 00              9830 	ld	(hl),#0x00
                           9831 ;demo.c:1457: cmd.data = 0;
                           9832 ;demo.c:1458: cmd.argument = 0x00;
   338B 3E 00              9833 	ld	a,#0x00
   338D 32rBAs44           9834 	ld	(#_cmd + 12),a
   3390 32rBBs44           9835 	ld	(#_cmd + 13),a
                           9836 ;demo.c:1459: cmd.command = 0xd0; 
   3393 01rBCs44           9837 	ld	bc,#_cmd + 14
   3396 3E D0              9838 	ld	a,#0xD0
   3398 02                 9839 	ld	(bc),a
                           9840 ;demo.c:1460: cmd.source_x = 20;
   3399 21rAEs44           9841 	ld	hl,#_cmd
   339C 36 14              9842 	ld	(hl),#0x14
   339E 23                 9843 	inc	hl
   339F 36 00              9844 	ld	(hl),#0x00
                           9845 ;demo.c:1461: cmd.source_y = 0;
   33A1 21rB0s44           9846 	ld	hl, #_cmd + 2
   33A4 36 00              9847 	ld	(hl),#0x00
   33A6 23                 9848 	inc	hl
   33A7 36 00              9849 	ld	(hl),#0x00
                           9850 ;demo.c:1462: cmd.dest_x = onceclear;
   33A9 01rB2s44           9851 	ld	bc,#_cmd + 4
   33AC 21rAEs45           9852 	ld	hl,#_onceclear + 0
   33AF 5E                 9853 	ld	e,(hl)
   33B0 16 00              9854 	ld	d,#0x00
   33B2 69                 9855 	ld	l,c
   33B3 60                 9856 	ld	h,b
   33B4 73                 9857 	ld	(hl),e
   33B5 23                 9858 	inc	hl
   33B6 72                 9859 	ld	(hl),d
                           9860 ;demo.c:1463: cmd.dest_y = 68;
   33B7 21rB4s44           9861 	ld	hl, #_cmd + 6
   33BA 36 44              9862 	ld	(hl),#0x44
   33BC 23                 9863 	inc	hl
   33BD 36 00              9864 	ld	(hl),#0x00
                           9865 ;demo.c:1464: vdp_copier(&cmd);
   33BF 21rAEs44           9866 	ld	hl,#_cmd
   33C2 E5                 9867 	push	hl
   33C3 CDr00s00           9868 	call	_vdp_copier
   33C6 F1                 9869 	pop	af
                           9870 ;demo.c:1465: onceclear-=4;
   33C7 21rAEs45           9871 	ld	hl,#_onceclear
   33CA 7E                 9872 	ld	a,(hl)
   33CB C6 FC              9873 	add	a,#0xFC
   33CD 77                 9874 	ld	(hl),a
   33CE                    9875 00106$:
                           9876 ;demo.c:1469: powa+=2;
   33CE 21rACs45           9877 	ld	hl,#_powa
   33D1 7E                 9878 	ld	a,(hl)
   33D2 C6 02              9879 	add	a,#0x02
   33D4 23                 9880 	inc	hl
   33D5 2B                 9881 	dec	hl
   33D6 C5                 9882 	push	bc
   33D7 4F                 9883 	ld	c, a
   33D8 23                 9884 	inc	hl
   33D9 7E                 9885 	ld	a, (hl)
   33DA 47                 9886 	ld	b, a
   33DB 79                 9887 	ld	a, c
   33DC 2B                 9888 	dec	hl
   33DD 77                 9889 	ld	(hl), a
   33DE 78                 9890 	ld	a, b
   33DF C1                 9891 	pop	bc
   33E0 CE 00              9892 	adc	a,#0x00
   33E2 23                 9893 	inc	hl
   33E3 77                 9894 	ld	(hl),a
                           9895 ;demo.c:1470: powatick = 0;
   33E4 21rAAs45           9896 	ld	hl,#_powatick + 0
   33E7 36 00              9897 	ld	(hl), #0x00
   33E9 21rABs45           9898 	ld	hl,#_powatick + 1
   33EC 36 00              9899 	ld	(hl), #0x00
   33EE DD F9              9900 	ld	sp,ix
   33F0 DD E1              9901 	pop	ix
   33F2 C9                 9902 	ret
   33F3                    9903 _logoeffu_end::
                           9904 ;demo.c:1479: void points() {
                           9905 ;	---------------------------------
                           9906 ; Function points
                           9907 ; ---------------------------------
   33F3                    9908 _points_start::
   33F3                    9909 _points:
   33F3 DD E5              9910 	push	ix
   33F5 DD 21 00 00        9911 	ld	ix,#0
   33F9 DD 39              9912 	add	ix,sp
   33FB F5                 9913 	push	af
   33FC 3B                 9914 	dec	sp
                           9915 ;demo.c:1483: if (initpoints == 0) {
   33FD AF                 9916 	xor	a,a
   33FE 21rAFs45           9917 	ld	hl,#_initpoints + 0
   3401 B6                 9918 	or	a,(hl)
   3402 C2r0Bs36           9919 	jp	NZ,00105$
                           9920 ;demo.c:1484: cmd.size_x = 256;
   3405 21rB6s44           9921 	ld	hl, #_cmd + 8
   3408 36 00              9922 	ld	(hl),#0x00
   340A 23                 9923 	inc	hl
   340B 36 01              9924 	ld	(hl),#0x01
                           9925 ;demo.c:1485: cmd.size_y = 4;
   340D 21rB8s44           9926 	ld	hl, #_cmd + 10
   3410 36 04              9927 	ld	(hl),#0x04
   3412 23                 9928 	inc	hl
   3413 36 00              9929 	ld	(hl),#0x00
                           9930 ;demo.c:1486: cmd.data = 0;
                           9931 ;demo.c:1487: cmd.argument = 0x00; // from 70xY to left
   3415 3E 00              9932 	ld	a,#0x00
   3417 32rBAs44           9933 	ld	(#_cmd + 12),a
   341A 32rBBs44           9934 	ld	(#_cmd + 13),a
                           9935 ;demo.c:1488: cmd.command = 0xd0; // vram to vram, y only
   341D 01rBCs44           9936 	ld	bc,#_cmd + 14
   3420 3E D0              9937 	ld	a,#0xD0
   3422 02                 9938 	ld	(bc),a
                           9939 ;demo.c:1489: cmd.source_x = 0;
   3423 21rAEs44           9940 	ld	hl,#_cmd
   3426 36 00              9941 	ld	(hl),#0x00
   3428 23                 9942 	inc	hl
   3429 36 00              9943 	ld	(hl),#0x00
                           9944 ;demo.c:1490: cmd.dest_x = 0;
   342B 21rB2s44           9945 	ld	hl, #_cmd + 4
   342E 36 00              9946 	ld	(hl),#0x00
   3430 23                 9947 	inc	hl
   3431 36 00              9948 	ld	(hl),#0x00
                           9949 ;demo.c:1492: for (y = 0; y < 212; y+=4) {
   3433 DD 36 FF 00        9950 	ld	-1 (ix),#0x00
   3437                    9951 00116$:
   3437 DD 7E FF           9952 	ld	a,-1 (ix)
   343A D6 D4              9953 	sub	a,#0xD4
   343C D2r63s35           9954 	jp	NC,00119$
                           9955 ;demo.c:1493: if (PLY_PSGReg10 > 4) {
   343F 3E 04              9956 	ld	a,#0x04
   3441 FD 21r00s00        9957 	ld	iy,#_PLY_PSGReg10
   3445 FD 96 00           9958 	sub	a,0 (iy)
   3448 D2rDDs34           9959 	jp	NC,00102$
                           9960 ;demo.c:1494: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   344B 21r00s00           9961 	ld	hl,#_PLY_PSGReg10 + 0
   344E 5E                 9962 	ld	e,(hl)
   344F 16 00              9963 	ld	d,#0x00
   3451 21rA6s45           9964 	ld	hl,#_tripaltick + 0
   3454 4E                 9965 	ld	c,(hl)
   3455 06 00              9966 	ld	b,#0x00
   3457 7B                 9967 	ld	a,e
   3458 81                 9968 	add	a,c
   3459 4F                 9969 	ld	c,a
   345A 7A                 9970 	ld	a,d
   345B 88                 9971 	adc	a,b
   345C 06 00              9972 	ld	b,#0x00
   345E 21r2Cs00           9973 	ld	hl,#_sintabx
   3461 09                 9974 	add	hl,bc
   3462 7E                 9975 	ld	a,(hl)
   3463 4F                 9976 	ld	c,a
   3464 06 00              9977 	ld	b,#0x00
   3466 3E C0              9978 	ld	a,#0xC0
   3468 91                 9979 	sub	a,c
   3469 4F                 9980 	ld	c,a
   346A 3E 00              9981 	ld	a,#0x00
   346C 98                 9982 	sbc	a,b
   346D 47                 9983 	ld	b,a
   346E CB 28              9984 	sra	b
   3470 CB 19              9985 	rr	c
   3472 CB 28              9986 	sra	b
   3474 CB 19              9987 	rr	c
   3476 CB 28              9988 	sra	b
   3478 CB 19              9989 	rr	c
   347A 41                 9990 	ld	b,c
   347B 0E 17              9991 	ld	c,#0x17
   347D C5                 9992 	push	bc
   347E CDr00s00           9993 	call	_vdp_register
   3481 F1                 9994 	pop	af
                           9995 ;demo.c:1496: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   3482 21r9Fs45           9996 	ld	hl,#_tripal + 2
   3485 4E                 9997 	ld	c,(hl)
   3486 11r9Es45           9998 	ld	de,#_tripal + 1
   3489 1A                 9999 	ld	a,(de)
   348A 47                10000 	ld	b,a
   348B 21r9Ds45          10001 	ld	hl,#_tripal
   348E 5E                10002 	ld	e,(hl)
   348F 21r00s00          10003 	ld	hl,#_PLY_PSGReg10 + 0
   3492 56                10004 	ld	d,(hl)
   3493 7B                10005 	ld	a,e
   3494 82                10006 	add	a,d
   3495 5F                10007 	ld	e,a
   3496 79                10008 	ld	a,c
   3497 F5                10009 	push	af
   3498 33                10010 	inc	sp
   3499 C5                10011 	push	bc
   349A 33                10012 	inc	sp
   349B 53                10013 	ld	d,e
   349C 1E 03             10014 	ld	e,#0x03
   349E D5                10015 	push	de
   349F CDr00s00          10016 	call	_msx2_palette
   34A2 F1                10017 	pop	af
   34A3 F1                10018 	pop	af
                          10019 ;demo.c:1497: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   34A4 21rA2s45          10020 	ld	hl,#_tripal + 5
   34A7 4E                10021 	ld	c,(hl)
   34A8 11rA1s45          10022 	ld	de,#_tripal + 4
   34AB 1A                10023 	ld	a,(de)
   34AC 47                10024 	ld	b,a
   34AD 21rA0s45          10025 	ld	hl,#_tripal + 3
   34B0 5E                10026 	ld	e,(hl)
   34B1 79                10027 	ld	a,c
   34B2 F5                10028 	push	af
   34B3 33                10029 	inc	sp
   34B4 C5                10030 	push	bc
   34B5 33                10031 	inc	sp
   34B6 53                10032 	ld	d,e
   34B7 1E 0E             10033 	ld	e,#0x0E
   34B9 D5                10034 	push	de
   34BA CDr00s00          10035 	call	_msx2_palette
   34BD F1                10036 	pop	af
   34BE F1                10037 	pop	af
                          10038 ;demo.c:1498: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   34BF 21rA5s45          10039 	ld	hl,#_tripal + 8
   34C2 4E                10040 	ld	c,(hl)
   34C3 11rA4s45          10041 	ld	de,#_tripal + 7
   34C6 1A                10042 	ld	a,(de)
   34C7 47                10043 	ld	b,a
   34C8 21rA3s45          10044 	ld	hl,#_tripal + 6
   34CB 5E                10045 	ld	e,(hl)
   34CC 79                10046 	ld	a,c
   34CD F5                10047 	push	af
   34CE 33                10048 	inc	sp
   34CF C5                10049 	push	bc
   34D0 33                10050 	inc	sp
   34D1 53                10051 	ld	d,e
   34D2 1E 06             10052 	ld	e,#0x06
   34D4 D5                10053 	push	de
   34D5 CDr00s00          10054 	call	_msx2_palette
   34D8 F1                10055 	pop	af
   34D9 F1                10056 	pop	af
   34DA C3r36s35          10057 	jp	00103$
   34DD                   10058 00102$:
                          10059 ;demo.c:1501: vdp_register(VDP_VOFFSET,0);
   34DD 21 17 00          10060 	ld	hl,#0x0017
   34E0 E5                10061 	push	hl
   34E1 CDr00s00          10062 	call	_vdp_register
   34E4 F1                10063 	pop	af
                          10064 ;demo.c:1503: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   34E5 21r9Fs45          10065 	ld	hl,#_tripal + 2
   34E8 4E                10066 	ld	c,(hl)
   34E9 11r9Es45          10067 	ld	de,#_tripal + 1
   34EC 1A                10068 	ld	a,(de)
   34ED 47                10069 	ld	b,a
   34EE 21r9Ds45          10070 	ld	hl,#_tripal
   34F1 5E                10071 	ld	e,(hl)
   34F2 79                10072 	ld	a,c
   34F3 F5                10073 	push	af
   34F4 33                10074 	inc	sp
   34F5 C5                10075 	push	bc
   34F6 33                10076 	inc	sp
   34F7 53                10077 	ld	d,e
   34F8 1E 03             10078 	ld	e,#0x03
   34FA D5                10079 	push	de
   34FB CDr00s00          10080 	call	_msx2_palette
   34FE F1                10081 	pop	af
   34FF F1                10082 	pop	af
                          10083 ;demo.c:1504: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   3500 21rA2s45          10084 	ld	hl,#_tripal + 5
   3503 4E                10085 	ld	c,(hl)
   3504 11rA1s45          10086 	ld	de,#_tripal + 4
   3507 1A                10087 	ld	a,(de)
   3508 47                10088 	ld	b,a
   3509 21rA0s45          10089 	ld	hl,#_tripal + 3
   350C 5E                10090 	ld	e,(hl)
   350D 79                10091 	ld	a,c
   350E F5                10092 	push	af
   350F 33                10093 	inc	sp
   3510 C5                10094 	push	bc
   3511 33                10095 	inc	sp
   3512 53                10096 	ld	d,e
   3513 1E 0E             10097 	ld	e,#0x0E
   3515 D5                10098 	push	de
   3516 CDr00s00          10099 	call	_msx2_palette
   3519 F1                10100 	pop	af
   351A F1                10101 	pop	af
                          10102 ;demo.c:1505: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   351B 21rA5s45          10103 	ld	hl,#_tripal + 8
   351E 4E                10104 	ld	c,(hl)
   351F 11rA4s45          10105 	ld	de,#_tripal + 7
   3522 1A                10106 	ld	a,(de)
   3523 47                10107 	ld	b,a
   3524 21rA3s45          10108 	ld	hl,#_tripal + 6
   3527 5E                10109 	ld	e,(hl)
   3528 79                10110 	ld	a,c
   3529 F5                10111 	push	af
   352A 33                10112 	inc	sp
   352B C5                10113 	push	bc
   352C 33                10114 	inc	sp
   352D 53                10115 	ld	d,e
   352E 1E 06             10116 	ld	e,#0x06
   3530 D5                10117 	push	de
   3531 CDr00s00          10118 	call	_msx2_palette
   3534 F1                10119 	pop	af
   3535 F1                10120 	pop	af
   3536                   10121 00103$:
                          10122 ;demo.c:1508: waitVB();
   3536 76                10123 		halt 
                          10124 ;demo.c:1509: cmd.source_y = 193;
   3537 21rB0s44          10125 	ld	hl, #_cmd + 2
   353A 36 C1             10126 	ld	(hl),#0xC1
   353C 23                10127 	inc	hl
   353D 36 00             10128 	ld	(hl),#0x00
                          10129 ;demo.c:1510: cmd.dest_y = y;
   353F 01rB4s44          10130 	ld	bc,#_cmd + 6
   3542 DD 5E FF          10131 	ld	e,-1 (ix)
   3545 16 00             10132 	ld	d,#0x00
   3547 69                10133 	ld	l,c
   3548 60                10134 	ld	h,b
   3549 73                10135 	ld	(hl),e
   354A 23                10136 	inc	hl
   354B 72                10137 	ld	(hl),d
                          10138 ;demo.c:1511: vdp_copier(&cmd);
   354C 21rAEs44          10139 	ld	hl,#_cmd
   354F E5                10140 	push	hl
   3550 CDr00s00          10141 	call	_vdp_copier
   3553 F1                10142 	pop	af
                          10143 ;demo.c:1492: for (y = 0; y < 212; y+=4) {
   3554 DD 34 FF          10144 	inc	-1 (ix)
   3557 DD 34 FF          10145 	inc	-1 (ix)
   355A DD 34 FF          10146 	inc	-1 (ix)
   355D DD 34 FF          10147 	inc	-1 (ix)
   3560 C3r37s34          10148 	jp	00116$
   3563                   10149 00119$:
                          10150 ;demo.c:1515: vdp_load_palette(bulbs_palette);
   3563 21rEAs43          10151 	ld	hl,#_bulbs_palette
   3566 E5                10152 	push	hl
   3567 CDr00s00          10153 	call	_vdp_load_palette
   356A F1                10154 	pop	af
                          10155 ;demo.c:1517: for (x = 0; x < 256; x+=1) {
   356B DD 36 FD 00       10156 	ld	-3 (ix),#0x00
   356F DD 36 FE 00       10157 	ld	-2 (ix),#0x00
   3573                   10158 00120$:
   3573 DD 7E FD          10159 	ld	a,-3 (ix)
   3576 D6 00             10160 	sub	a,#0x00
   3578 DD 7E FE          10161 	ld	a,-2 (ix)
   357B DE 01             10162 	sbc	a,#0x01
   357D F2rFCs35          10163 	jp	P,00123$
                          10164 ;demo.c:1519: cmd.data = 1+((pointframe>>2) & 0xe);
   3580 11rBAs44          10165 	ld	de,#_cmd + 12
   3583 21rB0s45          10166 	ld	hl,#_pointframe + 0
   3586 4E                10167 	ld	c,(hl)
   3587 21rB1s45          10168 	ld	hl,#_pointframe + 1
   358A 46                10169 	ld	b,(hl)
   358B CB 28             10170 	sra	b
   358D CB 19             10171 	rr	c
   358F CB 28             10172 	sra	b
   3591 CB 19             10173 	rr	c
   3593 79                10174 	ld	a,c
   3594 E6 0E             10175 	and	a,#0x0E
   3596 3C                10176 	inc	a
   3597 12                10177 	ld	(de),a
                          10178 ;demo.c:1520: cmd.dest_x = x;
   3598 21rB2s44          10179 	ld	hl, #_cmd + 4
   359B DD 7E FD          10180 	ld	a,-3 (ix)
   359E 77                10181 	ld	(hl),a
   359F 23                10182 	inc	hl
   35A0 DD 7E FE          10183 	ld	a,-2 (ix)
   35A3 77                10184 	ld	(hl),a
                          10185 ;demo.c:1521: cmd.dest_y = y;
   35A4 21rB4s44          10186 	ld	hl, #_cmd + 6
   35A7 36 1D             10187 	ld	(hl),#0x1D
   35A9 23                10188 	inc	hl
   35AA 36 00             10189 	ld	(hl),#0x00
                          10190 ;demo.c:1522: cmd.command = 0x50;
   35AC 3E 50             10191 	ld	a,#0x50
   35AE 32rBCs44          10192 	ld	(#_cmd + 14),a
                          10193 ;demo.c:1523: vdp_copier(&cmd);
   35B1 21rAEs44          10194 	ld	hl,#_cmd
   35B4 E5                10195 	push	hl
   35B5 CDr00s00          10196 	call	_vdp_copier
   35B8 F1                10197 	pop	af
                          10198 ;demo.c:1526: cmd.data = 1+((pointframe>>2) & 0xe);
   35B9 01rBAs44          10199 	ld	bc,#_cmd + 12
   35BC 21rB0s45          10200 	ld	hl,#_pointframe + 0
   35BF 5E                10201 	ld	e,(hl)
   35C0 21rB1s45          10202 	ld	hl,#_pointframe + 1
   35C3 56                10203 	ld	d,(hl)
   35C4 CB 2A             10204 	sra	d
   35C6 CB 1B             10205 	rr	e
   35C8 CB 2A             10206 	sra	d
   35CA CB 1B             10207 	rr	e
   35CC 7B                10208 	ld	a,e
   35CD E6 0E             10209 	and	a,#0x0E
   35CF 3C                10210 	inc	a
   35D0 02                10211 	ld	(bc),a
                          10212 ;demo.c:1527: cmd.dest_y = y;
   35D1 21rB4s44          10213 	ld	hl, #_cmd + 6
   35D4 36 A2             10214 	ld	(hl),#0xA2
   35D6 23                10215 	inc	hl
   35D7 36 00             10216 	ld	(hl),#0x00
                          10217 ;demo.c:1528: vdp_copier(&cmd);
   35D9 21rAEs44          10218 	ld	hl,#_cmd
   35DC E5                10219 	push	hl
   35DD CDr00s00          10220 	call	_vdp_copier
   35E0 F1                10221 	pop	af
                          10222 ;demo.c:1530: pointframe+=1;
   35E1 FD 21rB0s45       10223 	ld	iy,#_pointframe
   35E5 FD 34 00          10224 	inc	0 (iy)
   35E8 20 07             10225 	jr	NZ,00149$
   35EA FD 21rB0s45       10226 	ld	iy,#_pointframe
   35EE FD 34 01          10227 	inc	1 (iy)
   35F1                   10228 00149$:
                          10229 ;demo.c:1517: for (x = 0; x < 256; x+=1) {
   35F1 DD 34 FD          10230 	inc	-3 (ix)
   35F4 20 03             10231 	jr	NZ,00150$
   35F6 DD 34 FE          10232 	inc	-2 (ix)
   35F9                   10233 00150$:
   35F9 C3r73s35          10234 	jp	00120$
   35FC                   10235 00123$:
                          10236 ;demo.c:1533: initpoints = 1;
   35FC 21rAFs45          10237 	ld	hl,#_initpoints + 0
   35FF 36 01             10238 	ld	(hl), #0x01
                          10239 ;demo.c:1534: ltrpointer = 0;
   3601 21r42s45          10240 	ld	hl,#_ltrpointer + 0
   3604 36 00             10241 	ld	(hl), #0x00
   3606 21r43s45          10242 	ld	hl,#_ltrpointer + 1
   3609 36 00             10243 	ld	(hl), #0x00
   360B                   10244 00105$:
                          10245 ;demo.c:1537: cmd.argument = 0x0;
   360B 3E 00             10246 	ld	a,#0x00
   360D 32rBBs44          10247 	ld	(#_cmd + 13),a
                          10248 ;demo.c:1539: cmd.data = 1+((pointframe>>2) & 0xe);
   3610 01rBAs44          10249 	ld	bc,#_cmd + 12
   3613 21rB0s45          10250 	ld	hl,#_pointframe + 0
   3616 5E                10251 	ld	e,(hl)
   3617 21rB1s45          10252 	ld	hl,#_pointframe + 1
   361A 56                10253 	ld	d,(hl)
   361B CB 2A             10254 	sra	d
   361D CB 1B             10255 	rr	e
   361F CB 2A             10256 	sra	d
   3621 CB 1B             10257 	rr	e
   3623 7B                10258 	ld	a,e
   3624 E6 0E             10259 	and	a,#0x0E
   3626 3C                10260 	inc	a
   3627 02                10261 	ld	(bc),a
                          10262 ;demo.c:1541: for (x = 30; x < 162; x+=1) {
   3628 DD 36 FD 1E       10263 	ld	-3 (ix),#0x1E
   362C DD 36 FE 00       10264 	ld	-2 (ix),#0x00
   3630                   10265 00124$:
   3630 DD 7E FD          10266 	ld	a,-3 (ix)
   3633 D6 A2             10267 	sub	a,#0xA2
   3635 DD 7E FE          10268 	ld	a,-2 (ix)
   3638 DE 00             10269 	sbc	a,#0x00
   363A F2r83s36          10270 	jp	P,00127$
                          10271 ;demo.c:1542: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   363D 21rB0s45          10272 	ld	hl,#_pointframe
   3640 DD 7E FD          10273 	ld	a,-3 (ix)
   3643 86                10274 	add	a,(hl)
   3644 5F                10275 	ld	e,a
   3645 DD 7E FE          10276 	ld	a,-2 (ix)
   3648 23                10277 	inc	hl
   3649 8E                10278 	adc	a,(hl)
   364A 16 00             10279 	ld	d,#0x00
   364C 21r2Cs00          10280 	ld	hl,#_sintabx
   364F 19                10281 	add	hl,de
   3650 7E                10282 	ld	a,(hl)
   3651 CB 3F             10283 	srl	a
   3653 C6 40             10284 	add	a,#0x40
   3655 4F                10285 	ld	c,a
                          10286 ;demo.c:1543: cmd.dest_x = y;
   3656 11rB2s44          10287 	ld	de,#_cmd + 4
   3659 06 00             10288 	ld	b,#0x00
   365B 6B                10289 	ld	l,e
   365C 62                10290 	ld	h,d
   365D 71                10291 	ld	(hl),c
   365E 23                10292 	inc	hl
   365F 70                10293 	ld	(hl),b
                          10294 ;demo.c:1544: cmd.dest_y = x;
   3660 21rB4s44          10295 	ld	hl, #_cmd + 6
   3663 DD 7E FD          10296 	ld	a,-3 (ix)
   3666 77                10297 	ld	(hl),a
   3667 23                10298 	inc	hl
   3668 DD 7E FE          10299 	ld	a,-2 (ix)
   366B 77                10300 	ld	(hl),a
                          10301 ;demo.c:1545: cmd.command = 0x53;
   366C 3E 53             10302 	ld	a,#0x53
   366E 32rBCs44          10303 	ld	(#_cmd + 14),a
                          10304 ;demo.c:1546: vdp_copier(&cmd);
   3671 21rAEs44          10305 	ld	hl,#_cmd
   3674 E5                10306 	push	hl
   3675 CDr00s00          10307 	call	_vdp_copier
   3678 F1                10308 	pop	af
                          10309 ;demo.c:1541: for (x = 30; x < 162; x+=1) {
   3679 DD 34 FD          10310 	inc	-3 (ix)
   367C 20 03             10311 	jr	NZ,00152$
   367E DD 34 FE          10312 	inc	-2 (ix)
   3681                   10313 00152$:
   3681 18 AD             10314 	jr	00124$
   3683                   10315 00127$:
                          10316 ;demo.c:1548: pointframe+=2;
   3683 21rB0s45          10317 	ld	hl,#_pointframe
   3686 7E                10318 	ld	a,(hl)
   3687 C6 02             10319 	add	a,#0x02
   3689 23                10320 	inc	hl
   368A 2B                10321 	dec	hl
   368B C5                10322 	push	bc
   368C 4F                10323 	ld	c, a
   368D 23                10324 	inc	hl
   368E 7E                10325 	ld	a, (hl)
   368F 47                10326 	ld	b, a
   3690 79                10327 	ld	a, c
   3691 2B                10328 	dec	hl
   3692 77                10329 	ld	(hl), a
   3693 78                10330 	ld	a, b
   3694 C1                10331 	pop	bc
   3695 CE 00             10332 	adc	a,#0x00
   3697 23                10333 	inc	hl
   3698 77                10334 	ld	(hl),a
                          10335 ;demo.c:1550: if (greetindex == 0) {
   3699 3ArB2s45          10336 	ld	a,(#_greetindex+0)
   369C 21rB3s45          10337 	ld	hl,#_greetindex + 1
   369F B6                10338 	or	a,(hl)
   36A0 20 17             10339 	jr	NZ,00107$
                          10340 ;demo.c:1551: slowend = 27;
   36A2 21r44s45          10341 	ld	hl,#_slowend + 0
   36A5 36 1B             10342 	ld	(hl), #0x1B
   36A7 21r45s45          10343 	ld	hl,#_slowend + 1
   36AA 36 00             10344 	ld	(hl), #0x00
                          10345 ;demo.c:1552: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   36AC 21 0A 14          10346 	ld	hl,#0x140A
   36AF E5                10347 	push	hl
   36B0 21r65s37          10348 	ld	hl,#__str_15
   36B3 E5                10349 	push	hl
   36B4 CDrC9s15          10350 	call	_drawstrslow
   36B7 F1                10351 	pop	af
   36B8 F1                10352 	pop	af
   36B9                   10353 00107$:
                          10354 ;demo.c:1554: if (greetindex == 1) {
   36B9 3ArB2s45          10355 	ld	a,(#_greetindex+0)
   36BC D6 01             10356 	sub	a,#0x01
   36BE 20 06             10357 	jr	NZ,00153$
   36C0 3ArB3s45          10358 	ld	a,(#_greetindex+1)
   36C3 B7                10359 	or	a,a
   36C4 28 02             10360 	jr	Z,00154$
   36C6                   10361 00153$:
   36C6 18 17             10362 	jr	00109$
   36C8                   10363 00154$:
                          10364 ;demo.c:1555: slowend = 33;
   36C8 21r44s45          10365 	ld	hl,#_slowend + 0
   36CB 36 21             10366 	ld	(hl), #0x21
   36CD 21r45s45          10367 	ld	hl,#_slowend + 1
   36D0 36 00             10368 	ld	(hl), #0x00
                          10369 ;demo.c:1556: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   36D2 21 0A A4          10370 	ld	hl,#0xA40A
   36D5 E5                10371 	push	hl
   36D6 21r81s37          10372 	ld	hl,#__str_16
   36D9 E5                10373 	push	hl
   36DA CDrC9s15          10374 	call	_drawstrslow
   36DD F1                10375 	pop	af
   36DE F1                10376 	pop	af
   36DF                   10377 00109$:
                          10378 ;demo.c:1558: if (greetindex == 2) {
   36DF 3ArB2s45          10379 	ld	a,(#_greetindex+0)
   36E2 D6 02             10380 	sub	a,#0x02
   36E4 20 06             10381 	jr	NZ,00155$
   36E6 3ArB3s45          10382 	ld	a,(#_greetindex+1)
   36E9 B7                10383 	or	a,a
   36EA 28 02             10384 	jr	Z,00156$
   36EC                   10385 00155$:
   36EC 18 17             10386 	jr	00111$
   36EE                   10387 00156$:
                          10388 ;demo.c:1559: slowend = 29;
   36EE 21r44s45          10389 	ld	hl,#_slowend + 0
   36F1 36 1D             10390 	ld	(hl), #0x1D
   36F3 21r45s45          10391 	ld	hl,#_slowend + 1
   36F6 36 00             10392 	ld	(hl), #0x00
                          10393 ;demo.c:1560: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   36F8 21 12 AE          10394 	ld	hl,#0xAE12
   36FB E5                10395 	push	hl
   36FC 21rA3s37          10396 	ld	hl,#__str_17
   36FF E5                10397 	push	hl
   3700 CDrC9s15          10398 	call	_drawstrslow
   3703 F1                10399 	pop	af
   3704 F1                10400 	pop	af
   3705                   10401 00111$:
                          10402 ;demo.c:1562: if (greetindex == 3) {
   3705 3ArB2s45          10403 	ld	a,(#_greetindex+0)
   3708 D6 03             10404 	sub	a,#0x03
   370A 20 06             10405 	jr	NZ,00157$
   370C 3ArB3s45          10406 	ld	a,(#_greetindex+1)
   370F B7                10407 	or	a,a
   3710 28 02             10408 	jr	Z,00158$
   3712                   10409 00157$:
   3712 18 17             10410 	jr	00113$
   3714                   10411 00158$:
                          10412 ;demo.c:1563: slowend = 24;
   3714 21r44s45          10413 	ld	hl,#_slowend + 0
   3717 36 18             10414 	ld	(hl), #0x18
   3719 21r45s45          10415 	ld	hl,#_slowend + 1
   371C 36 00             10416 	ld	(hl), #0x00
                          10417 ;demo.c:1564: drawstrslow("Cartoon Horse Demo Force",20,184);
   371E 21 14 B8          10418 	ld	hl,#0xB814
   3721 E5                10419 	push	hl
   3722 21rC1s37          10420 	ld	hl,#__str_18
   3725 E5                10421 	push	hl
   3726 CDrC9s15          10422 	call	_drawstrslow
   3729 F1                10423 	pop	af
   372A F1                10424 	pop	af
   372B                   10425 00113$:
                          10426 ;demo.c:1566: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   372B 21r44s45          10427 	ld	hl,#_slowend
   372E 3Ar42s45          10428 	ld	a,(#_ltrpointer+0)
   3731 96                10429 	sub	a,(hl)
   3732 3Ar43s45          10430 	ld	a,(#_ltrpointer+1)
   3735 23                10431 	inc	hl
   3736 9E                10432 	sbc	a,(hl)
   3737 FAr54s37          10433 	jp	M,00115$
   373A FD 21rB2s45       10434 	ld	iy,#_greetindex
   373E FD 34 00          10435 	inc	0 (iy)
   3741 20 07             10436 	jr	NZ,00159$
   3743 FD 21rB2s45       10437 	ld	iy,#_greetindex
   3747 FD 34 01          10438 	inc	1 (iy)
   374A                   10439 00159$:
   374A 21r42s45          10440 	ld	hl,#_ltrpointer + 0
   374D 36 00             10441 	ld	(hl), #0x00
   374F 21r43s45          10442 	ld	hl,#_ltrpointer + 1
   3752 36 00             10443 	ld	(hl), #0x00
   3754                   10444 00115$:
                          10445 ;demo.c:1568: msx2_palette(4,0,0,0);
   3754 21 00 00          10446 	ld	hl,#0x0000
   3757 E5                10447 	push	hl
   3758 2E 04             10448 	ld	l, #0x04
   375A E5                10449 	push	hl
   375B CDr00s00          10450 	call	_msx2_palette
   375E F1                10451 	pop	af
   375F F1                10452 	pop	af
   3760 DD F9             10453 	ld	sp,ix
   3762 DD E1             10454 	pop	ix
   3764 C9                10455 	ret
   3765                   10456 _points_end::
   3765                   10457 __str_15:
   3765 47 52 45 45 54 49 10458 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   3780 00                10459 	.db 0x00
   3781                   10460 __str_16:
   3781 54 72 69 6C 6F 62 10461 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   37A2 00                10462 	.db 0x00
   37A3                   10463 __str_17:
   37A3 50 57 50 20 20 44 10464 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   37C0 00                10465 	.db 0x00
   37C1                   10466 __str_18:
   37C1 43 61 72 74 6F 6F 10467 	.ascii "Cartoon Horse Demo Force"
        6E 20 48 6F 72 73
        65 20 44 65 6D 6F
        20 46 6F 72 63 65
   37D9 00                10468 	.db 0x00
                          10469 ;demo.c:1573: void bigtext() {
                          10470 ;	---------------------------------
                          10471 ; Function bigtext
                          10472 ; ---------------------------------
   37DA                   10473 _bigtext_start::
   37DA                   10474 _bigtext:
   37DA DD E5             10475 	push	ix
   37DC DD 21 00 00       10476 	ld	ix,#0
   37E0 DD 39             10477 	add	ix,sp
   37E2 F5                10478 	push	af
                          10479 ;demo.c:1575: if (bigtextp == 0) {
   37E3 3ArB4s45          10480 	ld	a,(#_bigtextp+0)
   37E6 FD 21rB4s45       10481 	ld	iy,#_bigtextp
   37EA FD B6 01          10482 	or	a,1 (iy)
   37ED C2rFAs38          10483 	jp	NZ,00102$
                          10484 ;demo.c:1576: cmd.size_x = 2;
   37F0 21rB6s44          10485 	ld	hl, #_cmd + 8
   37F3 36 02             10486 	ld	(hl),#0x02
   37F5 23                10487 	inc	hl
   37F6 36 00             10488 	ld	(hl),#0x00
                          10489 ;demo.c:1577: cmd.size_y = 212;
   37F8 21rB8s44          10490 	ld	hl, #_cmd + 10
   37FB 36 D4             10491 	ld	(hl),#0xD4
   37FD 23                10492 	inc	hl
   37FE 36 00             10493 	ld	(hl),#0x00
                          10494 ;demo.c:1578: cmd.data = 0;
                          10495 ;demo.c:1579: cmd.argument = 0x00; // from 70xY to left
   3800 3E 00             10496 	ld	a,#0x00
   3802 32rBAs44          10497 	ld	(#_cmd + 12),a
   3805 32rBBs44          10498 	ld	(#_cmd + 13),a
                          10499 ;demo.c:1580: cmd.command = 0xd0; // vram to vram, y only
   3808 01rBCs44          10500 	ld	bc,#_cmd + 14
   380B 3E D0             10501 	ld	a,#0xD0
   380D 02                10502 	ld	(bc),a
                          10503 ;demo.c:1581: cmd.source_x = 255;
   380E 21rAEs44          10504 	ld	hl,#_cmd
   3811 36 FF             10505 	ld	(hl),#0xFF
   3813 23                10506 	inc	hl
   3814 36 00             10507 	ld	(hl),#0x00
                          10508 ;demo.c:1582: cmd.source_y = 0;
   3816 21rB0s44          10509 	ld	hl, #_cmd + 2
   3819 36 00             10510 	ld	(hl),#0x00
   381B 23                10511 	inc	hl
   381C 36 00             10512 	ld	(hl),#0x00
                          10513 ;demo.c:1584: for (x = 0; x < 256; x+=4) {
   381E 01 00 00          10514 	ld	bc,#0x0000
   3821                   10515 00115$:
   3821 79                10516 	ld	a,c
   3822 D6 00             10517 	sub	a,#0x00
   3824 78                10518 	ld	a,b
   3825 DE 01             10519 	sbc	a,#0x01
   3827 F2r5Es38          10520 	jp	P,00118$
                          10521 ;demo.c:1585: waitVB();
   382A 76                10522 		halt 
                          10523 ;demo.c:1586: cmd.dest_y = 256;
   382B 11rB4s44          10524 	ld	de,#_cmd + 6
   382E EB                10525 	ex	de,hl
   382F 36 00             10526 	ld	(hl),#0x00
   3831 23                10527 	inc	hl
   3832 36 01             10528 	ld	(hl),#0x01
                          10529 ;demo.c:1587: cmd.dest_x = x;
   3834 11rB2s44          10530 	ld	de,#_cmd + 4
   3837 EB                10531 	ex	de,hl
   3838 71                10532 	ld	(hl),c
   3839 23                10533 	inc	hl
   383A 70                10534 	ld	(hl),b
                          10535 ;demo.c:1588: vdp_copier(&cmd);
   383B C5                10536 	push	bc
   383C 21rAEs44          10537 	ld	hl,#_cmd
   383F E5                10538 	push	hl
   3840 CDr00s00          10539 	call	_vdp_copier
   3843 F1                10540 	pop	af
   3844 C1                10541 	pop	bc
                          10542 ;demo.c:1589: cmd.dest_y = 0;
   3845 11rB4s44          10543 	ld	de,#_cmd + 6
   3848 EB                10544 	ex	de,hl
   3849 36 00             10545 	ld	(hl),#0x00
   384B 23                10546 	inc	hl
   384C 36 00             10547 	ld	(hl),#0x00
                          10548 ;demo.c:1590: vdp_copier(&cmd);
   384E C5                10549 	push	bc
   384F 21rAEs44          10550 	ld	hl,#_cmd
   3852 E5                10551 	push	hl
   3853 CDr00s00          10552 	call	_vdp_copier
   3856 F1                10553 	pop	af
   3857 C1                10554 	pop	bc
                          10555 ;demo.c:1584: for (x = 0; x < 256; x+=4) {
   3858 03                10556 	inc	bc
   3859 03                10557 	inc	bc
   385A 03                10558 	inc	bc
   385B 03                10559 	inc	bc
   385C 18 C3             10560 	jr	00115$
   385E                   10561 00118$:
                          10562 ;demo.c:1593: for (x = 254; x > 0; x-=4) {
   385E 01 FE 00          10563 	ld	bc,#0x00FE
   3861                   10564 00119$:
   3861 3E 00             10565 	ld	a,#0x00
   3863 91                10566 	sub	a,c
   3864 3E 00             10567 	ld	a,#0x00
   3866 98                10568 	sbc	a,b
   3867 F2rA2s38          10569 	jp	P,00122$
                          10570 ;demo.c:1594: waitVB();
   386A 76                10571 		halt 
                          10572 ;demo.c:1595: cmd.dest_y = 256;
   386B 11rB4s44          10573 	ld	de,#_cmd + 6
   386E EB                10574 	ex	de,hl
   386F 36 00             10575 	ld	(hl),#0x00
   3871 23                10576 	inc	hl
   3872 36 01             10577 	ld	(hl),#0x01
                          10578 ;demo.c:1596: cmd.dest_x = x;
   3874 11rB2s44          10579 	ld	de,#_cmd + 4
   3877 EB                10580 	ex	de,hl
   3878 71                10581 	ld	(hl),c
   3879 23                10582 	inc	hl
   387A 70                10583 	ld	(hl),b
                          10584 ;demo.c:1597: vdp_copier(&cmd);
   387B C5                10585 	push	bc
   387C 21rAEs44          10586 	ld	hl,#_cmd
   387F E5                10587 	push	hl
   3880 CDr00s00          10588 	call	_vdp_copier
   3883 F1                10589 	pop	af
   3884 C1                10590 	pop	bc
                          10591 ;demo.c:1598: cmd.dest_y = 0;
   3885 11rB4s44          10592 	ld	de,#_cmd + 6
   3888 EB                10593 	ex	de,hl
   3889 36 00             10594 	ld	(hl),#0x00
   388B 23                10595 	inc	hl
   388C 36 00             10596 	ld	(hl),#0x00
                          10597 ;demo.c:1599: vdp_copier(&cmd);
   388E C5                10598 	push	bc
   388F 21rAEs44          10599 	ld	hl,#_cmd
   3892 E5                10600 	push	hl
   3893 CDr00s00          10601 	call	_vdp_copier
   3896 F1                10602 	pop	af
   3897 C1                10603 	pop	bc
                          10604 ;demo.c:1593: for (x = 254; x > 0; x-=4) {
   3898 79                10605 	ld	a,c
   3899 C6 FC             10606 	add	a,#0xFC
   389B 4F                10607 	ld	c,a
   389C 78                10608 	ld	a,b
   389D CE FF             10609 	adc	a,#0xFF
   389F 47                10610 	ld	b,a
   38A0 18 BF             10611 	jr	00119$
   38A2                   10612 00122$:
                          10613 ;demo.c:1602: vdp_load_palette(twister_palette);
   38A2 21r2As44          10614 	ld	hl,#_twister_palette
   38A5 E5                10615 	push	hl
   38A6 CDr00s00          10616 	call	_vdp_load_palette
   38A9 F1                10617 	pop	af
                          10618 ;demo.c:1603: drawstr2x("DIGITAL",26,44);
   38AA 21 1A 2C          10619 	ld	hl,#0x2C1A
   38AD E5                10620 	push	hl
   38AE 21r0Cs3D          10621 	ld	hl,#__str_19
   38B1 E5                10622 	push	hl
   38B2 CDr67s16          10623 	call	_drawstr2x
   38B5 F1                10624 	pop	af
   38B6 F1                10625 	pop	af
                          10626 ;demo.c:1604: drawstr2x("SOUNDS",27,84);
   38B7 21 1B 54          10627 	ld	hl,#0x541B
   38BA E5                10628 	push	hl
   38BB 21r14s3D          10629 	ld	hl,#__str_20
   38BE E5                10630 	push	hl
   38BF CDr67s16          10631 	call	_drawstr2x
   38C2 F1                10632 	pop	af
   38C3 F1                10633 	pop	af
                          10634 ;demo.c:1605: drawstr2x("SYSTEM",25,124);
   38C4 21 19 7C          10635 	ld	hl,#0x7C19
   38C7 E5                10636 	push	hl
   38C8 21r1Bs3D          10637 	ld	hl,#__str_21
   38CB E5                10638 	push	hl
   38CC CDr67s16          10639 	call	_drawstr2x
   38CF F1                10640 	pop	af
   38D0 F1                10641 	pop	af
                          10642 ;demo.c:1606: bigtextp++;
   38D1 FD 21rB4s45       10643 	ld	iy,#_bigtextp
   38D5 FD 34 00          10644 	inc	0 (iy)
   38D8 20 07             10645 	jr	NZ,00167$
   38DA FD 21rB4s45       10646 	ld	iy,#_bigtextp
   38DE FD 34 01          10647 	inc	1 (iy)
   38E1                   10648 00167$:
                          10649 ;demo.c:1607: tri_inited = 2;
   38E1 21r95s45          10650 	ld	hl,#_tri_inited + 0
   38E4 36 02             10651 	ld	(hl), #0x02
                          10652 ;demo.c:1608: ff = 0;
   38E6 21r46s45          10653 	ld	hl,#_ff + 0
   38E9 36 00             10654 	ld	(hl), #0x00
   38EB 21r47s45          10655 	ld	hl,#_ff + 1
   38EE 36 00             10656 	ld	(hl), #0x00
                          10657 ;demo.c:1609: ltrpointer = 0;
   38F0 21r42s45          10658 	ld	hl,#_ltrpointer + 0
   38F3 36 00             10659 	ld	(hl), #0x00
   38F5 21r43s45          10660 	ld	hl,#_ltrpointer + 1
   38F8 36 00             10661 	ld	(hl), #0x00
   38FA                   10662 00102$:
                          10663 ;demo.c:1612: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   38FA 21r46s45          10664 	ld	hl,#_ff + 0
   38FD 4E                10665 	ld	c,(hl)
   38FE 21r47s45          10666 	ld	hl,#_ff + 1
   3901 46                10667 	ld	b,(hl)
   3902 CB 28             10668 	sra	b
   3904 CB 19             10669 	rr	c
   3906 CB 28             10670 	sra	b
   3908 CB 19             10671 	rr	c
   390A 21r46s45          10672 	ld	hl,#_ff + 0
   390D 5E                10673 	ld	e,(hl)
   390E 21r47s45          10674 	ld	hl,#_ff + 1
   3911 56                10675 	ld	d,(hl)
   3912 CB 2A             10676 	sra	d
   3914 CB 1B             10677 	rr	e
   3916 CB 2A             10678 	sra	d
   3918 CB 1B             10679 	rr	e
   391A CB 2A             10680 	sra	d
   391C CB 1B             10681 	rr	e
   391E 43                10682 	ld	b,e
   391F 79                10683 	ld	a,c
   3920 F5                10684 	push	af
   3921 33                10685 	inc	sp
   3922 C5                10686 	push	bc
   3923 33                10687 	inc	sp
   3924 41                10688 	ld	b,c
   3925 0E 04             10689 	ld	c,#0x04
   3927 C5                10690 	push	bc
   3928 CDr00s00          10691 	call	_msx2_palette
   392B F1                10692 	pop	af
   392C F1                10693 	pop	af
                          10694 ;demo.c:1613: ff+=2;
   392D 21r46s45          10695 	ld	hl,#_ff
   3930 7E                10696 	ld	a,(hl)
   3931 C6 02             10697 	add	a,#0x02
   3933 23                10698 	inc	hl
   3934 2B                10699 	dec	hl
   3935 C5                10700 	push	bc
   3936 4F                10701 	ld	c, a
   3937 23                10702 	inc	hl
   3938 7E                10703 	ld	a, (hl)
   3939 47                10704 	ld	b, a
   393A 79                10705 	ld	a, c
   393B 2B                10706 	dec	hl
   393C 77                10707 	ld	(hl), a
   393D 78                10708 	ld	a, b
   393E C1                10709 	pop	bc
   393F CE 00             10710 	adc	a,#0x00
   3941 23                10711 	inc	hl
   3942 77                10712 	ld	(hl),a
                          10713 ;demo.c:1615: if (ff == 600) {
   3943 3Ar46s45          10714 	ld	a,(#_ff+0)
   3946 D6 58             10715 	sub	a,#0x58
   3948 20 07             10716 	jr	NZ,00170$
   394A 3Ar47s45          10717 	ld	a,(#_ff+1)
   394D D6 02             10718 	sub	a,#0x02
   394F 28 03             10719 	jr	Z,00171$
   3951                   10720 00170$:
   3951 C3rE3s3A          10721 	jp	00104$
   3954                   10722 00171$:
                          10723 ;demo.c:1616: cmd.size_x = 2;
   3954 21rB6s44          10724 	ld	hl, #_cmd + 8
   3957 36 02             10725 	ld	(hl),#0x02
   3959 23                10726 	inc	hl
   395A 36 00             10727 	ld	(hl),#0x00
                          10728 ;demo.c:1617: cmd.size_y = 212;
   395C 21rB8s44          10729 	ld	hl, #_cmd + 10
   395F 36 D4             10730 	ld	(hl),#0xD4
   3961 23                10731 	inc	hl
   3962 36 00             10732 	ld	(hl),#0x00
                          10733 ;demo.c:1618: cmd.data = 0;
                          10734 ;demo.c:1619: cmd.argument = 0x00; // from 70xY to left
   3964 3E 00             10735 	ld	a,#0x00
   3966 32rBAs44          10736 	ld	(#_cmd + 12),a
   3969 32rBBs44          10737 	ld	(#_cmd + 13),a
                          10738 ;demo.c:1620: cmd.command = 0xd0; // vram to vram, y only
   396C 01rBCs44          10739 	ld	bc,#_cmd + 14
   396F 3E D0             10740 	ld	a,#0xD0
   3971 02                10741 	ld	(bc),a
                          10742 ;demo.c:1621: cmd.source_x = 255;
   3972 21rAEs44          10743 	ld	hl,#_cmd
   3975 36 FF             10744 	ld	(hl),#0xFF
   3977 23                10745 	inc	hl
   3978 36 00             10746 	ld	(hl),#0x00
                          10747 ;demo.c:1622: cmd.source_y = 0;
   397A 21rB0s44          10748 	ld	hl, #_cmd + 2
   397D 36 00             10749 	ld	(hl),#0x00
   397F 23                10750 	inc	hl
   3980 36 00             10751 	ld	(hl),#0x00
                          10752 ;demo.c:1624: for (x = 254; x > 0; x-=4) {
   3982 DD 36 FE FE       10753 	ld	-2 (ix),#0xFE
   3986 DD 36 FF 00       10754 	ld	-1 (ix),#0x00
   398A                   10755 00123$:
   398A 3E 00             10756 	ld	a,#0x00
   398C DD 96 FE          10757 	sub	a,-2 (ix)
   398F 3E 00             10758 	ld	a,#0x00
   3991 DD 9E FF          10759 	sbc	a,-1 (ix)
   3994 F2r1Fs3A          10760 	jp	P,00126$
                          10761 ;demo.c:1625: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3997 21r46s45          10762 	ld	hl,#_ff + 0
   399A 5E                10763 	ld	e,(hl)
   399B 21r47s45          10764 	ld	hl,#_ff + 1
   399E 56                10765 	ld	d,(hl)
   399F CB 2A             10766 	sra	d
   39A1 CB 1B             10767 	rr	e
   39A3 CB 2A             10768 	sra	d
   39A5 CB 1B             10769 	rr	e
   39A7 21r46s45          10770 	ld	hl,#_ff + 0
   39AA 56                10771 	ld	d,(hl)
   39AB 21r47s45          10772 	ld	hl,#_ff + 1
   39AE 4E                10773 	ld	c,(hl)
   39AF CB 29             10774 	sra	c
   39B1 CB 1A             10775 	rr	d
   39B3 CB 29             10776 	sra	c
   39B5 CB 1A             10777 	rr	d
   39B7 CB 29             10778 	sra	c
   39B9 CB 1A             10779 	rr	d
   39BB 7B                10780 	ld	a,e
   39BC F5                10781 	push	af
   39BD 33                10782 	inc	sp
   39BE D5                10783 	push	de
   39BF 33                10784 	inc	sp
   39C0 53                10785 	ld	d,e
   39C1 1E 04             10786 	ld	e,#0x04
   39C3 D5                10787 	push	de
   39C4 CDr00s00          10788 	call	_msx2_palette
   39C7 F1                10789 	pop	af
   39C8 F1                10790 	pop	af
                          10791 ;demo.c:1626: ff+=2;
   39C9 21r46s45          10792 	ld	hl,#_ff
   39CC 7E                10793 	ld	a,(hl)
   39CD C6 02             10794 	add	a,#0x02
   39CF 23                10795 	inc	hl
   39D0 2B                10796 	dec	hl
   39D1 C5                10797 	push	bc
   39D2 4F                10798 	ld	c, a
   39D3 23                10799 	inc	hl
   39D4 7E                10800 	ld	a, (hl)
   39D5 47                10801 	ld	b, a
   39D6 79                10802 	ld	a, c
   39D7 2B                10803 	dec	hl
   39D8 77                10804 	ld	(hl), a
   39D9 78                10805 	ld	a, b
   39DA C1                10806 	pop	bc
   39DB CE 00             10807 	adc	a,#0x00
   39DD 23                10808 	inc	hl
   39DE 77                10809 	ld	(hl),a
                          10810 ;demo.c:1627: waitVB();
   39DF 76                10811 		halt 
                          10812 ;demo.c:1628: cmd.dest_y = 256;
   39E0 21rB4s44          10813 	ld	hl, #_cmd + 6
   39E3 36 00             10814 	ld	(hl),#0x00
   39E5 23                10815 	inc	hl
   39E6 36 01             10816 	ld	(hl),#0x01
                          10817 ;demo.c:1629: cmd.dest_x = x;
   39E8 21rB2s44          10818 	ld	hl, #_cmd + 4
   39EB DD 7E FE          10819 	ld	a,-2 (ix)
   39EE 77                10820 	ld	(hl),a
   39EF 23                10821 	inc	hl
   39F0 DD 7E FF          10822 	ld	a,-1 (ix)
   39F3 77                10823 	ld	(hl),a
                          10824 ;demo.c:1630: vdp_copier(&cmd);
   39F4 21rAEs44          10825 	ld	hl,#_cmd
   39F7 E5                10826 	push	hl
   39F8 CDr00s00          10827 	call	_vdp_copier
   39FB F1                10828 	pop	af
                          10829 ;demo.c:1631: cmd.dest_y = 0;
   39FC 21rB4s44          10830 	ld	hl, #_cmd + 6
   39FF 36 00             10831 	ld	(hl),#0x00
   3A01 23                10832 	inc	hl
   3A02 36 00             10833 	ld	(hl),#0x00
                          10834 ;demo.c:1632: vdp_copier(&cmd);
   3A04 21rAEs44          10835 	ld	hl,#_cmd
   3A07 E5                10836 	push	hl
   3A08 CDr00s00          10837 	call	_vdp_copier
   3A0B F1                10838 	pop	af
                          10839 ;demo.c:1624: for (x = 254; x > 0; x-=4) {
   3A0C DD 7E FE          10840 	ld	a,-2 (ix)
   3A0F C6 FC             10841 	add	a,#0xFC
   3A11 DD 77 FE          10842 	ld	-2 (ix),a
   3A14 DD 7E FF          10843 	ld	a,-1 (ix)
   3A17 CE FF             10844 	adc	a,#0xFF
   3A19 DD 77 FF          10845 	ld	-1 (ix),a
   3A1C C3r8As39          10846 	jp	00123$
   3A1F                   10847 00126$:
                          10848 ;demo.c:1636: for (x = 0; x < 256; x+=4) {
   3A1F DD 36 FE 00       10849 	ld	-2 (ix),#0x00
   3A23 DD 36 FF 00       10850 	ld	-1 (ix),#0x00
   3A27                   10851 00127$:
   3A27 DD 7E FE          10852 	ld	a,-2 (ix)
   3A2A D6 00             10853 	sub	a,#0x00
   3A2C DD 7E FF          10854 	ld	a,-1 (ix)
   3A2F DE 01             10855 	sbc	a,#0x01
   3A31 F2rBCs3A          10856 	jp	P,00130$
                          10857 ;demo.c:1637: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3A34 21r46s45          10858 	ld	hl,#_ff + 0
   3A37 5E                10859 	ld	e,(hl)
   3A38 21r47s45          10860 	ld	hl,#_ff + 1
   3A3B 56                10861 	ld	d,(hl)
   3A3C CB 2A             10862 	sra	d
   3A3E CB 1B             10863 	rr	e
   3A40 CB 2A             10864 	sra	d
   3A42 CB 1B             10865 	rr	e
   3A44 21r46s45          10866 	ld	hl,#_ff + 0
   3A47 56                10867 	ld	d,(hl)
   3A48 21r47s45          10868 	ld	hl,#_ff + 1
   3A4B 4E                10869 	ld	c,(hl)
   3A4C CB 29             10870 	sra	c
   3A4E CB 1A             10871 	rr	d
   3A50 CB 29             10872 	sra	c
   3A52 CB 1A             10873 	rr	d
   3A54 CB 29             10874 	sra	c
   3A56 CB 1A             10875 	rr	d
   3A58 7B                10876 	ld	a,e
   3A59 F5                10877 	push	af
   3A5A 33                10878 	inc	sp
   3A5B D5                10879 	push	de
   3A5C 33                10880 	inc	sp
   3A5D 53                10881 	ld	d,e
   3A5E 1E 04             10882 	ld	e,#0x04
   3A60 D5                10883 	push	de
   3A61 CDr00s00          10884 	call	_msx2_palette
   3A64 F1                10885 	pop	af
   3A65 F1                10886 	pop	af
                          10887 ;demo.c:1638: ff+=2;
   3A66 21r46s45          10888 	ld	hl,#_ff
   3A69 7E                10889 	ld	a,(hl)
   3A6A C6 02             10890 	add	a,#0x02
   3A6C 23                10891 	inc	hl
   3A6D 2B                10892 	dec	hl
   3A6E C5                10893 	push	bc
   3A6F 4F                10894 	ld	c, a
   3A70 23                10895 	inc	hl
   3A71 7E                10896 	ld	a, (hl)
   3A72 47                10897 	ld	b, a
   3A73 79                10898 	ld	a, c
   3A74 2B                10899 	dec	hl
   3A75 77                10900 	ld	(hl), a
   3A76 78                10901 	ld	a, b
   3A77 C1                10902 	pop	bc
   3A78 CE 00             10903 	adc	a,#0x00
   3A7A 23                10904 	inc	hl
   3A7B 77                10905 	ld	(hl),a
                          10906 ;demo.c:1639: waitVB();
   3A7C 76                10907 		halt 
                          10908 ;demo.c:1640: cmd.dest_y = 256;
   3A7D 21rB4s44          10909 	ld	hl, #_cmd + 6
   3A80 36 00             10910 	ld	(hl),#0x00
   3A82 23                10911 	inc	hl
   3A83 36 01             10912 	ld	(hl),#0x01
                          10913 ;demo.c:1641: cmd.dest_x = x;
   3A85 21rB2s44          10914 	ld	hl, #_cmd + 4
   3A88 DD 7E FE          10915 	ld	a,-2 (ix)
   3A8B 77                10916 	ld	(hl),a
   3A8C 23                10917 	inc	hl
   3A8D DD 7E FF          10918 	ld	a,-1 (ix)
   3A90 77                10919 	ld	(hl),a
                          10920 ;demo.c:1642: vdp_copier(&cmd);
   3A91 21rAEs44          10921 	ld	hl,#_cmd
   3A94 E5                10922 	push	hl
   3A95 CDr00s00          10923 	call	_vdp_copier
   3A98 F1                10924 	pop	af
                          10925 ;demo.c:1643: cmd.dest_y = 0;
   3A99 21rB4s44          10926 	ld	hl, #_cmd + 6
   3A9C 36 00             10927 	ld	(hl),#0x00
   3A9E 23                10928 	inc	hl
   3A9F 36 00             10929 	ld	(hl),#0x00
                          10930 ;demo.c:1644: vdp_copier(&cmd);
   3AA1 21rAEs44          10931 	ld	hl,#_cmd
   3AA4 E5                10932 	push	hl
   3AA5 CDr00s00          10933 	call	_vdp_copier
   3AA8 F1                10934 	pop	af
                          10935 ;demo.c:1636: for (x = 0; x < 256; x+=4) {
   3AA9 DD 7E FE          10936 	ld	a,-2 (ix)
   3AAC C6 04             10937 	add	a,#0x04
   3AAE DD 77 FE          10938 	ld	-2 (ix),a
   3AB1 DD 7E FF          10939 	ld	a,-1 (ix)
   3AB4 CE 00             10940 	adc	a,#0x00
   3AB6 DD 77 FF          10941 	ld	-1 (ix),a
   3AB9 C3r27s3A          10942 	jp	00127$
   3ABC                   10943 00130$:
                          10944 ;demo.c:1647: drawstr2x("COMMAND",4,44);
   3ABC 21 04 2C          10945 	ld	hl,#0x2C04
   3ABF E5                10946 	push	hl
   3AC0 21r22s3D          10947 	ld	hl,#__str_22
   3AC3 E5                10948 	push	hl
   3AC4 CDr67s16          10949 	call	_drawstr2x
   3AC7 F1                10950 	pop	af
   3AC8 F1                10951 	pop	af
                          10952 ;demo.c:1648: drawstr2x("   THE  ",32,84);
   3AC9 21 20 54          10953 	ld	hl,#0x5420
   3ACC E5                10954 	push	hl
   3ACD 21r2As3D          10955 	ld	hl,#__str_23
   3AD0 E5                10956 	push	hl
   3AD1 CDr67s16          10957 	call	_drawstr2x
   3AD4 F1                10958 	pop	af
   3AD5 F1                10959 	pop	af
                          10960 ;demo.c:1649: drawstr2x("  BASS ",35,124);
   3AD6 21 23 7C          10961 	ld	hl,#0x7C23
   3AD9 E5                10962 	push	hl
   3ADA 21r33s3D          10963 	ld	hl,#__str_24
   3ADD E5                10964 	push	hl
   3ADE CDr67s16          10965 	call	_drawstr2x
   3AE1 F1                10966 	pop	af
   3AE2 F1                10967 	pop	af
   3AE3                   10968 00104$:
                          10969 ;demo.c:1652: if (ff == 1200) {
   3AE3 3Ar46s45          10970 	ld	a,(#_ff+0)
   3AE6 D6 B0             10971 	sub	a,#0xB0
   3AE8 20 07             10972 	jr	NZ,00176$
   3AEA 3Ar47s45          10973 	ld	a,(#_ff+1)
   3AED D6 04             10974 	sub	a,#0x04
   3AEF 28 03             10975 	jr	Z,00177$
   3AF1                   10976 00176$:
   3AF1 C3r83s3C          10977 	jp	00106$
   3AF4                   10978 00177$:
                          10979 ;demo.c:1653: cmd.size_x = 3;
   3AF4 21rB6s44          10980 	ld	hl, #_cmd + 8
   3AF7 36 03             10981 	ld	(hl),#0x03
   3AF9 23                10982 	inc	hl
   3AFA 36 00             10983 	ld	(hl),#0x00
                          10984 ;demo.c:1654: cmd.size_y = 212;
   3AFC 21rB8s44          10985 	ld	hl, #_cmd + 10
   3AFF 36 D4             10986 	ld	(hl),#0xD4
   3B01 23                10987 	inc	hl
   3B02 36 00             10988 	ld	(hl),#0x00
                          10989 ;demo.c:1655: cmd.data = 0;
                          10990 ;demo.c:1656: cmd.argument = 0x00; // from 70xY to left
   3B04 3E 00             10991 	ld	a,#0x00
   3B06 32rBAs44          10992 	ld	(#_cmd + 12),a
   3B09 32rBBs44          10993 	ld	(#_cmd + 13),a
                          10994 ;demo.c:1657: cmd.command = 0xd0; // vram to vram, y only
   3B0C 01rBCs44          10995 	ld	bc,#_cmd + 14
   3B0F 3E D0             10996 	ld	a,#0xD0
   3B11 02                10997 	ld	(bc),a
                          10998 ;demo.c:1658: cmd.source_x = 255;
   3B12 21rAEs44          10999 	ld	hl,#_cmd
   3B15 36 FF             11000 	ld	(hl),#0xFF
   3B17 23                11001 	inc	hl
   3B18 36 00             11002 	ld	(hl),#0x00
                          11003 ;demo.c:1659: cmd.source_y = 0;
   3B1A 21rB0s44          11004 	ld	hl, #_cmd + 2
   3B1D 36 00             11005 	ld	(hl),#0x00
   3B1F 23                11006 	inc	hl
   3B20 36 00             11007 	ld	(hl),#0x00
                          11008 ;demo.c:1661: for (x = 254; x > 0; x-=4) {
   3B22 DD 36 FE FE       11009 	ld	-2 (ix),#0xFE
   3B26 DD 36 FF 00       11010 	ld	-1 (ix),#0x00
   3B2A                   11011 00131$:
   3B2A 3E 00             11012 	ld	a,#0x00
   3B2C DD 96 FE          11013 	sub	a,-2 (ix)
   3B2F 3E 00             11014 	ld	a,#0x00
   3B31 DD 9E FF          11015 	sbc	a,-1 (ix)
   3B34 F2rBFs3B          11016 	jp	P,00134$
                          11017 ;demo.c:1662: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3B37 21r46s45          11018 	ld	hl,#_ff + 0
   3B3A 5E                11019 	ld	e,(hl)
   3B3B 21r47s45          11020 	ld	hl,#_ff + 1
   3B3E 56                11021 	ld	d,(hl)
   3B3F CB 2A             11022 	sra	d
   3B41 CB 1B             11023 	rr	e
   3B43 CB 2A             11024 	sra	d
   3B45 CB 1B             11025 	rr	e
   3B47 21r46s45          11026 	ld	hl,#_ff + 0
   3B4A 56                11027 	ld	d,(hl)
   3B4B 21r47s45          11028 	ld	hl,#_ff + 1
   3B4E 4E                11029 	ld	c,(hl)
   3B4F CB 29             11030 	sra	c
   3B51 CB 1A             11031 	rr	d
   3B53 CB 29             11032 	sra	c
   3B55 CB 1A             11033 	rr	d
   3B57 CB 29             11034 	sra	c
   3B59 CB 1A             11035 	rr	d
   3B5B 7B                11036 	ld	a,e
   3B5C F5                11037 	push	af
   3B5D 33                11038 	inc	sp
   3B5E D5                11039 	push	de
   3B5F 33                11040 	inc	sp
   3B60 53                11041 	ld	d,e
   3B61 1E 04             11042 	ld	e,#0x04
   3B63 D5                11043 	push	de
   3B64 CDr00s00          11044 	call	_msx2_palette
   3B67 F1                11045 	pop	af
   3B68 F1                11046 	pop	af
                          11047 ;demo.c:1663: ff+=2;
   3B69 21r46s45          11048 	ld	hl,#_ff
   3B6C 7E                11049 	ld	a,(hl)
   3B6D C6 02             11050 	add	a,#0x02
   3B6F 23                11051 	inc	hl
   3B70 2B                11052 	dec	hl
   3B71 C5                11053 	push	bc
   3B72 4F                11054 	ld	c, a
   3B73 23                11055 	inc	hl
   3B74 7E                11056 	ld	a, (hl)
   3B75 47                11057 	ld	b, a
   3B76 79                11058 	ld	a, c
   3B77 2B                11059 	dec	hl
   3B78 77                11060 	ld	(hl), a
   3B79 78                11061 	ld	a, b
   3B7A C1                11062 	pop	bc
   3B7B CE 00             11063 	adc	a,#0x00
   3B7D 23                11064 	inc	hl
   3B7E 77                11065 	ld	(hl),a
                          11066 ;demo.c:1664: waitVB();
   3B7F 76                11067 		halt 
                          11068 ;demo.c:1665: cmd.dest_y = 256;
   3B80 21rB4s44          11069 	ld	hl, #_cmd + 6
   3B83 36 00             11070 	ld	(hl),#0x00
   3B85 23                11071 	inc	hl
   3B86 36 01             11072 	ld	(hl),#0x01
                          11073 ;demo.c:1666: cmd.dest_x = x;
   3B88 21rB2s44          11074 	ld	hl, #_cmd + 4
   3B8B DD 7E FE          11075 	ld	a,-2 (ix)
   3B8E 77                11076 	ld	(hl),a
   3B8F 23                11077 	inc	hl
   3B90 DD 7E FF          11078 	ld	a,-1 (ix)
   3B93 77                11079 	ld	(hl),a
                          11080 ;demo.c:1667: vdp_copier(&cmd);
   3B94 21rAEs44          11081 	ld	hl,#_cmd
   3B97 E5                11082 	push	hl
   3B98 CDr00s00          11083 	call	_vdp_copier
   3B9B F1                11084 	pop	af
                          11085 ;demo.c:1668: cmd.dest_y = 0;
   3B9C 21rB4s44          11086 	ld	hl, #_cmd + 6
   3B9F 36 00             11087 	ld	(hl),#0x00
   3BA1 23                11088 	inc	hl
   3BA2 36 00             11089 	ld	(hl),#0x00
                          11090 ;demo.c:1669: vdp_copier(&cmd);
   3BA4 21rAEs44          11091 	ld	hl,#_cmd
   3BA7 E5                11092 	push	hl
   3BA8 CDr00s00          11093 	call	_vdp_copier
   3BAB F1                11094 	pop	af
                          11095 ;demo.c:1661: for (x = 254; x > 0; x-=4) {
   3BAC DD 7E FE          11096 	ld	a,-2 (ix)
   3BAF C6 FC             11097 	add	a,#0xFC
   3BB1 DD 77 FE          11098 	ld	-2 (ix),a
   3BB4 DD 7E FF          11099 	ld	a,-1 (ix)
   3BB7 CE FF             11100 	adc	a,#0xFF
   3BB9 DD 77 FF          11101 	ld	-1 (ix),a
   3BBC C3r2As3B          11102 	jp	00131$
   3BBF                   11103 00134$:
                          11104 ;demo.c:1673: for (x = 0; x < 256; x+=4) {
   3BBF DD 36 FE 00       11105 	ld	-2 (ix),#0x00
   3BC3 DD 36 FF 00       11106 	ld	-1 (ix),#0x00
   3BC7                   11107 00135$:
   3BC7 DD 7E FE          11108 	ld	a,-2 (ix)
   3BCA D6 00             11109 	sub	a,#0x00
   3BCC DD 7E FF          11110 	ld	a,-1 (ix)
   3BCF DE 01             11111 	sbc	a,#0x01
   3BD1 F2r5Cs3C          11112 	jp	P,00138$
                          11113 ;demo.c:1674: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3BD4 21r46s45          11114 	ld	hl,#_ff + 0
   3BD7 5E                11115 	ld	e,(hl)
   3BD8 21r47s45          11116 	ld	hl,#_ff + 1
   3BDB 56                11117 	ld	d,(hl)
   3BDC CB 2A             11118 	sra	d
   3BDE CB 1B             11119 	rr	e
   3BE0 CB 2A             11120 	sra	d
   3BE2 CB 1B             11121 	rr	e
   3BE4 21r46s45          11122 	ld	hl,#_ff + 0
   3BE7 56                11123 	ld	d,(hl)
   3BE8 21r47s45          11124 	ld	hl,#_ff + 1
   3BEB 4E                11125 	ld	c,(hl)
   3BEC CB 29             11126 	sra	c
   3BEE CB 1A             11127 	rr	d
   3BF0 CB 29             11128 	sra	c
   3BF2 CB 1A             11129 	rr	d
   3BF4 CB 29             11130 	sra	c
   3BF6 CB 1A             11131 	rr	d
   3BF8 7B                11132 	ld	a,e
   3BF9 F5                11133 	push	af
   3BFA 33                11134 	inc	sp
   3BFB D5                11135 	push	de
   3BFC 33                11136 	inc	sp
   3BFD 53                11137 	ld	d,e
   3BFE 1E 04             11138 	ld	e,#0x04
   3C00 D5                11139 	push	de
   3C01 CDr00s00          11140 	call	_msx2_palette
   3C04 F1                11141 	pop	af
   3C05 F1                11142 	pop	af
                          11143 ;demo.c:1675: ff+=2;
   3C06 21r46s45          11144 	ld	hl,#_ff
   3C09 7E                11145 	ld	a,(hl)
   3C0A C6 02             11146 	add	a,#0x02
   3C0C 23                11147 	inc	hl
   3C0D 2B                11148 	dec	hl
   3C0E C5                11149 	push	bc
   3C0F 4F                11150 	ld	c, a
   3C10 23                11151 	inc	hl
   3C11 7E                11152 	ld	a, (hl)
   3C12 47                11153 	ld	b, a
   3C13 79                11154 	ld	a, c
   3C14 2B                11155 	dec	hl
   3C15 77                11156 	ld	(hl), a
   3C16 78                11157 	ld	a, b
   3C17 C1                11158 	pop	bc
   3C18 CE 00             11159 	adc	a,#0x00
   3C1A 23                11160 	inc	hl
   3C1B 77                11161 	ld	(hl),a
                          11162 ;demo.c:1676: waitVB();
   3C1C 76                11163 		halt 
                          11164 ;demo.c:1677: cmd.dest_y = 256;
   3C1D 21rB4s44          11165 	ld	hl, #_cmd + 6
   3C20 36 00             11166 	ld	(hl),#0x00
   3C22 23                11167 	inc	hl
   3C23 36 01             11168 	ld	(hl),#0x01
                          11169 ;demo.c:1678: cmd.dest_x = x;
   3C25 21rB2s44          11170 	ld	hl, #_cmd + 4
   3C28 DD 7E FE          11171 	ld	a,-2 (ix)
   3C2B 77                11172 	ld	(hl),a
   3C2C 23                11173 	inc	hl
   3C2D DD 7E FF          11174 	ld	a,-1 (ix)
   3C30 77                11175 	ld	(hl),a
                          11176 ;demo.c:1679: vdp_copier(&cmd);
   3C31 21rAEs44          11177 	ld	hl,#_cmd
   3C34 E5                11178 	push	hl
   3C35 CDr00s00          11179 	call	_vdp_copier
   3C38 F1                11180 	pop	af
                          11181 ;demo.c:1680: cmd.dest_y = 0;
   3C39 21rB4s44          11182 	ld	hl, #_cmd + 6
   3C3C 36 00             11183 	ld	(hl),#0x00
   3C3E 23                11184 	inc	hl
   3C3F 36 00             11185 	ld	(hl),#0x00
                          11186 ;demo.c:1681: vdp_copier(&cmd);
   3C41 21rAEs44          11187 	ld	hl,#_cmd
   3C44 E5                11188 	push	hl
   3C45 CDr00s00          11189 	call	_vdp_copier
   3C48 F1                11190 	pop	af
                          11191 ;demo.c:1673: for (x = 0; x < 256; x+=4) {
   3C49 DD 7E FE          11192 	ld	a,-2 (ix)
   3C4C C6 04             11193 	add	a,#0x04
   3C4E DD 77 FE          11194 	ld	-2 (ix),a
   3C51 DD 7E FF          11195 	ld	a,-1 (ix)
   3C54 CE 00             11196 	adc	a,#0x00
   3C56 DD 77 FF          11197 	ld	-1 (ix),a
   3C59 C3rC7s3B          11198 	jp	00135$
   3C5C                   11199 00138$:
                          11200 ;demo.c:1684: drawstr2x("REVISION",10,44);
   3C5C 21 0A 2C          11201 	ld	hl,#0x2C0A
   3C5F E5                11202 	push	hl
   3C60 21r3Bs3D          11203 	ld	hl,#__str_25
   3C63 E5                11204 	push	hl
   3C64 CDr67s16          11205 	call	_drawstr2x
   3C67 F1                11206 	pop	af
   3C68 F1                11207 	pop	af
                          11208 ;demo.c:1685: drawstr2x("   IS OUR",0,84);
   3C69 21 00 54          11209 	ld	hl,#0x5400
   3C6C E5                11210 	push	hl
   3C6D 21r44s3D          11211 	ld	hl,#__str_26
   3C70 E5                11212 	push	hl
   3C71 CDr67s16          11213 	call	_drawstr2x
   3C74 F1                11214 	pop	af
   3C75 F1                11215 	pop	af
                          11216 ;demo.c:1686: drawstr2x("  PARTY",12,124);
   3C76 21 0C 7C          11217 	ld	hl,#0x7C0C
   3C79 E5                11218 	push	hl
   3C7A 21r4Es3D          11219 	ld	hl,#__str_27
   3C7D E5                11220 	push	hl
   3C7E CDr67s16          11221 	call	_drawstr2x
   3C81 F1                11222 	pop	af
   3C82 F1                11223 	pop	af
   3C83                   11224 00106$:
                          11225 ;demo.c:1689: if (ff >= 1600 && ff < 1700) {
   3C83 3Ar46s45          11226 	ld	a,(#_ff+0)
   3C86 D6 40             11227 	sub	a,#0x40
   3C88 3Ar47s45          11228 	ld	a,(#_ff+1)
   3C8B DE 06             11229 	sbc	a,#0x06
   3C8D FArB4s3C          11230 	jp	M,00108$
   3C90 3Ar46s45          11231 	ld	a,(#_ff+0)
   3C93 D6 A4             11232 	sub	a,#0xA4
   3C95 3Ar47s45          11233 	ld	a,(#_ff+1)
   3C98 DE 06             11234 	sbc	a,#0x06
   3C9A F2rB4s3C          11235 	jp	P,00108$
                          11236 ;demo.c:1690: slowend = 37;
   3C9D 21r44s45          11237 	ld	hl,#_slowend + 0
   3CA0 36 25             11238 	ld	(hl), #0x25
   3CA2 21r45s45          11239 	ld	hl,#_slowend + 1
   3CA5 36 00             11240 	ld	(hl), #0x00
                          11241 ;demo.c:1691: drawstrslow("Give a big hand to all the organizers",28,164+6);
   3CA7 21 1C AA          11242 	ld	hl,#0xAA1C
   3CAA E5                11243 	push	hl
   3CAB 21r56s3D          11244 	ld	hl,#__str_28
   3CAE E5                11245 	push	hl
   3CAF CDrC9s15          11246 	call	_drawstrslow
   3CB2 F1                11247 	pop	af
   3CB3 F1                11248 	pop	af
   3CB4                   11249 00108$:
                          11250 ;demo.c:1694: if (ff == 1700) {
   3CB4 3Ar46s45          11251 	ld	a,(#_ff+0)
   3CB7 D6 A4             11252 	sub	a,#0xA4
   3CB9 20 07             11253 	jr	NZ,00182$
   3CBB 3Ar47s45          11254 	ld	a,(#_ff+1)
   3CBE D6 06             11255 	sub	a,#0x06
   3CC0 28 02             11256 	jr	Z,00183$
   3CC2                   11257 00182$:
   3CC2 18 0A             11258 	jr	00111$
   3CC4                   11259 00183$:
                          11260 ;demo.c:1695: ltrpointer = 0;
   3CC4 21r42s45          11261 	ld	hl,#_ltrpointer + 0
   3CC7 36 00             11262 	ld	(hl), #0x00
   3CC9 21r43s45          11263 	ld	hl,#_ltrpointer + 1
   3CCC 36 00             11264 	ld	(hl), #0x00
   3CCE                   11265 00111$:
                          11266 ;demo.c:1698: if (ff > 1700 && ff < 1800) {
   3CCE 3E A4             11267 	ld	a,#0xA4
   3CD0 FD 21r46s45       11268 	ld	iy,#_ff
   3CD4 FD 96 00          11269 	sub	a,0 (iy)
   3CD7 3E 06             11270 	ld	a,#0x06
   3CD9 FD 21r46s45       11271 	ld	iy,#_ff
   3CDD FD 9E 01          11272 	sbc	a,1 (iy)
   3CE0 F2r07s3D          11273 	jp	P,00139$
   3CE3 3Ar46s45          11274 	ld	a,(#_ff+0)
   3CE6 D6 08             11275 	sub	a,#0x08
   3CE8 3Ar47s45          11276 	ld	a,(#_ff+1)
   3CEB DE 07             11277 	sbc	a,#0x07
   3CED F2r07s3D          11278 	jp	P,00139$
                          11279 ;demo.c:1699: slowend = 21;
   3CF0 21r44s45          11280 	ld	hl,#_slowend + 0
   3CF3 36 15             11281 	ld	(hl), #0x15
   3CF5 21r45s45          11282 	ld	hl,#_slowend + 1
   3CF8 36 00             11283 	ld	(hl), #0x00
                          11284 ;demo.c:1700: drawstrslow("of this amazing party",64,164+16);
   3CFA 21 40 B4          11285 	ld	hl,#0xB440
   3CFD E5                11286 	push	hl
   3CFE 21r7Cs3D          11287 	ld	hl,#__str_29
   3D01 E5                11288 	push	hl
   3D02 CDrC9s15          11289 	call	_drawstrslow
   3D05 F1                11290 	pop	af
   3D06 F1                11291 	pop	af
   3D07                   11292 00139$:
   3D07 DD F9             11293 	ld	sp,ix
   3D09 DD E1             11294 	pop	ix
   3D0B C9                11295 	ret
   3D0C                   11296 _bigtext_end::
   3D0C                   11297 __str_19:
   3D0C 44 49 47 49 54 41 11298 	.ascii "DIGITAL"
        4C
   3D13 00                11299 	.db 0x00
   3D14                   11300 __str_20:
   3D14 53 4F 55 4E 44 53 11301 	.ascii "SOUNDS"
   3D1A 00                11302 	.db 0x00
   3D1B                   11303 __str_21:
   3D1B 53 59 53 54 45 4D 11304 	.ascii "SYSTEM"
   3D21 00                11305 	.db 0x00
   3D22                   11306 __str_22:
   3D22 43 4F 4D 4D 41 4E 11307 	.ascii "COMMAND"
        44
   3D29 00                11308 	.db 0x00
   3D2A                   11309 __str_23:
   3D2A 20 20 20 54 48 45 11310 	.ascii "   THE  "
        20 20
   3D32 00                11311 	.db 0x00
   3D33                   11312 __str_24:
   3D33 20 20 42 41 53 53 11313 	.ascii "  BASS "
        20
   3D3A 00                11314 	.db 0x00
   3D3B                   11315 __str_25:
   3D3B 52 45 56 49 53 49 11316 	.ascii "REVISION"
        4F 4E
   3D43 00                11317 	.db 0x00
   3D44                   11318 __str_26:
   3D44 20 20 20 49 53 20 11319 	.ascii "   IS OUR"
        4F 55 52
   3D4D 00                11320 	.db 0x00
   3D4E                   11321 __str_27:
   3D4E 20 20 50 41 52 54 11322 	.ascii "  PARTY"
        59
   3D55 00                11323 	.db 0x00
   3D56                   11324 __str_28:
   3D56 47 69 76 65 20 61 11325 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   3D7B 00                11326 	.db 0x00
   3D7C                   11327 __str_29:
   3D7C 6F 66 20 74 68 69 11328 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   3D91 00                11329 	.db 0x00
                          11330 ;demo.c:1706: void waiter() {
                          11331 ;	---------------------------------
                          11332 ; Function waiter
                          11333 ; ---------------------------------
   3D92                   11334 _waiter_start::
   3D92                   11335 _waiter:
                          11336 ;demo.c:1708: }
   3D92 C9                11337 	ret
   3D93                   11338 _waiter_end::
                          11339 ;demo.c:1713: void credits() {
                          11340 ;	---------------------------------
                          11341 ; Function credits
                          11342 ; ---------------------------------
   3D93                   11343 _credits_start::
   3D93                   11344 _credits:
                          11345 ;demo.c:1715: if (initcredits == 0) {
   3D93 3ArB6s45          11346 	ld	a,(#_initcredits+0)
   3D96 21rB7s45          11347 	ld	hl,#_initcredits + 1
   3D99 B6                11348 	or	a,(hl)
   3D9A C2rBAs3E          11349 	jp	NZ,00102$
                          11350 ;demo.c:1716: scratch_clear();
   3D9D CDr90s09          11351 	call	_scratch_clear
                          11352 ;demo.c:1717: vdp_load_palette(scratch);
   3DA0 21r4As43          11353 	ld	hl,#_scratch
   3DA3 E5                11354 	push	hl
   3DA4 CDr00s00          11355 	call	_vdp_load_palette
   3DA7 F1                11356 	pop	af
                          11357 ;demo.c:1719: uninstall_isr();
   3DA8 CDr00s00          11358 	call	_uninstall_isr
                          11359 ;demo.c:1720: PLY_Stop();
   3DAB CDr00s00          11360 	call	_PLY_Stop
                          11361 ;demo.c:1721: PLY_SendRegisters();
   3DAE CDr00s00          11362 	call	_PLY_SendRegisters
                          11363 ;demo.c:1723: initcredits = 1;
   3DB1 21rB6s45          11364 	ld	hl,#_initcredits + 0
   3DB4 36 01             11365 	ld	(hl), #0x01
   3DB6 21rB7s45          11366 	ld	hl,#_initcredits + 1
   3DB9 36 00             11367 	ld	(hl), #0x00
                          11368 ;demo.c:1725: bitbuster(crebuffer2,0x0000,VRAM_0);
   3DBB 3E 01             11369 	ld	a,#0x01
   3DBD F5                11370 	push	af
   3DBE 33                11371 	inc	sp
   3DBF 21 00 00          11372 	ld	hl,#0x0000
   3DC2 E5                11373 	push	hl
   3DC3 21r4Bs22          11374 	ld	hl,#_crebuffer2
   3DC6 E5                11375 	push	hl
   3DC7 CDr00s00          11376 	call	_bitbuster
   3DCA F1                11377 	pop	af
   3DCB F1                11378 	pop	af
   3DCC 33                11379 	inc	sp
                          11380 ;demo.c:1727: cmd.size_x = 512;
   3DCD 21rB6s44          11381 	ld	hl, #_cmd + 8
   3DD0 36 00             11382 	ld	(hl),#0x00
   3DD2 23                11383 	inc	hl
   3DD3 36 02             11384 	ld	(hl),#0x02
                          11385 ;demo.c:1728: cmd.size_y = 212;
   3DD5 21rB8s44          11386 	ld	hl, #_cmd + 10
   3DD8 36 D4             11387 	ld	(hl),#0xD4
   3DDA 23                11388 	inc	hl
   3DDB 36 00             11389 	ld	(hl),#0x00
                          11390 ;demo.c:1729: cmd.data = 0;
                          11391 ;demo.c:1730: cmd.argument = 0x00;
   3DDD 3E 00             11392 	ld	a,#0x00
   3DDF 32rBAs44          11393 	ld	(#_cmd + 12),a
   3DE2 32rBBs44          11394 	ld	(#_cmd + 13),a
                          11395 ;demo.c:1731: cmd.command = 0xd0; 
   3DE5 01rBCs44          11396 	ld	bc,#_cmd + 14
   3DE8 3E D0             11397 	ld	a,#0xD0
   3DEA 02                11398 	ld	(bc),a
                          11399 ;demo.c:1732: cmd.source_x = 0;
   3DEB 21rAEs44          11400 	ld	hl,#_cmd
   3DEE 36 00             11401 	ld	(hl),#0x00
   3DF0 23                11402 	inc	hl
   3DF1 36 00             11403 	ld	(hl),#0x00
                          11404 ;demo.c:1733: cmd.source_y = 0;
   3DF3 21rB0s44          11405 	ld	hl, #_cmd + 2
   3DF6 36 00             11406 	ld	(hl),#0x00
   3DF8 23                11407 	inc	hl
   3DF9 36 00             11408 	ld	(hl),#0x00
                          11409 ;demo.c:1734: cmd.dest_x = 0;
   3DFB 21rB2s44          11410 	ld	hl, #_cmd + 4
   3DFE 36 00             11411 	ld	(hl),#0x00
   3E00 23                11412 	inc	hl
   3E01 36 00             11413 	ld	(hl),#0x00
                          11414 ;demo.c:1735: cmd.dest_y = 256;
   3E03 21rB4s44          11415 	ld	hl, #_cmd + 6
   3E06 36 00             11416 	ld	(hl),#0x00
   3E08 23                11417 	inc	hl
   3E09 36 01             11418 	ld	(hl),#0x01
                          11419 ;demo.c:1736: vdp_copier(&cmd);
   3E0B 21rAEs44          11420 	ld	hl,#_cmd
   3E0E E5                11421 	push	hl
   3E0F CDr00s00          11422 	call	_vdp_copier
   3E12 F1                11423 	pop	af
                          11424 ;demo.c:1738: bitbuster(crebuffer3,0x0000,VRAM_0);
   3E13 3E 01             11425 	ld	a,#0x01
   3E15 F5                11426 	push	af
   3E16 33                11427 	inc	sp
   3E17 21 00 00          11428 	ld	hl,#0x0000
   3E1A E5                11429 	push	hl
   3E1B 21rBFs34          11430 	ld	hl,#_crebuffer3
   3E1E E5                11431 	push	hl
   3E1F CDr00s00          11432 	call	_bitbuster
   3E22 F1                11433 	pop	af
   3E23 F1                11434 	pop	af
   3E24 33                11435 	inc	sp
                          11436 ;demo.c:1740: cmd.size_x = 512;
   3E25 21rB6s44          11437 	ld	hl, #_cmd + 8
   3E28 36 00             11438 	ld	(hl),#0x00
   3E2A 23                11439 	inc	hl
   3E2B 36 02             11440 	ld	(hl),#0x02
                          11441 ;demo.c:1741: cmd.size_y = 212;
   3E2D 21rB8s44          11442 	ld	hl, #_cmd + 10
   3E30 36 D4             11443 	ld	(hl),#0xD4
   3E32 23                11444 	inc	hl
   3E33 36 00             11445 	ld	(hl),#0x00
                          11446 ;demo.c:1742: cmd.data = 0;
                          11447 ;demo.c:1743: cmd.argument = 0x00;
   3E35 3E 00             11448 	ld	a,#0x00
   3E37 32rBAs44          11449 	ld	(#_cmd + 12),a
   3E3A 32rBBs44          11450 	ld	(#_cmd + 13),a
                          11451 ;demo.c:1744: cmd.command = 0xd0; 
   3E3D 01rBCs44          11452 	ld	bc,#_cmd + 14
   3E40 3E D0             11453 	ld	a,#0xD0
   3E42 02                11454 	ld	(bc),a
                          11455 ;demo.c:1745: cmd.source_x = 0;
   3E43 21rAEs44          11456 	ld	hl,#_cmd
   3E46 36 00             11457 	ld	(hl),#0x00
   3E48 23                11458 	inc	hl
   3E49 36 00             11459 	ld	(hl),#0x00
                          11460 ;demo.c:1746: cmd.source_y = 0;
   3E4B 21rB0s44          11461 	ld	hl, #_cmd + 2
   3E4E 36 00             11462 	ld	(hl),#0x00
   3E50 23                11463 	inc	hl
   3E51 36 00             11464 	ld	(hl),#0x00
                          11465 ;demo.c:1747: cmd.dest_x = 0;
   3E53 21rB2s44          11466 	ld	hl, #_cmd + 4
   3E56 36 00             11467 	ld	(hl),#0x00
   3E58 23                11468 	inc	hl
   3E59 36 00             11469 	ld	(hl),#0x00
                          11470 ;demo.c:1748: cmd.dest_y = 512;
   3E5B 21rB4s44          11471 	ld	hl, #_cmd + 6
   3E5E 36 00             11472 	ld	(hl),#0x00
   3E60 23                11473 	inc	hl
   3E61 36 02             11474 	ld	(hl),#0x02
                          11475 ;demo.c:1749: vdp_copier(&cmd);
   3E63 21rAEs44          11476 	ld	hl,#_cmd
   3E66 E5                11477 	push	hl
   3E67 CDr00s00          11478 	call	_vdp_copier
   3E6A F1                11479 	pop	af
                          11480 ;demo.c:1751: bitbuster(crebuffer1,0x0000,VRAM_0);
   3E6B 3E 01             11481 	ld	a,#0x01
   3E6D F5                11482 	push	af
   3E6E 33                11483 	inc	sp
   3E6F 21 00 00          11484 	ld	hl,#0x0000
   3E72 E5                11485 	push	hl
   3E73 21r50s15          11486 	ld	hl,#_crebuffer1
   3E76 E5                11487 	push	hl
   3E77 CDr00s00          11488 	call	_bitbuster
   3E7A F1                11489 	pop	af
   3E7B F1                11490 	pop	af
   3E7C 33                11491 	inc	sp
                          11492 ;demo.c:1753: install_isr(my_isr);
   3E7D 21rECs07          11493 	ld	hl,#_my_isr
   3E80 E5                11494 	push	hl
   3E81 CDr00s00          11495 	call	_install_isr
   3E84 F1                11496 	pop	af
                          11497 ;demo.c:1754: vdp_register(0,8); // mode 512x212
   3E85 21 00 08          11498 	ld	hl,#0x0800
   3E88 E5                11499 	push	hl
   3E89 CDr00s00          11500 	call	_vdp_register
   3E8C F1                11501 	pop	af
                          11502 ;demo.c:1755: vdp_register(8,2); // mode 512x212
   3E8D 21 08 02          11503 	ld	hl,#0x0208
   3E90 E5                11504 	push	hl
   3E91 CDr00s00          11505 	call	_vdp_register
   3E94 F1                11506 	pop	af
                          11507 ;demo.c:1756: vdp_register(9,130); // mode 512x212
   3E95 21 09 82          11508 	ld	hl,#0x8209
   3E98 E5                11509 	push	hl
   3E99 CDr00s00          11510 	call	_vdp_register
   3E9C F1                11511 	pop	af
                          11512 ;demo.c:1758: memcpy(cur_palette, credits_palette, 32);
   3E9D 21 20 00          11513 	ld	hl,#0x0020
   3EA0 E5                11514 	push	hl
   3EA1 21r8As44          11515 	ld	hl,#_credits_palette
   3EA4 E5                11516 	push	hl
   3EA5 21rCAs43          11517 	ld	hl,#_cur_palette
   3EA8 E5                11518 	push	hl
   3EA9 CDr00s00          11519 	call	_memcpy
   3EAC F1                11520 	pop	af
   3EAD F1                11521 	pop	af
   3EAE F1                11522 	pop	af
                          11523 ;demo.c:1760: vdp_register(2, 0x1F);
   3EAF 21 02 1F          11524 	ld	hl,#0x1F02
   3EB2 E5                11525 	push	hl
   3EB3 CDr00s00          11526 	call	_vdp_register
   3EB6 F1                11527 	pop	af
                          11528 ;demo.c:1761: scratch_clear();
   3EB7 CDr90s09          11529 	call	_scratch_clear
   3EBA                   11530 00102$:
                          11531 ;demo.c:1764: fadein();
   3EBA CDr27s0C          11532 	call	_fadein
                          11533 ;demo.c:1766: credittimer++;
   3EBD FD 21rB8s45       11534 	ld	iy,#_credittimer
   3EC1 FD 34 00          11535 	inc	0 (iy)
   3EC4 20 07             11536 	jr	NZ,00115$
   3EC6 FD 21rB8s45       11537 	ld	iy,#_credittimer
   3ECA FD 34 01          11538 	inc	1 (iy)
   3ECD                   11539 00115$:
                          11540 ;demo.c:1767: if (credittimer == 300) {
   3ECD 3ArB8s45          11541 	ld	a,(#_credittimer+0)
   3ED0 D6 2C             11542 	sub	a,#0x2C
   3ED2 20 07             11543 	jr	NZ,00116$
   3ED4 3ArB9s45          11544 	ld	a,(#_credittimer+1)
   3ED7 D6 01             11545 	sub	a,#0x01
   3ED9 28 02             11546 	jr	Z,00117$
   3EDB                   11547 00116$:
   3EDB 18 08             11548 	jr	00104$
   3EDD                   11549 00117$:
                          11550 ;demo.c:1768: vdp_register(2, 0x3F);
   3EDD 21 02 3F          11551 	ld	hl,#0x3F02
   3EE0 E5                11552 	push	hl
   3EE1 CDr00s00          11553 	call	_vdp_register
   3EE4 F1                11554 	pop	af
   3EE5                   11555 00104$:
                          11556 ;demo.c:1770: if (credittimer == 600) {
   3EE5 3ArB8s45          11557 	ld	a,(#_credittimer+0)
   3EE8 D6 58             11558 	sub	a,#0x58
   3EEA 20 07             11559 	jr	NZ,00118$
   3EEC 3ArB9s45          11560 	ld	a,(#_credittimer+1)
   3EEF D6 02             11561 	sub	a,#0x02
   3EF1 28 02             11562 	jr	Z,00119$
   3EF3                   11563 00118$:
   3EF3 18 08             11564 	jr	00106$
   3EF5                   11565 00119$:
                          11566 ;demo.c:1771: vdp_register(2, 0x5F);
   3EF5 21 02 5F          11567 	ld	hl,#0x5F02
   3EF8 E5                11568 	push	hl
   3EF9 CDr00s00          11569 	call	_vdp_register
   3EFC F1                11570 	pop	af
   3EFD                   11571 00106$:
                          11572 ;demo.c:1774: if (credittimer == 900) {
   3EFD 3ArB8s45          11573 	ld	a,(#_credittimer+0)
   3F00 D6 84             11574 	sub	a,#0x84
   3F02 C0                11575 	ret	NZ
   3F03 3ArB9s45          11576 	ld	a,(#_credittimer+1)
   3F06 D6 03             11577 	sub	a,#0x03
   3F08 28 01             11578 	jr	Z,00121$
   3F0A C9                11579 	ret
   3F0B                   11580 00121$:
                          11581 ;demo.c:1775: vdp_load_palette(scratch);
   3F0B 21r4As43          11582 	ld	hl,#_scratch
   3F0E E5                11583 	push	hl
   3F0F CDr00s00          11584 	call	_vdp_load_palette
   3F12 F1                11585 	pop	af
   3F13 C9                11586 	ret
   3F14                   11587 _credits_end::
                          11588 ;demo.c:1785: void do_quit() {
                          11589 ;	---------------------------------
                          11590 ; Function do_quit
                          11591 ; ---------------------------------
   3F14                   11592 _do_quit_start::
   3F14                   11593 _do_quit:
                          11594 ;demo.c:1786: waitVB();
   3F14 76                11595 		halt 
                          11596 ;demo.c:1787: uninstall_isr();
   3F15 CDr00s00          11597 	call	_uninstall_isr
                          11598 ;demo.c:1788: PLY_Stop();
   3F18 CDr00s00          11599 	call	_PLY_Stop
                          11600 ;demo.c:1789: PLY_SendRegisters();
   3F1B CDr00s00          11601 	call	_PLY_SendRegisters
                          11602 ;demo.c:1791: screen(0);
   3F1E 3E 00             11603 	ld	a,#0x00
   3F20 F5                11604 	push	af
   3F21 33                11605 	inc	sp
   3F22 CDr00s00          11606 	call	_screen
   3F25 33                11607 	inc	sp
                          11608 ;demo.c:1792: vdp_load_palette(twister_palette);
   3F26 21r2As44          11609 	ld	hl,#_twister_palette
   3F29 E5                11610 	push	hl
   3F2A CDr00s00          11611 	call	_vdp_load_palette
   3F2D F1                11612 	pop	af
                          11613 ;demo.c:1794: puts("bye friends.\r\n\r\n");
   3F2E 21r3Fs3F          11614 	ld	hl,#__str_30
   3F31 E5                11615 	push	hl
   3F32 CDr00s00          11616 	call	_puts
   3F35 F1                11617 	pop	af
                          11618 ;demo.c:1796: exit(0);	
   3F36 3E 00             11619 	ld	a,#0x00
   3F38 F5                11620 	push	af
   3F39 33                11621 	inc	sp
   3F3A CDr00s00          11622 	call	_exit
   3F3D 33                11623 	inc	sp
   3F3E C9                11624 	ret
   3F3F                   11625 _do_quit_end::
   3F3F                   11626 __str_30:
   3F3F 62 79 65 20 66 72 11627 	.ascii "bye friends."
        69 65 6E 64 73 2E
   3F4B 0D                11628 	.db 0x0D
   3F4C 0A                11629 	.db 0x0A
   3F4D 0D                11630 	.db 0x0D
   3F4E 0A                11631 	.db 0x0A
   3F4F 00                11632 	.db 0x00
                          11633 ;demo.c:1802: void main() {
                          11634 ;	---------------------------------
                          11635 ; Function main
                          11636 ; ---------------------------------
   3F50                   11637 _main_start::
   3F50                   11638 _main:
   3F50 DD E5             11639 	push	ix
   3F52 DD 21 00 00       11640 	ld	ix,#0
   3F56 DD 39             11641 	add	ix,sp
   3F58 21 F9 FF          11642 	ld	hl,#-7
   3F5B 39                11643 	add	hl,sp
   3F5C F9                11644 	ld	sp,hl
                          11645 ;demo.c:1803: unsigned char quit=0;
   3F5D DD 36 FF 00       11646 	ld	-1 (ix),#0x00
                          11647 ;demo.c:1809: spindown();
   3F61 CDr00s00          11648 	call	_spindown
                          11649 ;demo.c:1811: puts("[starting DSS MSX demosystem]\r\n\r\n");
   3F64 21rE5s44          11650 	ld	hl,#__str_31
   3F67 E5                11651 	push	hl
   3F68 CDr00s00          11652 	call	_puts
   3F6B F1                11653 	pop	af
                          11654 ;demo.c:1813: for (y = 0; y < 2; y++) {
   3F6C DD 36 FB 00       11655 	ld	-5 (ix),#0x00
   3F70 DD 36 FC 00       11656 	ld	-4 (ix),#0x00
   3F74                   11657 00118$:
   3F74 DD 7E FB          11658 	ld	a,-5 (ix)
   3F77 D6 02             11659 	sub	a,#0x02
   3F79 DD 7E FC          11660 	ld	a,-4 (ix)
   3F7C DE 00             11661 	sbc	a,#0x00
   3F7E F2r00s40          11662 	jp	P,00121$
                          11663 ;demo.c:1814: for (x = 0; x < 16; x++) {
   3F81 DD 4E FB          11664 	ld	c,-5 (ix)
   3F84 DD 46 FC          11665 	ld	b,-4 (ix)
   3F87 CB 21             11666 	sla	c
   3F89 CB 10             11667 	rl	b
   3F8B CB 21             11668 	sla	c
   3F8D CB 10             11669 	rl	b
   3F8F CB 21             11670 	sla	c
   3F91 CB 10             11671 	rl	b
   3F93 CB 21             11672 	sla	c
   3F95 CB 10             11673 	rl	b
   3F97 21 81 03          11674 	ld	hl,#0x0381
   3F9A 09                11675 	add	hl,bc
   3F9B DD 75 F9          11676 	ld	-7 (ix),l
   3F9E DD 74 FA          11677 	ld	-6 (ix),h
   3FA1 DD 36 FD 00       11678 	ld	-3 (ix),#0x00
   3FA5 DD 36 FE 00       11679 	ld	-2 (ix),#0x00
   3FA9                   11680 00114$:
   3FA9 DD 7E FD          11681 	ld	a,-3 (ix)
   3FAC D6 10             11682 	sub	a,#0x10
   3FAE DD 7E FE          11683 	ld	a,-2 (ix)
   3FB1 DE 00             11684 	sbc	a,#0x00
   3FB3 F2rF5s3F          11685 	jp	P,00120$
                          11686 ;demo.c:1815: tri_lookup_x[(y*16)+x] = x * 16;
   3FB6 DD 7E FB          11687 	ld	a,-5 (ix)
   3FB9 07                11688 	rlca
   3FBA 07                11689 	rlca
   3FBB 07                11690 	rlca
   3FBC 07                11691 	rlca
   3FBD E6 F0             11692 	and	a,#0xF0
   3FBF 5F                11693 	ld	e,a
   3FC0 DD 56 FD          11694 	ld	d,-3 (ix)
   3FC3 7B                11695 	ld	a,e
   3FC4 82                11696 	add	a,d
   3FC5 5F                11697 	ld	e, a
   3FC6 C6r00             11698 	add	a,#<_tri_lookup_x
   3FC8 4F                11699 	ld	c,a
   3FC9 3Es01             11700 	ld	a,#>_tri_lookup_x
   3FCB CE 00             11701 	adc	a,#0x00
   3FCD 47                11702 	ld	b,a
   3FCE 7A                11703 	ld	a,d
   3FCF 07                11704 	rlca
   3FD0 07                11705 	rlca
   3FD1 07                11706 	rlca
   3FD2 07                11707 	rlca
   3FD3 E6 F0             11708 	and	a,#0xF0
   3FD5 02                11709 	ld	(bc),a
                          11710 ;demo.c:1816: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   3FD6 CB 23             11711 	sla	e
   3FD8 3Er88             11712 	ld	a,#<_tri_lookup_y
   3FDA 83                11713 	add	a,e
   3FDB 6F                11714 	ld	l,a
   3FDC 3Es01             11715 	ld	a,#>_tri_lookup_y
   3FDE CE 00             11716 	adc	a,#0x00
   3FE0 67                11717 	ld	h,a
   3FE1 DD 7E F9          11718 	ld	a,-7 (ix)
   3FE4 77                11719 	ld	(hl),a
   3FE5 23                11720 	inc	hl
   3FE6 DD 7E FA          11721 	ld	a,-6 (ix)
   3FE9 77                11722 	ld	(hl),a
                          11723 ;demo.c:1814: for (x = 0; x < 16; x++) {
   3FEA DD 34 FD          11724 	inc	-3 (ix)
   3FED 20 03             11725 	jr	NZ,00146$
   3FEF DD 34 FE          11726 	inc	-2 (ix)
   3FF2                   11727 00146$:
   3FF2 C3rA9s3F          11728 	jp	00114$
   3FF5                   11729 00120$:
                          11730 ;demo.c:1813: for (y = 0; y < 2; y++) {
   3FF5 DD 34 FB          11731 	inc	-5 (ix)
   3FF8 20 03             11732 	jr	NZ,00147$
   3FFA DD 34 FC          11733 	inc	-4 (ix)
   3FFD                   11734 00147$:
   3FFD C3r74s3F          11735 	jp	00118$
   4000                   11736 00121$:
                          11737 ;demo.c:1820: for (x = 0; x < 26; x++) {
   4000 DD 36 FD 00       11738 	ld	-3 (ix),#0x00
   4004 DD 36 FE 00       11739 	ld	-2 (ix),#0x00
   4008 DD 36 F9 00       11740 	ld	-7 (ix),#0x00
   400C DD 36 FA 00       11741 	ld	-6 (ix),#0x00
   4010                   11742 00122$:
   4010 DD 7E FD          11743 	ld	a,-3 (ix)
   4013 D6 1A             11744 	sub	a,#0x1A
   4015 DD 7E FE          11745 	ld	a,-2 (ix)
   4018 DE 00             11746 	sbc	a,#0x00
   401A F2r6Cs40          11747 	jp	P,00125$
                          11748 ;demo.c:1821: twelvetimes[x] = x * 12;
   401D DD 4E FD          11749 	ld	c,-3 (ix)
   4020 DD 46 FE          11750 	ld	b,-2 (ix)
   4023 CB 21             11751 	sla	c
   4025 CB 10             11752 	rl	b
   4027 21r20s01          11753 	ld	hl,#_twelvetimes
   402A 09                11754 	add	hl,bc
   402B DD 7E F9          11755 	ld	a,-7 (ix)
   402E 77                11756 	ld	(hl),a
   402F 23                11757 	inc	hl
   4030 DD 7E FA          11758 	ld	a,-6 (ix)
   4033 77                11759 	ld	(hl),a
                          11760 ;demo.c:1822: eighttimes[x] = x * 8;
   4034 21r54s01          11761 	ld	hl,#_eighttimes
   4037 09                11762 	add	hl,bc
   4038 4D                11763 	ld	c,l
   4039 44                11764 	ld	b,h
   403A DD 5E FD          11765 	ld	e,-3 (ix)
   403D DD 56 FE          11766 	ld	d,-2 (ix)
   4040 CB 23             11767 	sla	e
   4042 CB 12             11768 	rl	d
   4044 CB 23             11769 	sla	e
   4046 CB 12             11770 	rl	d
   4048 CB 23             11771 	sla	e
   404A CB 12             11772 	rl	d
   404C 69                11773 	ld	l,c
   404D 60                11774 	ld	h,b
   404E 73                11775 	ld	(hl),e
   404F 23                11776 	inc	hl
   4050 72                11777 	ld	(hl),d
                          11778 ;demo.c:1820: for (x = 0; x < 26; x++) {
   4051 DD 7E F9          11779 	ld	a,-7 (ix)
   4054 C6 0C             11780 	add	a,#0x0C
   4056 DD 77 F9          11781 	ld	-7 (ix),a
   4059 DD 7E FA          11782 	ld	a,-6 (ix)
   405C CE 00             11783 	adc	a,#0x00
   405E DD 77 FA          11784 	ld	-6 (ix),a
   4061 DD 34 FD          11785 	inc	-3 (ix)
   4064 20 03             11786 	jr	NZ,00152$
   4066 DD 34 FE          11787 	inc	-2 (ix)
   4069                   11788 00152$:
   4069 C3r10s40          11789 	jp	00122$
   406C                   11790 00125$:
                          11791 ;demo.c:1825: puts("init sweet PSG bleeps...");
   406C 21r07s45          11792 	ld	hl,#__str_32
   406F E5                11793 	push	hl
   4070 CDr00s00          11794 	call	_puts
   4073 F1                11795 	pop	af
                          11796 ;demo.c:1827: PLY_SongPtr = (char *)0x0103;
   4074 21r00s00          11797 	ld	hl,#_PLY_SongPtr + 0
   4077 36 03             11798 	ld	(hl), #0x03
   4079 21r01s00          11799 	ld	hl,#_PLY_SongPtr + 1
   407C 36 01             11800 	ld	(hl), #0x01
                          11801 ;demo.c:1828: PLY_Init();
   407E CDr00s00          11802 	call	_PLY_Init
                          11803 ;demo.c:1829: puts("done.\r\n");
   4081 21r20s45          11804 	ld	hl,#__str_33
   4084 E5                11805 	push	hl
   4085 CDr00s00          11806 	call	_puts
   4088 F1                11807 	pop	af
                          11808 ;demo.c:1831: puts("detecting ya vdp type...\r\n");
   4089 21r28s45          11809 	ld	hl,#__str_34
   408C E5                11810 	push	hl
   408D CDr00s00          11811 	call	_puts
   4090 F1                11812 	pop	af
                          11813 ;demo.c:1832: if(isvdp2())
   4091 CDr00s00          11814 	call	_isvdp2
   4094 AF                11815 	xor	a,a
   4095 B5                11816 	or	a,l
   4096 28 0A             11817 	jr	Z,00102$
                          11818 ;demo.c:1834: puts("vdp2 found! setting 50hz...\r\n");
   4098 21r43s45          11819 	ld	hl,#__str_35
   409B E5                11820 	push	hl
   409C CDr00s00          11821 	call	_puts
   409F F1                11822 	pop	af
   40A0 18 0B             11823 	jr	00103$
   40A2                   11824 00102$:
                          11825 ;demo.c:1837: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   40A2 21r61s45          11826 	ld	hl,#__str_36
   40A5 E5                11827 	push	hl
   40A6 CDr00s00          11828 	call	_puts
   40A9 F1                11829 	pop	af
                          11830 ;demo.c:1838: do_quit();
   40AA CDr14s3F          11831 	call	_do_quit
   40AD                   11832 00103$:
                          11833 ;demo.c:1841: pal_load("TWISTER PL5",32,0);
   40AD 21 00 00          11834 	ld	hl,#0x0000
   40B0 E5                11835 	push	hl
   40B1 3E 20             11836 	ld	a,#0x20
   40B3 F5                11837 	push	af
   40B4 33                11838 	inc	sp
   40B5 21rA6s45          11839 	ld	hl,#__str_37
   40B8 E5                11840 	push	hl
   40B9 CDrA3s09          11841 	call	_pal_load
   40BC F1                11842 	pop	af
   40BD F1                11843 	pop	af
   40BE 33                11844 	inc	sp
                          11845 ;demo.c:1842: memcpy(twister_palette, cur_palette, 32);
   40BF 21 20 00          11846 	ld	hl,#0x0020
   40C2 E5                11847 	push	hl
   40C3 21rCAs43          11848 	ld	hl,#_cur_palette
   40C6 E5                11849 	push	hl
   40C7 21r2As44          11850 	ld	hl,#_twister_palette
   40CA E5                11851 	push	hl
   40CB CDr00s00          11852 	call	_memcpy
   40CE F1                11853 	pop	af
   40CF F1                11854 	pop	af
   40D0 F1                11855 	pop	af
                          11856 ;demo.c:1843: pal_load("LF      PL5",32,0);
   40D1 21 00 00          11857 	ld	hl,#0x0000
   40D4 E5                11858 	push	hl
   40D5 3E 20             11859 	ld	a,#0x20
   40D7 F5                11860 	push	af
   40D8 33                11861 	inc	sp
   40D9 21rB2s45          11862 	ld	hl,#__str_38
   40DC E5                11863 	push	hl
   40DD CDrA3s09          11864 	call	_pal_load
   40E0 F1                11865 	pop	af
   40E1 F1                11866 	pop	af
   40E2 33                11867 	inc	sp
                          11868 ;demo.c:1844: memcpy(tf_palette, cur_palette, 32);
   40E3 21 20 00          11869 	ld	hl,#0x0020
   40E6 E5                11870 	push	hl
   40E7 21rCAs43          11871 	ld	hl,#_cur_palette
   40EA E5                11872 	push	hl
   40EB 21r4As44          11873 	ld	hl,#_tf_palette
   40EE E5                11874 	push	hl
   40EF CDr00s00          11875 	call	_memcpy
   40F2 F1                11876 	pop	af
   40F3 F1                11877 	pop	af
   40F4 F1                11878 	pop	af
                          11879 ;demo.c:1845: pal_load("BOXES   PL5",32,0);
   40F5 21 00 00          11880 	ld	hl,#0x0000
   40F8 E5                11881 	push	hl
   40F9 3E 20             11882 	ld	a,#0x20
   40FB F5                11883 	push	af
   40FC 33                11884 	inc	sp
   40FD 21rBEs45          11885 	ld	hl,#__str_39
   4100 E5                11886 	push	hl
   4101 CDrA3s09          11887 	call	_pal_load
   4104 F1                11888 	pop	af
   4105 F1                11889 	pop	af
   4106 33                11890 	inc	sp
                          11891 ;demo.c:1846: memcpy(boxes_palette, cur_palette, 32);
   4107 21 20 00          11892 	ld	hl,#0x0020
   410A E5                11893 	push	hl
   410B 21rCAs43          11894 	ld	hl,#_cur_palette
   410E E5                11895 	push	hl
   410F 21r6As44          11896 	ld	hl,#_boxes_palette
   4112 E5                11897 	push	hl
   4113 CDr00s00          11898 	call	_memcpy
   4116 F1                11899 	pop	af
   4117 F1                11900 	pop	af
   4118 F1                11901 	pop	af
                          11902 ;demo.c:1847: pal_load("BULBS   PL5",32,0);
   4119 21 00 00          11903 	ld	hl,#0x0000
   411C E5                11904 	push	hl
   411D 3E 20             11905 	ld	a,#0x20
   411F F5                11906 	push	af
   4120 33                11907 	inc	sp
   4121 21rCAs45          11908 	ld	hl,#__str_40
   4124 E5                11909 	push	hl
   4125 CDrA3s09          11910 	call	_pal_load
   4128 F1                11911 	pop	af
   4129 F1                11912 	pop	af
   412A 33                11913 	inc	sp
                          11914 ;demo.c:1848: memcpy(bulbs_palette, cur_palette, 32);
   412B 21 20 00          11915 	ld	hl,#0x0020
   412E E5                11916 	push	hl
   412F 21rCAs43          11917 	ld	hl,#_cur_palette
   4132 E5                11918 	push	hl
   4133 21rEAs43          11919 	ld	hl,#_bulbs_palette
   4136 E5                11920 	push	hl
   4137 CDr00s00          11921 	call	_memcpy
   413A F1                11922 	pop	af
   413B F1                11923 	pop	af
   413C F1                11924 	pop	af
                          11925 ;demo.c:1849: pal_load("CREDIT1 PL6",32,0);
   413D 21 00 00          11926 	ld	hl,#0x0000
   4140 E5                11927 	push	hl
   4141 3E 20             11928 	ld	a,#0x20
   4143 F5                11929 	push	af
   4144 33                11930 	inc	sp
   4145 21rD6s45          11931 	ld	hl,#__str_41
   4148 E5                11932 	push	hl
   4149 CDrA3s09          11933 	call	_pal_load
   414C F1                11934 	pop	af
   414D F1                11935 	pop	af
   414E 33                11936 	inc	sp
                          11937 ;demo.c:1850: memcpy(credits_palette, cur_palette, 32);
   414F 21 20 00          11938 	ld	hl,#0x0020
   4152 E5                11939 	push	hl
   4153 21rCAs43          11940 	ld	hl,#_cur_palette
   4156 E5                11941 	push	hl
   4157 21r8As44          11942 	ld	hl,#_credits_palette
   415A E5                11943 	push	hl
   415B CDr00s00          11944 	call	_memcpy
   415E F1                11945 	pop	af
   415F F1                11946 	pop	af
   4160 F1                11947 	pop	af
                          11948 ;demo.c:1852: puts("all good, starting the demo!\r\n");
   4161 21rE2s45          11949 	ld	hl,#__str_42
   4164 E5                11950 	push	hl
   4165 CDr00s00          11951 	call	_puts
   4168 F1                11952 	pop	af
                          11953 ;demo.c:1854: pause();
   4169 CDr82s0A          11954 	call	_pause
                          11955 ;demo.c:1855: pause();
   416C CDr82s0A          11956 	call	_pause
                          11957 ;demo.c:1856: pause();
   416F CDr82s0A          11958 	call	_pause
                          11959 ;demo.c:1857: pause();
   4172 CDr82s0A          11960 	call	_pause
                          11961 ;demo.c:1858: pause();
   4175 CDr82s0A          11962 	call	_pause
                          11963 ;demo.c:1859: pause();
   4178 CDr82s0A          11964 	call	_pause
                          11965 ;demo.c:1861: scratch_clear();
   417B CDr90s09          11966 	call	_scratch_clear
                          11967 ;demo.c:1862: vdp_load_palette(scratch);
   417E 21r4As43          11968 	ld	hl,#_scratch
   4181 E5                11969 	push	hl
   4182 CDr00s00          11970 	call	_vdp_load_palette
   4185 F1                11971 	pop	af
                          11972 ;demo.c:1864: vdp_set_screen5();
   4186 CDr00s00          11973 	call	_vdp_set_screen5
                          11974 ;demo.c:1866: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   4189 21 00 00          11975 	ld	hl,#0x0000
   418C E5                11976 	push	hl
   418D 2E 01             11977 	ld	l, #0x01
   418F E5                11978 	push	hl
   4190 2E 00             11979 	ld	l, #0x00
   4192 E5                11980 	push	hl
   4193 21 7F 09          11981 	ld	hl,#0x097F
   4196 E5                11982 	push	hl
   4197 21r01s46          11983 	ld	hl,#__str_43
   419A E5                11984 	push	hl
   419B CDr99s0B          11985 	call	_pck_load
   419E FD 21 0A 00       11986 	ld	iy,#0x000A
   41A2 FD 39             11987 	add	iy,sp
   41A4 FD F9             11988 	ld	sp,iy
                          11989 ;demo.c:1868: cmd.size_x = 256;
   41A6 21rB6s44          11990 	ld	hl, #_cmd + 8
   41A9 36 00             11991 	ld	(hl),#0x00
   41AB 23                11992 	inc	hl
   41AC 36 01             11993 	ld	(hl),#0x01
                          11994 ;demo.c:1869: cmd.size_y = 212;
   41AE 21rB8s44          11995 	ld	hl, #_cmd + 10
   41B1 36 D4             11996 	ld	(hl),#0xD4
   41B3 23                11997 	inc	hl
   41B4 36 00             11998 	ld	(hl),#0x00
                          11999 ;demo.c:1870: cmd.data = 0;
                          12000 ;demo.c:1871: cmd.argument = 0x00;
   41B6 3E 00             12001 	ld	a,#0x00
   41B8 32rBAs44          12002 	ld	(#_cmd + 12),a
   41BB 32rBBs44          12003 	ld	(#_cmd + 13),a
                          12004 ;demo.c:1872: cmd.command = 0xd0; 
   41BE 01rBCs44          12005 	ld	bc,#_cmd + 14
   41C1 3E D0             12006 	ld	a,#0xD0
   41C3 02                12007 	ld	(bc),a
                          12008 ;demo.c:1873: cmd.source_x = 0;
   41C4 21rAEs44          12009 	ld	hl,#_cmd
   41C7 36 00             12010 	ld	(hl),#0x00
   41C9 23                12011 	inc	hl
   41CA 36 00             12012 	ld	(hl),#0x00
                          12013 ;demo.c:1874: cmd.source_y = 0;
   41CC 21rB0s44          12014 	ld	hl, #_cmd + 2
   41CF 36 00             12015 	ld	(hl),#0x00
   41D1 23                12016 	inc	hl
   41D2 36 00             12017 	ld	(hl),#0x00
                          12018 ;demo.c:1875: cmd.dest_x = 0;
   41D4 21rB2s44          12019 	ld	hl, #_cmd + 4
   41D7 36 00             12020 	ld	(hl),#0x00
   41D9 23                12021 	inc	hl
   41DA 36 00             12022 	ld	(hl),#0x00
                          12023 ;demo.c:1876: cmd.dest_y = 256;
   41DC 21rB4s44          12024 	ld	hl, #_cmd + 6
   41DF 36 00             12025 	ld	(hl),#0x00
   41E1 23                12026 	inc	hl
   41E2 36 01             12027 	ld	(hl),#0x01
                          12028 ;demo.c:1877: vdp_copier(&cmd);
   41E4 21rAEs44          12029 	ld	hl,#_cmd
   41E7 E5                12030 	push	hl
   41E8 CDr00s00          12031 	call	_vdp_copier
   41EB F1                12032 	pop	af
                          12033 ;demo.c:1879: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   41EC 21 00 00          12034 	ld	hl,#0x0000
   41EF E5                12035 	push	hl
   41F0 2E 01             12036 	ld	l, #0x01
   41F2 E5                12037 	push	hl
   41F3 2E 00             12038 	ld	l, #0x00
   41F5 E5                12039 	push	hl
   41F6 21 C0 0F          12040 	ld	hl,#0x0FC0
   41F9 E5                12041 	push	hl
   41FA 21r0Ds46          12042 	ld	hl,#__str_44
   41FD E5                12043 	push	hl
   41FE CDr99s0B          12044 	call	_pck_load
   4201 FD 21 0A 00       12045 	ld	iy,#0x000A
   4205 FD 39             12046 	add	iy,sp
   4207 FD F9             12047 	ld	sp,iy
                          12048 ;demo.c:1881: cmd.size_x = 256;
   4209 21rB6s44          12049 	ld	hl, #_cmd + 8
   420C 36 00             12050 	ld	(hl),#0x00
   420E 23                12051 	inc	hl
   420F 36 01             12052 	ld	(hl),#0x01
                          12053 ;demo.c:1882: cmd.size_y = 212;
   4211 21rB8s44          12054 	ld	hl, #_cmd + 10
   4214 36 D4             12055 	ld	(hl),#0xD4
   4216 23                12056 	inc	hl
   4217 36 00             12057 	ld	(hl),#0x00
                          12058 ;demo.c:1883: cmd.data = 0;
                          12059 ;demo.c:1884: cmd.argument = 0x00;
   4219 3E 00             12060 	ld	a,#0x00
   421B 32rBAs44          12061 	ld	(#_cmd + 12),a
   421E 32rBBs44          12062 	ld	(#_cmd + 13),a
                          12063 ;demo.c:1885: cmd.command = 0xd0; 
   4221 01rBCs44          12064 	ld	bc,#_cmd + 14
   4224 3E D0             12065 	ld	a,#0xD0
   4226 02                12066 	ld	(bc),a
                          12067 ;demo.c:1886: cmd.source_x = 0;
   4227 21rAEs44          12068 	ld	hl,#_cmd
   422A 36 00             12069 	ld	(hl),#0x00
   422C 23                12070 	inc	hl
   422D 36 00             12071 	ld	(hl),#0x00
                          12072 ;demo.c:1887: cmd.source_y = 0;
   422F 21rB0s44          12073 	ld	hl, #_cmd + 2
   4232 36 00             12074 	ld	(hl),#0x00
   4234 23                12075 	inc	hl
   4235 36 00             12076 	ld	(hl),#0x00
                          12077 ;demo.c:1888: cmd.dest_x = 0;
   4237 21rB2s44          12078 	ld	hl, #_cmd + 4
   423A 36 00             12079 	ld	(hl),#0x00
   423C 23                12080 	inc	hl
   423D 36 00             12081 	ld	(hl),#0x00
                          12082 ;demo.c:1889: cmd.dest_y = 512;
   423F 21rB4s44          12083 	ld	hl, #_cmd + 6
   4242 36 00             12084 	ld	(hl),#0x00
   4244 23                12085 	inc	hl
   4245 36 02             12086 	ld	(hl),#0x02
                          12087 ;demo.c:1890: vdp_copier(&cmd);
   4247 21rAEs44          12088 	ld	hl,#_cmd
   424A E5                12089 	push	hl
   424B CDr00s00          12090 	call	_vdp_copier
   424E F1                12091 	pop	af
                          12092 ;demo.c:1893: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   424F 21 00 00          12093 	ld	hl,#0x0000
   4252 E5                12094 	push	hl
   4253 2E 01             12095 	ld	l, #0x01
   4255 E5                12096 	push	hl
   4256 2E 00             12097 	ld	l, #0x00
   4258 E5                12098 	push	hl
   4259 21 AB 0A          12099 	ld	hl,#0x0AAB
   425C E5                12100 	push	hl
   425D 21r19s46          12101 	ld	hl,#__str_45
   4260 E5                12102 	push	hl
   4261 CDr99s0B          12103 	call	_pck_load
   4264 FD 21 0A 00       12104 	ld	iy,#0x000A
   4268 FD 39             12105 	add	iy,sp
   426A FD F9             12106 	ld	sp,iy
                          12107 ;demo.c:1894: cmd.size_x = 256;
   426C 21rB6s44          12108 	ld	hl, #_cmd + 8
   426F 36 00             12109 	ld	(hl),#0x00
   4271 23                12110 	inc	hl
   4272 36 01             12111 	ld	(hl),#0x01
                          12112 ;demo.c:1895: cmd.size_y = 212;
   4274 21rB8s44          12113 	ld	hl, #_cmd + 10
   4277 36 D4             12114 	ld	(hl),#0xD4
   4279 23                12115 	inc	hl
   427A 36 00             12116 	ld	(hl),#0x00
                          12117 ;demo.c:1896: cmd.data = 0;
                          12118 ;demo.c:1897: cmd.argument = 0x00;
   427C 3E 00             12119 	ld	a,#0x00
   427E 32rBAs44          12120 	ld	(#_cmd + 12),a
   4281 32rBBs44          12121 	ld	(#_cmd + 13),a
                          12122 ;demo.c:1898: cmd.command = 0xd0; 
   4284 01rBCs44          12123 	ld	bc,#_cmd + 14
   4287 3E D0             12124 	ld	a,#0xD0
   4289 02                12125 	ld	(bc),a
                          12126 ;demo.c:1899: cmd.source_x = 0;
   428A 21rAEs44          12127 	ld	hl,#_cmd
   428D 36 00             12128 	ld	(hl),#0x00
   428F 23                12129 	inc	hl
   4290 36 00             12130 	ld	(hl),#0x00
                          12131 ;demo.c:1900: cmd.source_y = 0;
   4292 21rB0s44          12132 	ld	hl, #_cmd + 2
   4295 36 00             12133 	ld	(hl),#0x00
   4297 23                12134 	inc	hl
   4298 36 00             12135 	ld	(hl),#0x00
                          12136 ;demo.c:1901: cmd.dest_x = 0;
   429A 21rB2s44          12137 	ld	hl, #_cmd + 4
   429D 36 00             12138 	ld	(hl),#0x00
   429F 23                12139 	inc	hl
   42A0 36 00             12140 	ld	(hl),#0x00
                          12141 ;demo.c:1902: cmd.dest_y = 768;
   42A2 21rB4s44          12142 	ld	hl, #_cmd + 6
   42A5 36 00             12143 	ld	(hl),#0x00
   42A7 23                12144 	inc	hl
   42A8 36 03             12145 	ld	(hl),#0x03
                          12146 ;demo.c:1903: vdp_copier(&cmd);
   42AA 21rAEs44          12147 	ld	hl,#_cmd
   42AD E5                12148 	push	hl
   42AE CDr00s00          12149 	call	_vdp_copier
   42B1 F1                12150 	pop	af
                          12151 ;demo.c:1905: memset((uint8_t *) &crebuffer1, 0, 3323);
   42B2 21 FB 0C          12152 	ld	hl,#0x0CFB
   42B5 E5                12153 	push	hl
   42B6 3E 00             12154 	ld	a,#0x00
   42B8 F5                12155 	push	af
   42B9 33                12156 	inc	sp
   42BA 21r50s15          12157 	ld	hl,#_crebuffer1
   42BD E5                12158 	push	hl
   42BE CDr00s00          12159 	call	_memset
   42C1 F1                12160 	pop	af
   42C2 F1                12161 	pop	af
   42C3 33                12162 	inc	sp
                          12163 ;demo.c:1906: raw_load("CREDIT1 PCK", 3323, crebuffer1,0);
   42C4 21 00 00          12164 	ld	hl,#0x0000
   42C7 E5                12165 	push	hl
   42C8 21r50s15          12166 	ld	hl,#_crebuffer1
   42CB E5                12167 	push	hl
   42CC 21 FB 0C          12168 	ld	hl,#0x0CFB
   42CF E5                12169 	push	hl
   42D0 21r25s46          12170 	ld	hl,#__str_46
   42D3 E5                12171 	push	hl
   42D4 CDr96s0A          12172 	call	_raw_load
   42D7 F1                12173 	pop	af
   42D8 F1                12174 	pop	af
   42D9 F1                12175 	pop	af
   42DA F1                12176 	pop	af
                          12177 ;demo.c:1907: memset((uint8_t *) &crebuffer2, 0, 4724);
   42DB 21 74 12          12178 	ld	hl,#0x1274
   42DE E5                12179 	push	hl
   42DF 3E 00             12180 	ld	a,#0x00
   42E1 F5                12181 	push	af
   42E2 33                12182 	inc	sp
   42E3 21r4Bs22          12183 	ld	hl,#_crebuffer2
   42E6 E5                12184 	push	hl
   42E7 CDr00s00          12185 	call	_memset
   42EA F1                12186 	pop	af
   42EB F1                12187 	pop	af
   42EC 33                12188 	inc	sp
                          12189 ;demo.c:1908: raw_load("CREDIT2 PCK", 4724, crebuffer2,0);
   42ED 21 00 00          12190 	ld	hl,#0x0000
   42F0 E5                12191 	push	hl
   42F1 21r4Bs22          12192 	ld	hl,#_crebuffer2
   42F4 E5                12193 	push	hl
   42F5 21 74 12          12194 	ld	hl,#0x1274
   42F8 E5                12195 	push	hl
   42F9 21r31s46          12196 	ld	hl,#__str_47
   42FC E5                12197 	push	hl
   42FD CDr96s0A          12198 	call	_raw_load
   4300 F1                12199 	pop	af
   4301 F1                12200 	pop	af
   4302 F1                12201 	pop	af
   4303 F1                12202 	pop	af
                          12203 ;demo.c:1909: memset((uint8_t *) &crebuffer3, 0, 3723);
   4304 21 8B 0E          12204 	ld	hl,#0x0E8B
   4307 E5                12205 	push	hl
   4308 3E 00             12206 	ld	a,#0x00
   430A F5                12207 	push	af
   430B 33                12208 	inc	sp
   430C 21rBFs34          12209 	ld	hl,#_crebuffer3
   430F E5                12210 	push	hl
   4310 CDr00s00          12211 	call	_memset
   4313 F1                12212 	pop	af
   4314 F1                12213 	pop	af
   4315 33                12214 	inc	sp
                          12215 ;demo.c:1910: raw_load("CREDIT3 PCK", 3723, crebuffer3,0);
   4316 21 00 00          12216 	ld	hl,#0x0000
   4319 E5                12217 	push	hl
   431A 21rBFs34          12218 	ld	hl,#_crebuffer3
   431D E5                12219 	push	hl
   431E 21 8B 0E          12220 	ld	hl,#0x0E8B
   4321 E5                12221 	push	hl
   4322 21r3Ds46          12222 	ld	hl,#__str_48
   4325 E5                12223 	push	hl
   4326 CDr96s0A          12224 	call	_raw_load
   4329 F1                12225 	pop	af
   432A F1                12226 	pop	af
   432B F1                12227 	pop	af
   432C F1                12228 	pop	af
                          12229 ;demo.c:1912: scratch_clear();
   432D CDr90s09          12230 	call	_scratch_clear
                          12231 ;demo.c:1913: vdp_load_palette(scratch);
   4330 21r4As43          12232 	ld	hl,#_scratch
   4333 E5                12233 	push	hl
   4334 CDr00s00          12234 	call	_vdp_load_palette
   4337 F1                12235 	pop	af
                          12236 ;demo.c:1915: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   4338 21 00 00          12237 	ld	hl,#0x0000
   433B E5                12238 	push	hl
   433C 2E 01             12239 	ld	l, #0x01
   433E E5                12240 	push	hl
   433F 2E 00             12241 	ld	l, #0x00
   4341 E5                12242 	push	hl
   4342 21 6A 08          12243 	ld	hl,#0x086A
   4345 E5                12244 	push	hl
   4346 21r49s46          12245 	ld	hl,#__str_49
   4349 E5                12246 	push	hl
   434A CDr99s0B          12247 	call	_pck_load
   434D FD 21 0A 00       12248 	ld	iy,#0x000A
   4351 FD 39             12249 	add	iy,sp
   4353 FD F9             12250 	ld	sp,iy
                          12251 ;demo.c:1917: cmd.size_x = 108;
   4355 21rB6s44          12252 	ld	hl, #_cmd + 8
   4358 36 6C             12253 	ld	(hl),#0x6C
   435A 23                12254 	inc	hl
   435B 36 00             12255 	ld	(hl),#0x00
                          12256 ;demo.c:1918: cmd.size_y = 116;
   435D 21rB8s44          12257 	ld	hl, #_cmd + 10
   4360 36 74             12258 	ld	(hl),#0x74
   4362 23                12259 	inc	hl
   4363 36 00             12260 	ld	(hl),#0x00
                          12261 ;demo.c:1919: cmd.data = 0;
                          12262 ;demo.c:1920: cmd.argument = 0x00;
   4365 3E 00             12263 	ld	a,#0x00
   4367 32rBAs44          12264 	ld	(#_cmd + 12),a
   436A 32rBBs44          12265 	ld	(#_cmd + 13),a
                          12266 ;demo.c:1921: cmd.command = 0xd0; 
   436D 01rBCs44          12267 	ld	bc,#_cmd + 14
   4370 3E D0             12268 	ld	a,#0xD0
   4372 02                12269 	ld	(bc),a
                          12270 ;demo.c:1922: cmd.source_x = 75;
   4373 21rAEs44          12271 	ld	hl,#_cmd
   4376 36 4B             12272 	ld	(hl),#0x4B
   4378 23                12273 	inc	hl
   4379 36 00             12274 	ld	(hl),#0x00
                          12275 ;demo.c:1923: cmd.source_y = 50;
   437B 21rB0s44          12276 	ld	hl, #_cmd + 2
   437E 36 32             12277 	ld	(hl),#0x32
   4380 23                12278 	inc	hl
   4381 36 00             12279 	ld	(hl),#0x00
                          12280 ;demo.c:1924: cmd.dest_x = 75;
   4383 21rB2s44          12281 	ld	hl, #_cmd + 4
   4386 36 4B             12282 	ld	(hl),#0x4B
   4388 23                12283 	inc	hl
   4389 36 00             12284 	ld	(hl),#0x00
                          12285 ;demo.c:1925: cmd.dest_y = 256;
   438B 21rB4s44          12286 	ld	hl, #_cmd + 6
   438E 36 00             12287 	ld	(hl),#0x00
   4390 23                12288 	inc	hl
   4391 36 01             12289 	ld	(hl),#0x01
                          12290 ;demo.c:1926: vdp_copier(&cmd);
   4393 21rAEs44          12291 	ld	hl,#_cmd
   4396 E5                12292 	push	hl
   4397 CDr00s00          12293 	call	_vdp_copier
   439A F1                12294 	pop	af
                          12295 ;demo.c:1928: cmd.size_x = 108;
   439B 21rB6s44          12296 	ld	hl, #_cmd + 8
   439E 36 6C             12297 	ld	(hl),#0x6C
   43A0 23                12298 	inc	hl
   43A1 36 00             12299 	ld	(hl),#0x00
                          12300 ;demo.c:1929: cmd.size_y = 60;
   43A3 21rB8s44          12301 	ld	hl, #_cmd + 10
   43A6 36 3C             12302 	ld	(hl),#0x3C
   43A8 23                12303 	inc	hl
   43A9 36 00             12304 	ld	(hl),#0x00
                          12305 ;demo.c:1930: cmd.data = 0;
                          12306 ;demo.c:1931: cmd.argument = 0x00;
   43AB 3E 00             12307 	ld	a,#0x00
   43AD 32rBAs44          12308 	ld	(#_cmd + 12),a
   43B0 32rBBs44          12309 	ld	(#_cmd + 13),a
                          12310 ;demo.c:1932: cmd.command = 0xd0; 
   43B3 01rBCs44          12311 	ld	bc,#_cmd + 14
   43B6 3E D0             12312 	ld	a,#0xD0
   43B8 02                12313 	ld	(bc),a
                          12314 ;demo.c:1933: cmd.source_x = 75;
   43B9 21rAEs44          12315 	ld	hl,#_cmd
   43BC 36 4B             12316 	ld	(hl),#0x4B
   43BE 23                12317 	inc	hl
   43BF 36 00             12318 	ld	(hl),#0x00
                          12319 ;demo.c:1934: cmd.source_y = 256+110;
   43C1 21rB0s44          12320 	ld	hl, #_cmd + 2
   43C4 36 6E             12321 	ld	(hl),#0x6E
   43C6 23                12322 	inc	hl
   43C7 36 01             12323 	ld	(hl),#0x01
                          12324 ;demo.c:1935: cmd.dest_x = 75;
   43C9 21rB2s44          12325 	ld	hl, #_cmd + 4
   43CC 36 4B             12326 	ld	(hl),#0x4B
   43CE 23                12327 	inc	hl
   43CF 36 00             12328 	ld	(hl),#0x00
                          12329 ;demo.c:1936: cmd.dest_y = 40;
   43D1 21rB4s44          12330 	ld	hl, #_cmd + 6
   43D4 36 28             12331 	ld	(hl),#0x28
   43D6 23                12332 	inc	hl
   43D7 36 00             12333 	ld	(hl),#0x00
                          12334 ;demo.c:1937: vdp_copier(&cmd);
   43D9 21rAEs44          12335 	ld	hl,#_cmd
   43DC E5                12336 	push	hl
   43DD CDr00s00          12337 	call	_vdp_copier
   43E0 F1                12338 	pop	af
                          12339 ;demo.c:1938: cmd.dest_x = 75;
   43E1 21rB2s44          12340 	ld	hl, #_cmd + 4
   43E4 36 4B             12341 	ld	(hl),#0x4B
   43E6 23                12342 	inc	hl
   43E7 36 00             12343 	ld	(hl),#0x00
                          12344 ;demo.c:1939: cmd.dest_y = 100;
   43E9 21rB4s44          12345 	ld	hl, #_cmd + 6
   43EC 36 64             12346 	ld	(hl),#0x64
   43EE 23                12347 	inc	hl
   43EF 36 00             12348 	ld	(hl),#0x00
                          12349 ;demo.c:1940: vdp_copier(&cmd);
   43F1 21rAEs44          12350 	ld	hl,#_cmd
   43F4 E5                12351 	push	hl
   43F5 CDr00s00          12352 	call	_vdp_copier
   43F8 F1                12353 	pop	af
                          12354 ;demo.c:1942: pal_load("DSSLOGO PL5",32,0);
   43F9 21 00 00          12355 	ld	hl,#0x0000
   43FC E5                12356 	push	hl
   43FD 3E 20             12357 	ld	a,#0x20
   43FF F5                12358 	push	af
   4400 33                12359 	inc	sp
   4401 21r55s46          12360 	ld	hl,#__str_50
   4404 E5                12361 	push	hl
   4405 CDrA3s09          12362 	call	_pal_load
   4408 F1                12363 	pop	af
   4409 F1                12364 	pop	af
   440A 33                12365 	inc	sp
                          12366 ;demo.c:1944: scratch_clear();
   440B CDr90s09          12367 	call	_scratch_clear
                          12368 ;demo.c:1946: vdp_register(9,130); // 50hz,212
   440E 21 09 82          12369 	ld	hl,#0x8209
   4411 E5                12370 	push	hl
   4412 CDr00s00          12371 	call	_vdp_register
   4415 F1                12372 	pop	af
                          12373 ;demo.c:1948: install_isr(my_isr);
   4416 21rECs07          12374 	ld	hl,#_my_isr
   4419 E5                12375 	push	hl
   441A CDr00s00          12376 	call	_install_isr
   441D F1                12377 	pop	af
                          12378 ;demo.c:1952: while (!quit) {
   441E                   12379 00111$:
   441E AF                12380 	xor	a,a
   441F DD B6 FF          12381 	or	a,-1 (ix)
   4422 C2rDDs44          12382 	jp	NZ,00113$
                          12383 ;demo.c:1954: if (vbicount >= scenetimings[timeindex+1]) {
   4425 21rBCs45          12384 	ld	hl,#_timeindex + 0
   4428 4E                12385 	ld	c,(hl)
   4429 0C                12386 	inc	c
   442A CB 21             12387 	sla	c
   442C 3ErD5             12388 	ld	a,#<_scenetimings
   442E 81                12389 	add	a,c
   442F 6F                12390 	ld	l,a
   4430 3Es44             12391 	ld	a,#>_scenetimings
   4432 CE 00             12392 	adc	a,#0x00
   4434 67                12393 	ld	h,a
   4435 4E                12394 	ld	c,(hl)
   4436 23                12395 	inc	hl
   4437 46                12396 	ld	b,(hl)
   4438 3ArAAs44          12397 	ld	a,(#_vbicount+0)
   443B 91                12398 	sub	a,c
   443C 3ArABs44          12399 	ld	a,(#_vbicount+1)
   443F 98                12400 	sbc	a,b
   4440 FAr69s44          12401 	jp	M,00105$
                          12402 ;demo.c:1955: sceneindex++;
   4443 FD 21rBAs45       12403 	ld	iy,#_sceneindex
   4447 FD 34 00          12404 	inc	0 (iy)
   444A 20 07             12405 	jr	NZ,00153$
   444C FD 21rBAs45       12406 	ld	iy,#_sceneindex
   4450 FD 34 01          12407 	inc	1 (iy)
   4453                   12408 00153$:
                          12409 ;demo.c:1956: timeindex+=2;
   4453 21rBCs45          12410 	ld	hl,#_timeindex
   4456 7E                12411 	ld	a,(hl)
   4457 C6 02             12412 	add	a,#0x02
   4459 23                12413 	inc	hl
   445A 2B                12414 	dec	hl
   445B C5                12415 	push	bc
   445C 4F                12416 	ld	c, a
   445D 23                12417 	inc	hl
   445E 7E                12418 	ld	a, (hl)
   445F 47                12419 	ld	b, a
   4460 79                12420 	ld	a, c
   4461 2B                12421 	dec	hl
   4462 77                12422 	ld	(hl), a
   4463 78                12423 	ld	a, b
   4464 C1                12424 	pop	bc
   4465 CE 00             12425 	adc	a,#0x00
   4467 23                12426 	inc	hl
   4468 77                12427 	ld	(hl),a
   4469                   12428 00105$:
                          12429 ;demo.c:1959: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   4469 21rBCs45          12430 	ld	hl,#_timeindex + 0
   446C 4E                12431 	ld	c,(hl)
   446D 21rBDs45          12432 	ld	hl,#_timeindex + 1
   4470 46                12433 	ld	b,(hl)
   4471 CB 21             12434 	sla	c
   4473 CB 10             12435 	rl	b
   4475 21rD5s44          12436 	ld	hl,#_scenetimings
   4478 09                12437 	add	hl,bc
   4479 4E                12438 	ld	c,(hl)
   447A 23                12439 	inc	hl
   447B 46                12440 	ld	b,(hl)
   447C 3ArAAs44          12441 	ld	a,(#_vbicount+0)
   447F 91                12442 	sub	a,c
   4480 3ArABs44          12443 	ld	a,(#_vbicount+1)
   4483 98                12444 	sbc	a,b
   4484 FArC9s44          12445 	jp	M,00107$
   4487 21rBCs45          12446 	ld	hl,#_timeindex + 0
   448A 4E                12447 	ld	c,(hl)
   448B 0C                12448 	inc	c
   448C CB 21             12449 	sla	c
   448E 3ErD5             12450 	ld	a,#<_scenetimings
   4490 81                12451 	add	a,c
   4491 6F                12452 	ld	l,a
   4492 3Es44             12453 	ld	a,#>_scenetimings
   4494 CE 00             12454 	adc	a,#0x00
   4496 67                12455 	ld	h,a
   4497 4E                12456 	ld	c,(hl)
   4498 23                12457 	inc	hl
   4499 46                12458 	ld	b,(hl)
   449A 3ArAAs44          12459 	ld	a,(#_vbicount+0)
   449D 91                12460 	sub	a,c
   449E FD 21rAAs44       12461 	ld	iy,#_vbicount
   44A2 FD 7E 01          12462 	ld	a,1 (iy)
   44A5 98                12463 	sbc	a,b
   44A6 F2rC9s44          12464 	jp	P,00107$
                          12465 ;demo.c:1960: waitVB();
   44A9 76                12466 		halt 
                          12467 ;demo.c:1961: scenepointers[sceneindex]();
   44AA 21rBAs45          12468 	ld	hl,#_sceneindex + 0
   44AD 4E                12469 	ld	c,(hl)
   44AE FD 21rBAs45       12470 	ld	iy,#_sceneindex
   44B2 FD 46 01          12471 	ld	b,1 (iy)
   44B5 CB 21             12472 	sla	c
   44B7 CB 10             12473 	rl	b
   44B9 21rBDs44          12474 	ld	hl,#_scenepointers
   44BC 09                12475 	add	hl,bc
   44BD 4E                12476 	ld	c,(hl)
   44BE 23                12477 	inc	hl
   44BF 46                12478 	ld	b,(hl)
   44C0 C5                12479 	push	bc
   44C1 21rC8s44          12480 	ld	hl,#00158$
   44C4 E5                12481 	push	hl
   44C5 69                12482 	ld	l,c
   44C6 60                12483 	ld	h,b
   44C7 E9                12484 	jp	(hl)
   44C8                   12485 00158$:
   44C8 C1                12486 	pop	bc
   44C9                   12487 00107$:
                          12488 ;demo.c:1965: if(space())
   44C9 21 08 01          12489 	ld	hl,#0x0108
   44CC E5                12490 	push	hl
   44CD CDr00s00          12491 	call	_ispressed
   44D0 F1                12492 	pop	af
   44D1 AF                12493 	xor	a,a
   44D2 B5                12494 	or	a,l
   44D3 CAr1Es44          12495 	jp	Z,00111$
                          12496 ;demo.c:1966: quit=1;
   44D6 DD 36 FF 01       12497 	ld	-1 (ix),#0x01
   44DA C3r1Es44          12498 	jp	00111$
   44DD                   12499 00113$:
                          12500 ;demo.c:1969: do_quit();
   44DD CDr14s3F          12501 	call	_do_quit
   44E0 DD F9             12502 	ld	sp,ix
   44E2 DD E1             12503 	pop	ix
   44E4 C9                12504 	ret
   44E5                   12505 _main_end::
   44E5                   12506 __str_31:
   44E5 5B 73 74 61 72 74 12507 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   4502 0D                12508 	.db 0x0D
   4503 0A                12509 	.db 0x0A
   4504 0D                12510 	.db 0x0D
   4505 0A                12511 	.db 0x0A
   4506 00                12512 	.db 0x00
   4507                   12513 __str_32:
   4507 69 6E 69 74 20 73 12514 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   451F 00                12515 	.db 0x00
   4520                   12516 __str_33:
   4520 64 6F 6E 65 2E    12517 	.ascii "done."
   4525 0D                12518 	.db 0x0D
   4526 0A                12519 	.db 0x0A
   4527 00                12520 	.db 0x00
   4528                   12521 __str_34:
   4528 64 65 74 65 63 74 12522 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   4540 0D                12523 	.db 0x0D
   4541 0A                12524 	.db 0x0A
   4542 00                12525 	.db 0x00
   4543                   12526 __str_35:
   4543 76 64 70 32 20 66 12527 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   455E 0D                12528 	.db 0x0D
   455F 0A                12529 	.db 0x0A
   4560 00                12530 	.db 0x00
   4561                   12531 __str_36:
   4561 20 76 64 70 31 20 12532 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   456D 0D                12533 	.db 0x0D
   456E 0A                12534 	.db 0x0A
   456F 53 6F 72 72 79 2C 12535 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   459D 20 56 52 41 4D 2E 12536 	.ascii " VRAM."
   45A3 0D                12537 	.db 0x0D
   45A4 0A                12538 	.db 0x0A
   45A5 00                12539 	.db 0x00
   45A6                   12540 __str_37:
   45A6 54 57 49 53 54 45 12541 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   45B1 00                12542 	.db 0x00
   45B2                   12543 __str_38:
   45B2 4C 46 20 20 20 20 12544 	.ascii "LF      PL5"
        20 20 50 4C 35
   45BD 00                12545 	.db 0x00
   45BE                   12546 __str_39:
   45BE 42 4F 58 45 53 20 12547 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   45C9 00                12548 	.db 0x00
   45CA                   12549 __str_40:
   45CA 42 55 4C 42 53 20 12550 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   45D5 00                12551 	.db 0x00
   45D6                   12552 __str_41:
   45D6 43 52 45 44 49 54 12553 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   45E1 00                12554 	.db 0x00
   45E2                   12555 __str_42:
   45E2 61 6C 6C 20 67 6F 12556 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   45FE 0D                12557 	.db 0x0D
   45FF 0A                12558 	.db 0x0A
   4600 00                12559 	.db 0x00
   4601                   12560 __str_43:
   4601 42 55 4C 42 53 20 12561 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   460C 00                12562 	.db 0x00
   460D                   12563 __str_44:
   460D 54 57 49 53 54 45 12564 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   4618 00                12565 	.db 0x00
   4619                   12566 __str_45:
   4619 42 4F 58 45 53 20 12567 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   4624 00                12568 	.db 0x00
   4625                   12569 __str_46:
   4625 43 52 45 44 49 54 12570 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   4630 00                12571 	.db 0x00
   4631                   12572 __str_47:
   4631 43 52 45 44 49 54 12573 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   463C 00                12574 	.db 0x00
   463D                   12575 __str_48:
   463D 43 52 45 44 49 54 12576 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   4648 00                12577 	.db 0x00
   4649                   12578 __str_49:
   4649 44 53 53 4C 4F 47 12579 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   4654 00                12580 	.db 0x00
   4655                   12581 __str_50:
   4655 44 53 53 4C 4F 47 12582 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   4660 00                12583 	.db 0x00
                          12584 	.area _CODE
                          12585 	.area _CABS
