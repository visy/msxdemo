                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Wed Mar  7 22:43:50 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _points
                             15 	.globl _logoeffu
                             16 	.globl _abs
                             17 	.globl _tritiles
                             18 	.globl _drawtilescreen_full
                             19 	.globl _drawtilescreen
                             20 	.globl _drawtritile
                             21 	.globl _thewave
                             22 	.globl _boxes
                             23 	.globl _drawbox
                             24 	.globl _animplay
                             25 	.globl _bulbs
                             26 	.globl _twister
                             27 	.globl _font
                             28 	.globl _drawsine
                             29 	.globl _drawstr2x
                             30 	.globl _drawstr
                             31 	.globl _do_letter_tall
                             32 	.globl _do_letter
                             33 	.globl _do_2xletter
                             34 	.globl _raster_effu
                             35 	.globl _do_blocks
                             36 	.globl _do_ymmm
                             37 	.globl _fadein
                             38 	.globl _pck_load
                             39 	.globl _raw_load
                             40 	.globl _pause
                             41 	.globl _pal_load
                             42 	.globl _scratch_clear
                             43 	.globl _ge5_load
                             44 	.globl _color_isr
                             45 	.globl _my_isr
                             46 	.globl _isNthBitSet
                             47 	.globl _scenetimings
                             48 	.globl _scenepointers
                             49 	.globl _timeindex
                             50 	.globl _sceneindex
                             51 	.globl _pointframe
                             52 	.globl _initpoints
                             53 	.globl _onceclear
                             54 	.globl _powa
                             55 	.globl _powatick
                             56 	.globl _triframes
                             57 	.globl _tripaltick2
                             58 	.globl _tripaltick
                             59 	.globl _tripal
                             60 	.globl _tiletick
                             61 	.globl _tiley
                             62 	.globl _tilex
                             63 	.globl _tilei
                             64 	.globl _tri_inited
                             65 	.globl _ffa
                             66 	.globl _buf
                             67 	.globl _initwave
                             68 	.globl _prevbox_of
                             69 	.globl _boxes_of
                             70 	.globl _pbt
                             71 	.globl _pbx
                             72 	.globl _bonc
                             73 	.globl _bo
                             74 	.globl _bt
                             75 	.globl _by
                             76 	.globl _bx
                             77 	.globl _boxi
                             78 	.globl _boxes_y
                             79 	.globl _boxes_x
                             80 	.globl _prevy
                             81 	.globl _prevx
                             82 	.globl _buffer
                             83 	.globl _boxes_init
                             84 	.globl _anim_init
                             85 	.globl _sy
                             86 	.globl _enderdir
                             87 	.globl _ender
                             88 	.globl _ff2
                             89 	.globl _ff1
                             90 	.globl _bulbflipper
                             91 	.globl _twinited
                             92 	.globl _ff
                             93 	.globl _ly
                             94 	.globl _lx
                             95 	.globl _linenum
                             96 	.globl _flof
                             97 	.globl _btab
                             98 	.globl _bty
                             99 	.globl _btx
                            100 	.globl _bsy
                            101 	.globl _bsx
                            102 	.globl _block_init
                            103 	.globl _cc
                            104 	.globl _yofff
                            105 	.globl _cmd
                            106 	.globl _tick
                            107 	.globl _vbicount
                            108 	.globl _boxes_palette
                            109 	.globl _tf_palette
                            110 	.globl _twister_palette
                            111 	.globl _block_palette
                            112 	.globl _bulbs_palette
                            113 	.globl _cur_palette
                            114 	.globl _scratch
                            115 	.globl _packbuffer
                            116 	.globl _tri_lookup_y
                            117 	.globl _eighttimes
                            118 	.globl _twelvetimes
                            119 	.globl _tri_lookup_x
                            120 	.globl _credits
                            121 	.globl _sintab
                            122 	.globl _font_w
                            123 	.globl _font_y
                            124 	.globl _font_x
                            125 	.globl _tri_inva4
                            126 	.globl _tri_inva3
                            127 	.globl _tri_inva2
                            128 	.globl _tri_inva1
                            129 	.globl _tri_side2
                            130 	.globl _tri_side1
                            131 	.globl _tri_dia
                            132 	.globl _tri_up
                            133 	.globl _tri_center
                            134 	.globl _sintabx
                            135 ;--------------------------------------------------------
                            136 ; special function registers
                            137 ;--------------------------------------------------------
                            138 ;--------------------------------------------------------
                            139 ;  ram data
                            140 ;--------------------------------------------------------
                            141 	.area _DATA
   0000                     142 _sintab::
   0000                     143 	.ds 256
   0100                     144 _credits::
   0100                     145 	.ds 2
   0102                     146 _tri_lookup_x::
   0102                     147 	.ds 32
   0122                     148 _twelvetimes::
   0122                     149 	.ds 52
   0156                     150 _eighttimes::
   0156                     151 	.ds 52
   018A                     152 _tri_lookup_y::
   018A                     153 	.ds 64
   01CA                     154 _packbuffer::
   01CA                     155 	.ds 16000
   404A                     156 _scratch::
   404A                     157 	.ds 128
   40CA                     158 _cur_palette::
   40CA                     159 	.ds 32
   40EA                     160 _bulbs_palette::
   40EA                     161 	.ds 32
   410A                     162 _block_palette::
   410A                     163 	.ds 32
   412A                     164 _twister_palette::
   412A                     165 	.ds 32
   414A                     166 _tf_palette::
   414A                     167 	.ds 32
   416A                     168 _boxes_palette::
   416A                     169 	.ds 32
   418A                     170 _vbicount::
   418A                     171 	.ds 2
   418C                     172 _tick::
   418C                     173 	.ds 2
   418E                     174 _cmd::
   418E                     175 	.ds 15
   419D                     176 _isNthBitSet_mask_1_1:
   419D                     177 	.ds 8
   41A5                     178 _yofff::
   41A5                     179 	.ds 1
   41A6                     180 _cc::
   41A6                     181 	.ds 1
   41A7                     182 _flipper:
   41A7                     183 	.ds 2
   41A9                     184 _ymmmf:
   41A9                     185 	.ds 2
   41AB                     186 _block_init::
   41AB                     187 	.ds 1
   41AC                     188 _bsx::
   41AC                     189 	.ds 2
   41AE                     190 _bsy::
   41AE                     191 	.ds 2
   41B0                     192 _btx::
   41B0                     193 	.ds 2
   41B2                     194 _bty::
   41B2                     195 	.ds 2
   41B4                     196 _btab::
   41B4                     197 	.ds 32
   41D4                     198 _flof::
   41D4                     199 	.ds 2
   41D6                     200 _linenum::
   41D6                     201 	.ds 2
   41D8                     202 _lx::
   41D8                     203 	.ds 1
   41D9                     204 _ly::
   41D9                     205 	.ds 1
   41DA                     206 _ff::
   41DA                     207 	.ds 2
   41DC                     208 _twinited::
   41DC                     209 	.ds 2
   41DE                     210 _bulbflipper::
   41DE                     211 	.ds 2
   41E0                     212 _ff1::
   41E0                     213 	.ds 2
   41E2                     214 _ff2::
   41E2                     215 	.ds 2
   41E4                     216 _ender::
   41E4                     217 	.ds 2
   41E6                     218 _enderdir::
   41E6                     219 	.ds 2
   41E8                     220 _sy::
   41E8                     221 	.ds 2
   41EA                     222 _xo:
   41EA                     223 	.ds 2
   41EC                     224 _yo:
   41EC                     225 	.ds 2
   41EE                     226 _po:
   41EE                     227 	.ds 2
   41F0                     228 _frames:
   41F0                     229 	.ds 2
   41F2                     230 _anim_init::
   41F2                     231 	.ds 2
   41F4                     232 _boxes_init::
   41F4                     233 	.ds 1
   41F5                     234 _buffer::
   41F5                     235 	.ds 2
   41F7                     236 _prevx::
   41F7                     237 	.ds 2
   41F9                     238 _prevy::
   41F9                     239 	.ds 2
   41FB                     240 _boxes_x::
   41FB                     241 	.ds 5
   4200                     242 _boxes_y::
   4200                     243 	.ds 10
   420A                     244 _boxi::
   420A                     245 	.ds 1
   420B                     246 _bx::
   420B                     247 	.ds 2
   420D                     248 _by::
   420D                     249 	.ds 2
   420F                     250 _bt::
   420F                     251 	.ds 2
   4211                     252 _bo::
   4211                     253 	.ds 2
   4213                     254 _bonc::
   4213                     255 	.ds 2
   4215                     256 _pbx::
   4215                     257 	.ds 2
   4217                     258 _pbt::
   4217                     259 	.ds 2
   4219                     260 _boxes_of::
   4219                     261 	.ds 10
   4223                     262 _prevbox_of::
   4223                     263 	.ds 1
   4224                     264 _initwave::
   4224                     265 	.ds 1
   4225                     266 _buf::
   4225                     267 	.ds 2
   4227                     268 _ffa::
   4227                     269 	.ds 2
   4229                     270 _tri_inited::
   4229                     271 	.ds 1
   422A                     272 _tilei::
   422A                     273 	.ds 2
   422C                     274 _tilex::
   422C                     275 	.ds 2
   422E                     276 _tiley::
   422E                     277 	.ds 2
   4230                     278 _tiletick::
   4230                     279 	.ds 1
   4231                     280 _tripal::
   4231                     281 	.ds 9
   423A                     282 _tripaltick::
   423A                     283 	.ds 1
   423B                     284 _tripaltick2::
   423B                     285 	.ds 1
   423C                     286 _triframes::
   423C                     287 	.ds 2
   423E                     288 _powatick::
   423E                     289 	.ds 2
   4240                     290 _powa::
   4240                     291 	.ds 2
   4242                     292 _onceclear::
   4242                     293 	.ds 1
   4243                     294 _initpoints::
   4243                     295 	.ds 1
   4244                     296 _pointframe::
   4244                     297 	.ds 2
   4246                     298 _sceneindex::
   4246                     299 	.ds 2
   4248                     300 _timeindex::
   4248                     301 	.ds 2
   424A                     302 _scenepointers::
   424A                     303 	.ds 16
   425A                     304 _scenetimings::
   425A                     305 	.ds 32
                            306 ;--------------------------------------------------------
                            307 ; overlayable items in  ram 
                            308 ;--------------------------------------------------------
                            309 	.area _OVERLAY
                            310 ;--------------------------------------------------------
                            311 ; external initialized ram data
                            312 ;--------------------------------------------------------
                            313 ;--------------------------------------------------------
                            314 ; global & static initialisations
                            315 ;--------------------------------------------------------
                            316 	.area _HOME
                            317 	.area _GSINIT
                            318 	.area _GSFINAL
                            319 	.area _GSINIT
                            320 ;demo.c:201: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r9Ds41            321 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            322 	call	__initrleblock
   0006 08                  323 	.db	8
   0007 01 02 04 08 10 20   324 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  325 	.db	0
                            326 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            327 	ld	hl,#_sintab
   0013 CDr00s00            328 	call	__initrleblock
   0016 3B                  329 	.db	59
   0017 00 03 06 09 0C 0F   330 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   331 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   332 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   333 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   334 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   335 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   336 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            337 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               338 	.db	#-5,#0x7E
   0054 01                  339 	.db	1
   0055 7F                  340 	.db	0x7F
   0056 FB 7E               341 	.db	#-5,#0x7E
   0058 75                  342 	.db	117
   0059 7D 7D 7C 7B 7B 7A   343 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   344 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   345 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   346 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   347 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   348 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   349 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   350 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   351 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   352 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   353 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   354 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   355 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   356 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      357 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               358 	.db	#-5,#0x82
   00D0 01                  359 	.db	1
   00D1 81                  360 	.db	0x81
   00D2 FB 82               361 	.db	#-5,#0x82
   00D4 3A                  362 	.db	58
   00D5 83 83 84 85 85 86   363 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   364 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   365 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   366 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   367 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   368 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   369 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               370 	.db	0xFA, 0xFD
   010F 00                  371 	.db	0
                            372 ;demo.c:37: const char* credits = "demo code by visy_        tjoppen__music by lynn__graphics by lynn_            siikikala_            visy__msxlib by marq__basecode by Konamiman__depacker_help by_         GuyveR";
   0110 21r4Cs39            373 	ld	hl,#__str_31
   0113 22r00s01            374 	ld	(_credits),hl
                            375 ;demo.c:179: uint8_t tri_lookup_x[16*2] = { 0 };
   0116 21r02s01            376 	ld	hl,#_tri_lookup_x
   0119 CDr00s00            377 	call	__initrleblock
   011C E0 00               378 	.db	#-32,#0x00
   011E 00                  379 	.db	0
                            380 ;demo.c:180: int twelvetimes[26] = { 0 };
   011F 21r22s01            381 	ld	hl,#_twelvetimes
   0122 CDr00s00            382 	call	__initrleblock
   0125 CC 00               383 	.db	#-52,#0x00
   0127 00                  384 	.db	0
                            385 ;demo.c:181: int eighttimes[26] = { 0 };
   0128 21r56s01            386 	ld	hl,#_eighttimes
   012B CDr00s00            387 	call	__initrleblock
   012E CC 00               388 	.db	#-52,#0x00
   0130 00                  389 	.db	0
                            390 ;demo.c:183: int tri_lookup_y[16*2] = { 0 };
   0131 21r8As01            391 	ld	hl,#_tri_lookup_y
   0134 CDr00s00            392 	call	__initrleblock
   0137 C0 00               393 	.db	#-64,#0x00
   0139 00                  394 	.db	0
                            395 ;demo.c:185: uint8_t packbuffer[16000] = {0};
   013A 21rCAs01            396 	ld	hl,#_packbuffer
   013D CDr00s00            397 	call	__initrleblock
   0140 81 00               398 	.db	#-127,#0x00
   0142 81 00               399 	.db	#-127,#0x00
   0144 81 00               400 	.db	#-127,#0x00
   0146 81 00               401 	.db	#-127,#0x00
   0148 81 00               402 	.db	#-127,#0x00
   014A 81 00               403 	.db	#-127,#0x00
   014C 81 00               404 	.db	#-127,#0x00
   014E 81 00               405 	.db	#-127,#0x00
   0150 81 00               406 	.db	#-127,#0x00
   0152 81 00               407 	.db	#-127,#0x00
   0154 81 00               408 	.db	#-127,#0x00
   0156 81 00               409 	.db	#-127,#0x00
   0158 81 00               410 	.db	#-127,#0x00
   015A 81 00               411 	.db	#-127,#0x00
   015C 81 00               412 	.db	#-127,#0x00
   015E 81 00               413 	.db	#-127,#0x00
   0160 81 00               414 	.db	#-127,#0x00
   0162 81 00               415 	.db	#-127,#0x00
   0164 81 00               416 	.db	#-127,#0x00
   0166 81 00               417 	.db	#-127,#0x00
   0168 81 00               418 	.db	#-127,#0x00
   016A 81 00               419 	.db	#-127,#0x00
   016C 81 00               420 	.db	#-127,#0x00
   016E 81 00               421 	.db	#-127,#0x00
   0170 81 00               422 	.db	#-127,#0x00
   0172 81 00               423 	.db	#-127,#0x00
   0174 81 00               424 	.db	#-127,#0x00
   0176 81 00               425 	.db	#-127,#0x00
   0178 81 00               426 	.db	#-127,#0x00
   017A 81 00               427 	.db	#-127,#0x00
   017C 81 00               428 	.db	#-127,#0x00
   017E 81 00               429 	.db	#-127,#0x00
   0180 81 00               430 	.db	#-127,#0x00
   0182 81 00               431 	.db	#-127,#0x00
   0184 81 00               432 	.db	#-127,#0x00
   0186 81 00               433 	.db	#-127,#0x00
   0188 81 00               434 	.db	#-127,#0x00
   018A 81 00               435 	.db	#-127,#0x00
   018C 81 00               436 	.db	#-127,#0x00
   018E 81 00               437 	.db	#-127,#0x00
   0190 81 00               438 	.db	#-127,#0x00
   0192 81 00               439 	.db	#-127,#0x00
   0194 81 00               440 	.db	#-127,#0x00
   0196 81 00               441 	.db	#-127,#0x00
   0198 81 00               442 	.db	#-127,#0x00
   019A 81 00               443 	.db	#-127,#0x00
   019C 81 00               444 	.db	#-127,#0x00
   019E 81 00               445 	.db	#-127,#0x00
   01A0 81 00               446 	.db	#-127,#0x00
   01A2 81 00               447 	.db	#-127,#0x00
   01A4 81 00               448 	.db	#-127,#0x00
   01A6 81 00               449 	.db	#-127,#0x00
   01A8 81 00               450 	.db	#-127,#0x00
   01AA 81 00               451 	.db	#-127,#0x00
   01AC 81 00               452 	.db	#-127,#0x00
   01AE 81 00               453 	.db	#-127,#0x00
   01B0 81 00               454 	.db	#-127,#0x00
   01B2 81 00               455 	.db	#-127,#0x00
   01B4 81 00               456 	.db	#-127,#0x00
   01B6 81 00               457 	.db	#-127,#0x00
   01B8 81 00               458 	.db	#-127,#0x00
   01BA 81 00               459 	.db	#-127,#0x00
   01BC 81 00               460 	.db	#-127,#0x00
   01BE 81 00               461 	.db	#-127,#0x00
   01C0 81 00               462 	.db	#-127,#0x00
   01C2 81 00               463 	.db	#-127,#0x00
   01C4 81 00               464 	.db	#-127,#0x00
   01C6 81 00               465 	.db	#-127,#0x00
   01C8 81 00               466 	.db	#-127,#0x00
   01CA 81 00               467 	.db	#-127,#0x00
   01CC 81 00               468 	.db	#-127,#0x00
   01CE 81 00               469 	.db	#-127,#0x00
   01D0 81 00               470 	.db	#-127,#0x00
   01D2 81 00               471 	.db	#-127,#0x00
   01D4 81 00               472 	.db	#-127,#0x00
   01D6 81 00               473 	.db	#-127,#0x00
   01D8 81 00               474 	.db	#-127,#0x00
   01DA 81 00               475 	.db	#-127,#0x00
   01DC 81 00               476 	.db	#-127,#0x00
   01DE 81 00               477 	.db	#-127,#0x00
   01E0 81 00               478 	.db	#-127,#0x00
   01E2 81 00               479 	.db	#-127,#0x00
   01E4 81 00               480 	.db	#-127,#0x00
   01E6 81 00               481 	.db	#-127,#0x00
   01E8 81 00               482 	.db	#-127,#0x00
   01EA 81 00               483 	.db	#-127,#0x00
   01EC 81 00               484 	.db	#-127,#0x00
   01EE 81 00               485 	.db	#-127,#0x00
   01F0 81 00               486 	.db	#-127,#0x00
   01F2 81 00               487 	.db	#-127,#0x00
   01F4 81 00               488 	.db	#-127,#0x00
   01F6 81 00               489 	.db	#-127,#0x00
   01F8 81 00               490 	.db	#-127,#0x00
   01FA 81 00               491 	.db	#-127,#0x00
   01FC 81 00               492 	.db	#-127,#0x00
   01FE 81 00               493 	.db	#-127,#0x00
   0200 81 00               494 	.db	#-127,#0x00
   0202 81 00               495 	.db	#-127,#0x00
   0204 81 00               496 	.db	#-127,#0x00
   0206 81 00               497 	.db	#-127,#0x00
   0208 81 00               498 	.db	#-127,#0x00
   020A 81 00               499 	.db	#-127,#0x00
   020C 81 00               500 	.db	#-127,#0x00
   020E 81 00               501 	.db	#-127,#0x00
   0210 81 00               502 	.db	#-127,#0x00
   0212 81 00               503 	.db	#-127,#0x00
   0214 81 00               504 	.db	#-127,#0x00
   0216 81 00               505 	.db	#-127,#0x00
   0218 81 00               506 	.db	#-127,#0x00
   021A 81 00               507 	.db	#-127,#0x00
   021C 81 00               508 	.db	#-127,#0x00
   021E 81 00               509 	.db	#-127,#0x00
   0220 81 00               510 	.db	#-127,#0x00
   0222 81 00               511 	.db	#-127,#0x00
   0224 81 00               512 	.db	#-127,#0x00
   0226 81 00               513 	.db	#-127,#0x00
   0228 81 00               514 	.db	#-127,#0x00
   022A 81 00               515 	.db	#-127,#0x00
   022C 81 00               516 	.db	#-127,#0x00
   022E 81 00               517 	.db	#-127,#0x00
   0230 81 00               518 	.db	#-127,#0x00
   0232 81 00               519 	.db	#-127,#0x00
   0234 81 00               520 	.db	#-127,#0x00
   0236 81 00               521 	.db	#-127,#0x00
   0238 81 00               522 	.db	#-127,#0x00
   023A 83 00               523 	.db	#-125,#0x00
   023C 00                  524 	.db	0
                            525 ;demo.c:195: volatile int vbicount=0;
   023D FD 21r8As41         526 	ld	iy,#_vbicount
   0241 FD 36 00 00         527 	ld	0 (iy),#0x00
   0245 FD 21r8As41         528 	ld	iy,#_vbicount
   0249 FD 36 01 00         529 	ld	1 (iy),#0x00
                            530 ;demo.c:196: volatile int tick=0;
   024D FD 21r8Cs41         531 	ld	iy,#_tick
   0251 FD 36 00 00         532 	ld	0 (iy),#0x00
   0255 FD 21r8Cs41         533 	ld	iy,#_tick
   0259 FD 36 01 00         534 	ld	1 (iy),#0x00
                            535 ;demo.c:396: uint8_t yofff = 0;
   025D FD 21rA5s41         536 	ld	iy,#_yofff
   0261 FD 36 00 00         537 	ld	0 (iy),#0x00
                            538 ;demo.c:397: uint8_t cc = 0;
   0265 FD 21rA6s41         539 	ld	iy,#_cc
   0269 FD 36 00 00         540 	ld	0 (iy),#0x00
                            541 ;demo.c:398: static int flipper = 0;
   026D FD 21rA7s41         542 	ld	iy,#_flipper
   0271 FD 36 00 00         543 	ld	0 (iy),#0x00
   0275 FD 21rA7s41         544 	ld	iy,#_flipper
   0279 FD 36 01 00         545 	ld	1 (iy),#0x00
                            546 ;demo.c:399: static int ymmmf = 0;
   027D FD 21rA9s41         547 	ld	iy,#_ymmmf
   0281 FD 36 00 00         548 	ld	0 (iy),#0x00
   0285 FD 21rA9s41         549 	ld	iy,#_ymmmf
   0289 FD 36 01 00         550 	ld	1 (iy),#0x00
                            551 ;demo.c:430: char block_init = 0;
   028D FD 21rABs41         552 	ld	iy,#_block_init
   0291 FD 36 00 00         553 	ld	0 (iy),#0x00
                            554 ;demo.c:432: int bsx = 0;
   0295 FD 21rACs41         555 	ld	iy,#_bsx
   0299 FD 36 00 00         556 	ld	0 (iy),#0x00
   029D FD 21rACs41         557 	ld	iy,#_bsx
   02A1 FD 36 01 00         558 	ld	1 (iy),#0x00
                            559 ;demo.c:433: int bsy = 0;
   02A5 FD 21rAEs41         560 	ld	iy,#_bsy
   02A9 FD 36 00 00         561 	ld	0 (iy),#0x00
   02AD FD 21rAEs41         562 	ld	iy,#_bsy
   02B1 FD 36 01 00         563 	ld	1 (iy),#0x00
                            564 ;demo.c:434: int btx = 0;
   02B5 FD 21rB0s41         565 	ld	iy,#_btx
   02B9 FD 36 00 00         566 	ld	0 (iy),#0x00
   02BD FD 21rB0s41         567 	ld	iy,#_btx
   02C1 FD 36 01 00         568 	ld	1 (iy),#0x00
                            569 ;demo.c:435: int bty = 0;
   02C5 FD 21rB2s41         570 	ld	iy,#_bty
   02C9 FD 36 00 00         571 	ld	0 (iy),#0x00
   02CD FD 21rB2s41         572 	ld	iy,#_bty
   02D1 FD 36 01 00         573 	ld	1 (iy),#0x00
                            574 ;demo.c:437: int btab[16] = {0};
   02D5 21rB4s41            575 	ld	hl,#_btab
   02D8 CDr00s00            576 	call	__initrleblock
   02DB E0 00               577 	.db	#-32,#0x00
   02DD 00                  578 	.db	0
                            579 ;demo.c:439: int flof = 0;
   02DE FD 21rD4s41         580 	ld	iy,#_flof
   02E2 FD 36 00 00         581 	ld	0 (iy),#0x00
   02E6 FD 21rD4s41         582 	ld	iy,#_flof
   02EA FD 36 01 00         583 	ld	1 (iy),#0x00
                            584 ;demo.c:488: int linenum = 0;
   02EE FD 21rD6s41         585 	ld	iy,#_linenum
   02F2 FD 36 00 00         586 	ld	0 (iy),#0x00
   02F6 FD 21rD6s41         587 	ld	iy,#_linenum
   02FA FD 36 01 00         588 	ld	1 (iy),#0x00
                            589 ;demo.c:546: uint8_t lx = 0;
   02FE FD 21rD8s41         590 	ld	iy,#_lx
   0302 FD 36 00 00         591 	ld	0 (iy),#0x00
                            592 ;demo.c:547: uint8_t ly = 0;
   0306 FD 21rD9s41         593 	ld	iy,#_ly
   030A FD 36 00 00         594 	ld	0 (iy),#0x00
                            595 ;demo.c:666: int ff = 0;
   030E FD 21rDAs41         596 	ld	iy,#_ff
   0312 FD 36 00 00         597 	ld	0 (iy),#0x00
   0316 FD 21rDAs41         598 	ld	iy,#_ff
   031A FD 36 01 00         599 	ld	1 (iy),#0x00
                            600 ;demo.c:667: int twinited = 0;
   031E FD 21rDCs41         601 	ld	iy,#_twinited
   0322 FD 36 00 00         602 	ld	0 (iy),#0x00
   0326 FD 21rDCs41         603 	ld	iy,#_twinited
   032A FD 36 01 00         604 	ld	1 (iy),#0x00
                            605 ;demo.c:720: int bulbflipper = 1;
   032E FD 21rDEs41         606 	ld	iy,#_bulbflipper
   0332 FD 36 00 01         607 	ld	0 (iy),#0x01
   0336 FD 21rDEs41         608 	ld	iy,#_bulbflipper
   033A FD 36 01 00         609 	ld	1 (iy),#0x00
                            610 ;demo.c:722: int ff1,ff2 = 0;
   033E FD 21rE2s41         611 	ld	iy,#_ff2
   0342 FD 36 00 00         612 	ld	0 (iy),#0x00
   0346 FD 21rE2s41         613 	ld	iy,#_ff2
   034A FD 36 01 00         614 	ld	1 (iy),#0x00
                            615 ;demo.c:723: int ender = 212;
   034E FD 21rE4s41         616 	ld	iy,#_ender
   0352 FD 36 00 D4         617 	ld	0 (iy),#0xD4
   0356 FD 21rE4s41         618 	ld	iy,#_ender
   035A FD 36 01 00         619 	ld	1 (iy),#0x00
                            620 ;demo.c:724: int enderdir = -1;
   035E FD 21rE6s41         621 	ld	iy,#_enderdir
   0362 FD 36 00 FF         622 	ld	0 (iy),#0xFF
   0366 FD 21rE6s41         623 	ld	iy,#_enderdir
   036A FD 36 01 FF         624 	ld	1 (iy),#0xFF
                            625 ;demo.c:725: int sy = 16;
   036E FD 21rE8s41         626 	ld	iy,#_sy
   0372 FD 36 00 10         627 	ld	0 (iy),#0x10
   0376 FD 21rE8s41         628 	ld	iy,#_sy
   037A FD 36 01 00         629 	ld	1 (iy),#0x00
                            630 ;demo.c:781: static int xo = 0;
   037E FD 21rEAs41         631 	ld	iy,#_xo
   0382 FD 36 00 00         632 	ld	0 (iy),#0x00
   0386 FD 21rEAs41         633 	ld	iy,#_xo
   038A FD 36 01 00         634 	ld	1 (iy),#0x00
                            635 ;demo.c:782: static int yo = 0;
   038E FD 21rECs41         636 	ld	iy,#_yo
   0392 FD 36 00 00         637 	ld	0 (iy),#0x00
   0396 FD 21rECs41         638 	ld	iy,#_yo
   039A FD 36 01 00         639 	ld	1 (iy),#0x00
                            640 ;demo.c:783: static int po = 0;
   039E FD 21rEEs41         641 	ld	iy,#_po
   03A2 FD 36 00 00         642 	ld	0 (iy),#0x00
   03A6 FD 21rEEs41         643 	ld	iy,#_po
   03AA FD 36 01 00         644 	ld	1 (iy),#0x00
                            645 ;demo.c:784: static int frames = 0;
   03AE FD 21rF0s41         646 	ld	iy,#_frames
   03B2 FD 36 00 00         647 	ld	0 (iy),#0x00
   03B6 FD 21rF0s41         648 	ld	iy,#_frames
   03BA FD 36 01 00         649 	ld	1 (iy),#0x00
                            650 ;demo.c:786: int anim_init = 0;
   03BE FD 21rF2s41         651 	ld	iy,#_anim_init
   03C2 FD 36 00 00         652 	ld	0 (iy),#0x00
   03C6 FD 21rF2s41         653 	ld	iy,#_anim_init
   03CA FD 36 01 00         654 	ld	1 (iy),#0x00
                            655 ;demo.c:886: uint8_t boxes_init = 0;
   03CE FD 21rF4s41         656 	ld	iy,#_boxes_init
   03D2 FD 36 00 00         657 	ld	0 (iy),#0x00
                            658 ;demo.c:887: int buffer = 1;
   03D6 FD 21rF5s41         659 	ld	iy,#_buffer
   03DA FD 36 00 01         660 	ld	0 (iy),#0x01
   03DE FD 21rF5s41         661 	ld	iy,#_buffer
   03E2 FD 36 01 00         662 	ld	1 (iy),#0x00
                            663 ;demo.c:888: int prevx = -1;
   03E6 FD 21rF7s41         664 	ld	iy,#_prevx
   03EA FD 36 00 FF         665 	ld	0 (iy),#0xFF
   03EE FD 21rF7s41         666 	ld	iy,#_prevx
   03F2 FD 36 01 FF         667 	ld	1 (iy),#0xFF
                            668 ;demo.c:890: uint8_t boxes_x[5] = {0,36,0,36,0};
   03F6 21rFBs41            669 	ld	hl,#_boxes_x
   03F9 CDr00s00            670 	call	__initrleblock
   03FC 05                  671 	.db	5
   03FD 00 24 00 24 00      672 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   0402 00                  673 	.db	0
                            674 ;demo.c:891: int boxes_y[5] = {768,768,768+36,768+36,0};
   0403 21r00s42            675 	ld	hl,#_boxes_y
   0406 CDr00s00            676 	call	__initrleblock
   0409 0A                  677 	.db	10
   040A 00 03 00 03 24 03   678 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   0412 00 00               679 	.db	0x00, 0x00
   0414 00                  680 	.db	0
                            681 ;demo.c:892: uint8_t boxi = 0;
   0415 FD 21r0As42         682 	ld	iy,#_boxi
   0419 FD 36 00 00         683 	ld	0 (iy),#0x00
                            684 ;demo.c:893: int bx = 220;
   041D FD 21r0Bs42         685 	ld	iy,#_bx
   0421 FD 36 00 DC         686 	ld	0 (iy),#0xDC
   0425 FD 21r0Bs42         687 	ld	iy,#_bx
   0429 FD 36 01 00         688 	ld	1 (iy),#0x00
                            689 ;demo.c:894: int by = 84;
   042D FD 21r0Ds42         690 	ld	iy,#_by
   0431 FD 36 00 54         691 	ld	0 (iy),#0x54
   0435 FD 21r0Ds42         692 	ld	iy,#_by
   0439 FD 36 01 00         693 	ld	1 (iy),#0x00
                            694 ;demo.c:912: int bt = 0;
   043D FD 21r0Fs42         695 	ld	iy,#_bt
   0441 FD 36 00 00         696 	ld	0 (iy),#0x00
   0445 FD 21r0Fs42         697 	ld	iy,#_bt
   0449 FD 36 01 00         698 	ld	1 (iy),#0x00
                            699 ;demo.c:913: int bo = 0;
   044D FD 21r11s42         700 	ld	iy,#_bo
   0451 FD 36 00 00         701 	ld	0 (iy),#0x00
   0455 FD 21r11s42         702 	ld	iy,#_bo
   0459 FD 36 01 00         703 	ld	1 (iy),#0x00
                            704 ;demo.c:915: int bonc = 0;
   045D FD 21r13s42         705 	ld	iy,#_bonc
   0461 FD 36 00 00         706 	ld	0 (iy),#0x00
   0465 FD 21r13s42         707 	ld	iy,#_bonc
   0469 FD 36 01 00         708 	ld	1 (iy),#0x00
                            709 ;demo.c:916: int pbx = 0;
   046D FD 21r15s42         710 	ld	iy,#_pbx
   0471 FD 36 00 00         711 	ld	0 (iy),#0x00
   0475 FD 21r15s42         712 	ld	iy,#_pbx
   0479 FD 36 01 00         713 	ld	1 (iy),#0x00
                            714 ;demo.c:917: int pbt = 0;
   047D FD 21r17s42         715 	ld	iy,#_pbt
   0481 FD 36 00 00         716 	ld	0 (iy),#0x00
   0485 FD 21r17s42         717 	ld	iy,#_pbt
   0489 FD 36 01 00         718 	ld	1 (iy),#0x00
                            719 ;demo.c:919: int boxes_of[5] = {0,0,6,0,0};
   048D 21r19s42            720 	ld	hl,#_boxes_of
   0490 CDr00s00            721 	call	__initrleblock
   0493 05                  722 	.db	5
   0494 00 00 00 00 06      723 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0499 FB 00               724 	.db	#-5,#0x00
   049B 00                  725 	.db	0
                            726 ;demo.c:920: uint8_t prevbox_of = 0;
   049C FD 21r23s42         727 	ld	iy,#_prevbox_of
   04A0 FD 36 00 00         728 	ld	0 (iy),#0x00
                            729 ;demo.c:1035: uint8_t initwave = 0;
   04A4 FD 21r24s42         730 	ld	iy,#_initwave
   04A8 FD 36 00 00         731 	ld	0 (iy),#0x00
                            732 ;demo.c:1036: int buf = -1;
   04AC FD 21r25s42         733 	ld	iy,#_buf
   04B0 FD 36 00 FF         734 	ld	0 (iy),#0xFF
   04B4 FD 21r25s42         735 	ld	iy,#_buf
   04B8 FD 36 01 FF         736 	ld	1 (iy),#0xFF
                            737 ;demo.c:1037: int ffa = 0;
   04BC FD 21r27s42         738 	ld	iy,#_ffa
   04C0 FD 36 00 00         739 	ld	0 (iy),#0x00
   04C4 FD 21r27s42         740 	ld	iy,#_ffa
   04C8 FD 36 01 00         741 	ld	1 (iy),#0x00
                            742 ;demo.c:1157: uint8_t tri_inited = 0;
   04CC FD 21r29s42         743 	ld	iy,#_tri_inited
   04D0 FD 36 00 00         744 	ld	0 (iy),#0x00
                            745 ;demo.c:1172: int tilei = 0;
   04D4 FD 21r2As42         746 	ld	iy,#_tilei
   04D8 FD 36 00 00         747 	ld	0 (iy),#0x00
   04DC FD 21r2As42         748 	ld	iy,#_tilei
   04E0 FD 36 01 00         749 	ld	1 (iy),#0x00
                            750 ;demo.c:1173: int tilex = 0;
   04E4 FD 21r2Cs42         751 	ld	iy,#_tilex
   04E8 FD 36 00 00         752 	ld	0 (iy),#0x00
   04EC FD 21r2Cs42         753 	ld	iy,#_tilex
   04F0 FD 36 01 00         754 	ld	1 (iy),#0x00
                            755 ;demo.c:1174: int tiley = 0;
   04F4 FD 21r2Es42         756 	ld	iy,#_tiley
   04F8 FD 36 00 00         757 	ld	0 (iy),#0x00
   04FC FD 21r2Es42         758 	ld	iy,#_tiley
   0500 FD 36 01 00         759 	ld	1 (iy),#0x00
                            760 ;demo.c:1175: uint8_t tiletick = 0;
   0504 FD 21r30s42         761 	ld	iy,#_tiletick
   0508 FD 36 00 00         762 	ld	0 (iy),#0x00
                            763 ;demo.c:1205: char tripal[9] = {
   050C 21r31s42            764 	ld	hl,#_tripal
   050F CDr00s00            765 	call	__initrleblock
   0512 09                  766 	.db	9
   0513 02 02 01 01 02 03   767 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   051B 02                  768 	.db	0x02
   051C 00                  769 	.db	0
                            770 ;demo.c:1211: uint8_t tripaltick = 0;
   051D FD 21r3As42         771 	ld	iy,#_tripaltick
   0521 FD 36 00 00         772 	ld	0 (iy),#0x00
                            773 ;demo.c:1212: uint8_t tripaltick2 = 0;
   0525 FD 21r3Bs42         774 	ld	iy,#_tripaltick2
   0529 FD 36 00 00         775 	ld	0 (iy),#0x00
                            776 ;demo.c:1214: int triframes = 0;
   052D FD 21r3Cs42         777 	ld	iy,#_triframes
   0531 FD 36 00 00         778 	ld	0 (iy),#0x00
   0535 FD 21r3Cs42         779 	ld	iy,#_triframes
   0539 FD 36 01 00         780 	ld	1 (iy),#0x00
                            781 ;demo.c:1341: int powatick = 0;
   053D FD 21r3Es42         782 	ld	iy,#_powatick
   0541 FD 36 00 00         783 	ld	0 (iy),#0x00
   0545 FD 21r3Es42         784 	ld	iy,#_powatick
   0549 FD 36 01 00         785 	ld	1 (iy),#0x00
                            786 ;demo.c:1342: int powa = 0;
   054D FD 21r40s42         787 	ld	iy,#_powa
   0551 FD 36 00 00         788 	ld	0 (iy),#0x00
   0555 FD 21r40s42         789 	ld	iy,#_powa
   0559 FD 36 01 00         790 	ld	1 (iy),#0x00
                            791 ;demo.c:1343: uint8_t onceclear = 255;
   055D FD 21r42s42         792 	ld	iy,#_onceclear
   0561 FD 36 00 FF         793 	ld	0 (iy),#0xFF
                            794 ;demo.c:1388: uint8_t initpoints = 0;
   0565 FD 21r43s42         795 	ld	iy,#_initpoints
   0569 FD 36 00 00         796 	ld	0 (iy),#0x00
                            797 ;demo.c:1389: int pointframe = 0;
   056D FD 21r44s42         798 	ld	iy,#_pointframe
   0571 FD 36 00 00         799 	ld	0 (iy),#0x00
   0575 FD 21r44s42         800 	ld	iy,#_pointframe
   0579 FD 36 01 00         801 	ld	1 (iy),#0x00
                            802 ;demo.c:1465: int sceneindex = 0;
   057D FD 21r46s42         803 	ld	iy,#_sceneindex
   0581 FD 36 00 00         804 	ld	0 (iy),#0x00
   0585 FD 21r46s42         805 	ld	iy,#_sceneindex
   0589 FD 36 01 00         806 	ld	1 (iy),#0x00
                            807 ;demo.c:1466: int timeindex = 0;
   058D FD 21r48s42         808 	ld	iy,#_timeindex
   0591 FD 36 00 00         809 	ld	0 (iy),#0x00
   0595 FD 21r48s42         810 	ld	iy,#_timeindex
   0599 FD 36 01 00         811 	ld	1 (iy),#0x00
                            812 ;demo.c:1468: void (*scenepointers[8])() = {
   059D 21r4As42            813 	ld	hl,#_scenepointers
   05A0 36rDC               814 	ld	(hl),#<_logoeffu
   05A2 23                  815 	inc	hl
   05A3 36s2F               816 	ld	(hl),#>_logoeffu
   05A5 01r4Cs42            817 	ld	bc,#_scenepointers + 2
   05A8 69                  818 	ld	l,c
   05A9 60                  819 	ld	h,b
   05AA 36r8B               820 	ld	(hl),#<_bulbs
   05AC 23                  821 	inc	hl
   05AD 36s18               822 	ld	(hl),#>_bulbs
   05AF 21r4Es42            823 	ld	hl, #_scenepointers + 4
   05B2 36r0E               824 	ld	(hl),#<_twister
   05B4 23                  825 	inc	hl
   05B5 36s17               826 	ld	(hl),#>_twister
   05B7 01r50s42            827 	ld	bc,#_scenepointers + 6
   05BA 69                  828 	ld	l,c
   05BB 60                  829 	ld	h,b
   05BC 36r3E               830 	ld	(hl),#<_boxes
   05BE 23                  831 	inc	hl
   05BF 36s1E               832 	ld	(hl),#>_boxes
   05C1 21r52s42            833 	ld	hl, #_scenepointers + 8
   05C4 36r96               834 	ld	(hl),#<_thewave
   05C6 23                  835 	inc	hl
   05C7 36s22               836 	ld	(hl),#>_thewave
   05C9 21r54s42            837 	ld	hl, #_scenepointers + 10
   05CC 36rAE               838 	ld	(hl),#<_tritiles
   05CE 23                  839 	inc	hl
   05CF 36s2A               840 	ld	(hl),#>_tritiles
   05D1 21r56s42            841 	ld	hl, #_scenepointers + 12
   05D4 36r82               842 	ld	(hl),#<_points
   05D6 23                  843 	inc	hl
   05D7 36s31               844 	ld	(hl),#>_points
   05D9 01r58s42            845 	ld	bc,#_scenepointers + 14
   05DC 69                  846 	ld	l,c
   05DD 60                  847 	ld	h,b
   05DE 36rE9               848 	ld	(hl),#<_animplay
   05E0 23                  849 	inc	hl
   05E1 36s1A               850 	ld	(hl),#>_animplay
                            851 ;demo.c:1479: int scenetimings[16] = {
   05E3 21r5As42            852 	ld	hl,#_scenetimings
   05E6 CDr00s00            853 	call	__initrleblock
   05E9 20                  854 	.db	32
   05EA 00 00 FA 00 FA 00   855 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x4C, 0x04
        4C 04
   05F2 4C 04 98 08 98 08   856 	.db	0x4C, 0x04, 0x98, 0x08, 0x98, 0x08, 0x74, 0x0E
        74 0E
   05FA 74 0E 88 13 88 13   857 	.db	0x74, 0x0E, 0x88, 0x13, 0x88, 0x13, 0x40, 0x1F
        40 1F
   0602 40 1F 28 23 28 23   858 	.db	0x40, 0x1F, 0x28, 0x23, 0x28, 0x23, 0x98, 0x3A
        98 3A
   060A 00                  859 	.db	0
                            860 ;--------------------------------------------------------
                            861 ; Home
                            862 ;--------------------------------------------------------
                            863 	.area _HOME
                            864 	.area _HOME
                            865 ;--------------------------------------------------------
                            866 ; code
                            867 ;--------------------------------------------------------
                            868 	.area _CODE
                            869 ;demo.c:200: int isNthBitSet (unsigned char c, int n) {
                            870 ;	---------------------------------
                            871 ; Function isNthBitSet
                            872 ; ---------------------------------
   0000                     873 _isNthBitSet_start::
   0000                     874 _isNthBitSet:
   0000 DD E5               875 	push	ix
   0002 DD 21 00 00         876 	ld	ix,#0
   0006 DD 39               877 	add	ix,sp
                            878 ;demo.c:202: return ((c & mask[n]) != 0);
   0008 3Er9D               879 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            880 	add	a,5 (ix)
   000D 4F                  881 	ld	c,a
   000E 3Es41               882 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            883 	adc	a,6 (ix)
   0013 47                  884 	ld	b,a
   0014 0A                  885 	ld	a,(bc)
   0015 DD A6 04            886 	and	a,4 (ix)
   0018 20 04               887 	jr	NZ,00103$
   001A 3E 01               888 	ld	a,#0x01
   001C 18 01               889 	jr	00104$
   001E                     890 00103$:
   001E AF                  891 	xor	a,a
   001F                     892 00104$:
   001F B7                  893 	or	a,a
   0020 D6 01               894 	sub	a,#0x01
   0022 3E 00               895 	ld	a,#0x00
   0024 17                  896 	rla
   0025 4F                  897 	ld	c,a
   0026 69                  898 	ld	l,c
   0027 26 00               899 	ld	h,#0x00
   0029 DD E1               900 	pop	ix
   002B C9                  901 	ret
   002C                     902 _isNthBitSet_end::
   002C                     903 _sintabx:
   002C 78                  904 	.db #0x78
   002D 7A                  905 	.db #0x7A
   002E 7D                  906 	.db #0x7D
   002F 80                  907 	.db #0x80
   0030 83                  908 	.db #0x83
   0031 86                  909 	.db #0x86
   0032 89                  910 	.db #0x89
   0033 8C                  911 	.db #0x8C
   0034 8F                  912 	.db #0x8F
   0035 92                  913 	.db #0x92
   0036 95                  914 	.db #0x95
   0037 98                  915 	.db #0x98
   0038 9A                  916 	.db #0x9A
   0039 9D                  917 	.db #0x9D
   003A A0                  918 	.db #0xA0
   003B A3                  919 	.db #0xA3
   003C A5                  920 	.db #0xA5
   003D A8                  921 	.db #0xA8
   003E AB                  922 	.db #0xAB
   003F AD                  923 	.db #0xAD
   0040 B0                  924 	.db #0xB0
   0041 B3                  925 	.db #0xB3
   0042 B5                  926 	.db #0xB5
   0043 B8                  927 	.db #0xB8
   0044 BA                  928 	.db #0xBA
   0045 BD                  929 	.db #0xBD
   0046 BF                  930 	.db #0xBF
   0047 C1                  931 	.db #0xC1
   0048 C4                  932 	.db #0xC4
   0049 C6                  933 	.db #0xC6
   004A C8                  934 	.db #0xC8
   004B CA                  935 	.db #0xCA
   004C CC                  936 	.db #0xCC
   004D CE                  937 	.db #0xCE
   004E D0                  938 	.db #0xD0
   004F D2                  939 	.db #0xD2
   0050 D4                  940 	.db #0xD4
   0051 D6                  941 	.db #0xD6
   0052 D8                  942 	.db #0xD8
   0053 DA                  943 	.db #0xDA
   0054 DB                  944 	.db #0xDB
   0055 DD                  945 	.db #0xDD
   0056 DE                  946 	.db #0xDE
   0057 E0                  947 	.db #0xE0
   0058 E1                  948 	.db #0xE1
   0059 E3                  949 	.db #0xE3
   005A E4                  950 	.db #0xE4
   005B E5                  951 	.db #0xE5
   005C E6                  952 	.db #0xE6
   005D E7                  953 	.db #0xE7
   005E E8                  954 	.db #0xE8
   005F E9                  955 	.db #0xE9
   0060 EA                  956 	.db #0xEA
   0061 EB                  957 	.db #0xEB
   0062 EC                  958 	.db #0xEC
   0063 ED                  959 	.db #0xED
   0064 ED                  960 	.db #0xED
   0065 EE                  961 	.db #0xEE
   0066 EE                  962 	.db #0xEE
   0067 EF                  963 	.db #0xEF
   0068 EF                  964 	.db #0xEF
   0069 EF                  965 	.db #0xEF
   006A EF                  966 	.db #0xEF
   006B EF                  967 	.db #0xEF
   006C F0                  968 	.db #0xF0
   006D EF                  969 	.db #0xEF
   006E EF                  970 	.db #0xEF
   006F EF                  971 	.db #0xEF
   0070 EF                  972 	.db #0xEF
   0071 EF                  973 	.db #0xEF
   0072 EE                  974 	.db #0xEE
   0073 EE                  975 	.db #0xEE
   0074 ED                  976 	.db #0xED
   0075 ED                  977 	.db #0xED
   0076 EC                  978 	.db #0xEC
   0077 EB                  979 	.db #0xEB
   0078 EA                  980 	.db #0xEA
   0079 E9                  981 	.db #0xE9
   007A E8                  982 	.db #0xE8
   007B E7                  983 	.db #0xE7
   007C E6                  984 	.db #0xE6
   007D E5                  985 	.db #0xE5
   007E E4                  986 	.db #0xE4
   007F E3                  987 	.db #0xE3
   0080 E1                  988 	.db #0xE1
   0081 E0                  989 	.db #0xE0
   0082 DE                  990 	.db #0xDE
   0083 DD                  991 	.db #0xDD
   0084 DB                  992 	.db #0xDB
   0085 DA                  993 	.db #0xDA
   0086 D8                  994 	.db #0xD8
   0087 D6                  995 	.db #0xD6
   0088 D4                  996 	.db #0xD4
   0089 D2                  997 	.db #0xD2
   008A D0                  998 	.db #0xD0
   008B CE                  999 	.db #0xCE
   008C CC                 1000 	.db #0xCC
   008D CA                 1001 	.db #0xCA
   008E C8                 1002 	.db #0xC8
   008F C6                 1003 	.db #0xC6
   0090 C4                 1004 	.db #0xC4
   0091 C1                 1005 	.db #0xC1
   0092 BF                 1006 	.db #0xBF
   0093 BD                 1007 	.db #0xBD
   0094 BA                 1008 	.db #0xBA
   0095 B8                 1009 	.db #0xB8
   0096 B5                 1010 	.db #0xB5
   0097 B3                 1011 	.db #0xB3
   0098 B0                 1012 	.db #0xB0
   0099 AD                 1013 	.db #0xAD
   009A AB                 1014 	.db #0xAB
   009B A8                 1015 	.db #0xA8
   009C A5                 1016 	.db #0xA5
   009D A3                 1017 	.db #0xA3
   009E A0                 1018 	.db #0xA0
   009F 9D                 1019 	.db #0x9D
   00A0 9A                 1020 	.db #0x9A
   00A1 98                 1021 	.db #0x98
   00A2 95                 1022 	.db #0x95
   00A3 92                 1023 	.db #0x92
   00A4 8F                 1024 	.db #0x8F
   00A5 8C                 1025 	.db #0x8C
   00A6 89                 1026 	.db #0x89
   00A7 86                 1027 	.db #0x86
   00A8 83                 1028 	.db #0x83
   00A9 80                 1029 	.db #0x80
   00AA 7D                 1030 	.db #0x7D
   00AB 7A                 1031 	.db #0x7A
   00AC 78                 1032 	.db #0x78
   00AD 75                 1033 	.db #0x75
   00AE 72                 1034 	.db #0x72
   00AF 6F                 1035 	.db #0x6F
   00B0 6C                 1036 	.db #0x6C
   00B1 69                 1037 	.db #0x69
   00B2 66                 1038 	.db #0x66
   00B3 63                 1039 	.db #0x63
   00B4 60                 1040 	.db #0x60
   00B5 5D                 1041 	.db #0x5D
   00B6 5A                 1042 	.db #0x5A
   00B7 57                 1043 	.db #0x57
   00B8 55                 1044 	.db #0x55
   00B9 52                 1045 	.db #0x52
   00BA 4F                 1046 	.db #0x4F
   00BB 4C                 1047 	.db #0x4C
   00BC 4A                 1048 	.db #0x4A
   00BD 47                 1049 	.db #0x47
   00BE 44                 1050 	.db #0x44
   00BF 42                 1051 	.db #0x42
   00C0 3F                 1052 	.db #0x3F
   00C1 3C                 1053 	.db #0x3C
   00C2 3A                 1054 	.db #0x3A
   00C3 37                 1055 	.db #0x37
   00C4 35                 1056 	.db #0x35
   00C5 32                 1057 	.db #0x32
   00C6 30                 1058 	.db #0x30
   00C7 2E                 1059 	.db #0x2E
   00C8 2B                 1060 	.db #0x2B
   00C9 29                 1061 	.db #0x29
   00CA 27                 1062 	.db #0x27
   00CB 25                 1063 	.db #0x25
   00CC 23                 1064 	.db #0x23
   00CD 21                 1065 	.db #0x21
   00CE 1F                 1066 	.db #0x1F
   00CF 1D                 1067 	.db #0x1D
   00D0 1B                 1068 	.db #0x1B
   00D1 19                 1069 	.db #0x19
   00D2 17                 1070 	.db #0x17
   00D3 15                 1071 	.db #0x15
   00D4 14                 1072 	.db #0x14
   00D5 12                 1073 	.db #0x12
   00D6 11                 1074 	.db #0x11
   00D7 0F                 1075 	.db #0x0F
   00D8 0E                 1076 	.db #0x0E
   00D9 0C                 1077 	.db #0x0C
   00DA 0B                 1078 	.db #0x0B
   00DB 0A                 1079 	.db #0x0A
   00DC 09                 1080 	.db #0x09
   00DD 08                 1081 	.db #0x08
   00DE 07                 1082 	.db #0x07
   00DF 06                 1083 	.db #0x06
   00E0 05                 1084 	.db #0x05
   00E1 04                 1085 	.db #0x04
   00E2 03                 1086 	.db #0x03
   00E3 02                 1087 	.db #0x02
   00E4 02                 1088 	.db #0x02
   00E5 01                 1089 	.db #0x01
   00E6 01                 1090 	.db #0x01
   00E7 00                 1091 	.db #0x00
   00E8 00                 1092 	.db #0x00
   00E9 00                 1093 	.db #0x00
   00EA 00                 1094 	.db #0x00
   00EB 00                 1095 	.db #0x00
   00EC 00                 1096 	.db #0x00
   00ED 00                 1097 	.db #0x00
   00EE 00                 1098 	.db #0x00
   00EF 00                 1099 	.db #0x00
   00F0 00                 1100 	.db #0x00
   00F1 00                 1101 	.db #0x00
   00F2 01                 1102 	.db #0x01
   00F3 01                 1103 	.db #0x01
   00F4 02                 1104 	.db #0x02
   00F5 02                 1105 	.db #0x02
   00F6 03                 1106 	.db #0x03
   00F7 04                 1107 	.db #0x04
   00F8 05                 1108 	.db #0x05
   00F9 06                 1109 	.db #0x06
   00FA 07                 1110 	.db #0x07
   00FB 08                 1111 	.db #0x08
   00FC 09                 1112 	.db #0x09
   00FD 0A                 1113 	.db #0x0A
   00FE 0B                 1114 	.db #0x0B
   00FF 0C                 1115 	.db #0x0C
   0100 0E                 1116 	.db #0x0E
   0101 0F                 1117 	.db #0x0F
   0102 11                 1118 	.db #0x11
   0103 12                 1119 	.db #0x12
   0104 14                 1120 	.db #0x14
   0105 15                 1121 	.db #0x15
   0106 17                 1122 	.db #0x17
   0107 19                 1123 	.db #0x19
   0108 1B                 1124 	.db #0x1B
   0109 1D                 1125 	.db #0x1D
   010A 1F                 1126 	.db #0x1F
   010B 21                 1127 	.db #0x21
   010C 23                 1128 	.db #0x23
   010D 25                 1129 	.db #0x25
   010E 27                 1130 	.db #0x27
   010F 29                 1131 	.db #0x29
   0110 2B                 1132 	.db #0x2B
   0111 2E                 1133 	.db #0x2E
   0112 30                 1134 	.db #0x30
   0113 32                 1135 	.db #0x32
   0114 35                 1136 	.db #0x35
   0115 37                 1137 	.db #0x37
   0116 3A                 1138 	.db #0x3A
   0117 3C                 1139 	.db #0x3C
   0118 3F                 1140 	.db #0x3F
   0119 42                 1141 	.db #0x42
   011A 44                 1142 	.db #0x44
   011B 47                 1143 	.db #0x47
   011C 4A                 1144 	.db #0x4A
   011D 4C                 1145 	.db #0x4C
   011E 4F                 1146 	.db #0x4F
   011F 52                 1147 	.db #0x52
   0120 55                 1148 	.db #0x55
   0121 57                 1149 	.db #0x57
   0122 5A                 1150 	.db #0x5A
   0123 5D                 1151 	.db #0x5D
   0124 60                 1152 	.db #0x60
   0125 63                 1153 	.db #0x63
   0126 66                 1154 	.db #0x66
   0127 69                 1155 	.db #0x69
   0128 6C                 1156 	.db #0x6C
   0129 6F                 1157 	.db #0x6F
   012A 72                 1158 	.db #0x72
   012B 75                 1159 	.db #0x75
   012C                    1160 _tri_center:
   012C 08                 1161 	.db #0x08
   012D 0A                 1162 	.db #0x0A
   012E 12                 1163 	.db #0x12
   012F 10                 1164 	.db #0x10
   0130 00                 1165 	.db #0x00
   0131 02                 1166 	.db #0x02
   0132 08                 1167 	.db #0x08
   0133 0A                 1168 	.db #0x0A
   0134 0B                 1169 	.db #0x0B
   0135 09                 1170 	.db #0x09
   0136 03                 1171 	.db #0x03
   0137 01                 1172 	.db #0x01
   0138 11                 1173 	.db #0x11
   0139 13                 1174 	.db #0x13
   013A 0B                 1175 	.db #0x0B
   013B 09                 1176 	.db #0x09
   013C 0A                 1177 	.db #0x0A
   013D 12                 1178 	.db #0x12
   013E 10                 1179 	.db #0x10
   013F 00                 1180 	.db #0x00
   0140 02                 1181 	.db #0x02
   0141 08                 1182 	.db #0x08
   0142 0A                 1183 	.db #0x0A
   0143 12                 1184 	.db #0x12
   0144 13                 1185 	.db #0x13
   0145 0B                 1186 	.db #0x0B
   0146 09                 1187 	.db #0x09
   0147 03                 1188 	.db #0x03
   0148 01                 1189 	.db #0x01
   0149 11                 1190 	.db #0x11
   014A 13                 1191 	.db #0x13
   014B 0B                 1192 	.db #0x0B
   014C 12                 1193 	.db #0x12
   014D 10                 1194 	.db #0x10
   014E 00                 1195 	.db #0x00
   014F 02                 1196 	.db #0x02
   0150 08                 1197 	.db #0x08
   0151 0A                 1198 	.db #0x0A
   0152 12                 1199 	.db #0x12
   0153 10                 1200 	.db #0x10
   0154 11                 1201 	.db #0x11
   0155 13                 1202 	.db #0x13
   0156 0B                 1203 	.db #0x0B
   0157 09                 1204 	.db #0x09
   0158 03                 1205 	.db #0x03
   0159 01                 1206 	.db #0x01
   015A 11                 1207 	.db #0x11
   015B 13                 1208 	.db #0x13
   015C 10                 1209 	.db #0x10
   015D 00                 1210 	.db #0x00
   015E 02                 1211 	.db #0x02
   015F 08                 1212 	.db #0x08
   0160 0A                 1213 	.db #0x0A
   0161 12                 1214 	.db #0x12
   0162 10                 1215 	.db #0x10
   0163 00                 1216 	.db #0x00
   0164 01                 1217 	.db #0x01
   0165 11                 1218 	.db #0x11
   0166 13                 1219 	.db #0x13
   0167 0B                 1220 	.db #0x0B
   0168 09                 1221 	.db #0x09
   0169 03                 1222 	.db #0x03
   016A 01                 1223 	.db #0x01
   016B 11                 1224 	.db #0x11
   016C 00                 1225 	.db #0x00
   016D 02                 1226 	.db #0x02
   016E 08                 1227 	.db #0x08
   016F 0A                 1228 	.db #0x0A
   0170 12                 1229 	.db #0x12
   0171 10                 1230 	.db #0x10
   0172 00                 1231 	.db #0x00
   0173 02                 1232 	.db #0x02
   0174 03                 1233 	.db #0x03
   0175 01                 1234 	.db #0x01
   0176 11                 1235 	.db #0x11
   0177 13                 1236 	.db #0x13
   0178 0B                 1237 	.db #0x0B
   0179 09                 1238 	.db #0x09
   017A 03                 1239 	.db #0x03
   017B 01                 1240 	.db #0x01
   017C 02                 1241 	.db #0x02
   017D 08                 1242 	.db #0x08
   017E 0A                 1243 	.db #0x0A
   017F 12                 1244 	.db #0x12
   0180 10                 1245 	.db #0x10
   0181 00                 1246 	.db #0x00
   0182 02                 1247 	.db #0x02
   0183 08                 1248 	.db #0x08
   0184 09                 1249 	.db #0x09
   0185 03                 1250 	.db #0x03
   0186 01                 1251 	.db #0x01
   0187 11                 1252 	.db #0x11
   0188 13                 1253 	.db #0x13
   0189 0B                 1254 	.db #0x0B
   018A 09                 1255 	.db #0x09
   018B 03                 1256 	.db #0x03
   018C 01                 1257 	.db #0x01
   018D 0B                 1258 	.db #0x0B
   018E 09                 1259 	.db #0x09
   018F 11                 1260 	.db #0x11
   0190 13                 1261 	.db #0x13
   0191 03                 1262 	.db #0x03
   0192 01                 1263 	.db #0x01
   0193 0B                 1264 	.db #0x0B
   0194 0A                 1265 	.db #0x0A
   0195 00                 1266 	.db #0x00
   0196 02                 1267 	.db #0x02
   0197 12                 1268 	.db #0x12
   0198 10                 1269 	.db #0x10
   0199 08                 1270 	.db #0x08
   019A 0A                 1271 	.db #0x0A
   019B 00                 1272 	.db #0x00
   019C 03                 1273 	.db #0x03
   019D 01                 1274 	.db #0x01
   019E 0B                 1275 	.db #0x0B
   019F 09                 1276 	.db #0x09
   01A0 11                 1277 	.db #0x11
   01A1 13                 1278 	.db #0x13
   01A2 03                 1279 	.db #0x03
   01A3 01                 1280 	.db #0x01
   01A4 00                 1281 	.db #0x00
   01A5 02                 1282 	.db #0x02
   01A6 12                 1283 	.db #0x12
   01A7 10                 1284 	.db #0x10
   01A8 08                 1285 	.db #0x08
   01A9 0A                 1286 	.db #0x0A
   01AA 00                 1287 	.db #0x00
   01AB 02                 1288 	.db #0x02
   01AC 13                 1289 	.db #0x13
   01AD 03                 1290 	.db #0x03
   01AE 01                 1291 	.db #0x01
   01AF 0B                 1292 	.db #0x0B
   01B0 09                 1293 	.db #0x09
   01B1 11                 1294 	.db #0x11
   01B2 13                 1295 	.db #0x13
   01B3 03                 1296 	.db #0x03
   01B4 02                 1297 	.db #0x02
   01B5 12                 1298 	.db #0x12
   01B6 10                 1299 	.db #0x10
   01B7 08                 1300 	.db #0x08
   01B8 0A                 1301 	.db #0x0A
   01B9 00                 1302 	.db #0x00
   01BA 02                 1303 	.db #0x02
   01BB 12                 1304 	.db #0x12
   01BC 11                 1305 	.db #0x11
   01BD 13                 1306 	.db #0x13
   01BE 03                 1307 	.db #0x03
   01BF 01                 1308 	.db #0x01
   01C0 0B                 1309 	.db #0x0B
   01C1 09                 1310 	.db #0x09
   01C2 11                 1311 	.db #0x11
   01C3 13                 1312 	.db #0x13
   01C4 12                 1313 	.db #0x12
   01C5 10                 1314 	.db #0x10
   01C6 08                 1315 	.db #0x08
   01C7 0A                 1316 	.db #0x0A
   01C8 00                 1317 	.db #0x00
   01C9 02                 1318 	.db #0x02
   01CA 12                 1319 	.db #0x12
   01CB 10                 1320 	.db #0x10
   01CC 09                 1321 	.db #0x09
   01CD 11                 1322 	.db #0x11
   01CE 13                 1323 	.db #0x13
   01CF 03                 1324 	.db #0x03
   01D0 01                 1325 	.db #0x01
   01D1 0B                 1326 	.db #0x0B
   01D2 09                 1327 	.db #0x09
   01D3 11                 1328 	.db #0x11
   01D4 10                 1329 	.db #0x10
   01D5 08                 1330 	.db #0x08
   01D6 0A                 1331 	.db #0x0A
   01D7 00                 1332 	.db #0x00
   01D8 02                 1333 	.db #0x02
   01D9 12                 1334 	.db #0x12
   01DA 10                 1335 	.db #0x10
   01DB 08                 1336 	.db #0x08
   01DC 0B                 1337 	.db #0x0B
   01DD 09                 1338 	.db #0x09
   01DE 11                 1339 	.db #0x11
   01DF 13                 1340 	.db #0x13
   01E0 03                 1341 	.db #0x03
   01E1 01                 1342 	.db #0x01
   01E2 0B                 1343 	.db #0x0B
   01E3 09                 1344 	.db #0x09
   01E4 08                 1345 	.db #0x08
   01E5 0A                 1346 	.db #0x0A
   01E6 00                 1347 	.db #0x00
   01E7 02                 1348 	.db #0x02
   01E8 12                 1349 	.db #0x12
   01E9 10                 1350 	.db #0x10
   01EA 08                 1351 	.db #0x08
   01EB 0A                 1352 	.db #0x0A
   01EC                    1353 _tri_up:
   01EC 0A                 1354 	.db #0x0A
   01ED 12                 1355 	.db #0x12
   01EE 10                 1356 	.db #0x10
   01EF 00                 1357 	.db #0x00
   01F0 02                 1358 	.db #0x02
   01F1 08                 1359 	.db #0x08
   01F2 0A                 1360 	.db #0x0A
   01F3 12                 1361 	.db #0x12
   01F4 13                 1362 	.db #0x13
   01F5 0B                 1363 	.db #0x0B
   01F6 09                 1364 	.db #0x09
   01F7 03                 1365 	.db #0x03
   01F8 01                 1366 	.db #0x01
   01F9 11                 1367 	.db #0x11
   01FA 13                 1368 	.db #0x13
   01FB 0B                 1369 	.db #0x0B
   01FC 12                 1370 	.db #0x12
   01FD 10                 1371 	.db #0x10
   01FE 00                 1372 	.db #0x00
   01FF 02                 1373 	.db #0x02
   0200 08                 1374 	.db #0x08
   0201 0A                 1375 	.db #0x0A
   0202 12                 1376 	.db #0x12
   0203 10                 1377 	.db #0x10
   0204 11                 1378 	.db #0x11
   0205 13                 1379 	.db #0x13
   0206 0B                 1380 	.db #0x0B
   0207 09                 1381 	.db #0x09
   0208 03                 1382 	.db #0x03
   0209 01                 1383 	.db #0x01
   020A 11                 1384 	.db #0x11
   020B 13                 1385 	.db #0x13
   020C 10                 1386 	.db #0x10
   020D 00                 1387 	.db #0x00
   020E 02                 1388 	.db #0x02
   020F 08                 1389 	.db #0x08
   0210 0A                 1390 	.db #0x0A
   0211 12                 1391 	.db #0x12
   0212 10                 1392 	.db #0x10
   0213 00                 1393 	.db #0x00
   0214 01                 1394 	.db #0x01
   0215 11                 1395 	.db #0x11
   0216 13                 1396 	.db #0x13
   0217 0B                 1397 	.db #0x0B
   0218 09                 1398 	.db #0x09
   0219 03                 1399 	.db #0x03
   021A 01                 1400 	.db #0x01
   021B 11                 1401 	.db #0x11
   021C 00                 1402 	.db #0x00
   021D 02                 1403 	.db #0x02
   021E 08                 1404 	.db #0x08
   021F 0A                 1405 	.db #0x0A
   0220 12                 1406 	.db #0x12
   0221 10                 1407 	.db #0x10
   0222 00                 1408 	.db #0x00
   0223 02                 1409 	.db #0x02
   0224 03                 1410 	.db #0x03
   0225 01                 1411 	.db #0x01
   0226 11                 1412 	.db #0x11
   0227 13                 1413 	.db #0x13
   0228 0B                 1414 	.db #0x0B
   0229 09                 1415 	.db #0x09
   022A 03                 1416 	.db #0x03
   022B 01                 1417 	.db #0x01
   022C 02                 1418 	.db #0x02
   022D 08                 1419 	.db #0x08
   022E 0A                 1420 	.db #0x0A
   022F 12                 1421 	.db #0x12
   0230 10                 1422 	.db #0x10
   0231 00                 1423 	.db #0x00
   0232 02                 1424 	.db #0x02
   0233 08                 1425 	.db #0x08
   0234 09                 1426 	.db #0x09
   0235 03                 1427 	.db #0x03
   0236 01                 1428 	.db #0x01
   0237 11                 1429 	.db #0x11
   0238 13                 1430 	.db #0x13
   0239 0B                 1431 	.db #0x0B
   023A 09                 1432 	.db #0x09
   023B 03                 1433 	.db #0x03
   023C 08                 1434 	.db #0x08
   023D 0A                 1435 	.db #0x0A
   023E 12                 1436 	.db #0x12
   023F 10                 1437 	.db #0x10
   0240 00                 1438 	.db #0x00
   0241 02                 1439 	.db #0x02
   0242 08                 1440 	.db #0x08
   0243 0A                 1441 	.db #0x0A
   0244 0B                 1442 	.db #0x0B
   0245 09                 1443 	.db #0x09
   0246 03                 1444 	.db #0x03
   0247 01                 1445 	.db #0x01
   0248 11                 1446 	.db #0x11
   0249 13                 1447 	.db #0x13
   024A 0B                 1448 	.db #0x0B
   024B 09                 1449 	.db #0x09
   024C 0A                 1450 	.db #0x0A
   024D 12                 1451 	.db #0x12
   024E 10                 1452 	.db #0x10
   024F 00                 1453 	.db #0x00
   0250 02                 1454 	.db #0x02
   0251 08                 1455 	.db #0x08
   0252 0A                 1456 	.db #0x0A
   0253 12                 1457 	.db #0x12
   0254 13                 1458 	.db #0x13
   0255 0B                 1459 	.db #0x0B
   0256 09                 1460 	.db #0x09
   0257 03                 1461 	.db #0x03
   0258 01                 1462 	.db #0x01
   0259 11                 1463 	.db #0x11
   025A 13                 1464 	.db #0x13
   025B 0B                 1465 	.db #0x0B
   025C 12                 1466 	.db #0x12
   025D 10                 1467 	.db #0x10
   025E 00                 1468 	.db #0x00
   025F 02                 1469 	.db #0x02
   0260 08                 1470 	.db #0x08
   0261 0A                 1471 	.db #0x0A
   0262 12                 1472 	.db #0x12
   0263 10                 1473 	.db #0x10
   0264 11                 1474 	.db #0x11
   0265 13                 1475 	.db #0x13
   0266 0B                 1476 	.db #0x0B
   0267 09                 1477 	.db #0x09
   0268 03                 1478 	.db #0x03
   0269 01                 1479 	.db #0x01
   026A 11                 1480 	.db #0x11
   026B 13                 1481 	.db #0x13
   026C 10                 1482 	.db #0x10
   026D 00                 1483 	.db #0x00
   026E 02                 1484 	.db #0x02
   026F 08                 1485 	.db #0x08
   0270 0A                 1486 	.db #0x0A
   0271 12                 1487 	.db #0x12
   0272 10                 1488 	.db #0x10
   0273 00                 1489 	.db #0x00
   0274 01                 1490 	.db #0x01
   0275 11                 1491 	.db #0x11
   0276 13                 1492 	.db #0x13
   0277 0B                 1493 	.db #0x0B
   0278 09                 1494 	.db #0x09
   0279 03                 1495 	.db #0x03
   027A 01                 1496 	.db #0x01
   027B 11                 1497 	.db #0x11
   027C 00                 1498 	.db #0x00
   027D 02                 1499 	.db #0x02
   027E 08                 1500 	.db #0x08
   027F 0A                 1501 	.db #0x0A
   0280 12                 1502 	.db #0x12
   0281 10                 1503 	.db #0x10
   0282 00                 1504 	.db #0x00
   0283 02                 1505 	.db #0x02
   0284 03                 1506 	.db #0x03
   0285 01                 1507 	.db #0x01
   0286 11                 1508 	.db #0x11
   0287 13                 1509 	.db #0x13
   0288 0B                 1510 	.db #0x0B
   0289 09                 1511 	.db #0x09
   028A 03                 1512 	.db #0x03
   028B 01                 1513 	.db #0x01
   028C 02                 1514 	.db #0x02
   028D 08                 1515 	.db #0x08
   028E 0A                 1516 	.db #0x0A
   028F 12                 1517 	.db #0x12
   0290 10                 1518 	.db #0x10
   0291 00                 1519 	.db #0x00
   0292 02                 1520 	.db #0x02
   0293 08                 1521 	.db #0x08
   0294 09                 1522 	.db #0x09
   0295 03                 1523 	.db #0x03
   0296 01                 1524 	.db #0x01
   0297 11                 1525 	.db #0x11
   0298 13                 1526 	.db #0x13
   0299 0B                 1527 	.db #0x0B
   029A 09                 1528 	.db #0x09
   029B 03                 1529 	.db #0x03
   029C 08                 1530 	.db #0x08
   029D 0A                 1531 	.db #0x0A
   029E 12                 1532 	.db #0x12
   029F 10                 1533 	.db #0x10
   02A0 00                 1534 	.db #0x00
   02A1 02                 1535 	.db #0x02
   02A2 08                 1536 	.db #0x08
   02A3 0A                 1537 	.db #0x0A
   02A4 0B                 1538 	.db #0x0B
   02A5 09                 1539 	.db #0x09
   02A6 03                 1540 	.db #0x03
   02A7 01                 1541 	.db #0x01
   02A8 11                 1542 	.db #0x11
   02A9 13                 1543 	.db #0x13
   02AA 0B                 1544 	.db #0x0B
   02AB 09                 1545 	.db #0x09
   02AC                    1546 _tri_dia:
   02AC 05                 1547 	.db #0x05
   02AD 1B                 1548 	.db #0x1B
   02AE 0F                 1549 	.db #0x0F
   02AF 1D                 1550 	.db #0x1D
   02B0 15                 1551 	.db #0x15
   02B1 19                 1552 	.db #0x19
   02B2 05                 1553 	.db #0x05
   02B3 1B                 1554 	.db #0x1B
   02B4 0F                 1555 	.db #0x0F
   02B5 1D                 1556 	.db #0x1D
   02B6 15                 1557 	.db #0x15
   02B7 19                 1558 	.db #0x19
   02B8 05                 1559 	.db #0x05
   02B9 1B                 1560 	.db #0x1B
   02BA 0F                 1561 	.db #0x0F
   02BB 1D                 1562 	.db #0x1D
   02BC 1D                 1563 	.db #0x1D
   02BD 05                 1564 	.db #0x05
   02BE 19                 1565 	.db #0x19
   02BF 0F                 1566 	.db #0x0F
   02C0 1B                 1567 	.db #0x1B
   02C1 15                 1568 	.db #0x15
   02C2 1D                 1569 	.db #0x1D
   02C3 05                 1570 	.db #0x05
   02C4 19                 1571 	.db #0x19
   02C5 0F                 1572 	.db #0x0F
   02C6 1B                 1573 	.db #0x1B
   02C7 15                 1574 	.db #0x15
   02C8 1D                 1575 	.db #0x1D
   02C9 05                 1576 	.db #0x05
   02CA 19                 1577 	.db #0x19
   02CB 0F                 1578 	.db #0x0F
   02CC 0F                 1579 	.db #0x0F
   02CD 1D                 1580 	.db #0x1D
   02CE 15                 1581 	.db #0x15
   02CF 19                 1582 	.db #0x19
   02D0 05                 1583 	.db #0x05
   02D1 1B                 1584 	.db #0x1B
   02D2 0F                 1585 	.db #0x0F
   02D3 1D                 1586 	.db #0x1D
   02D4 15                 1587 	.db #0x15
   02D5 19                 1588 	.db #0x19
   02D6 05                 1589 	.db #0x05
   02D7 1B                 1590 	.db #0x1B
   02D8 0F                 1591 	.db #0x0F
   02D9 1D                 1592 	.db #0x1D
   02DA 15                 1593 	.db #0x15
   02DB 19                 1594 	.db #0x19
   02DC 19                 1595 	.db #0x19
   02DD 0F                 1596 	.db #0x0F
   02DE 1B                 1597 	.db #0x1B
   02DF 15                 1598 	.db #0x15
   02E0 1D                 1599 	.db #0x1D
   02E1 05                 1600 	.db #0x05
   02E2 19                 1601 	.db #0x19
   02E3 0F                 1602 	.db #0x0F
   02E4 1B                 1603 	.db #0x1B
   02E5 15                 1604 	.db #0x15
   02E6 1D                 1605 	.db #0x1D
   02E7 05                 1606 	.db #0x05
   02E8 19                 1607 	.db #0x19
   02E9 0F                 1608 	.db #0x0F
   02EA 1B                 1609 	.db #0x1B
   02EB 15                 1610 	.db #0x15
   02EC 15                 1611 	.db #0x15
   02ED 19                 1612 	.db #0x19
   02EE 05                 1613 	.db #0x05
   02EF 1B                 1614 	.db #0x1B
   02F0 0F                 1615 	.db #0x0F
   02F1 1D                 1616 	.db #0x1D
   02F2 15                 1617 	.db #0x15
   02F3 19                 1618 	.db #0x19
   02F4 05                 1619 	.db #0x05
   02F5 1B                 1620 	.db #0x1B
   02F6 0F                 1621 	.db #0x0F
   02F7 1D                 1622 	.db #0x1D
   02F8 15                 1623 	.db #0x15
   02F9 19                 1624 	.db #0x19
   02FA 05                 1625 	.db #0x05
   02FB 1B                 1626 	.db #0x1B
   02FC 1B                 1627 	.db #0x1B
   02FD 15                 1628 	.db #0x15
   02FE 1D                 1629 	.db #0x1D
   02FF 05                 1630 	.db #0x05
   0300 19                 1631 	.db #0x19
   0301 0F                 1632 	.db #0x0F
   0302 1B                 1633 	.db #0x1B
   0303 15                 1634 	.db #0x15
   0304 1D                 1635 	.db #0x1D
   0305 05                 1636 	.db #0x05
   0306 19                 1637 	.db #0x19
   0307 0F                 1638 	.db #0x0F
   0308 1B                 1639 	.db #0x1B
   0309 15                 1640 	.db #0x15
   030A 1D                 1641 	.db #0x1D
   030B 05                 1642 	.db #0x05
   030C 05                 1643 	.db #0x05
   030D 1B                 1644 	.db #0x1B
   030E 0F                 1645 	.db #0x0F
   030F 1D                 1646 	.db #0x1D
   0310 15                 1647 	.db #0x15
   0311 19                 1648 	.db #0x19
   0312 05                 1649 	.db #0x05
   0313 1B                 1650 	.db #0x1B
   0314 0F                 1651 	.db #0x0F
   0315 1D                 1652 	.db #0x1D
   0316 15                 1653 	.db #0x15
   0317 19                 1654 	.db #0x19
   0318 05                 1655 	.db #0x05
   0319 1B                 1656 	.db #0x1B
   031A 0F                 1657 	.db #0x0F
   031B 1D                 1658 	.db #0x1D
   031C 1D                 1659 	.db #0x1D
   031D 05                 1660 	.db #0x05
   031E 19                 1661 	.db #0x19
   031F 0F                 1662 	.db #0x0F
   0320 1B                 1663 	.db #0x1B
   0321 15                 1664 	.db #0x15
   0322 1D                 1665 	.db #0x1D
   0323 05                 1666 	.db #0x05
   0324 19                 1667 	.db #0x19
   0325 0F                 1668 	.db #0x0F
   0326 1B                 1669 	.db #0x1B
   0327 15                 1670 	.db #0x15
   0328 1D                 1671 	.db #0x1D
   0329 05                 1672 	.db #0x05
   032A 19                 1673 	.db #0x19
   032B 0F                 1674 	.db #0x0F
   032C 0F                 1675 	.db #0x0F
   032D 1D                 1676 	.db #0x1D
   032E 15                 1677 	.db #0x15
   032F 19                 1678 	.db #0x19
   0330 05                 1679 	.db #0x05
   0331 1B                 1680 	.db #0x1B
   0332 0F                 1681 	.db #0x0F
   0333 1D                 1682 	.db #0x1D
   0334 15                 1683 	.db #0x15
   0335 19                 1684 	.db #0x19
   0336 05                 1685 	.db #0x05
   0337 1B                 1686 	.db #0x1B
   0338 0F                 1687 	.db #0x0F
   0339 1D                 1688 	.db #0x1D
   033A 15                 1689 	.db #0x15
   033B 19                 1690 	.db #0x19
   033C 19                 1691 	.db #0x19
   033D 0F                 1692 	.db #0x0F
   033E 1B                 1693 	.db #0x1B
   033F 15                 1694 	.db #0x15
   0340 1D                 1695 	.db #0x1D
   0341 05                 1696 	.db #0x05
   0342 19                 1697 	.db #0x19
   0343 0F                 1698 	.db #0x0F
   0344 1B                 1699 	.db #0x1B
   0345 15                 1700 	.db #0x15
   0346 1D                 1701 	.db #0x1D
   0347 05                 1702 	.db #0x05
   0348 19                 1703 	.db #0x19
   0349 0F                 1704 	.db #0x0F
   034A 1B                 1705 	.db #0x1B
   034B 15                 1706 	.db #0x15
   034C 15                 1707 	.db #0x15
   034D 19                 1708 	.db #0x19
   034E 05                 1709 	.db #0x05
   034F 1B                 1710 	.db #0x1B
   0350 0F                 1711 	.db #0x0F
   0351 1D                 1712 	.db #0x1D
   0352 15                 1713 	.db #0x15
   0353 19                 1714 	.db #0x19
   0354 05                 1715 	.db #0x05
   0355 1B                 1716 	.db #0x1B
   0356 0F                 1717 	.db #0x0F
   0357 1D                 1718 	.db #0x1D
   0358 15                 1719 	.db #0x15
   0359 19                 1720 	.db #0x19
   035A 05                 1721 	.db #0x05
   035B 1B                 1722 	.db #0x1B
   035C 1B                 1723 	.db #0x1B
   035D 15                 1724 	.db #0x15
   035E 1D                 1725 	.db #0x1D
   035F 05                 1726 	.db #0x05
   0360 19                 1727 	.db #0x19
   0361 0F                 1728 	.db #0x0F
   0362 1B                 1729 	.db #0x1B
   0363 15                 1730 	.db #0x15
   0364 1D                 1731 	.db #0x1D
   0365 05                 1732 	.db #0x05
   0366 19                 1733 	.db #0x19
   0367 0F                 1734 	.db #0x0F
   0368 1B                 1735 	.db #0x1B
   0369 15                 1736 	.db #0x15
   036A 1D                 1737 	.db #0x1D
   036B 05                 1738 	.db #0x05
   036C                    1739 _tri_side1:
   036C 0A                 1740 	.db #0x0A
   036D 12                 1741 	.db #0x12
   036E 10                 1742 	.db #0x10
   036F 00                 1743 	.db #0x00
   0370 02                 1744 	.db #0x02
   0371 08                 1745 	.db #0x08
   0372 0A                 1746 	.db #0x0A
   0373 12                 1747 	.db #0x12
   0374 10                 1748 	.db #0x10
   0375 00                 1749 	.db #0x00
   0376 02                 1750 	.db #0x02
   0377 08                 1751 	.db #0x08
   0378 0A                 1752 	.db #0x0A
   0379 12                 1753 	.db #0x12
   037A 10                 1754 	.db #0x10
   037B 00                 1755 	.db #0x00
   037C 12                 1756 	.db #0x12
   037D 10                 1757 	.db #0x10
   037E 00                 1758 	.db #0x00
   037F 02                 1759 	.db #0x02
   0380 08                 1760 	.db #0x08
   0381 0A                 1761 	.db #0x0A
   0382 12                 1762 	.db #0x12
   0383 10                 1763 	.db #0x10
   0384 00                 1764 	.db #0x00
   0385 02                 1765 	.db #0x02
   0386 08                 1766 	.db #0x08
   0387 0A                 1767 	.db #0x0A
   0388 12                 1768 	.db #0x12
   0389 10                 1769 	.db #0x10
   038A 00                 1770 	.db #0x00
   038B 02                 1771 	.db #0x02
   038C 10                 1772 	.db #0x10
   038D 00                 1773 	.db #0x00
   038E 02                 1774 	.db #0x02
   038F 08                 1775 	.db #0x08
   0390 0A                 1776 	.db #0x0A
   0391 12                 1777 	.db #0x12
   0392 10                 1778 	.db #0x10
   0393 00                 1779 	.db #0x00
   0394 02                 1780 	.db #0x02
   0395 08                 1781 	.db #0x08
   0396 0A                 1782 	.db #0x0A
   0397 12                 1783 	.db #0x12
   0398 10                 1784 	.db #0x10
   0399 00                 1785 	.db #0x00
   039A 02                 1786 	.db #0x02
   039B 08                 1787 	.db #0x08
   039C 00                 1788 	.db #0x00
   039D 02                 1789 	.db #0x02
   039E 08                 1790 	.db #0x08
   039F 0A                 1791 	.db #0x0A
   03A0 12                 1792 	.db #0x12
   03A1 10                 1793 	.db #0x10
   03A2 00                 1794 	.db #0x00
   03A3 02                 1795 	.db #0x02
   03A4 08                 1796 	.db #0x08
   03A5 0A                 1797 	.db #0x0A
   03A6 12                 1798 	.db #0x12
   03A7 10                 1799 	.db #0x10
   03A8 00                 1800 	.db #0x00
   03A9 02                 1801 	.db #0x02
   03AA 08                 1802 	.db #0x08
   03AB 0A                 1803 	.db #0x0A
   03AC 02                 1804 	.db #0x02
   03AD 08                 1805 	.db #0x08
   03AE 0A                 1806 	.db #0x0A
   03AF 12                 1807 	.db #0x12
   03B0 10                 1808 	.db #0x10
   03B1 00                 1809 	.db #0x00
   03B2 02                 1810 	.db #0x02
   03B3 08                 1811 	.db #0x08
   03B4 0A                 1812 	.db #0x0A
   03B5 12                 1813 	.db #0x12
   03B6 10                 1814 	.db #0x10
   03B7 00                 1815 	.db #0x00
   03B8 02                 1816 	.db #0x02
   03B9 08                 1817 	.db #0x08
   03BA 0A                 1818 	.db #0x0A
   03BB 12                 1819 	.db #0x12
   03BC 08                 1820 	.db #0x08
   03BD 0A                 1821 	.db #0x0A
   03BE 12                 1822 	.db #0x12
   03BF 10                 1823 	.db #0x10
   03C0 00                 1824 	.db #0x00
   03C1 02                 1825 	.db #0x02
   03C2 08                 1826 	.db #0x08
   03C3 0A                 1827 	.db #0x0A
   03C4 12                 1828 	.db #0x12
   03C5 10                 1829 	.db #0x10
   03C6 00                 1830 	.db #0x00
   03C7 02                 1831 	.db #0x02
   03C8 08                 1832 	.db #0x08
   03C9 0A                 1833 	.db #0x0A
   03CA 12                 1834 	.db #0x12
   03CB 10                 1835 	.db #0x10
   03CC 0A                 1836 	.db #0x0A
   03CD 12                 1837 	.db #0x12
   03CE 10                 1838 	.db #0x10
   03CF 00                 1839 	.db #0x00
   03D0 02                 1840 	.db #0x02
   03D1 08                 1841 	.db #0x08
   03D2 0A                 1842 	.db #0x0A
   03D3 12                 1843 	.db #0x12
   03D4 10                 1844 	.db #0x10
   03D5 00                 1845 	.db #0x00
   03D6 02                 1846 	.db #0x02
   03D7 08                 1847 	.db #0x08
   03D8 0A                 1848 	.db #0x0A
   03D9 12                 1849 	.db #0x12
   03DA 10                 1850 	.db #0x10
   03DB 00                 1851 	.db #0x00
   03DC 12                 1852 	.db #0x12
   03DD 10                 1853 	.db #0x10
   03DE 00                 1854 	.db #0x00
   03DF 02                 1855 	.db #0x02
   03E0 08                 1856 	.db #0x08
   03E1 0A                 1857 	.db #0x0A
   03E2 12                 1858 	.db #0x12
   03E3 10                 1859 	.db #0x10
   03E4 00                 1860 	.db #0x00
   03E5 02                 1861 	.db #0x02
   03E6 08                 1862 	.db #0x08
   03E7 0A                 1863 	.db #0x0A
   03E8 12                 1864 	.db #0x12
   03E9 10                 1865 	.db #0x10
   03EA 00                 1866 	.db #0x00
   03EB 02                 1867 	.db #0x02
   03EC 10                 1868 	.db #0x10
   03ED 00                 1869 	.db #0x00
   03EE 02                 1870 	.db #0x02
   03EF 08                 1871 	.db #0x08
   03F0 0A                 1872 	.db #0x0A
   03F1 12                 1873 	.db #0x12
   03F2 10                 1874 	.db #0x10
   03F3 00                 1875 	.db #0x00
   03F4 02                 1876 	.db #0x02
   03F5 08                 1877 	.db #0x08
   03F6 0A                 1878 	.db #0x0A
   03F7 12                 1879 	.db #0x12
   03F8 10                 1880 	.db #0x10
   03F9 00                 1881 	.db #0x00
   03FA 02                 1882 	.db #0x02
   03FB 08                 1883 	.db #0x08
   03FC 00                 1884 	.db #0x00
   03FD 02                 1885 	.db #0x02
   03FE 08                 1886 	.db #0x08
   03FF 0A                 1887 	.db #0x0A
   0400 12                 1888 	.db #0x12
   0401 10                 1889 	.db #0x10
   0402 00                 1890 	.db #0x00
   0403 02                 1891 	.db #0x02
   0404 08                 1892 	.db #0x08
   0405 0A                 1893 	.db #0x0A
   0406 12                 1894 	.db #0x12
   0407 10                 1895 	.db #0x10
   0408 00                 1896 	.db #0x00
   0409 02                 1897 	.db #0x02
   040A 08                 1898 	.db #0x08
   040B 0A                 1899 	.db #0x0A
   040C 02                 1900 	.db #0x02
   040D 08                 1901 	.db #0x08
   040E 0A                 1902 	.db #0x0A
   040F 12                 1903 	.db #0x12
   0410 10                 1904 	.db #0x10
   0411 00                 1905 	.db #0x00
   0412 02                 1906 	.db #0x02
   0413 08                 1907 	.db #0x08
   0414 0A                 1908 	.db #0x0A
   0415 12                 1909 	.db #0x12
   0416 10                 1910 	.db #0x10
   0417 00                 1911 	.db #0x00
   0418 02                 1912 	.db #0x02
   0419 08                 1913 	.db #0x08
   041A 0A                 1914 	.db #0x0A
   041B 12                 1915 	.db #0x12
   041C 08                 1916 	.db #0x08
   041D 0A                 1917 	.db #0x0A
   041E 12                 1918 	.db #0x12
   041F 10                 1919 	.db #0x10
   0420 00                 1920 	.db #0x00
   0421 02                 1921 	.db #0x02
   0422 08                 1922 	.db #0x08
   0423 0A                 1923 	.db #0x0A
   0424 12                 1924 	.db #0x12
   0425 10                 1925 	.db #0x10
   0426 00                 1926 	.db #0x00
   0427 02                 1927 	.db #0x02
   0428 08                 1928 	.db #0x08
   0429 0A                 1929 	.db #0x0A
   042A 12                 1930 	.db #0x12
   042B 10                 1931 	.db #0x10
   042C                    1932 _tri_side2:
   042C 00                 1933 	.db #0x00
   042D 10                 1934 	.db #0x10
   042E 12                 1935 	.db #0x12
   042F 0A                 1936 	.db #0x0A
   0430 08                 1937 	.db #0x08
   0431 02                 1938 	.db #0x02
   0432 00                 1939 	.db #0x00
   0433 10                 1940 	.db #0x10
   0434 12                 1941 	.db #0x12
   0435 0A                 1942 	.db #0x0A
   0436 08                 1943 	.db #0x08
   0437 02                 1944 	.db #0x02
   0438 00                 1945 	.db #0x00
   0439 10                 1946 	.db #0x10
   043A 12                 1947 	.db #0x12
   043B 0A                 1948 	.db #0x0A
   043C 02                 1949 	.db #0x02
   043D 00                 1950 	.db #0x00
   043E 10                 1951 	.db #0x10
   043F 12                 1952 	.db #0x12
   0440 0A                 1953 	.db #0x0A
   0441 08                 1954 	.db #0x08
   0442 02                 1955 	.db #0x02
   0443 00                 1956 	.db #0x00
   0444 10                 1957 	.db #0x10
   0445 12                 1958 	.db #0x12
   0446 0A                 1959 	.db #0x0A
   0447 08                 1960 	.db #0x08
   0448 02                 1961 	.db #0x02
   0449 00                 1962 	.db #0x00
   044A 10                 1963 	.db #0x10
   044B 12                 1964 	.db #0x12
   044C 08                 1965 	.db #0x08
   044D 02                 1966 	.db #0x02
   044E 00                 1967 	.db #0x00
   044F 10                 1968 	.db #0x10
   0450 12                 1969 	.db #0x12
   0451 0A                 1970 	.db #0x0A
   0452 08                 1971 	.db #0x08
   0453 02                 1972 	.db #0x02
   0454 00                 1973 	.db #0x00
   0455 10                 1974 	.db #0x10
   0456 12                 1975 	.db #0x12
   0457 0A                 1976 	.db #0x0A
   0458 08                 1977 	.db #0x08
   0459 02                 1978 	.db #0x02
   045A 00                 1979 	.db #0x00
   045B 10                 1980 	.db #0x10
   045C 0A                 1981 	.db #0x0A
   045D 08                 1982 	.db #0x08
   045E 02                 1983 	.db #0x02
   045F 00                 1984 	.db #0x00
   0460 10                 1985 	.db #0x10
   0461 12                 1986 	.db #0x12
   0462 0A                 1987 	.db #0x0A
   0463 08                 1988 	.db #0x08
   0464 02                 1989 	.db #0x02
   0465 00                 1990 	.db #0x00
   0466 10                 1991 	.db #0x10
   0467 12                 1992 	.db #0x12
   0468 0A                 1993 	.db #0x0A
   0469 08                 1994 	.db #0x08
   046A 02                 1995 	.db #0x02
   046B 00                 1996 	.db #0x00
   046C 12                 1997 	.db #0x12
   046D 0A                 1998 	.db #0x0A
   046E 08                 1999 	.db #0x08
   046F 02                 2000 	.db #0x02
   0470 00                 2001 	.db #0x00
   0471 10                 2002 	.db #0x10
   0472 12                 2003 	.db #0x12
   0473 0A                 2004 	.db #0x0A
   0474 08                 2005 	.db #0x08
   0475 02                 2006 	.db #0x02
   0476 00                 2007 	.db #0x00
   0477 10                 2008 	.db #0x10
   0478 12                 2009 	.db #0x12
   0479 0A                 2010 	.db #0x0A
   047A 08                 2011 	.db #0x08
   047B 02                 2012 	.db #0x02
   047C 10                 2013 	.db #0x10
   047D 12                 2014 	.db #0x12
   047E 0A                 2015 	.db #0x0A
   047F 08                 2016 	.db #0x08
   0480 02                 2017 	.db #0x02
   0481 00                 2018 	.db #0x00
   0482 10                 2019 	.db #0x10
   0483 12                 2020 	.db #0x12
   0484 0A                 2021 	.db #0x0A
   0485 08                 2022 	.db #0x08
   0486 02                 2023 	.db #0x02
   0487 00                 2024 	.db #0x00
   0488 10                 2025 	.db #0x10
   0489 12                 2026 	.db #0x12
   048A 0A                 2027 	.db #0x0A
   048B 08                 2028 	.db #0x08
   048C 00                 2029 	.db #0x00
   048D 10                 2030 	.db #0x10
   048E 12                 2031 	.db #0x12
   048F 0A                 2032 	.db #0x0A
   0490 08                 2033 	.db #0x08
   0491 02                 2034 	.db #0x02
   0492 00                 2035 	.db #0x00
   0493 10                 2036 	.db #0x10
   0494 12                 2037 	.db #0x12
   0495 0A                 2038 	.db #0x0A
   0496 08                 2039 	.db #0x08
   0497 02                 2040 	.db #0x02
   0498 00                 2041 	.db #0x00
   0499 10                 2042 	.db #0x10
   049A 12                 2043 	.db #0x12
   049B 0A                 2044 	.db #0x0A
   049C 02                 2045 	.db #0x02
   049D 00                 2046 	.db #0x00
   049E 10                 2047 	.db #0x10
   049F 12                 2048 	.db #0x12
   04A0 0A                 2049 	.db #0x0A
   04A1 08                 2050 	.db #0x08
   04A2 02                 2051 	.db #0x02
   04A3 00                 2052 	.db #0x00
   04A4 10                 2053 	.db #0x10
   04A5 12                 2054 	.db #0x12
   04A6 0A                 2055 	.db #0x0A
   04A7 08                 2056 	.db #0x08
   04A8 02                 2057 	.db #0x02
   04A9 00                 2058 	.db #0x00
   04AA 10                 2059 	.db #0x10
   04AB 12                 2060 	.db #0x12
   04AC 08                 2061 	.db #0x08
   04AD 02                 2062 	.db #0x02
   04AE 00                 2063 	.db #0x00
   04AF 10                 2064 	.db #0x10
   04B0 12                 2065 	.db #0x12
   04B1 0A                 2066 	.db #0x0A
   04B2 08                 2067 	.db #0x08
   04B3 02                 2068 	.db #0x02
   04B4 00                 2069 	.db #0x00
   04B5 10                 2070 	.db #0x10
   04B6 12                 2071 	.db #0x12
   04B7 0A                 2072 	.db #0x0A
   04B8 08                 2073 	.db #0x08
   04B9 02                 2074 	.db #0x02
   04BA 00                 2075 	.db #0x00
   04BB 10                 2076 	.db #0x10
   04BC 0A                 2077 	.db #0x0A
   04BD 08                 2078 	.db #0x08
   04BE 02                 2079 	.db #0x02
   04BF 00                 2080 	.db #0x00
   04C0 10                 2081 	.db #0x10
   04C1 12                 2082 	.db #0x12
   04C2 0A                 2083 	.db #0x0A
   04C3 08                 2084 	.db #0x08
   04C4 02                 2085 	.db #0x02
   04C5 00                 2086 	.db #0x00
   04C6 10                 2087 	.db #0x10
   04C7 12                 2088 	.db #0x12
   04C8 0A                 2089 	.db #0x0A
   04C9 08                 2090 	.db #0x08
   04CA 02                 2091 	.db #0x02
   04CB 00                 2092 	.db #0x00
   04CC 12                 2093 	.db #0x12
   04CD 0A                 2094 	.db #0x0A
   04CE 08                 2095 	.db #0x08
   04CF 02                 2096 	.db #0x02
   04D0 00                 2097 	.db #0x00
   04D1 10                 2098 	.db #0x10
   04D2 12                 2099 	.db #0x12
   04D3 0A                 2100 	.db #0x0A
   04D4 08                 2101 	.db #0x08
   04D5 02                 2102 	.db #0x02
   04D6 00                 2103 	.db #0x00
   04D7 10                 2104 	.db #0x10
   04D8 12                 2105 	.db #0x12
   04D9 0A                 2106 	.db #0x0A
   04DA 08                 2107 	.db #0x08
   04DB 02                 2108 	.db #0x02
   04DC 10                 2109 	.db #0x10
   04DD 12                 2110 	.db #0x12
   04DE 0A                 2111 	.db #0x0A
   04DF 08                 2112 	.db #0x08
   04E0 02                 2113 	.db #0x02
   04E1 00                 2114 	.db #0x00
   04E2 10                 2115 	.db #0x10
   04E3 12                 2116 	.db #0x12
   04E4 0A                 2117 	.db #0x0A
   04E5 08                 2118 	.db #0x08
   04E6 02                 2119 	.db #0x02
   04E7 00                 2120 	.db #0x00
   04E8 10                 2121 	.db #0x10
   04E9 12                 2122 	.db #0x12
   04EA 0A                 2123 	.db #0x0A
   04EB 08                 2124 	.db #0x08
   04EC                    2125 _tri_inva1:
   04EC 1E                 2126 	.db #0x1E
   04ED 1F                 2127 	.db #0x1F
   04EE 1E                 2128 	.db #0x1E
   04EF 11                 2129 	.db #0x11
   04F0 13                 2130 	.db #0x13
   04F1 1E                 2131 	.db #0x1E
   04F2 08                 2132 	.db #0x08
   04F3 0A                 2133 	.db #0x0A
   04F4 00                 2134 	.db #0x00
   04F5 0E                 2135 	.db #0x0E
   04F6 10                 2136 	.db #0x10
   04F7 1E                 2137 	.db #0x1E
   04F8 1C                 2138 	.db #0x1C
   04F9 1E                 2139 	.db #0x1E
   04FA 08                 2140 	.db #0x08
   04FB 0A                 2141 	.db #0x0A
   04FC 1F                 2142 	.db #0x1F
   04FD 1F                 2143 	.db #0x1F
   04FE 1E                 2144 	.db #0x1E
   04FF 1E                 2145 	.db #0x1E
   0500 15                 2146 	.db #0x15
   0501 17                 2147 	.db #0x17
   0502 0A                 2148 	.db #0x0A
   0503 00                 2149 	.db #0x00
   0504 02                 2150 	.db #0x02
   0505 11                 2151 	.db #0x11
   0506 13                 2152 	.db #0x13
   0507 1F                 2153 	.db #0x1F
   0508 1C                 2154 	.db #0x1C
   0509 08                 2155 	.db #0x08
   050A 0A                 2156 	.db #0x0A
   050B 1F                 2157 	.db #0x1F
   050C 1E                 2158 	.db #0x1E
   050D 1F                 2159 	.db #0x1F
   050E 08                 2160 	.db #0x08
   050F 1B                 2161 	.db #0x1B
   0510 1A                 2162 	.db #0x1A
   0511 11                 2163 	.db #0x11
   0512 13                 2164 	.db #0x13
   0513 1C                 2165 	.db #0x1C
   0514 1E                 2166 	.db #0x1E
   0515 1F                 2167 	.db #0x1F
   0516 19                 2168 	.db #0x19
   0517 1E                 2169 	.db #0x1E
   0518 06                 2170 	.db #0x06
   0519 04                 2171 	.db #0x04
   051A 1C                 2172 	.db #0x1C
   051B 1C                 2173 	.db #0x1C
   051C 1E                 2174 	.db #0x1E
   051D 08                 2175 	.db #0x08
   051E 16                 2176 	.db #0x16
   051F 18                 2177 	.db #0x18
   0520 1B                 2178 	.db #0x1B
   0521 1E                 2179 	.db #0x1E
   0522 19                 2180 	.db #0x19
   0523 1D                 2181 	.db #0x1D
   0524 1F                 2182 	.db #0x1F
   0525 1E                 2183 	.db #0x1E
   0526 19                 2184 	.db #0x19
   0527 08                 2185 	.db #0x08
   0528 1B                 2186 	.db #0x1B
   0529 1E                 2187 	.db #0x1E
   052A 12                 2188 	.db #0x12
   052B 10                 2189 	.db #0x10
   052C 08                 2190 	.db #0x08
   052D 16                 2191 	.db #0x16
   052E 10                 2192 	.db #0x10
   052F 11                 2193 	.db #0x11
   0530 17                 2194 	.db #0x17
   0531 09                 2195 	.db #0x09
   0532 11                 2196 	.db #0x11
   0533 0F                 2197 	.db #0x0F
   0534 01                 2198 	.db #0x01
   0535 1E                 2199 	.db #0x1E
   0536 14                 2200 	.db #0x14
   0537 16                 2201 	.db #0x16
   0538 17                 2202 	.db #0x17
   0539 15                 2203 	.db #0x15
   053A 10                 2204 	.db #0x10
   053B 1E                 2205 	.db #0x1E
   053C 0A                 2206 	.db #0x0A
   053D 18                 2207 	.db #0x18
   053E 1F                 2208 	.db #0x1F
   053F 1E                 2209 	.db #0x1E
   0540 19                 2210 	.db #0x19
   0541 0B                 2211 	.db #0x0B
   0542 09                 2212 	.db #0x09
   0543 11                 2213 	.db #0x11
   0544 0F                 2214 	.db #0x0F
   0545 1C                 2215 	.db #0x1C
   0546 05                 2216 	.db #0x05
   0547 09                 2217 	.db #0x09
   0548 1E                 2218 	.db #0x1E
   0549 0B                 2219 	.db #0x0B
   054A 09                 2220 	.db #0x09
   054B 1F                 2221 	.db #0x1F
   054C 1E                 2222 	.db #0x1E
   054D 19                 2223 	.db #0x19
   054E 1E                 2224 	.db #0x1E
   054F 1F                 2225 	.db #0x1F
   0550 19                 2226 	.db #0x19
   0551 1E                 2227 	.db #0x1E
   0552 0B                 2228 	.db #0x0B
   0553 1B                 2229 	.db #0x1B
   0554 15                 2230 	.db #0x15
   0555 19                 2231 	.db #0x19
   0556 1D                 2232 	.db #0x1D
   0557 19                 2233 	.db #0x19
   0558 19                 2234 	.db #0x19
   0559 13                 2235 	.db #0x13
   055A 0B                 2236 	.db #0x0B
   055B 09                 2237 	.db #0x09
   055C 1E                 2238 	.db #0x1E
   055D 15                 2239 	.db #0x15
   055E 13                 2240 	.db #0x13
   055F 1E                 2241 	.db #0x1E
   0560 0C                 2242 	.db #0x0C
   0561 01                 2243 	.db #0x01
   0562 1E                 2244 	.db #0x1E
   0563 1F                 2245 	.db #0x1F
   0564 1E                 2246 	.db #0x1E
   0565 1E                 2247 	.db #0x1E
   0566 1C                 2248 	.db #0x1C
   0567 1D                 2249 	.db #0x1D
   0568 01                 2250 	.db #0x01
   0569 11                 2251 	.db #0x11
   056A 13                 2252 	.db #0x13
   056B 0B                 2253 	.db #0x0B
   056C 09                 2254 	.db #0x09
   056D 1A                 2255 	.db #0x1A
   056E 14                 2256 	.db #0x14
   056F 04                 2257 	.db #0x04
   0570 0E                 2258 	.db #0x0E
   0571 07                 2259 	.db #0x07
   0572 01                 2260 	.db #0x01
   0573 1E                 2261 	.db #0x1E
   0574 1F                 2262 	.db #0x1F
   0575 00                 2263 	.db #0x00
   0576 02                 2264 	.db #0x02
   0577 1E                 2265 	.db #0x1E
   0578 03                 2266 	.db #0x03
   0579 01                 2267 	.db #0x01
   057A 0C                 2268 	.db #0x0C
   057B 06                 2269 	.db #0x06
   057C 0B                 2270 	.db #0x0B
   057D 1B                 2271 	.db #0x1B
   057E 04                 2272 	.db #0x04
   057F 0E                 2273 	.db #0x0E
   0580 19                 2274 	.db #0x19
   0581 17                 2275 	.db #0x17
   0582 07                 2276 	.db #0x07
   0583 1D                 2277 	.db #0x1D
   0584 1C                 2278 	.db #0x1C
   0585 02                 2279 	.db #0x02
   0586 1F                 2280 	.db #0x1F
   0587 1E                 2281 	.db #0x1E
   0588 08                 2282 	.db #0x08
   0589 07                 2283 	.db #0x07
   058A 06                 2284 	.db #0x06
   058B 1E                 2285 	.db #0x1E
   058C 08                 2286 	.db #0x08
   058D 04                 2287 	.db #0x04
   058E 0E                 2288 	.db #0x0E
   058F 14                 2289 	.db #0x14
   0590 09                 2290 	.db #0x09
   0591 11                 2291 	.db #0x11
   0592 17                 2292 	.db #0x17
   0593 07                 2293 	.db #0x07
   0594 1D                 2294 	.db #0x1D
   0595 1F                 2295 	.db #0x1F
   0596 1E                 2296 	.db #0x1E
   0597 08                 2297 	.db #0x08
   0598 0A                 2298 	.db #0x0A
   0599 1E                 2299 	.db #0x1E
   059A 1F                 2300 	.db #0x1F
   059B 1F                 2301 	.db #0x1F
   059C 04                 2302 	.db #0x04
   059D 0E                 2303 	.db #0x0E
   059E 14                 2304 	.db #0x14
   059F 0A                 2305 	.db #0x0A
   05A0 0B                 2306 	.db #0x0B
   05A1 09                 2307 	.db #0x09
   05A2 11                 2308 	.db #0x11
   05A3 17                 2309 	.db #0x17
   05A4 07                 2310 	.db #0x07
   05A5 01                 2311 	.db #0x01
   05A6 08                 2312 	.db #0x08
   05A7 0A                 2313 	.db #0x0A
   05A8 1E                 2314 	.db #0x1E
   05A9 1F                 2315 	.db #0x1F
   05AA 1F                 2316 	.db #0x1F
   05AB 1E                 2317 	.db #0x1E
   05AC                    2318 _tri_inva2:
   05AC 14                 2319 	.db #0x14
   05AD 04                 2320 	.db #0x04
   05AE 0E                 2321 	.db #0x0E
   05AF 14                 2322 	.db #0x14
   05B0 04                 2323 	.db #0x04
   05B1 0E                 2324 	.db #0x0E
   05B2 14                 2325 	.db #0x14
   05B3 1A                 2326 	.db #0x1A
   05B4 1B                 2327 	.db #0x1B
   05B5 15                 2328 	.db #0x15
   05B6 0F                 2329 	.db #0x0F
   05B7 05                 2330 	.db #0x05
   05B8 15                 2331 	.db #0x15
   05B9 0F                 2332 	.db #0x0F
   05BA 05                 2333 	.db #0x05
   05BB 15                 2334 	.db #0x15
   05BC 04                 2335 	.db #0x04
   05BD 0E                 2336 	.db #0x0E
   05BE 14                 2337 	.db #0x14
   05BF 04                 2338 	.db #0x04
   05C0 0E                 2339 	.db #0x0E
   05C1 14                 2340 	.db #0x14
   05C2 0A                 2341 	.db #0x0A
   05C3 1E                 2342 	.db #0x1E
   05C4 1F                 2343 	.db #0x1F
   05C5 0B                 2344 	.db #0x0B
   05C6 15                 2345 	.db #0x15
   05C7 0F                 2346 	.db #0x0F
   05C8 05                 2347 	.db #0x05
   05C9 15                 2348 	.db #0x15
   05CA 0F                 2349 	.db #0x0F
   05CB 05                 2350 	.db #0x05
   05CC 0E                 2351 	.db #0x0E
   05CD 14                 2352 	.db #0x14
   05CE 04                 2353 	.db #0x04
   05CF 0E                 2354 	.db #0x0E
   05D0 14                 2355 	.db #0x14
   05D1 0A                 2356 	.db #0x0A
   05D2 12                 2357 	.db #0x12
   05D3 18                 2358 	.db #0x18
   05D4 19                 2359 	.db #0x19
   05D5 13                 2360 	.db #0x13
   05D6 0B                 2361 	.db #0x0B
   05D7 15                 2362 	.db #0x15
   05D8 0F                 2363 	.db #0x0F
   05D9 05                 2364 	.db #0x05
   05DA 15                 2365 	.db #0x15
   05DB 0F                 2366 	.db #0x0F
   05DC 18                 2367 	.db #0x18
   05DD 1A                 2368 	.db #0x1A
   05DE 1C                 2369 	.db #0x1C
   05DF 18                 2370 	.db #0x18
   05E0 1A                 2371 	.db #0x1A
   05E1 1E                 2372 	.db #0x1E
   05E2 18                 2373 	.db #0x18
   05E3 18                 2374 	.db #0x18
   05E4 19                 2375 	.db #0x19
   05E5 19                 2376 	.db #0x19
   05E6 1F                 2377 	.db #0x1F
   05E7 1B                 2378 	.db #0x1B
   05E8 19                 2379 	.db #0x19
   05E9 1D                 2380 	.db #0x1D
   05EA 1B                 2381 	.db #0x1B
   05EB 19                 2382 	.db #0x19
   05EC 18                 2383 	.db #0x18
   05ED 1A                 2384 	.db #0x1A
   05EE 1C                 2385 	.db #0x1C
   05EF 18                 2386 	.db #0x18
   05F0 1A                 2387 	.db #0x1A
   05F1 1E                 2388 	.db #0x1E
   05F2 18                 2389 	.db #0x18
   05F3 18                 2390 	.db #0x18
   05F4 15                 2391 	.db #0x15
   05F5 19                 2392 	.db #0x19
   05F6 1F                 2393 	.db #0x1F
   05F7 1B                 2394 	.db #0x1B
   05F8 19                 2395 	.db #0x19
   05F9 1D                 2396 	.db #0x1D
   05FA 1B                 2397 	.db #0x1B
   05FB 19                 2398 	.db #0x19
   05FC 19                 2399 	.db #0x19
   05FD 1B                 2400 	.db #0x1B
   05FE 1D                 2401 	.db #0x1D
   05FF 19                 2402 	.db #0x19
   0600 1B                 2403 	.db #0x1B
   0601 1F                 2404 	.db #0x1F
   0602 19                 2405 	.db #0x19
   0603 14                 2406 	.db #0x14
   0604 16                 2407 	.db #0x16
   0605 18                 2408 	.db #0x18
   0606 1E                 2409 	.db #0x1E
   0607 1A                 2410 	.db #0x1A
   0608 18                 2411 	.db #0x18
   0609 1C                 2412 	.db #0x1C
   060A 1A                 2413 	.db #0x1A
   060B 18                 2414 	.db #0x18
   060C 19                 2415 	.db #0x19
   060D 1B                 2416 	.db #0x1B
   060E 1D                 2417 	.db #0x1D
   060F 19                 2418 	.db #0x19
   0610 1B                 2419 	.db #0x1B
   0611 1F                 2420 	.db #0x1F
   0612 19                 2421 	.db #0x19
   0613 17                 2422 	.db #0x17
   0614 15                 2423 	.db #0x15
   0615 18                 2424 	.db #0x18
   0616 1E                 2425 	.db #0x1E
   0617 1A                 2426 	.db #0x1A
   0618 18                 2427 	.db #0x18
   0619 1C                 2428 	.db #0x1C
   061A 1A                 2429 	.db #0x1A
   061B 18                 2430 	.db #0x18
   061C 0D                 2431 	.db #0x0D
   061D 17                 2432 	.db #0x17
   061E 07                 2433 	.db #0x07
   061F 0D                 2434 	.db #0x0D
   0620 17                 2435 	.db #0x17
   0621 09                 2436 	.db #0x09
   0622 11                 2437 	.db #0x11
   0623 14                 2438 	.db #0x14
   0624 16                 2439 	.db #0x16
   0625 10                 2440 	.db #0x10
   0626 08                 2441 	.db #0x08
   0627 16                 2442 	.db #0x16
   0628 0C                 2443 	.db #0x0C
   0629 06                 2444 	.db #0x06
   062A 16                 2445 	.db #0x16
   062B 0C                 2446 	.db #0x0C
   062C 07                 2447 	.db #0x07
   062D 0D                 2448 	.db #0x0D
   062E 17                 2449 	.db #0x17
   062F 07                 2450 	.db #0x07
   0630 0D                 2451 	.db #0x0D
   0631 17                 2452 	.db #0x17
   0632 1F                 2453 	.db #0x1F
   0633 1C                 2454 	.db #0x1C
   0634 1C                 2455 	.db #0x1C
   0635 1F                 2456 	.db #0x1F
   0636 16                 2457 	.db #0x16
   0637 0C                 2458 	.db #0x0C
   0638 06                 2459 	.db #0x06
   0639 16                 2460 	.db #0x16
   063A 0C                 2461 	.db #0x0C
   063B 06                 2462 	.db #0x06
   063C 17                 2463 	.db #0x17
   063D 07                 2464 	.db #0x07
   063E 0D                 2465 	.db #0x0D
   063F 17                 2466 	.db #0x17
   0640 07                 2467 	.db #0x07
   0641 10                 2468 	.db #0x10
   0642 1F                 2469 	.db #0x1F
   0643 1C                 2470 	.db #0x1C
   0644 1C                 2471 	.db #0x1C
   0645 1F                 2472 	.db #0x1F
   0646 11                 2473 	.db #0x11
   0647 06                 2474 	.db #0x06
   0648 16                 2475 	.db #0x16
   0649 0C                 2476 	.db #0x0C
   064A 06                 2477 	.db #0x06
   064B 16                 2478 	.db #0x16
   064C 0D                 2479 	.db #0x0D
   064D 17                 2480 	.db #0x17
   064E 07                 2481 	.db #0x07
   064F 0D                 2482 	.db #0x0D
   0650 0A                 2483 	.db #0x0A
   0651 1F                 2484 	.db #0x1F
   0652 1F                 2485 	.db #0x1F
   0653 1C                 2486 	.db #0x1C
   0654 1C                 2487 	.db #0x1C
   0655 1F                 2488 	.db #0x1F
   0656 1F                 2489 	.db #0x1F
   0657 0B                 2490 	.db #0x0B
   0658 0C                 2491 	.db #0x0C
   0659 06                 2492 	.db #0x06
   065A 16                 2493 	.db #0x16
   065B 0C                 2494 	.db #0x0C
   065C 07                 2495 	.db #0x07
   065D 0D                 2496 	.db #0x0D
   065E 17                 2497 	.db #0x17
   065F 02                 2498 	.db #0x02
   0660 1F                 2499 	.db #0x1F
   0661 1F                 2500 	.db #0x1F
   0662 1F                 2501 	.db #0x1F
   0663 1F                 2502 	.db #0x1F
   0664 1F                 2503 	.db #0x1F
   0665 1F                 2504 	.db #0x1F
   0666 1F                 2505 	.db #0x1F
   0667 1F                 2506 	.db #0x1F
   0668 03                 2507 	.db #0x03
   0669 16                 2508 	.db #0x16
   066A 0C                 2509 	.db #0x0C
   066B 06                 2510 	.db #0x06
   066C                    2511 _tri_inva3:
   066C 1A                 2512 	.db #0x1A
   066D 1C                 2513 	.db #0x1C
   066E 18                 2514 	.db #0x18
   066F 1A                 2515 	.db #0x1A
   0670 1C                 2516 	.db #0x1C
   0671 18                 2517 	.db #0x18
   0672 1A                 2518 	.db #0x1A
   0673 1E                 2519 	.db #0x1E
   0674 00                 2520 	.db #0x00
   0675 1C                 2521 	.db #0x1C
   0676 1C                 2522 	.db #0x1C
   0677 1D                 2523 	.db #0x1D
   0678 1C                 2524 	.db #0x1C
   0679 1C                 2525 	.db #0x1C
   067A 1D                 2526 	.db #0x1D
   067B 1C                 2527 	.db #0x1C
   067C 1A                 2528 	.db #0x1A
   067D 1C                 2529 	.db #0x1C
   067E 18                 2530 	.db #0x18
   067F 1A                 2531 	.db #0x1A
   0680 1C                 2532 	.db #0x1C
   0681 18                 2533 	.db #0x18
   0682 1A                 2534 	.db #0x1A
   0683 1F                 2535 	.db #0x1F
   0684 1C                 2536 	.db #0x1C
   0685 18                 2537 	.db #0x18
   0686 1F                 2538 	.db #0x1F
   0687 1C                 2539 	.db #0x1C
   0688 1D                 2540 	.db #0x1D
   0689 1D                 2541 	.db #0x1D
   068A 1C                 2542 	.db #0x1C
   068B 1D                 2543 	.db #0x1D
   068C 04                 2544 	.db #0x04
   068D 0E                 2545 	.db #0x0E
   068E 14                 2546 	.db #0x14
   068F 04                 2547 	.db #0x04
   0690 0E                 2548 	.db #0x0E
   0691 14                 2549 	.db #0x14
   0692 0A                 2550 	.db #0x0A
   0693 1E                 2551 	.db #0x1E
   0694 1C                 2552 	.db #0x1C
   0695 0D                 2553 	.db #0x0D
   0696 18                 2554 	.db #0x18
   0697 1C                 2555 	.db #0x1C
   0698 1C                 2556 	.db #0x1C
   0699 1C                 2557 	.db #0x1C
   069A 1C                 2558 	.db #0x1C
   069B 1C                 2559 	.db #0x1C
   069C 1C                 2560 	.db #0x1C
   069D 18                 2561 	.db #0x18
   069E 1A                 2562 	.db #0x1A
   069F 1C                 2563 	.db #0x1C
   06A0 18                 2564 	.db #0x18
   06A1 1A                 2565 	.db #0x1A
   06A2 1E                 2566 	.db #0x1E
   06A3 00                 2567 	.db #0x00
   06A4 1C                 2568 	.db #0x1C
   06A5 1D                 2569 	.db #0x1D
   06A6 1C                 2570 	.db #0x1C
   06A7 1C                 2571 	.db #0x1C
   06A8 1D                 2572 	.db #0x1D
   06A9 18                 2573 	.db #0x18
   06AA 0F                 2574 	.db #0x0F
   06AB 1C                 2575 	.db #0x1C
   06AC 1C                 2576 	.db #0x1C
   06AD 18                 2577 	.db #0x18
   06AE 1A                 2578 	.db #0x1A
   06AF 1C                 2579 	.db #0x1C
   06B0 18                 2580 	.db #0x18
   06B1 1A                 2581 	.db #0x1A
   06B2 1F                 2582 	.db #0x1F
   06B3 1C                 2583 	.db #0x1C
   06B4 1D                 2584 	.db #0x1D
   06B5 02                 2585 	.db #0x02
   06B6 1C                 2586 	.db #0x1C
   06B7 02                 2587 	.db #0x02
   06B8 1D                 2588 	.db #0x1D
   06B9 1F                 2589 	.db #0x1F
   06BA 18                 2590 	.db #0x18
   06BB 1C                 2591 	.db #0x1C
   06BC 1C                 2592 	.db #0x1C
   06BD 18                 2593 	.db #0x18
   06BE 1A                 2594 	.db #0x1A
   06BF 1C                 2595 	.db #0x1C
   06C0 18                 2596 	.db #0x18
   06C1 1A                 2597 	.db #0x1A
   06C2 1F                 2598 	.db #0x1F
   06C3 03                 2599 	.db #0x03
   06C4 1C                 2600 	.db #0x1C
   06C5 1D                 2601 	.db #0x1D
   06C6 1C                 2602 	.db #0x1C
   06C7 1C                 2603 	.db #0x1C
   06C8 1C                 2604 	.db #0x1C
   06C9 1C                 2605 	.db #0x1C
   06CA 1D                 2606 	.db #0x1D
   06CB 1C                 2607 	.db #0x1C
   06CC 0E                 2608 	.db #0x0E
   06CD 14                 2609 	.db #0x14
   06CE 04                 2610 	.db #0x04
   06CF 0E                 2611 	.db #0x0E
   06D0 14                 2612 	.db #0x14
   06D1 0A                 2613 	.db #0x0A
   06D2 1E                 2614 	.db #0x1E
   06D3 00                 2615 	.db #0x00
   06D4 0B                 2616 	.db #0x0B
   06D5 0A                 2617 	.db #0x0A
   06D6 0B                 2618 	.db #0x0B
   06D7 0A                 2619 	.db #0x0A
   06D8 0B                 2620 	.db #0x0B
   06D9 0A                 2621 	.db #0x0A
   06DA 1D                 2622 	.db #0x1D
   06DB 1C                 2623 	.db #0x1C
   06DC 14                 2624 	.db #0x14
   06DD 04                 2625 	.db #0x04
   06DE 0E                 2626 	.db #0x0E
   06DF 14                 2627 	.db #0x14
   06E0 0A                 2628 	.db #0x0A
   06E1 1F                 2629 	.db #0x1F
   06E2 1E                 2630 	.db #0x1E
   06E3 1C                 2631 	.db #0x1C
   06E4 1F                 2632 	.db #0x1F
   06E5 1E                 2633 	.db #0x1E
   06E6 1F                 2634 	.db #0x1F
   06E7 1E                 2635 	.db #0x1E
   06E8 1F                 2636 	.db #0x1F
   06E9 1E                 2637 	.db #0x1E
   06EA 1D                 2638 	.db #0x1D
   06EB 1C                 2639 	.db #0x1C
   06EC 1A                 2640 	.db #0x1A
   06ED 1C                 2641 	.db #0x1C
   06EE 18                 2642 	.db #0x18
   06EF 1A                 2643 	.db #0x1A
   06F0 1F                 2644 	.db #0x1F
   06F1 12                 2645 	.db #0x12
   06F2 18                 2646 	.db #0x18
   06F3 18                 2647 	.db #0x18
   06F4 19                 2648 	.db #0x19
   06F5 19                 2649 	.db #0x19
   06F6 13                 2650 	.db #0x13
   06F7 1E                 2651 	.db #0x1E
   06F8 1F                 2652 	.db #0x1F
   06F9 1E                 2653 	.db #0x1E
   06FA 1D                 2654 	.db #0x1D
   06FB 1C                 2655 	.db #0x1C
   06FC 1B                 2656 	.db #0x1B
   06FD 1D                 2657 	.db #0x1D
   06FE 19                 2658 	.db #0x19
   06FF 1B                 2659 	.db #0x1B
   0700 1E                 2660 	.db #0x1E
   0701 18                 2661 	.db #0x18
   0702 18                 2662 	.db #0x18
   0703 18                 2663 	.db #0x18
   0704 19                 2664 	.db #0x19
   0705 19                 2665 	.db #0x19
   0706 19                 2666 	.db #0x19
   0707 13                 2667 	.db #0x13
   0708 1F                 2668 	.db #0x1F
   0709 00                 2669 	.db #0x00
   070A 1C                 2670 	.db #0x1C
   070B 1C                 2671 	.db #0x1C
   070C 1B                 2672 	.db #0x1B
   070D 1D                 2673 	.db #0x1D
   070E 19                 2674 	.db #0x19
   070F 1B                 2675 	.db #0x1B
   0710 1F                 2676 	.db #0x1F
   0711 18                 2677 	.db #0x18
   0712 18                 2678 	.db #0x18
   0713 0C                 2679 	.db #0x0C
   0714 1C                 2680 	.db #0x1C
   0715 1C                 2681 	.db #0x1C
   0716 1C                 2682 	.db #0x1C
   0717 1C                 2683 	.db #0x1C
   0718 1C                 2684 	.db #0x1C
   0719 1C                 2685 	.db #0x1C
   071A 1C                 2686 	.db #0x1C
   071B 1C                 2687 	.db #0x1C
   071C 17                 2688 	.db #0x17
   071D 07                 2689 	.db #0x07
   071E 0D                 2690 	.db #0x0D
   071F 17                 2691 	.db #0x17
   0720 09                 2692 	.db #0x09
   0721 1E                 2693 	.db #0x1E
   0722 1F                 2694 	.db #0x1F
   0723 1D                 2695 	.db #0x1D
   0724 1D                 2696 	.db #0x1D
   0725 1D                 2697 	.db #0x1D
   0726 1C                 2698 	.db #0x1C
   0727 1D                 2699 	.db #0x1D
   0728 1C                 2700 	.db #0x1C
   0729 1C                 2701 	.db #0x1C
   072A 1C                 2702 	.db #0x1C
   072B 1C                 2703 	.db #0x1C
   072C                    2704 _tri_inva4:
   072C 1E                 2705 	.db #0x1E
   072D 00                 2706 	.db #0x00
   072E 05                 2707 	.db #0x05
   072F 0A                 2708 	.db #0x0A
   0730 1E                 2709 	.db #0x1E
   0731 00                 2710 	.db #0x00
   0732 06                 2711 	.db #0x06
   0733 16                 2712 	.db #0x16
   0734 0F                 2713 	.db #0x0F
   0735 01                 2714 	.db #0x01
   0736 1F                 2715 	.db #0x1F
   0737 11                 2716 	.db #0x11
   0738 0C                 2717 	.db #0x0C
   0739 01                 2718 	.db #0x01
   073A 1F                 2719 	.db #0x1F
   073B 1F                 2720 	.db #0x1F
   073C 12                 2721 	.db #0x12
   073D 0F                 2722 	.db #0x0F
   073E 02                 2723 	.db #0x02
   073F 1E                 2724 	.db #0x1E
   0740 12                 2725 	.db #0x12
   0741 0F                 2726 	.db #0x0F
   0742 05                 2727 	.db #0x05
   0743 15                 2728 	.db #0x15
   0744 0C                 2729 	.db #0x0C
   0745 06                 2730 	.db #0x06
   0746 09                 2731 	.db #0x09
   0747 1F                 2732 	.db #0x1F
   0748 03                 2733 	.db #0x03
   0749 06                 2734 	.db #0x06
   074A 09                 2735 	.db #0x09
   074B 1F                 2736 	.db #0x1F
   074C 15                 2737 	.db #0x15
   074D 10                 2738 	.db #0x10
   074E 1E                 2739 	.db #0x1E
   074F 08                 2740 	.db #0x08
   0750 15                 2741 	.db #0x15
   0751 10                 2742 	.db #0x10
   0752 1E                 2743 	.db #0x1E
   0753 1F                 2744 	.db #0x1F
   0754 1F                 2745 	.db #0x1F
   0755 0B                 2746 	.db #0x0B
   0756 16                 2747 	.db #0x16
   0757 13                 2748 	.db #0x13
   0758 1F                 2749 	.db #0x1F
   0759 0B                 2750 	.db #0x0B
   075A 16                 2751 	.db #0x16
   075B 13                 2752 	.db #0x13
   075C 05                 2753 	.db #0x05
   075D 1E                 2754 	.db #0x1E
   075E 00                 2755 	.db #0x00
   075F 05                 2756 	.db #0x05
   0760 0A                 2757 	.db #0x0A
   0761 1E                 2758 	.db #0x1E
   0762 08                 2759 	.db #0x08
   0763 15                 2760 	.db #0x15
   0764 13                 2761 	.db #0x13
   0765 1F                 2762 	.db #0x1F
   0766 11                 2763 	.db #0x11
   0767 0D                 2764 	.db #0x0D
   0768 01                 2765 	.db #0x01
   0769 1F                 2766 	.db #0x1F
   076A 0C                 2767 	.db #0x0C
   076B 0D                 2768 	.db #0x0D
   076C 02                 2769 	.db #0x02
   076D 1E                 2770 	.db #0x1E
   076E 0E                 2771 	.db #0x0E
   076F 0F                 2772 	.db #0x0F
   0770 1E                 2773 	.db #0x1E
   0771 00                 2774 	.db #0x00
   0772 05                 2775 	.db #0x05
   0773 15                 2776 	.db #0x15
   0774 0C                 2777 	.db #0x0C
   0775 01                 2778 	.db #0x01
   0776 1F                 2779 	.db #0x1F
   0777 07                 2780 	.db #0x07
   0778 07                 2781 	.db #0x07
   0779 1F                 2782 	.db #0x1F
   077A 06                 2783 	.db #0x06
   077B 07                 2784 	.db #0x07
   077C 1E                 2785 	.db #0x1E
   077D 1E                 2786 	.db #0x1E
   077E 15                 2787 	.db #0x15
   077F 15                 2788 	.db #0x15
   0780 1E                 2789 	.db #0x1E
   0781 0F                 2790 	.db #0x0F
   0782 02                 2791 	.db #0x02
   0783 1E                 2792 	.db #0x1E
   0784 07                 2793 	.db #0x07
   0785 06                 2794 	.db #0x06
   0786 1F                 2795 	.db #0x1F
   0787 17                 2796 	.db #0x17
   0788 17                 2797 	.db #0x17
   0789 1E                 2798 	.db #0x1E
   078A 17                 2799 	.db #0x17
   078B 16                 2800 	.db #0x16
   078C 1F                 2801 	.db #0x1F
   078D 1F                 2802 	.db #0x1F
   078E 04                 2803 	.db #0x04
   078F 05                 2804 	.db #0x05
   0790 1F                 2805 	.db #0x1F
   0791 14                 2806 	.db #0x14
   0792 09                 2807 	.db #0x09
   0793 11                 2808 	.db #0x11
   0794 17                 2809 	.db #0x17
   0795 0A                 2810 	.db #0x0A
   0796 1E                 2811 	.db #0x1E
   0797 0D                 2812 	.db #0x0D
   0798 0D                 2813 	.db #0x0D
   0799 1E                 2814 	.db #0x1E
   079A 0D                 2815 	.db #0x0D
   079B 0C                 2816 	.db #0x0C
   079C 09                 2817 	.db #0x09
   079D 1F                 2818 	.db #0x1F
   079E 0E                 2819 	.db #0x0E
   079F 0F                 2820 	.db #0x0F
   07A0 1F                 2821 	.db #0x1F
   07A1 04                 2822 	.db #0x04
   07A2 04                 2823 	.db #0x04
   07A3 1F                 2824 	.db #0x1F
   07A4 1F                 2825 	.db #0x1F
   07A5 1E                 2826 	.db #0x1E
   07A6 08                 2827 	.db #0x08
   07A7 06                 2828 	.db #0x06
   07A8 07                 2829 	.db #0x07
   07A9 1E                 2830 	.db #0x1E
   07AA 07                 2831 	.db #0x07
   07AB 06                 2832 	.db #0x06
   07AC 04                 2833 	.db #0x04
   07AD 1F                 2834 	.db #0x1F
   07AE 11                 2835 	.db #0x11
   07AF 14                 2836 	.db #0x14
   07B0 1F                 2837 	.db #0x1F
   07B1 03                 2838 	.db #0x03
   07B2 0E                 2839 	.db #0x0E
   07B3 14                 2840 	.db #0x14
   07B4 07                 2841 	.db #0x07
   07B5 0D                 2842 	.db #0x0D
   07B6 17                 2843 	.db #0x17
   07B7 0A                 2844 	.db #0x0A
   07B8 1E                 2845 	.db #0x1E
   07B9 12                 2846 	.db #0x12
   07BA 17                 2847 	.db #0x17
   07BB 0A                 2848 	.db #0x0A
   07BC 0E                 2849 	.db #0x0E
   07BD 1F                 2850 	.db #0x1F
   07BE 1F                 2851 	.db #0x1F
   07BF 04                 2852 	.db #0x04
   07C0 01                 2853 	.db #0x01
   07C1 1F                 2854 	.db #0x1F
   07C2 11                 2855 	.db #0x11
   07C3 17                 2856 	.db #0x17
   07C4 07                 2857 	.db #0x07
   07C5 0D                 2858 	.db #0x0D
   07C6 10                 2859 	.db #0x10
   07C7 1E                 2860 	.db #0x1E
   07C8 00                 2861 	.db #0x00
   07C9 0D                 2862 	.db #0x0D
   07CA 10                 2863 	.db #0x10
   07CB 1E                 2864 	.db #0x1E
   07CC 14                 2865 	.db #0x14
   07CD 09                 2866 	.db #0x09
   07CE 1F                 2867 	.db #0x1F
   07CF 03                 2868 	.db #0x03
   07D0 0E                 2869 	.db #0x0E
   07D1 13                 2870 	.db #0x13
   07D2 1F                 2871 	.db #0x1F
   07D3 1F                 2872 	.db #0x1F
   07D4 1F                 2873 	.db #0x1F
   07D5 1E                 2874 	.db #0x1E
   07D6 1E                 2875 	.db #0x1E
   07D7 08                 2876 	.db #0x08
   07D8 07                 2877 	.db #0x07
   07D9 02                 2878 	.db #0x02
   07DA 1E                 2879 	.db #0x1E
   07DB 1E                 2880 	.db #0x1E
   07DC 0B                 2881 	.db #0x0B
   07DD 04                 2882 	.db #0x04
   07DE 01                 2883 	.db #0x01
   07DF 1F                 2884 	.db #0x1F
   07E0 11                 2885 	.db #0x11
   07E1 14                 2886 	.db #0x14
   07E2 04                 2887 	.db #0x04
   07E3 0E                 2888 	.db #0x0E
   07E4 17                 2889 	.db #0x17
   07E5 07                 2890 	.db #0x07
   07E6 0D                 2891 	.db #0x0D
   07E7 17                 2892 	.db #0x17
   07E8 0A                 2893 	.db #0x0A
   07E9 1E                 2894 	.db #0x1E
   07EA 1E                 2895 	.db #0x1E
   07EB 1E                 2896 	.db #0x1E
                           2897 ;demo.c:209: void my_isr(void) interrupt
                           2898 ;	---------------------------------
                           2899 ; Function my_isr
                           2900 ; ---------------------------------
   07EC                    2901 _my_isr_start::
   07EC                    2902 _my_isr:
   07EC F5                 2903 	push	af
   07ED C5                 2904 	push	bc
   07EE D5                 2905 	push	de
   07EF E5                 2906 	push	hl
   07F0 FD E5              2907 	push	iy
                           2908 ;demo.c:211: DI;
   07F2 F3                 2909 		di 
                           2910 ;demo.c:213: READ_VDP_STATUS;
   07F3 DB 99              2911 		in a,(#0x99) 
                           2912 ;demo.c:215: PLY_Play();
   07F5 CDr00s00           2913 	call	_PLY_Play
                           2914 ;demo.c:216: PLY_SendRegisters();
   07F8 CDr00s00           2915 	call	_PLY_SendRegisters
                           2916 ;demo.c:218: vbicount+=1;
   07FB FD 21r8As41        2917 	ld	iy,#_vbicount
   07FF FD 34 00           2918 	inc	0 (iy)
   0802 20 07              2919 	jr	NZ,00103$
   0804 FD 21r8As41        2920 	ld	iy,#_vbicount
   0808 FD 34 01           2921 	inc	1 (iy)
   080B                    2922 00103$:
                           2923 ;demo.c:219: tick++;
   080B FD 21r8Cs41        2924 	ld	iy,#_tick
   080F FD 34 00           2925 	inc	0 (iy)
   0812 20 07              2926 	jr	NZ,00104$
   0814 FD 21r8Cs41        2927 	ld	iy,#_tick
   0818 FD 34 01           2928 	inc	1 (iy)
   081B                    2929 00104$:
                           2930 ;demo.c:221: EI;
   081B FB                 2931 		ei 
   081C FD E1              2932 	pop	iy
   081E E1                 2933 	pop	hl
   081F D1                 2934 	pop	de
   0820 C1                 2935 	pop	bc
   0821 F1                 2936 	pop	af
   0822 ED 4D              2937 	reti
   0824                    2938 _my_isr_end::
                           2939 ;demo.c:224: void color_isr(void) interrupt
                           2940 ;	---------------------------------
                           2941 ; Function color_isr
                           2942 ; ---------------------------------
   0824                    2943 _color_isr_start::
   0824                    2944 _color_isr:
   0824 F5                 2945 	push	af
   0825 C5                 2946 	push	bc
   0826 D5                 2947 	push	de
   0827 E5                 2948 	push	hl
   0828 FD E5              2949 	push	iy
                           2950 ;demo.c:226: DI;
   082A F3                 2951 		di 
                           2952 ;demo.c:228: if(isNthBitSet(vdp2_status(1),0)) {
   082B 3E 01              2953 	ld	a,#0x01
   082D F5                 2954 	push	af
   082E 33                 2955 	inc	sp
   082F CDr00s00           2956 	call	_vdp2_status
   0832 33                 2957 	inc	sp
   0833 4D                 2958 	ld	c,l
   0834 21 00 00           2959 	ld	hl,#0x0000
   0837 E5                 2960 	push	hl
   0838 79                 2961 	ld	a,c
   0839 F5                 2962 	push	af
   083A 33                 2963 	inc	sp
   083B CDr00s00           2964 	call	_isNthBitSet
   083E F1                 2965 	pop	af
   083F 33                 2966 	inc	sp
   0840 44                 2967 	ld	b,h
   0841 4D                 2968 	ld	c,l
   0842 79                 2969 	ld	a,c
   0843 B0                 2970 	or	a,b
   0844 28 19              2971 	jr	Z,00102$
                           2972 ;demo.c:229: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0846 21r8As41           2973 	ld	hl,#_vbicount + 0
   0849 4E                 2974 	ld	c,(hl)
   084A 06 00              2975 	ld	b,#0x00
   084C 21r00s00           2976 	ld	hl,#_sintab
   084F 09                 2977 	add	hl,bc
   0850 7E                 2978 	ld	a,(hl)
   0851 F5                 2979 	push	af
   0852 33                 2980 	inc	sp
   0853 3E 17              2981 	ld	a,#0x17
   0855 F5                 2982 	push	af
   0856 33                 2983 	inc	sp
   0857 CDr00s00           2984 	call	_vdp_register
   085A F1                 2985 	pop	af
                           2986 ;demo.c:230: READ_VDP_STATUS;
   085B DB 99              2987 		in a,(#0x99) 
   085D 18 18              2988 	jr	00103$
   085F                    2989 00102$:
                           2990 ;demo.c:233: READ_VDP_STATUS;
   085F DB 99              2991 		in a,(#0x99) 
                           2992 ;demo.c:234: vbicount++;
   0861 FD 21r8As41        2993 	ld	iy,#_vbicount
   0865 FD 34 00           2994 	inc	0 (iy)
   0868 20 07              2995 	jr	NZ,00107$
   086A FD 21r8As41        2996 	ld	iy,#_vbicount
   086E FD 34 01           2997 	inc	1 (iy)
   0871                    2998 00107$:
                           2999 ;demo.c:237: PLY_Play();
   0871 CDr00s00           3000 	call	_PLY_Play
                           3001 ;demo.c:238: PLY_SendRegisters();
   0874 CDr00s00           3002 	call	_PLY_SendRegisters
   0877                    3003 00103$:
                           3004 ;demo.c:241: EI;
   0877 FB                 3005 		ei 
   0878 FD E1              3006 	pop	iy
   087A E1                 3007 	pop	hl
   087B D1                 3008 	pop	de
   087C C1                 3009 	pop	bc
   087D F1                 3010 	pop	af
   087E ED 4D              3011 	reti
   0880                    3012 _color_isr_end::
                           3013 ;demo.c:248: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           3014 ;	---------------------------------
                           3015 ; Function ge5_load
                           3016 ; ---------------------------------
   0880                    3017 _ge5_load_start::
   0880                    3018 _ge5_load:
   0880 DD E5              3019 	push	ix
   0882 DD 21 00 00        3020 	ld	ix,#0
   0886 DD 39              3021 	add	ix,sp
   0888 21 D2 FF           3022 	ld	hl,#-46
   088B 39                 3023 	add	hl,sp
   088C F9                 3024 	ld	sp,hl
                           3025 ;demo.c:252: if(debugprint == 1) {
   088D DD 7E 09           3026 	ld	a,9 (ix)
   0890 D6 01              3027 	sub	a,#0x01
   0892 20 06              3028 	jr	NZ,00125$
   0894 DD 7E 0A           3029 	ld	a,10 (ix)
   0897 B7                 3030 	or	a,a
   0898 28 02              3031 	jr	Z,00126$
   089A                    3032 00125$:
   089A 18 1B              3033 	jr	00102$
   089C                    3034 00126$:
                           3035 ;demo.c:253: puts("loading ge5file: ");
   089C 21r7Bs09           3036 	ld	hl,#__str_0
   089F E5                 3037 	push	hl
   08A0 CDr00s00           3038 	call	_puts
   08A3 F1                 3039 	pop	af
                           3040 ;demo.c:254: puts(file_name);
   08A4 DD 6E 04           3041 	ld	l,4 (ix)
   08A7 DD 66 05           3042 	ld	h,5 (ix)
   08AA E5                 3043 	push	hl
   08AB CDr00s00           3044 	call	_puts
   08AE F1                 3045 	pop	af
                           3046 ;demo.c:255: puts("\r\n");
   08AF 21r8Ds09           3047 	ld	hl,#__str_1
   08B2 E5                 3048 	push	hl
   08B3 CDr00s00           3049 	call	_puts
   08B6 F1                 3050 	pop	af
   08B7                    3051 00102$:
                           3052 ;demo.c:258: memset((uint8_t *) &f, 0, sizeof(fcb));
   08B7 21 00 00           3053 	ld	hl,#0x0000
   08BA 39                 3054 	add	hl,sp
   08BB 4D                 3055 	ld	c,l
   08BC 44                 3056 	ld	b,h
   08BD 21 2E 00           3057 	ld	hl,#0x002E
   08C0 E5                 3058 	push	hl
   08C1 3E 00              3059 	ld	a,#0x00
   08C3 F5                 3060 	push	af
   08C4 33                 3061 	inc	sp
   08C5 C5                 3062 	push	bc
   08C6 CDr00s00           3063 	call	_memset
   08C9 F1                 3064 	pop	af
   08CA F1                 3065 	pop	af
   08CB 33                 3066 	inc	sp
                           3067 ;demo.c:260: f.record_size = 128;
   08CC 21 00 00           3068 	ld	hl,#0x0000
   08CF 39                 3069 	add	hl,sp
   08D0 4D                 3070 	ld	c,l
   08D1 44                 3071 	ld	b,h
   08D2 21 0F 00           3072 	ld	hl,#0x000F
   08D5 09                 3073 	add	hl,bc
   08D6 EB                 3074 	ex	de,hl
   08D7 3E 80              3075 	ld	a,#0x80
   08D9 12                 3076 	ld	(de),a
                           3077 ;demo.c:261: f.drive = 0;
   08DA 3E 00              3078 	ld	a,#0x00
   08DC 02                 3079 	ld	(bc),a
                           3080 ;demo.c:263: memcpy(f.name, file_name, 11);
   08DD DD 5E 04           3081 	ld	e,4 (ix)
   08E0 DD 56 05           3082 	ld	d,5 (ix)
   08E3 03                 3083 	inc	bc
   08E4 21 0B 00           3084 	ld	hl,#0x000B
   08E7 E5                 3085 	push	hl
   08E8 D5                 3086 	push	de
   08E9 C5                 3087 	push	bc
   08EA CDr00s00           3088 	call	_memcpy
   08ED F1                 3089 	pop	af
   08EE F1                 3090 	pop	af
   08EF F1                 3091 	pop	af
                           3092 ;demo.c:265: if (open(&f) != 0) return 0;
   08F0 21 00 00           3093 	ld	hl,#0x0000
   08F3 39                 3094 	add	hl,sp
   08F4 E5                 3095 	push	hl
   08F5 CDr00s00           3096 	call	_open
   08F8 F1                 3097 	pop	af
   08F9 AF                 3098 	xor	a,a
   08FA B5                 3099 	or	a,l
   08FB 28 05              3100 	jr	Z,00104$
   08FD 2E 00              3101 	ld	l,#0x00
   08FF C3r76s09           3102 	jp	00116$
   0902                    3103 00104$:
                           3104 ;demo.c:266: vdp_set_write_address(vramh, vraml);
   0902 DD 6E 07           3105 	ld	l,7 (ix)
   0905 DD 66 08           3106 	ld	h,8 (ix)
   0908 E5                 3107 	push	hl
   0909 DD 7E 06           3108 	ld	a,6 (ix)
   090C F5                 3109 	push	af
   090D 33                 3110 	inc	sp
   090E CDr00s00           3111 	call	_vdp_set_write_address
   0911 F1                 3112 	pop	af
   0912 33                 3113 	inc	sp
                           3114 ;demo.c:268: for (i = 0; i < 213; i++) {
   0913 0E 00              3115 	ld	c,#0x00
   0915                    3116 00112$:
   0915 79                 3117 	ld	a,c
   0916 D6 D5              3118 	sub	a,#0xD5
   0918 D2r6Bs09           3119 	jp	NC,00115$
                           3120 ;demo.c:269: if (block_set_data_ptr(scratch) != 0) return 0;
   091B C5                 3121 	push	bc
   091C 21r4As40           3122 	ld	hl,#_scratch
   091F E5                 3123 	push	hl
   0920 CDr00s00           3124 	call	_block_set_data_ptr
   0923 F1                 3125 	pop	af
   0924 7D                 3126 	ld	a,l
   0925 C1                 3127 	pop	bc
   0926 47                 3128 	ld	b,a
   0927 B7                 3129 	or	a,a
   0928 28 05              3130 	jr	Z,00106$
   092A 2E 00              3131 	ld	l,#0x00
   092C C3r76s09           3132 	jp	00116$
   092F                    3133 00106$:
                           3134 ;demo.c:270: if (block_read(&f) != 0) return 0;
   092F 21 00 00           3135 	ld	hl,#0x0000
   0932 39                 3136 	add	hl,sp
   0933 C5                 3137 	push	bc
   0934 E5                 3138 	push	hl
   0935 CDr00s00           3139 	call	_block_read
   0938 F1                 3140 	pop	af
   0939 7D                 3141 	ld	a,l
   093A C1                 3142 	pop	bc
   093B 47                 3143 	ld	b,a
   093C B7                 3144 	or	a,a
   093D 28 04              3145 	jr	Z,00108$
   093F 2E 00              3146 	ld	l,#0x00
   0941 18 33              3147 	jr	00116$
   0943                    3148 00108$:
                           3149 ;demo.c:272: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0943 AF                 3150 	xor	a,a
   0944 B1                 3151 	or	a,c
   0945 20 11              3152 	jr	NZ,00110$
   0947 11r51s40           3153 	ld	de,#_scratch + 7
   094A C5                 3154 	push	bc
   094B 3E 79              3155 	ld	a,#0x79
   094D F5                 3156 	push	af
   094E 33                 3157 	inc	sp
   094F D5                 3158 	push	de
   0950 CDr00s00           3159 	call	_vdp_load_screen
   0953 F1                 3160 	pop	af
   0954 33                 3161 	inc	sp
   0955 C1                 3162 	pop	bc
   0956 18 0F              3163 	jr	00114$
   0958                    3164 00110$:
                           3165 ;demo.c:273: else vdp_load_screen(scratch, 128);
   0958 C5                 3166 	push	bc
   0959 3E 80              3167 	ld	a,#0x80
   095B F5                 3168 	push	af
   095C 33                 3169 	inc	sp
   095D 21r4As40           3170 	ld	hl,#_scratch
   0960 E5                 3171 	push	hl
   0961 CDr00s00           3172 	call	_vdp_load_screen
   0964 F1                 3173 	pop	af
   0965 33                 3174 	inc	sp
   0966 C1                 3175 	pop	bc
   0967                    3176 00114$:
                           3177 ;demo.c:268: for (i = 0; i < 213; i++) {
   0967 0C                 3178 	inc	c
   0968 C3r15s09           3179 	jp	00112$
   096B                    3180 00115$:
                           3181 ;demo.c:276: close(&f);
   096B 21 00 00           3182 	ld	hl,#0x0000
   096E 39                 3183 	add	hl,sp
   096F E5                 3184 	push	hl
   0970 CDr00s00           3185 	call	_close
   0973 F1                 3186 	pop	af
                           3187 ;demo.c:278: return 1;
   0974 2E 01              3188 	ld	l,#0x01
   0976                    3189 00116$:
   0976 DD F9              3190 	ld	sp,ix
   0978 DD E1              3191 	pop	ix
   097A C9                 3192 	ret
   097B                    3193 _ge5_load_end::
   097B                    3194 __str_0:
   097B 6C 6F 61 64 69 6E  3195 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   098C 00                 3196 	.db 0x00
   098D                    3197 __str_1:
   098D 0D                 3198 	.db 0x0D
   098E 0A                 3199 	.db 0x0A
   098F 00                 3200 	.db 0x00
                           3201 ;demo.c:281: void scratch_clear() {
                           3202 ;	---------------------------------
                           3203 ; Function scratch_clear
                           3204 ; ---------------------------------
   0990                    3205 _scratch_clear_start::
   0990                    3206 _scratch_clear:
                           3207 ;demo.c:282: memset((uint8_t *) &scratch, 0, 128);
   0990 21 80 00           3208 	ld	hl,#0x0080
   0993 E5                 3209 	push	hl
   0994 3E 00              3210 	ld	a,#0x00
   0996 F5                 3211 	push	af
   0997 33                 3212 	inc	sp
   0998 21r4As40           3213 	ld	hl,#_scratch
   099B E5                 3214 	push	hl
   099C CDr00s00           3215 	call	_memset
   099F F1                 3216 	pop	af
   09A0 F1                 3217 	pop	af
   09A1 33                 3218 	inc	sp
   09A2 C9                 3219 	ret
   09A3                    3220 _scratch_clear_end::
                           3221 ;demo.c:285: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3222 ;	---------------------------------
                           3223 ; Function pal_load
                           3224 ; ---------------------------------
   09A3                    3225 _pal_load_start::
   09A3                    3226 _pal_load:
   09A3 DD E5              3227 	push	ix
   09A5 DD 21 00 00        3228 	ld	ix,#0
   09A9 DD 39              3229 	add	ix,sp
   09AB 21 D2 FF           3230 	ld	hl,#-46
   09AE 39                 3231 	add	hl,sp
   09AF F9                 3232 	ld	sp,hl
                           3233 ;demo.c:288: if(debugprint == 1) {
   09B0 DD 7E 07           3234 	ld	a,7 (ix)
   09B3 D6 01              3235 	sub	a,#0x01
   09B5 20 06              3236 	jr	NZ,00115$
   09B7 DD 7E 08           3237 	ld	a,8 (ix)
   09BA B7                 3238 	or	a,a
   09BB 28 02              3239 	jr	Z,00116$
   09BD                    3240 00115$:
   09BD 18 1B              3241 	jr	00102$
   09BF                    3242 00116$:
                           3243 ;demo.c:289: puts("loading palfile: ");
   09BF 21r6Ds0A           3244 	ld	hl,#__str_2
   09C2 E5                 3245 	push	hl
   09C3 CDr00s00           3246 	call	_puts
   09C6 F1                 3247 	pop	af
                           3248 ;demo.c:290: puts(file_name);
   09C7 DD 6E 04           3249 	ld	l,4 (ix)
   09CA DD 66 05           3250 	ld	h,5 (ix)
   09CD E5                 3251 	push	hl
   09CE CDr00s00           3252 	call	_puts
   09D1 F1                 3253 	pop	af
                           3254 ;demo.c:291: puts("\r\n");
   09D2 21r7Fs0A           3255 	ld	hl,#__str_3
   09D5 E5                 3256 	push	hl
   09D6 CDr00s00           3257 	call	_puts
   09D9 F1                 3258 	pop	af
   09DA                    3259 00102$:
                           3260 ;demo.c:294: memset((uint8_t *) &f, 0, sizeof(fcb));
   09DA 21 00 00           3261 	ld	hl,#0x0000
   09DD 39                 3262 	add	hl,sp
   09DE 4D                 3263 	ld	c,l
   09DF 44                 3264 	ld	b,h
   09E0 21 2E 00           3265 	ld	hl,#0x002E
   09E3 E5                 3266 	push	hl
   09E4 3E 00              3267 	ld	a,#0x00
   09E6 F5                 3268 	push	af
   09E7 33                 3269 	inc	sp
   09E8 C5                 3270 	push	bc
   09E9 CDr00s00           3271 	call	_memset
   09EC F1                 3272 	pop	af
   09ED F1                 3273 	pop	af
   09EE 33                 3274 	inc	sp
                           3275 ;demo.c:295: scratch_clear();
   09EF CDr90s09           3276 	call	_scratch_clear
                           3277 ;demo.c:297: f.record_size = ss;
   09F2 21 00 00           3278 	ld	hl,#0x0000
   09F5 39                 3279 	add	hl,sp
   09F6 4D                 3280 	ld	c,l
   09F7 44                 3281 	ld	b,h
   09F8 21 0F 00           3282 	ld	hl,#0x000F
   09FB 09                 3283 	add	hl,bc
   09FC EB                 3284 	ex	de,hl
   09FD DD 7E 06           3285 	ld	a,6 (ix)
   0A00 12                 3286 	ld	(de),a
                           3287 ;demo.c:298: f.drive = 0;
   0A01 3E 00              3288 	ld	a,#0x00
   0A03 02                 3289 	ld	(bc),a
                           3290 ;demo.c:300: memcpy(f.name, file_name, 11);
   0A04 DD 5E 04           3291 	ld	e,4 (ix)
   0A07 DD 56 05           3292 	ld	d,5 (ix)
   0A0A 03                 3293 	inc	bc
   0A0B 21 0B 00           3294 	ld	hl,#0x000B
   0A0E E5                 3295 	push	hl
   0A0F D5                 3296 	push	de
   0A10 C5                 3297 	push	bc
   0A11 CDr00s00           3298 	call	_memcpy
   0A14 F1                 3299 	pop	af
   0A15 F1                 3300 	pop	af
   0A16 F1                 3301 	pop	af
                           3302 ;demo.c:302: if (open(&f) != 0) return 0;
   0A17 21 00 00           3303 	ld	hl,#0x0000
   0A1A 39                 3304 	add	hl,sp
   0A1B E5                 3305 	push	hl
   0A1C CDr00s00           3306 	call	_open
   0A1F F1                 3307 	pop	af
   0A20 AF                 3308 	xor	a,a
   0A21 B5                 3309 	or	a,l
   0A22 28 04              3310 	jr	Z,00104$
   0A24 2E 00              3311 	ld	l,#0x00
   0A26 18 40              3312 	jr	00109$
   0A28                    3313 00104$:
                           3314 ;demo.c:303: if (block_set_data_ptr(scratch) != 0) return 0;
   0A28 21r4As40           3315 	ld	hl,#_scratch
   0A2B E5                 3316 	push	hl
   0A2C CDr00s00           3317 	call	_block_set_data_ptr
   0A2F F1                 3318 	pop	af
   0A30 AF                 3319 	xor	a,a
   0A31 B5                 3320 	or	a,l
   0A32 28 04              3321 	jr	Z,00106$
   0A34 2E 00              3322 	ld	l,#0x00
   0A36 18 30              3323 	jr	00109$
   0A38                    3324 00106$:
                           3325 ;demo.c:304: if (block_read(&f) != 0) return 0;
   0A38 21 00 00           3326 	ld	hl,#0x0000
   0A3B 39                 3327 	add	hl,sp
   0A3C E5                 3328 	push	hl
   0A3D CDr00s00           3329 	call	_block_read
   0A40 F1                 3330 	pop	af
   0A41 AF                 3331 	xor	a,a
   0A42 B5                 3332 	or	a,l
   0A43 28 04              3333 	jr	Z,00108$
   0A45 2E 00              3334 	ld	l,#0x00
   0A47 18 1F              3335 	jr	00109$
   0A49                    3336 00108$:
                           3337 ;demo.c:306: memcpy(cur_palette, scratch+7, ss);
   0A49 DD 4E 06           3338 	ld	c,6 (ix)
   0A4C 06 00              3339 	ld	b,#0x00
   0A4E 11r51s40           3340 	ld	de,#_scratch + 7
   0A51 C5                 3341 	push	bc
   0A52 D5                 3342 	push	de
   0A53 21rCAs40           3343 	ld	hl,#_cur_palette
   0A56 E5                 3344 	push	hl
   0A57 CDr00s00           3345 	call	_memcpy
   0A5A F1                 3346 	pop	af
   0A5B F1                 3347 	pop	af
   0A5C F1                 3348 	pop	af
                           3349 ;demo.c:308: close(&f);
   0A5D 21 00 00           3350 	ld	hl,#0x0000
   0A60 39                 3351 	add	hl,sp
   0A61 E5                 3352 	push	hl
   0A62 CDr00s00           3353 	call	_close
   0A65 F1                 3354 	pop	af
                           3355 ;demo.c:309: return 1;
   0A66 2E 01              3356 	ld	l,#0x01
   0A68                    3357 00109$:
   0A68 DD F9              3358 	ld	sp,ix
   0A6A DD E1              3359 	pop	ix
   0A6C C9                 3360 	ret
   0A6D                    3361 _pal_load_end::
   0A6D                    3362 __str_2:
   0A6D 6C 6F 61 64 69 6E  3363 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0A7E 00                 3364 	.db 0x00
   0A7F                    3365 __str_3:
   0A7F 0D                 3366 	.db 0x0D
   0A80 0A                 3367 	.db 0x0A
   0A81 00                 3368 	.db 0x00
                           3369 ;demo.c:313: void pause() {
                           3370 ;	---------------------------------
                           3371 ; Function pause
                           3372 ; ---------------------------------
   0A82                    3373 _pause_start::
   0A82                    3374 _pause:
                           3375 ;demo.c:314: uint8_t i,j,k = 0;
                           3376 ;demo.c:315: for (i = 0; i < 255; i++) {	
   0A82 01 00 00           3377 	ld	bc,#0x0000
   0A85                    3378 00104$:
   0A85 78                 3379 	ld	a,b
   0A86 D6 FF              3380 	sub	a,#0xFF
   0A88 D0                 3381 	ret	NC
                           3382 ;demo.c:316: for (j = 0; j < 255; j++) {
   0A89 59                 3383 	ld	e,c
   0A8A 16 FF              3384 	ld	d,#0xFF
   0A8C                    3385 00103$:
                           3386 ;demo.c:317: k++;
   0A8C 1C                 3387 	inc	e
   0A8D 15                 3388 	dec	d
                           3389 ;demo.c:316: for (j = 0; j < 255; j++) {
   0A8E AF                 3390 	xor	a,a
   0A8F B2                 3391 	or	a,d
   0A90 20 FA              3392 	jr	NZ,00103$
                           3393 ;demo.c:315: for (i = 0; i < 255; i++) {	
   0A92 4B                 3394 	ld	c,e
   0A93 04                 3395 	inc	b
   0A94 18 EF              3396 	jr	00104$
   0A96                    3397 _pause_end::
                           3398 ;demo.c:323: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3399 ;	---------------------------------
                           3400 ; Function raw_load
                           3401 ; ---------------------------------
   0A96                    3402 _raw_load_start::
   0A96                    3403 _raw_load:
   0A96 DD E5              3404 	push	ix
   0A98 DD 21 00 00        3405 	ld	ix,#0
   0A9C DD 39              3406 	add	ix,sp
   0A9E 21 D2 FF           3407 	ld	hl,#-46
   0AA1 39                 3408 	add	hl,sp
   0AA2 F9                 3409 	ld	sp,hl
                           3410 ;demo.c:328: if(debugprint == 1) {
   0AA3 DD 7E 0A           3411 	ld	a,10 (ix)
   0AA6 D6 01              3412 	sub	a,#0x01
   0AA8 20 06              3413 	jr	NZ,00120$
   0AAA DD 7E 0B           3414 	ld	a,11 (ix)
   0AAD B7                 3415 	or	a,a
   0AAE 28 02              3416 	jr	Z,00121$
   0AB0                    3417 00120$:
   0AB0 18 1B              3418 	jr	00102$
   0AB2                    3419 00121$:
                           3420 ;demo.c:329: puts("loading rawfile: ");
   0AB2 21r84s0B           3421 	ld	hl,#__str_4
   0AB5 E5                 3422 	push	hl
   0AB6 CDr00s00           3423 	call	_puts
   0AB9 F1                 3424 	pop	af
                           3425 ;demo.c:330: puts(file_name);
   0ABA DD 6E 04           3426 	ld	l,4 (ix)
   0ABD DD 66 05           3427 	ld	h,5 (ix)
   0AC0 E5                 3428 	push	hl
   0AC1 CDr00s00           3429 	call	_puts
   0AC4 F1                 3430 	pop	af
                           3431 ;demo.c:331: puts("\r\n");
   0AC5 21r96s0B           3432 	ld	hl,#__str_5
   0AC8 E5                 3433 	push	hl
   0AC9 CDr00s00           3434 	call	_puts
   0ACC F1                 3435 	pop	af
   0ACD                    3436 00102$:
                           3437 ;demo.c:334: memset((uint8_t *) &f, 0, sizeof(fcb));
   0ACD 21 00 00           3438 	ld	hl,#0x0000
   0AD0 39                 3439 	add	hl,sp
   0AD1 4D                 3440 	ld	c,l
   0AD2 44                 3441 	ld	b,h
   0AD3 21 2E 00           3442 	ld	hl,#0x002E
   0AD6 E5                 3443 	push	hl
   0AD7 3E 00              3444 	ld	a,#0x00
   0AD9 F5                 3445 	push	af
   0ADA 33                 3446 	inc	sp
   0ADB C5                 3447 	push	bc
   0ADC CDr00s00           3448 	call	_memset
   0ADF F1                 3449 	pop	af
   0AE0 F1                 3450 	pop	af
   0AE1 33                 3451 	inc	sp
                           3452 ;demo.c:335: scratch_clear();
   0AE2 CDr90s09           3453 	call	_scratch_clear
                           3454 ;demo.c:337: f.record_size = 128;
   0AE5 21 00 00           3455 	ld	hl,#0x0000
   0AE8 39                 3456 	add	hl,sp
   0AE9 4D                 3457 	ld	c,l
   0AEA 44                 3458 	ld	b,h
   0AEB 21 0F 00           3459 	ld	hl,#0x000F
   0AEE 09                 3460 	add	hl,bc
   0AEF EB                 3461 	ex	de,hl
   0AF0 3E 80              3462 	ld	a,#0x80
   0AF2 12                 3463 	ld	(de),a
                           3464 ;demo.c:338: f.drive = 0;
   0AF3 3E 00              3465 	ld	a,#0x00
   0AF5 02                 3466 	ld	(bc),a
                           3467 ;demo.c:340: memcpy(f.name, file_name, 11);
   0AF6 DD 5E 04           3468 	ld	e,4 (ix)
   0AF9 DD 56 05           3469 	ld	d,5 (ix)
   0AFC 03                 3470 	inc	bc
   0AFD 21 0B 00           3471 	ld	hl,#0x000B
   0B00 E5                 3472 	push	hl
   0B01 D5                 3473 	push	de
   0B02 C5                 3474 	push	bc
   0B03 CDr00s00           3475 	call	_memcpy
   0B06 F1                 3476 	pop	af
   0B07 F1                 3477 	pop	af
   0B08 F1                 3478 	pop	af
                           3479 ;demo.c:342: if (open(&f) != 0) return 0;
   0B09 21 00 00           3480 	ld	hl,#0x0000
   0B0C 39                 3481 	add	hl,sp
   0B0D E5                 3482 	push	hl
   0B0E CDr00s00           3483 	call	_open
   0B11 F1                 3484 	pop	af
   0B12 AF                 3485 	xor	a,a
   0B13 B5                 3486 	or	a,l
   0B14 28 05              3487 	jr	Z,00119$
   0B16 2E 00              3488 	ld	l,#0x00
   0B18 C3r7Fs0B           3489 	jp	00112$
                           3490 ;demo.c:344: while(total < size) {
   0B1B                    3491 00119$:
   0B1B 01 00 00           3492 	ld	bc,#0x0000
   0B1E                    3493 00109$:
   0B1E 79                 3494 	ld	a,c
   0B1F DD 96 06           3495 	sub	a,6 (ix)
   0B22 78                 3496 	ld	a,b
   0B23 DD 9E 07           3497 	sbc	a,7 (ix)
   0B26 F2r74s0B           3498 	jp	P,00111$
                           3499 ;demo.c:345: if (block_set_data_ptr(scratch) != 0) return 0;
   0B29 C5                 3500 	push	bc
   0B2A 21r4As40           3501 	ld	hl,#_scratch
   0B2D E5                 3502 	push	hl
   0B2E CDr00s00           3503 	call	_block_set_data_ptr
   0B31 F1                 3504 	pop	af
   0B32 5D                 3505 	ld	e,l
   0B33 C1                 3506 	pop	bc
   0B34 AF                 3507 	xor	a,a
   0B35 B3                 3508 	or	a,e
   0B36 28 04              3509 	jr	Z,00106$
   0B38 2E 00              3510 	ld	l,#0x00
   0B3A 18 43              3511 	jr	00112$
   0B3C                    3512 00106$:
                           3513 ;demo.c:346: if (block_read(&f) != 0) return 0;
   0B3C 21 00 00           3514 	ld	hl,#0x0000
   0B3F 39                 3515 	add	hl,sp
   0B40 C5                 3516 	push	bc
   0B41 E5                 3517 	push	hl
   0B42 CDr00s00           3518 	call	_block_read
   0B45 F1                 3519 	pop	af
   0B46 5D                 3520 	ld	e,l
   0B47 C1                 3521 	pop	bc
   0B48 AF                 3522 	xor	a,a
   0B49 B3                 3523 	or	a,e
   0B4A 28 04              3524 	jr	Z,00108$
   0B4C 2E 00              3525 	ld	l,#0x00
   0B4E 18 2F              3526 	jr	00112$
   0B50                    3527 00108$:
                           3528 ;demo.c:348: memcpy(buffer+total,scratch,incr);
   0B50 DD 7E 08           3529 	ld	a,8 (ix)
   0B53 81                 3530 	add	a,c
   0B54 5F                 3531 	ld	e,a
   0B55 DD 7E 09           3532 	ld	a,9 (ix)
   0B58 88                 3533 	adc	a,b
   0B59 57                 3534 	ld	d,a
   0B5A C5                 3535 	push	bc
   0B5B 21 80 00           3536 	ld	hl,#0x0080
   0B5E E5                 3537 	push	hl
   0B5F 21r4As40           3538 	ld	hl,#_scratch
   0B62 E5                 3539 	push	hl
   0B63 D5                 3540 	push	de
   0B64 CDr00s00           3541 	call	_memcpy
   0B67 F1                 3542 	pop	af
   0B68 F1                 3543 	pop	af
   0B69 F1                 3544 	pop	af
   0B6A C1                 3545 	pop	bc
                           3546 ;demo.c:350: total+=incr;
   0B6B 21 80 00           3547 	ld	hl,#0x0080
   0B6E 09                 3548 	add	hl,bc
   0B6F 4D                 3549 	ld	c,l
   0B70 44                 3550 	ld	b,h
   0B71 C3r1Es0B           3551 	jp	00109$
   0B74                    3552 00111$:
                           3553 ;demo.c:353: close(&f);
   0B74 21 00 00           3554 	ld	hl,#0x0000
   0B77 39                 3555 	add	hl,sp
   0B78 E5                 3556 	push	hl
   0B79 CDr00s00           3557 	call	_close
   0B7C F1                 3558 	pop	af
                           3559 ;demo.c:355: return 1;
   0B7D 2E 01              3560 	ld	l,#0x01
   0B7F                    3561 00112$:
   0B7F DD F9              3562 	ld	sp,ix
   0B81 DD E1              3563 	pop	ix
   0B83 C9                 3564 	ret
   0B84                    3565 _raw_load_end::
   0B84                    3566 __str_4:
   0B84 6C 6F 61 64 69 6E  3567 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0B95 00                 3568 	.db 0x00
   0B96                    3569 __str_5:
   0B96 0D                 3570 	.db 0x0D
   0B97 0A                 3571 	.db 0x0A
   0B98 00                 3572 	.db 0x00
                           3573 ;demo.c:358: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3574 ;	---------------------------------
                           3575 ; Function pck_load
                           3576 ; ---------------------------------
   0B99                    3577 _pck_load_start::
   0B99                    3578 _pck_load:
   0B99 DD E5              3579 	push	ix
   0B9B DD 21 00 00        3580 	ld	ix,#0
   0B9F DD 39              3581 	add	ix,sp
                           3582 ;demo.c:359: if(debugprint == 1) {
   0BA1 DD 7E 0C           3583 	ld	a,12 (ix)
   0BA4 D6 01              3584 	sub	a,#0x01
   0BA6 20 06              3585 	jr	NZ,00106$
   0BA8 DD 7E 0D           3586 	ld	a,13 (ix)
   0BAB B7                 3587 	or	a,a
   0BAC 28 02              3588 	jr	Z,00107$
   0BAE                    3589 00106$:
   0BAE 18 1B              3590 	jr	00102$
   0BB0                    3591 00107$:
                           3592 ;demo.c:360: puts("loading pckfile: ");
   0BB0 21r12s0C           3593 	ld	hl,#__str_6
   0BB3 E5                 3594 	push	hl
   0BB4 CDr00s00           3595 	call	_puts
   0BB7 F1                 3596 	pop	af
                           3597 ;demo.c:361: puts(file_name);
   0BB8 DD 6E 04           3598 	ld	l,4 (ix)
   0BBB DD 66 05           3599 	ld	h,5 (ix)
   0BBE E5                 3600 	push	hl
   0BBF CDr00s00           3601 	call	_puts
   0BC2 F1                 3602 	pop	af
                           3603 ;demo.c:362: puts("\r\n");
   0BC3 21r24s0C           3604 	ld	hl,#__str_7
   0BC6 E5                 3605 	push	hl
   0BC7 CDr00s00           3606 	call	_puts
   0BCA F1                 3607 	pop	af
   0BCB                    3608 00102$:
                           3609 ;demo.c:364: memset((uint8_t *) &packbuffer, 0, size);
   0BCB DD 4E 06           3610 	ld	c,6 (ix)
   0BCE DD 46 07           3611 	ld	b,7 (ix)
   0BD1 C5                 3612 	push	bc
   0BD2 C5                 3613 	push	bc
   0BD3 3E 00              3614 	ld	a,#0x00
   0BD5 F5                 3615 	push	af
   0BD6 33                 3616 	inc	sp
   0BD7 21rCAs01           3617 	ld	hl,#_packbuffer
   0BDA E5                 3618 	push	hl
   0BDB CDr00s00           3619 	call	_memset
   0BDE F1                 3620 	pop	af
   0BDF F1                 3621 	pop	af
   0BE0 33                 3622 	inc	sp
   0BE1 C1                 3623 	pop	bc
                           3624 ;demo.c:365: raw_load(file_name, size, packbuffer,0);
   0BE2 21 00 00           3625 	ld	hl,#0x0000
   0BE5 E5                 3626 	push	hl
   0BE6 21rCAs01           3627 	ld	hl,#_packbuffer
   0BE9 E5                 3628 	push	hl
   0BEA C5                 3629 	push	bc
   0BEB DD 6E 04           3630 	ld	l,4 (ix)
   0BEE DD 66 05           3631 	ld	h,5 (ix)
   0BF1 E5                 3632 	push	hl
   0BF2 CDr96s0A           3633 	call	_raw_load
   0BF5 F1                 3634 	pop	af
   0BF6 F1                 3635 	pop	af
   0BF7 F1                 3636 	pop	af
   0BF8 F1                 3637 	pop	af
                           3638 ;demo.c:366: bitbuster(packbuffer,address,vram_offset);
   0BF9 DD 7E 0A           3639 	ld	a,10 (ix)
   0BFC F5                 3640 	push	af
   0BFD 33                 3641 	inc	sp
   0BFE DD 6E 08           3642 	ld	l,8 (ix)
   0C01 DD 66 09           3643 	ld	h,9 (ix)
   0C04 E5                 3644 	push	hl
   0C05 21rCAs01           3645 	ld	hl,#_packbuffer
   0C08 E5                 3646 	push	hl
   0C09 CDr00s00           3647 	call	_bitbuster
   0C0C F1                 3648 	pop	af
   0C0D F1                 3649 	pop	af
   0C0E 33                 3650 	inc	sp
   0C0F DD E1              3651 	pop	ix
   0C11 C9                 3652 	ret
   0C12                    3653 _pck_load_end::
   0C12                    3654 __str_6:
   0C12 6C 6F 61 64 69 6E  3655 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0C23 00                 3656 	.db 0x00
   0C24                    3657 __str_7:
   0C24 0D                 3658 	.db 0x0D
   0C25 0A                 3659 	.db 0x0A
   0C26 00                 3660 	.db 0x00
                           3661 ;demo.c:369: void fadein() {
                           3662 ;	---------------------------------
                           3663 ; Function fadein
                           3664 ; ---------------------------------
   0C27                    3665 _fadein_start::
   0C27                    3666 _fadein:
   0C27 DD E5              3667 	push	ix
   0C29 DD 21 00 00        3668 	ld	ix,#0
   0C2D DD 39              3669 	add	ix,sp
   0C2F F5                 3670 	push	af
                           3671 ;demo.c:372: if (tick < 8) return;
   0C30 3Ar8Cs41           3672 	ld	a,(#_tick+0)
   0C33 D6 08              3673 	sub	a,#0x08
   0C35 3Ar8Ds41           3674 	ld	a,(#_tick+1)
   0C38 DE 00              3675 	sbc	a,#0x00
   0C3A F2r40s0C           3676 	jp	P,00102$
   0C3D C3rEEs0C           3677 	jp	00113$
   0C40                    3678 00102$:
                           3679 ;demo.c:374: tick = 0;
   0C40 21r8Cs41           3680 	ld	hl,#_tick + 0
   0C43 36 00              3681 	ld	(hl), #0x00
   0C45 21r8Ds41           3682 	ld	hl,#_tick + 1
   0C48 36 00              3683 	ld	(hl), #0x00
                           3684 ;demo.c:376: for(i = 0; i < 32; i+=2) {
   0C4A 0E 00              3685 	ld	c,#0x00
   0C4C                    3686 00109$:
   0C4C 79                 3687 	ld	a,c
   0C4D D6 20              3688 	sub	a,#0x20
   0C4F D2rE6s0C           3689 	jp	NC,00112$
                           3690 ;demo.c:377: uint8_t r = scratch[i] >> 4;
   0C52 3Er4A              3691 	ld	a,#<_scratch
   0C54 81                 3692 	add	a,c
   0C55 5F                 3693 	ld	e,a
   0C56 3Es40              3694 	ld	a,#>_scratch
   0C58 CE 00              3695 	adc	a,#0x00
   0C5A 57                 3696 	ld	d,a
   0C5B 1A                 3697 	ld	a,(de)
   0C5C 47                 3698 	ld	b,a
   0C5D 58                 3699 	ld	e,b
   0C5E CB 3B              3700 	srl	e
   0C60 CB 3B              3701 	srl	e
   0C62 CB 3B              3702 	srl	e
   0C64 CB 3B              3703 	srl	e
                           3704 ;demo.c:378: uint8_t b = scratch[i] & 0xf;
   0C66 78                 3705 	ld	a,b
   0C67 E6 0F              3706 	and	a,#0x0F
   0C69 DD 77 FF           3707 	ld	-1 (ix),a
                           3708 ;demo.c:379: uint8_t g = scratch[i+1];
   0C6C 51                 3709 	ld	d,c
   0C6D 14                 3710 	inc	d
   0C6E 3Er4A              3711 	ld	a,#<_scratch
   0C70 82                 3712 	add	a,d
   0C71 6F                 3713 	ld	l,a
   0C72 3Es40              3714 	ld	a,#>_scratch
   0C74 CE 00              3715 	adc	a,#0x00
   0C76 67                 3716 	ld	h,a
   0C77 56                 3717 	ld	d,(hl)
   0C78 DD 72 FE           3718 	ld	-2 (ix),d
                           3719 ;demo.c:381: if (r < (cur_palette[i] >> 4)) r++;
   0C7B 3ErCA              3720 	ld	a,#<_cur_palette
   0C7D 81                 3721 	add	a,c
   0C7E 6F                 3722 	ld	l,a
   0C7F 3Es40              3723 	ld	a,#>_cur_palette
   0C81 CE 00              3724 	adc	a,#0x00
   0C83 67                 3725 	ld	h,a
   0C84 56                 3726 	ld	d,(hl)
   0C85 CB 3A              3727 	srl	d
   0C87 CB 3A              3728 	srl	d
   0C89 CB 3A              3729 	srl	d
   0C8B CB 3A              3730 	srl	d
   0C8D 7B                 3731 	ld	a,e
   0C8E 92                 3732 	sub	a,d
   0C8F 30 01              3733 	jr	NC,00104$
   0C91 1C                 3734 	inc	e
   0C92                    3735 00104$:
                           3736 ;demo.c:382: if (b < (cur_palette[i] & 0xf)) b++;
   0C92 3ErCA              3737 	ld	a,#<_cur_palette
   0C94 81                 3738 	add	a,c
   0C95 6F                 3739 	ld	l,a
   0C96 3Es40              3740 	ld	a,#>_cur_palette
   0C98 CE 00              3741 	adc	a,#0x00
   0C9A 67                 3742 	ld	h,a
   0C9B 7E                 3743 	ld	a,(hl)
   0C9C E6 0F              3744 	and	a,#0x0F
   0C9E 47                 3745 	ld	b,a
   0C9F DD 7E FF           3746 	ld	a,-1 (ix)
   0CA2 90                 3747 	sub	a,b
   0CA3 30 03              3748 	jr	NC,00106$
   0CA5 DD 34 FF           3749 	inc	-1 (ix)
   0CA8                    3750 00106$:
                           3751 ;demo.c:384: scratch[i] = (r << 4) | b;
   0CA8 3Er4A              3752 	ld	a,#<_scratch
   0CAA 81                 3753 	add	a,c
   0CAB 47                 3754 	ld	b,a
   0CAC 3Es40              3755 	ld	a,#>_scratch
   0CAE CE 00              3756 	adc	a,#0x00
   0CB0 57                 3757 	ld	d,a
   0CB1 7B                 3758 	ld	a,e
   0CB2 07                 3759 	rlca
   0CB3 07                 3760 	rlca
   0CB4 07                 3761 	rlca
   0CB5 07                 3762 	rlca
   0CB6 E6 F0              3763 	and	a,#0xF0
   0CB8 DD B6 FF           3764 	or	a,-1 (ix)
   0CBB 68                 3765 	ld	l,b
   0CBC 62                 3766 	ld	h,d
   0CBD 77                 3767 	ld	(hl),a
                           3768 ;demo.c:385: if (g < cur_palette[i+1]) scratch[i+1]++;
   0CBE 41                 3769 	ld	b,c
   0CBF 04                 3770 	inc	b
   0CC0 3ErCA              3771 	ld	a,#<_cur_palette
   0CC2 80                 3772 	add	a,b
   0CC3 5F                 3773 	ld	e,a
   0CC4 3Es40              3774 	ld	a,#>_cur_palette
   0CC6 CE 00              3775 	adc	a,#0x00
   0CC8 57                 3776 	ld	d,a
   0CC9 1A                 3777 	ld	a,(de)
   0CCA 5F                 3778 	ld	e,a
   0CCB DD 7E FE           3779 	ld	a,-2 (ix)
   0CCE 93                 3780 	sub	a,e
   0CCF 30 10              3781 	jr	NC,00111$
   0CD1 3Er4A              3782 	ld	a,#<_scratch
   0CD3 80                 3783 	add	a,b
   0CD4 47                 3784 	ld	b,a
   0CD5 3Es40              3785 	ld	a,#>_scratch
   0CD7 CE 00              3786 	adc	a,#0x00
   0CD9 5F                 3787 	ld	e,a
   0CDA 68                 3788 	ld	l,b
   0CDB 67                 3789 	ld	h,a
   0CDC 7E                 3790 	ld	a,(hl)
   0CDD 3C                 3791 	inc	a
   0CDE 68                 3792 	ld	l,b
   0CDF 63                 3793 	ld	h,e
   0CE0 77                 3794 	ld	(hl),a
   0CE1                    3795 00111$:
                           3796 ;demo.c:376: for(i = 0; i < 32; i+=2) {
   0CE1 0C                 3797 	inc	c
   0CE2 0C                 3798 	inc	c
   0CE3 C3r4Cs0C           3799 	jp	00109$
   0CE6                    3800 00112$:
                           3801 ;demo.c:389: vdp_load_palette(scratch);
   0CE6 21r4As40           3802 	ld	hl,#_scratch
   0CE9 E5                 3803 	push	hl
   0CEA CDr00s00           3804 	call	_vdp_load_palette
   0CED F1                 3805 	pop	af
   0CEE                    3806 00113$:
   0CEE DD F9              3807 	ld	sp,ix
   0CF0 DD E1              3808 	pop	ix
   0CF2 C9                 3809 	ret
   0CF3                    3810 _fadein_end::
                           3811 ;demo.c:401: void do_ymmm() {
                           3812 ;	---------------------------------
                           3813 ; Function do_ymmm
                           3814 ; ---------------------------------
   0CF3                    3815 _do_ymmm_start::
   0CF3                    3816 _do_ymmm:
   0CF3 DD E5              3817 	push	ix
   0CF5 DD 21 00 00        3818 	ld	ix,#0
   0CF9 DD 39              3819 	add	ix,sp
   0CFB F5                 3820 	push	af
                           3821 ;demo.c:405: if (tick > 32) { tick = 0; flipper++;}
   0CFC 3E 20              3822 	ld	a,#0x20
   0CFE FD 21r8Cs41        3823 	ld	iy,#_tick
   0D02 FD 96 00           3824 	sub	a,0 (iy)
   0D05 3E 00              3825 	ld	a,#0x00
   0D07 FD 21r8Cs41        3826 	ld	iy,#_tick
   0D0B FD 9E 01           3827 	sbc	a,1 (iy)
   0D0E F2r2Bs0D           3828 	jp	P,00102$
   0D11 21r8Cs41           3829 	ld	hl,#_tick + 0
   0D14 36 00              3830 	ld	(hl), #0x00
   0D16 21r8Ds41           3831 	ld	hl,#_tick + 1
   0D19 36 00              3832 	ld	(hl), #0x00
   0D1B FD 21rA7s41        3833 	ld	iy,#_flipper
   0D1F FD 34 00           3834 	inc	0 (iy)
   0D22 20 07              3835 	jr	NZ,00115$
   0D24 FD 21rA7s41        3836 	ld	iy,#_flipper
   0D28 FD 34 01           3837 	inc	1 (iy)
   0D2B                    3838 00115$:
   0D2B                    3839 00102$:
                           3840 ;demo.c:406: if (flipper > 10) { flipper = 0;}
   0D2B 3E 0A              3841 	ld	a,#0x0A
   0D2D FD 21rA7s41        3842 	ld	iy,#_flipper
   0D31 FD 96 00           3843 	sub	a,0 (iy)
   0D34 3E 00              3844 	ld	a,#0x00
   0D36 FD 21rA7s41        3845 	ld	iy,#_flipper
   0D3A FD 9E 01           3846 	sbc	a,1 (iy)
   0D3D F2r4As0D           3847 	jp	P,00104$
   0D40 21rA7s41           3848 	ld	hl,#_flipper + 0
   0D43 36 00              3849 	ld	(hl), #0x00
   0D45 21rA8s41           3850 	ld	hl,#_flipper + 1
   0D48 36 00              3851 	ld	(hl), #0x00
   0D4A                    3852 00104$:
                           3853 ;demo.c:408: ymmmf++;
   0D4A FD 21rA9s41        3854 	ld	iy,#_ymmmf
   0D4E FD 34 00           3855 	inc	0 (iy)
   0D51 20 07              3856 	jr	NZ,00116$
   0D53 FD 21rA9s41        3857 	ld	iy,#_ymmmf
   0D57 FD 34 01           3858 	inc	1 (iy)
   0D5A                    3859 00116$:
                           3860 ;demo.c:409: for (yofff = 0; yofff<212-step;yofff+=step) {
   0D5A 21rA5s41           3861 	ld	hl,#_yofff + 0
   0D5D 36 00              3862 	ld	(hl), #0x00
   0D5F                    3863 00105$:
   0D5F 21rA5s41           3864 	ld	hl,#_yofff + 0
   0D62 4E                 3865 	ld	c,(hl)
   0D63 06 00              3866 	ld	b,#0x00
   0D65 79                 3867 	ld	a,c
   0D66 D6 D2              3868 	sub	a,#0xD2
   0D68 78                 3869 	ld	a,b
   0D69 DE 00              3870 	sbc	a,#0x00
   0D6B F2rDFs0D           3871 	jp	P,00109$
                           3872 ;demo.c:410: xo = (sintabx[(yofff+ymmmf) & 255]);
   0D6E 21rA9s41           3873 	ld	hl,#_ymmmf
   0D71 79                 3874 	ld	a,c
   0D72 86                 3875 	add	a,(hl)
   0D73 5F                 3876 	ld	e,a
   0D74 78                 3877 	ld	a,b
   0D75 23                 3878 	inc	hl
   0D76 8E                 3879 	adc	a,(hl)
   0D77 16 00              3880 	ld	d,#0x00
   0D79 21r2Cs00           3881 	ld	hl,#_sintabx
   0D7C 19                 3882 	add	hl,de
   0D7D 7E                 3883 	ld	a,(hl)
   0D7E DD 77 FE           3884 	ld	-2 (ix),a
   0D81 DD 36 FF 00        3885 	ld	-1 (ix),#0x00
                           3886 ;demo.c:413: cmd.source_x = 0;
   0D85 21r8Es41           3887 	ld	hl,#_cmd
   0D88 36 00              3888 	ld	(hl),#0x00
   0D8A 23                 3889 	inc	hl
   0D8B 36 00              3890 	ld	(hl),#0x00
                           3891 ;demo.c:414: cmd.source_y = 0+yofff;
   0D8D 11r90s41           3892 	ld	de,#_cmd + 2
   0D90 EB                 3893 	ex	de,hl
   0D91 71                 3894 	ld	(hl),c
   0D92 23                 3895 	inc	hl
   0D93 70                 3896 	ld	(hl),b
                           3897 ;demo.c:415: cmd.dest_x = xo;
   0D94 11r92s41           3898 	ld	de,#_cmd + 4
   0D97 EB                 3899 	ex	de,hl
   0D98 DD 7E FE           3900 	ld	a,-2 (ix)
   0D9B 77                 3901 	ld	(hl),a
   0D9C 23                 3902 	inc	hl
   0D9D DD 7E FF           3903 	ld	a,-1 (ix)
   0DA0 77                 3904 	ld	(hl),a
                           3905 ;demo.c:416: cmd.dest_y = 3+yofff;
   0DA1 11r94s41           3906 	ld	de,#_cmd + 6
   0DA4 03                 3907 	inc	bc
   0DA5 03                 3908 	inc	bc
   0DA6 03                 3909 	inc	bc
   0DA7 6B                 3910 	ld	l,e
   0DA8 62                 3911 	ld	h,d
   0DA9 71                 3912 	ld	(hl),c
   0DAA 23                 3913 	inc	hl
   0DAB 70                 3914 	ld	(hl),b
                           3915 ;demo.c:417: cmd.size_x = 256;
   0DAC 21r96s41           3916 	ld	hl, #_cmd + 8
   0DAF 36 00              3917 	ld	(hl),#0x00
   0DB1 23                 3918 	inc	hl
   0DB2 36 01              3919 	ld	(hl),#0x01
                           3920 ;demo.c:418: cmd.size_y = 1;
   0DB4 21r98s41           3921 	ld	hl, #_cmd + 10
   0DB7 36 01              3922 	ld	(hl),#0x01
   0DB9 23                 3923 	inc	hl
   0DBA 36 00              3924 	ld	(hl),#0x00
                           3925 ;demo.c:419: cmd.data = 0;
                           3926 ;demo.c:420: cmd.argument = 0;
   0DBC 3E 00              3927 	ld	a,#0x00
   0DBE 32r9As41           3928 	ld	(#_cmd + 12),a
   0DC1 32r9Bs41           3929 	ld	(#_cmd + 13),a
                           3930 ;demo.c:421: cmd.command = 0xD0;
   0DC4 3E D0              3931 	ld	a,#0xD0
   0DC6 32r9Cs41           3932 	ld	(#_cmd + 14),a
                           3933 ;demo.c:424: vdp_copier(&cmd);
   0DC9 21r8Es41           3934 	ld	hl,#_cmd
   0DCC E5                 3935 	push	hl
   0DCD CDr00s00           3936 	call	_vdp_copier
   0DD0 F1                 3937 	pop	af
                           3938 ;demo.c:409: for (yofff = 0; yofff<212-step;yofff+=step) {
   0DD1 21rA5s41           3939 	ld	hl,#_yofff + 0
   0DD4 4E                 3940 	ld	c,(hl)
   0DD5 21rA5s41           3941 	ld	hl,#_yofff
   0DD8 79                 3942 	ld	a,c
   0DD9 C6 02              3943 	add	a,#0x02
   0DDB 77                 3944 	ld	(hl),a
   0DDC C3r5Fs0D           3945 	jp	00105$
   0DDF                    3946 00109$:
   0DDF DD F9              3947 	ld	sp,ix
   0DE1 DD E1              3948 	pop	ix
   0DE3 C9                 3949 	ret
   0DE4                    3950 _do_ymmm_end::
                           3951 ;demo.c:441: void do_blocks() {
                           3952 ;	---------------------------------
                           3953 ; Function do_blocks
                           3954 ; ---------------------------------
   0DE4                    3955 _do_blocks_start::
   0DE4                    3956 _do_blocks:
   0DE4 DD E5              3957 	push	ix
   0DE6 DD 21 00 00        3958 	ld	ix,#0
   0DEA DD 39              3959 	add	ix,sp
   0DEC 21 FA FF           3960 	ld	hl,#-6
   0DEF 39                 3961 	add	hl,sp
   0DF0 F9                 3962 	ld	sp,hl
                           3963 ;demo.c:443: int ys = 0;
   0DF1 DD 36 FC 00        3964 	ld	-4 (ix),#0x00
   0DF5 DD 36 FD 00        3965 	ld	-3 (ix),#0x00
                           3966 ;demo.c:444: int ye = 0;
   0DF9 DD 36 FA 00        3967 	ld	-6 (ix),#0x00
   0DFD DD 36 FB 00        3968 	ld	-5 (ix),#0x00
                           3969 ;demo.c:446: vdp_register(VDP_VOFFSET,0);
   0E01 21 17 00           3970 	ld	hl,#0x0017
   0E04 E5                 3971 	push	hl
   0E05 CDr00s00           3972 	call	_vdp_register
   0E08 F1                 3973 	pop	af
                           3974 ;demo.c:448: if (block_init == 0) {
   0E09 AF                 3975 	xor	a,a
   0E0A FD 21rABs41        3976 	ld	iy,#_block_init
   0E0E FD B6 00           3977 	or	a,0 (iy)
   0E11 C2r79s0E           3978 	jp	NZ,00108$
                           3979 ;demo.c:450: vdp_set_screen5();
   0E14 CDr00s00           3980 	call	_vdp_set_screen5
                           3981 ;demo.c:452: vdp_register(2, 0x5F);
   0E17 21 02 5F           3982 	ld	hl,#0x5F02
   0E1A E5                 3983 	push	hl
   0E1B CDr00s00           3984 	call	_vdp_register
   0E1E F1                 3985 	pop	af
                           3986 ;demo.c:454: for(i=0;i<16;i++) btab[i] = i*16;
   0E1F DD 36 FE 00        3987 	ld	-2 (ix),#0x00
   0E23 DD 36 FF 00        3988 	ld	-1 (ix),#0x00
   0E27                    3989 00110$:
   0E27 DD 7E FE           3990 	ld	a,-2 (ix)
   0E2A D6 10              3991 	sub	a,#0x10
   0E2C DD 7E FF           3992 	ld	a,-1 (ix)
   0E2F DE 00              3993 	sbc	a,#0x00
   0E31 F2r69s0E           3994 	jp	P,00113$
   0E34 DD 4E FE           3995 	ld	c,-2 (ix)
   0E37 DD 46 FF           3996 	ld	b,-1 (ix)
   0E3A CB 21              3997 	sla	c
   0E3C CB 10              3998 	rl	b
   0E3E 21rB4s41           3999 	ld	hl,#_btab
   0E41 09                 4000 	add	hl,bc
   0E42 4D                 4001 	ld	c,l
   0E43 44                 4002 	ld	b,h
   0E44 DD 5E FE           4003 	ld	e,-2 (ix)
   0E47 DD 56 FF           4004 	ld	d,-1 (ix)
   0E4A CB 23              4005 	sla	e
   0E4C CB 12              4006 	rl	d
   0E4E CB 23              4007 	sla	e
   0E50 CB 12              4008 	rl	d
   0E52 CB 23              4009 	sla	e
   0E54 CB 12              4010 	rl	d
   0E56 CB 23              4011 	sla	e
   0E58 CB 12              4012 	rl	d
   0E5A 69                 4013 	ld	l,c
   0E5B 60                 4014 	ld	h,b
   0E5C 73                 4015 	ld	(hl),e
   0E5D 23                 4016 	inc	hl
   0E5E 72                 4017 	ld	(hl),d
   0E5F DD 34 FE           4018 	inc	-2 (ix)
   0E62 20 03              4019 	jr	NZ,00139$
   0E64 DD 34 FF           4020 	inc	-1 (ix)
   0E67                    4021 00139$:
   0E67 18 BE              4022 	jr	00110$
   0E69                    4023 00113$:
                           4024 ;demo.c:455: vdp_load_palette(block_palette);
   0E69 21r0As41           4025 	ld	hl,#_block_palette
   0E6C E5                 4026 	push	hl
   0E6D CDr00s00           4027 	call	_vdp_load_palette
   0E70 F1                 4028 	pop	af
                           4029 ;demo.c:457: block_init = 1;
   0E71 21rABs41           4030 	ld	hl,#_block_init + 0
   0E74 36 01              4031 	ld	(hl), #0x01
   0E76 C3r02s10           4032 	jp	00122$
   0E79                    4033 00108$:
                           4034 ;demo.c:461: if (flof == 0) { ys = 0; ye = 8; }
   0E79 3ArD4s41           4035 	ld	a,(#_flof+0)
   0E7C FD 21rD4s41        4036 	ld	iy,#_flof
   0E80 FD B6 01           4037 	or	a,1 (iy)
   0E83 20 10              4038 	jr	NZ,00102$
   0E85 DD 36 FC 00        4039 	ld	-4 (ix),#0x00
   0E89 DD 36 FD 00        4040 	ld	-3 (ix),#0x00
   0E8D DD 36 FA 08        4041 	ld	-6 (ix),#0x08
   0E91 DD 36 FB 00        4042 	ld	-5 (ix),#0x00
   0E95                    4043 00102$:
                           4044 ;demo.c:462: if (flof == 1) { ys = 8; ye = 16; }
   0E95 3ArD4s41           4045 	ld	a,(#_flof+0)
   0E98 D6 01              4046 	sub	a,#0x01
   0E9A 20 06              4047 	jr	NZ,00140$
   0E9C 3ArD5s41           4048 	ld	a,(#_flof+1)
   0E9F B7                 4049 	or	a,a
   0EA0 28 02              4050 	jr	Z,00141$
   0EA2                    4051 00140$:
   0EA2 18 10              4052 	jr	00104$
   0EA4                    4053 00141$:
   0EA4 DD 36 FC 08        4054 	ld	-4 (ix),#0x08
   0EA8 DD 36 FD 00        4055 	ld	-3 (ix),#0x00
   0EAC DD 36 FA 10        4056 	ld	-6 (ix),#0x10
   0EB0 DD 36 FB 00        4057 	ld	-5 (ix),#0x00
   0EB4                    4058 00104$:
                           4059 ;demo.c:464: for(bty=3;bty<11;bty++) {
   0EB4 FD 21rB2s41        4060 	ld	iy,#_bty
   0EB8 FD 36 00 03        4061 	ld	0 (iy),#0x03
   0EBC FD 21rB2s41        4062 	ld	iy,#_bty
   0EC0 FD 36 01 00        4063 	ld	1 (iy),#0x00
   0EC4                    4064 00118$:
   0EC4 3ArB2s41           4065 	ld	a,(#_bty+0)
   0EC7 D6 0B              4066 	sub	a,#0x0B
   0EC9 3ArB3s41           4067 	ld	a,(#_bty+1)
   0ECC DE 00              4068 	sbc	a,#0x00
   0ECE F2rD9s0F           4069 	jp	P,00121$
                           4070 ;demo.c:465: for(btx=ys;btx<ye;btx++) {
   0ED1 DD 7E FC           4071 	ld	a,-4 (ix)
   0ED4 FD 21rB0s41        4072 	ld	iy,#_btx
   0ED8 FD 77 00           4073 	ld	0 (iy),a
   0EDB DD 7E FD           4074 	ld	a,-3 (ix)
   0EDE FD 21rB0s41        4075 	ld	iy,#_btx
   0EE2 FD 77 01           4076 	ld	1 (iy),a
   0EE5                    4077 00114$:
   0EE5 3ArB0s41           4078 	ld	a,(#_btx+0)
   0EE8 DD 96 FA           4079 	sub	a,-6 (ix)
   0EEB 3ArB1s41           4080 	ld	a,(#_btx+1)
   0EEE DD 9E FB           4081 	sbc	a,-5 (ix)
   0EF1 F2rC6s0F           4082 	jp	P,00120$
                           4083 ;demo.c:466: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0EF4 3Ar00s00           4084 	ld	a,(#_PLY_PSGReg8+0)
   0EF7 FD 21r00s00        4085 	ld	iy,#_PLY_PSGReg9
   0EFB FD A6 00           4086 	and	a,0 (iy)
   0EFE 21r00s00           4087 	ld	hl,#_PLY_PSGReg10 + 0
   0F01 B6                 4088 	or	a,(hl)
   0F02 4F                 4089 	ld	c,a
   0F03 CB 39              4090 	srl	c
   0F05 21rACs41           4091 	ld	hl,#_bsx + 0
   0F08 71                 4092 	ld	(hl), c
   0F09 21rADs41           4093 	ld	hl,#_bsx + 1
   0F0C 36 00              4094 	ld	(hl), #0x00
                           4095 ;demo.c:467: bsy = PLY_PSGReg10;
   0F0E 3Ar00s00           4096 	ld	a,(#_PLY_PSGReg10+0)
   0F11 21rAEs41           4097 	ld	hl,#_bsy + 0
   0F14 77                 4098 	ld	(hl), a
   0F15 21rAFs41           4099 	ld	hl,#_bsy + 1
   0F18 36 00              4100 	ld	(hl), #0x00
                           4101 ;demo.c:468: cmd.source_x = btab[bsx];
   0F1A 21rACs41           4102 	ld	hl,#_bsx + 0
   0F1D 4E                 4103 	ld	c,(hl)
   0F1E 21rADs41           4104 	ld	hl,#_bsx + 1
   0F21 46                 4105 	ld	b,(hl)
   0F22 CB 21              4106 	sla	c
   0F24 CB 10              4107 	rl	b
   0F26 21rB4s41           4108 	ld	hl,#_btab
   0F29 09                 4109 	add	hl,bc
   0F2A 4E                 4110 	ld	c,(hl)
   0F2B 23                 4111 	inc	hl
   0F2C 46                 4112 	ld	b,(hl)
   0F2D 21r8Es41           4113 	ld	hl,#_cmd
   0F30 71                 4114 	ld	(hl),c
   0F31 23                 4115 	inc	hl
   0F32 70                 4116 	ld	(hl),b
                           4117 ;demo.c:469: cmd.source_y = 768+btab[bsy];
   0F33 01r90s41           4118 	ld	bc,#_cmd + 2
   0F36 21rAEs41           4119 	ld	hl,#_bsy + 0
   0F39 5E                 4120 	ld	e,(hl)
   0F3A 21rAFs41           4121 	ld	hl,#_bsy + 1
   0F3D 56                 4122 	ld	d,(hl)
   0F3E CB 23              4123 	sla	e
   0F40 CB 12              4124 	rl	d
   0F42 21rB4s41           4125 	ld	hl,#_btab
   0F45 19                 4126 	add	hl,de
   0F46 5E                 4127 	ld	e,(hl)
   0F47 23                 4128 	inc	hl
   0F48 56                 4129 	ld	d,(hl)
   0F49 21 00 03           4130 	ld	hl,#0x0300
   0F4C 19                 4131 	add	hl,de
   0F4D EB                 4132 	ex	de,hl
   0F4E 69                 4133 	ld	l,c
   0F4F 60                 4134 	ld	h,b
   0F50 73                 4135 	ld	(hl),e
   0F51 23                 4136 	inc	hl
   0F52 72                 4137 	ld	(hl),d
                           4138 ;demo.c:470: cmd.dest_x = btab[btx];
   0F53 01r92s41           4139 	ld	bc,#_cmd + 4
   0F56 21rB0s41           4140 	ld	hl,#_btx + 0
   0F59 5E                 4141 	ld	e,(hl)
   0F5A 21rB1s41           4142 	ld	hl,#_btx + 1
   0F5D 56                 4143 	ld	d,(hl)
   0F5E CB 23              4144 	sla	e
   0F60 CB 12              4145 	rl	d
   0F62 21rB4s41           4146 	ld	hl,#_btab
   0F65 19                 4147 	add	hl,de
   0F66 5E                 4148 	ld	e,(hl)
   0F67 23                 4149 	inc	hl
   0F68 56                 4150 	ld	d,(hl)
   0F69 69                 4151 	ld	l,c
   0F6A 60                 4152 	ld	h,b
   0F6B 73                 4153 	ld	(hl),e
   0F6C 23                 4154 	inc	hl
   0F6D 72                 4155 	ld	(hl),d
                           4156 ;demo.c:471: cmd.dest_y = 512+btab[bty];
   0F6E 01r94s41           4157 	ld	bc,#_cmd + 6
   0F71 21rB2s41           4158 	ld	hl,#_bty + 0
   0F74 5E                 4159 	ld	e,(hl)
   0F75 21rB3s41           4160 	ld	hl,#_bty + 1
   0F78 56                 4161 	ld	d,(hl)
   0F79 CB 23              4162 	sla	e
   0F7B CB 12              4163 	rl	d
   0F7D 21rB4s41           4164 	ld	hl,#_btab
   0F80 19                 4165 	add	hl,de
   0F81 5E                 4166 	ld	e,(hl)
   0F82 23                 4167 	inc	hl
   0F83 56                 4168 	ld	d,(hl)
   0F84 21 00 02           4169 	ld	hl,#0x0200
   0F87 19                 4170 	add	hl,de
   0F88 EB                 4171 	ex	de,hl
   0F89 69                 4172 	ld	l,c
   0F8A 60                 4173 	ld	h,b
   0F8B 73                 4174 	ld	(hl),e
   0F8C 23                 4175 	inc	hl
   0F8D 72                 4176 	ld	(hl),d
                           4177 ;demo.c:472: cmd.size_x = 16;
   0F8E 21r96s41           4178 	ld	hl, #_cmd + 8
   0F91 36 10              4179 	ld	(hl),#0x10
   0F93 23                 4180 	inc	hl
   0F94 36 00              4181 	ld	(hl),#0x00
                           4182 ;demo.c:473: cmd.size_y = 16;
   0F96 21r98s41           4183 	ld	hl, #_cmd + 10
   0F99 36 10              4184 	ld	(hl),#0x10
   0F9B 23                 4185 	inc	hl
   0F9C 36 00              4186 	ld	(hl),#0x00
                           4187 ;demo.c:474: cmd.data = 0;
                           4188 ;demo.c:475: cmd.argument = 0x00;
   0F9E 3E 00              4189 	ld	a,#0x00
   0FA0 32r9As41           4190 	ld	(#_cmd + 12),a
   0FA3 32r9Bs41           4191 	ld	(#_cmd + 13),a
                           4192 ;demo.c:476: cmd.command = 0xD0;
   0FA6 3E D0              4193 	ld	a,#0xD0
   0FA8 32r9Cs41           4194 	ld	(#_cmd + 14),a
                           4195 ;demo.c:477: vdp_copier(&cmd);
   0FAB 21r8Es41           4196 	ld	hl,#_cmd
   0FAE E5                 4197 	push	hl
   0FAF CDr00s00           4198 	call	_vdp_copier
   0FB2 F1                 4199 	pop	af
                           4200 ;demo.c:465: for(btx=ys;btx<ye;btx++) {
   0FB3 FD 21rB0s41        4201 	ld	iy,#_btx
   0FB7 FD 34 00           4202 	inc	0 (iy)
   0FBA 20 07              4203 	jr	NZ,00150$
   0FBC FD 21rB0s41        4204 	ld	iy,#_btx
   0FC0 FD 34 01           4205 	inc	1 (iy)
   0FC3                    4206 00150$:
   0FC3 C3rE5s0E           4207 	jp	00114$
   0FC6                    4208 00120$:
                           4209 ;demo.c:464: for(bty=3;bty<11;bty++) {
   0FC6 FD 21rB2s41        4210 	ld	iy,#_bty
   0FCA FD 34 00           4211 	inc	0 (iy)
   0FCD 20 07              4212 	jr	NZ,00151$
   0FCF FD 21rB2s41        4213 	ld	iy,#_bty
   0FD3 FD 34 01           4214 	inc	1 (iy)
   0FD6                    4215 00151$:
   0FD6 C3rC4s0E           4216 	jp	00118$
   0FD9                    4217 00121$:
                           4218 ;demo.c:481: flof++;
   0FD9 FD 21rD4s41        4219 	ld	iy,#_flof
   0FDD FD 34 00           4220 	inc	0 (iy)
   0FE0 20 07              4221 	jr	NZ,00152$
   0FE2 FD 21rD4s41        4222 	ld	iy,#_flof
   0FE6 FD 34 01           4223 	inc	1 (iy)
   0FE9                    4224 00152$:
                           4225 ;demo.c:482: if (flof == 2) flof = 0;
   0FE9 3ArD4s41           4226 	ld	a,(#_flof+0)
   0FEC D6 02              4227 	sub	a,#0x02
   0FEE 20 06              4228 	jr	NZ,00153$
   0FF0 3ArD5s41           4229 	ld	a,(#_flof+1)
   0FF3 B7                 4230 	or	a,a
   0FF4 28 02              4231 	jr	Z,00154$
   0FF6                    4232 00153$:
   0FF6 18 0A              4233 	jr	00122$
   0FF8                    4234 00154$:
   0FF8 21rD4s41           4235 	ld	hl,#_flof + 0
   0FFB 36 00              4236 	ld	(hl), #0x00
   0FFD 21rD5s41           4237 	ld	hl,#_flof + 1
   1000 36 00              4238 	ld	(hl), #0x00
   1002                    4239 00122$:
   1002 DD F9              4240 	ld	sp,ix
   1004 DD E1              4241 	pop	ix
   1006 C9                 4242 	ret
   1007                    4243 _do_blocks_end::
                           4244 ;demo.c:490: void raster_effu() {
                           4245 ;	---------------------------------
                           4246 ; Function raster_effu
                           4247 ; ---------------------------------
   1007                    4248 _raster_effu_start::
   1007                    4249 _raster_effu:
                           4250 ;demo.c:491: vdp_register(VDP_VOFFSET,0);
   1007 21 17 00           4251 	ld	hl,#0x0017
   100A E5                 4252 	push	hl
   100B CDr00s00           4253 	call	_vdp_register
   100E F1                 4254 	pop	af
                           4255 ;demo.c:492: waitVB();
   100F 76                 4256 		halt 
                           4257 ;demo.c:494: vdp_register(1,0x40); // disable vblank
   1010 21 01 40           4258 	ld	hl,#0x4001
   1013 E5                 4259 	push	hl
   1014 CDr00s00           4260 	call	_vdp_register
                           4261 ;demo.c:496: for (linenum = 40; linenum < 212; linenum+=4) {
   1017 3E 28              4262 	ld	a,#0x28
   1019 32rD6s41           4263 	ld	(#_linenum + 0),a
   101C F1                 4264 	pop	af
   101D FD 21rD6s41        4265 	ld	iy,#_linenum
   1021 FD 36 01 00        4266 	ld	1 (iy),#0x00
   1025                    4267 00101$:
   1025 3ArD6s41           4268 	ld	a,(#_linenum+0)
   1028 D6 D4              4269 	sub	a,#0xD4
   102A 3ArD7s41           4270 	ld	a,(#_linenum+1)
   102D DE 00              4271 	sbc	a,#0x00
   102F F2r60s10           4272 	jp	P,00104$
                           4273 ;demo.c:497: vdp_register(19,linenum); // interrupt on line
   1032 3ArD6s41           4274 	ld	a,(#_linenum+0)
   1035 F5                 4275 	push	af
   1036 33                 4276 	inc	sp
   1037 3E 13              4277 	ld	a,#0x13
   1039 F5                 4278 	push	af
   103A 33                 4279 	inc	sp
   103B CDr00s00           4280 	call	_vdp_register
   103E F1                 4281 	pop	af
                           4282 ;demo.c:498: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   103F 21 00 16           4283 	ld	hl,#0x1600
   1042 E5                 4284 	push	hl
   1043 CDr00s00           4285 	call	_vdp_register
   1046 F1                 4286 	pop	af
                           4287 ;demo.c:500: waitVB();
   1047 76                 4288 		halt 
                           4289 ;demo.c:496: for (linenum = 40; linenum < 212; linenum+=4) {
   1048 21rD6s41           4290 	ld	hl,#_linenum
   104B 7E                 4291 	ld	a,(hl)
   104C C6 04              4292 	add	a,#0x04
   104E 23                 4293 	inc	hl
   104F 2B                 4294 	dec	hl
   1050 C5                 4295 	push	bc
   1051 4F                 4296 	ld	c, a
   1052 23                 4297 	inc	hl
   1053 7E                 4298 	ld	a, (hl)
   1054 47                 4299 	ld	b, a
   1055 79                 4300 	ld	a, c
   1056 2B                 4301 	dec	hl
   1057 77                 4302 	ld	(hl), a
   1058 78                 4303 	ld	a, b
   1059 C1                 4304 	pop	bc
   105A CE 00              4305 	adc	a,#0x00
   105C 23                 4306 	inc	hl
   105D 77                 4307 	ld	(hl),a
   105E 18 C5              4308 	jr	00101$
   1060                    4309 00104$:
                           4310 ;demo.c:503: vdp_register(VDP_VOFFSET,0);
   1060 21 17 00           4311 	ld	hl,#0x0017
   1063 E5                 4312 	push	hl
   1064 CDr00s00           4313 	call	_vdp_register
   1067 F1                 4314 	pop	af
                           4315 ;demo.c:517: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   1068 21 00 06           4316 	ld	hl,#0x0600
   106B E5                 4317 	push	hl
   106C CDr00s00           4318 	call	_vdp_register
   106F F1                 4319 	pop	af
                           4320 ;demo.c:518: vdp_register(1,0x60); // enable vblank
   1070 21 01 60           4321 	ld	hl,#0x6001
   1073 E5                 4322 	push	hl
   1074 CDr00s00           4323 	call	_vdp_register
   1077 F1                 4324 	pop	af
   1078 C9                 4325 	ret
   1079                    4326 _raster_effu_end::
                           4327 ;demo.c:550: void do_2xletter(char cc) {
                           4328 ;	---------------------------------
                           4329 ; Function do_2xletter
                           4330 ; ---------------------------------
   1079                    4331 _do_2xletter_start::
   1079                    4332 _do_2xletter:
   1079 DD E5              4333 	push	ix
   107B DD 21 00 00        4334 	ld	ix,#0
   107F DD 39              4335 	add	ix,sp
   1081 21 F2 FF           4336 	ld	hl,#-14
   1084 39                 4337 	add	hl,sp
   1085 F9                 4338 	ld	sp,hl
                           4339 ;demo.c:551: int cidx = cc - 65;
   1086 DD 4E 04           4340 	ld	c,4 (ix)
   1089 DD 7E 04           4341 	ld	a,4 (ix)
   108C 17                 4342 	rla	
   108D 9F                 4343 	sbc	a,a
   108E 47                 4344 	ld	b,a
   108F 79                 4345 	ld	a,c
   1090 C6 BF              4346 	add	a,#0xBF
   1092 DD 77 FE           4347 	ld	-2 (ix),a
   1095 78                 4348 	ld	a,b
   1096 CE FF              4349 	adc	a,#0xFF
   1098 DD 77 FF           4350 	ld	-1 (ix),a
                           4351 ;demo.c:554: for (y=0;y<8;y++) {
   109B 3ErA6              4352 	ld	a,#<_font_w
   109D DD 86 FE           4353 	add	a,-2 (ix)
   10A0 5F                 4354 	ld	e,a
   10A1 3Es13              4355 	ld	a,#>_font_w
   10A3 DD 8E FF           4356 	adc	a,-1 (ix)
   10A6 57                 4357 	ld	d,a
   10A7 DD 36 FA 00        4358 	ld	-6 (ix),#0x00
   10AB DD 36 FB 00        4359 	ld	-5 (ix),#0x00
   10AF DD 36 F6 00        4360 	ld	-10 (ix),#0x00
   10B3 DD 36 F7 00        4361 	ld	-9 (ix),#0x00
   10B7                    4362 00105$:
   10B7 DD 7E FA           4363 	ld	a,-6 (ix)
   10BA D6 08              4364 	sub	a,#0x08
   10BC DD 7E FB           4365 	ld	a,-5 (ix)
   10BF DE 00              4366 	sbc	a,#0x00
   10C1 F2rFEs12           4367 	jp	P,00108$
                           4368 ;demo.c:555: for (x=0;x<font_w[cidx];x++) {
   10C4 DD 36 FC 00        4369 	ld	-4 (ix),#0x00
   10C8 DD 36 FD 00        4370 	ld	-3 (ix),#0x00
   10CC DD 36 F4 00        4371 	ld	-12 (ix),#0x00
   10D0 DD 36 F5 00        4372 	ld	-11 (ix),#0x00
   10D4                    4373 00101$:
   10D4 1A                 4374 	ld	a,(de)
   10D5 4F                 4375 	ld	c,a
   10D6 06 00              4376 	ld	b,#0x00
   10D8 DD 7E FC           4377 	ld	a,-4 (ix)
   10DB 91                 4378 	sub	a,c
   10DC DD 7E FD           4379 	ld	a,-3 (ix)
   10DF 98                 4380 	sbc	a,b
   10E0 F2rD7s12           4381 	jp	P,00115$
                           4382 ;demo.c:556: cmd.source_x = 127+font_x[cidx]+x;
   10E3 3Er26              4383 	ld	a,#<_font_x
   10E5 DD 86 FE           4384 	add	a,-2 (ix)
   10E8 4F                 4385 	ld	c,a
   10E9 3Es13              4386 	ld	a,#>_font_x
   10EB DD 8E FF           4387 	adc	a,-1 (ix)
   10EE 47                 4388 	ld	b,a
   10EF 0A                 4389 	ld	a,(bc)
   10F0 4F                 4390 	ld	c,a
   10F1 06 00              4391 	ld	b,#0x00
   10F3 21 7F 00           4392 	ld	hl,#0x007F
   10F6 09                 4393 	add	hl,bc
   10F7 4D                 4394 	ld	c,l
   10F8 44                 4395 	ld	b,h
   10F9 79                 4396 	ld	a,c
   10FA DD 86 FC           4397 	add	a,-4 (ix)
   10FD 4F                 4398 	ld	c,a
   10FE 78                 4399 	ld	a,b
   10FF DD 8E FD           4400 	adc	a,-3 (ix)
   1102 47                 4401 	ld	b,a
   1103 21r8Es41           4402 	ld	hl,#_cmd
   1106 71                 4403 	ld	(hl),c
   1107 23                 4404 	inc	hl
   1108 70                 4405 	ld	(hl),b
                           4406 ;demo.c:557: cmd.source_y = 512+font_y[cidx]+y;
   1109 23                 4407 	inc	hl
   110A DD 75 F2           4408 	ld	-14 (ix),l
   110D DD 74 F3           4409 	ld	-13 (ix),h
   1110 3Er66              4410 	ld	a,#<_font_y
   1112 DD 86 FE           4411 	add	a,-2 (ix)
   1115 4F                 4412 	ld	c,a
   1116 3Es13              4413 	ld	a,#>_font_y
   1118 DD 8E FF           4414 	adc	a,-1 (ix)
   111B 47                 4415 	ld	b,a
   111C 0A                 4416 	ld	a,(bc)
   111D 4F                 4417 	ld	c,a
   111E 06 00              4418 	ld	b,#0x00
   1120 21 00 02           4419 	ld	hl,#0x0200
   1123 09                 4420 	add	hl,bc
   1124 4D                 4421 	ld	c,l
   1125 44                 4422 	ld	b,h
   1126 79                 4423 	ld	a,c
   1127 DD 86 FA           4424 	add	a,-6 (ix)
   112A 4F                 4425 	ld	c,a
   112B 78                 4426 	ld	a,b
   112C DD 8E FB           4427 	adc	a,-5 (ix)
   112F 47                 4428 	ld	b,a
   1130 DD 6E F2           4429 	ld	l,-14 (ix)
   1133 DD 66 F3           4430 	ld	h,-13 (ix)
   1136 71                 4431 	ld	(hl),c
   1137 23                 4432 	inc	hl
   1138 70                 4433 	ld	(hl),b
                           4434 ;demo.c:558: cmd.size_x = 1;
   1139 21r96s41           4435 	ld	hl, #_cmd + 8
   113C 36 01              4436 	ld	(hl),#0x01
   113E 23                 4437 	inc	hl
   113F 36 00              4438 	ld	(hl),#0x00
                           4439 ;demo.c:559: cmd.size_y = 1;
   1141 21r98s41           4440 	ld	hl, #_cmd + 10
   1144 36 01              4441 	ld	(hl),#0x01
   1146 23                 4442 	inc	hl
   1147 36 00              4443 	ld	(hl),#0x00
                           4444 ;demo.c:560: cmd.argument = 0x00;
   1149 3E 00              4445 	ld	a,#0x00
   114B 32r9Bs41           4446 	ld	(#_cmd + 13),a
                           4447 ;demo.c:561: cmd.command = 0x40; // get pixel
   114E 3E 40              4448 	ld	a,#0x40
   1150 32r9Cs41           4449 	ld	(#_cmd + 14),a
                           4450 ;demo.c:562: vdp_copier(&cmd);
   1153 D5                 4451 	push	de
   1154 21r8Es41           4452 	ld	hl,#_cmd
   1157 E5                 4453 	push	hl
   1158 CDr00s00           4454 	call	_vdp_copier
   115B F1                 4455 	pop	af
   115C D1                 4456 	pop	de
                           4457 ;demo.c:564: col = vdp2_status(7);
   115D D5                 4458 	push	de
   115E 3E 07              4459 	ld	a,#0x07
   1160 F5                 4460 	push	af
   1161 33                 4461 	inc	sp
   1162 CDr00s00           4462 	call	_vdp2_status
   1165 33                 4463 	inc	sp
   1166 4D                 4464 	ld	c,l
   1167 D1                 4465 	pop	de
   1168 DD 71 F8           4466 	ld	-8 (ix),c
   116B DD 36 F9 00        4467 	ld	-7 (ix),#0x00
                           4468 ;demo.c:566: cmd.data = col;
   116F 01r9As41           4469 	ld	bc,#_cmd + 12
   1172 DD 7E F8           4470 	ld	a,-8 (ix)
   1175 02                 4471 	ld	(bc),a
                           4472 ;demo.c:567: cmd.dest_x = lx+x*3;
   1176 21r92s41           4473 	ld	hl,#_cmd + 4
   1179 DD 75 F2           4474 	ld	-14 (ix),l
   117C DD 74 F3           4475 	ld	-13 (ix),h
   117F 21rD8s41           4476 	ld	hl,#_lx + 0
   1182 4E                 4477 	ld	c,(hl)
   1183 06 00              4478 	ld	b,#0x00
   1185 79                 4479 	ld	a,c
   1186 DD 86 F4           4480 	add	a,-12 (ix)
   1189 4F                 4481 	ld	c,a
   118A 78                 4482 	ld	a,b
   118B DD 8E F5           4483 	adc	a,-11 (ix)
   118E 47                 4484 	ld	b,a
   118F DD 6E F2           4485 	ld	l,-14 (ix)
   1192 DD 66 F3           4486 	ld	h,-13 (ix)
   1195 71                 4487 	ld	(hl),c
   1196 23                 4488 	inc	hl
   1197 70                 4489 	ld	(hl),b
                           4490 ;demo.c:568: cmd.dest_y = ly+y*3;
   1198 21r94s41           4491 	ld	hl,#_cmd + 6
   119B DD 75 F2           4492 	ld	-14 (ix),l
   119E DD 74 F3           4493 	ld	-13 (ix),h
   11A1 21rD9s41           4494 	ld	hl,#_ly + 0
   11A4 4E                 4495 	ld	c,(hl)
   11A5 06 00              4496 	ld	b,#0x00
   11A7 79                 4497 	ld	a,c
   11A8 DD 86 F6           4498 	add	a,-10 (ix)
   11AB 4F                 4499 	ld	c,a
   11AC 78                 4500 	ld	a,b
   11AD DD 8E F7           4501 	adc	a,-9 (ix)
   11B0 47                 4502 	ld	b,a
   11B1 DD 6E F2           4503 	ld	l,-14 (ix)
   11B4 DD 66 F3           4504 	ld	h,-13 (ix)
   11B7 71                 4505 	ld	(hl),c
   11B8 23                 4506 	inc	hl
   11B9 70                 4507 	ld	(hl),b
                           4508 ;demo.c:571: cmd.argument = 0x00;
   11BA 3E 00              4509 	ld	a,#0x00
   11BC 32r9Bs41           4510 	ld	(#_cmd + 13),a
                           4511 ;demo.c:572: cmd.command = 0x50; // rect
   11BF 3E 50              4512 	ld	a,#0x50
   11C1 32r9Cs41           4513 	ld	(#_cmd + 14),a
                           4514 ;demo.c:573: vdp_copier(&cmd);
   11C4 D5                 4515 	push	de
   11C5 21r8Es41           4516 	ld	hl,#_cmd
   11C8 E5                 4517 	push	hl
   11C9 CDr00s00           4518 	call	_vdp_copier
   11CC F1                 4519 	pop	af
   11CD D1                 4520 	pop	de
                           4521 ;demo.c:574: cmd.dest_x = 1+lx+x*3;
   11CE 21r92s41           4522 	ld	hl,#_cmd + 4
   11D1 DD 75 F2           4523 	ld	-14 (ix),l
   11D4 DD 74 F3           4524 	ld	-13 (ix),h
   11D7 21rD8s41           4525 	ld	hl,#_lx + 0
   11DA 4E                 4526 	ld	c,(hl)
   11DB 06 00              4527 	ld	b,#0x00
   11DD 03                 4528 	inc	bc
   11DE 79                 4529 	ld	a,c
   11DF DD 86 F4           4530 	add	a,-12 (ix)
   11E2 4F                 4531 	ld	c,a
   11E3 78                 4532 	ld	a,b
   11E4 DD 8E F5           4533 	adc	a,-11 (ix)
   11E7 47                 4534 	ld	b,a
   11E8 DD 6E F2           4535 	ld	l,-14 (ix)
   11EB DD 66 F3           4536 	ld	h,-13 (ix)
   11EE 71                 4537 	ld	(hl),c
   11EF 23                 4538 	inc	hl
   11F0 70                 4539 	ld	(hl),b
                           4540 ;demo.c:575: cmd.dest_y = ly+y*3;
   11F1 21r94s41           4541 	ld	hl,#_cmd + 6
   11F4 DD 75 F2           4542 	ld	-14 (ix),l
   11F7 DD 74 F3           4543 	ld	-13 (ix),h
   11FA 21rD9s41           4544 	ld	hl,#_ly + 0
   11FD 4E                 4545 	ld	c,(hl)
   11FE 06 00              4546 	ld	b,#0x00
   1200 79                 4547 	ld	a,c
   1201 DD 86 F6           4548 	add	a,-10 (ix)
   1204 4F                 4549 	ld	c,a
   1205 78                 4550 	ld	a,b
   1206 DD 8E F7           4551 	adc	a,-9 (ix)
   1209 47                 4552 	ld	b,a
   120A DD 6E F2           4553 	ld	l,-14 (ix)
   120D DD 66 F3           4554 	ld	h,-13 (ix)
   1210 71                 4555 	ld	(hl),c
   1211 23                 4556 	inc	hl
   1212 70                 4557 	ld	(hl),b
                           4558 ;demo.c:576: vdp_copier(&cmd);
   1213 D5                 4559 	push	de
   1214 21r8Es41           4560 	ld	hl,#_cmd
   1217 E5                 4561 	push	hl
   1218 CDr00s00           4562 	call	_vdp_copier
   121B F1                 4563 	pop	af
   121C D1                 4564 	pop	de
                           4565 ;demo.c:577: cmd.dest_x = 1+lx+x*3;
   121D 21r92s41           4566 	ld	hl,#_cmd + 4
   1220 DD 75 F2           4567 	ld	-14 (ix),l
   1223 DD 74 F3           4568 	ld	-13 (ix),h
   1226 21rD8s41           4569 	ld	hl,#_lx + 0
   1229 4E                 4570 	ld	c,(hl)
   122A 06 00              4571 	ld	b,#0x00
   122C 03                 4572 	inc	bc
   122D 79                 4573 	ld	a,c
   122E DD 86 F4           4574 	add	a,-12 (ix)
   1231 4F                 4575 	ld	c,a
   1232 78                 4576 	ld	a,b
   1233 DD 8E F5           4577 	adc	a,-11 (ix)
   1236 47                 4578 	ld	b,a
   1237 DD 6E F2           4579 	ld	l,-14 (ix)
   123A DD 66 F3           4580 	ld	h,-13 (ix)
   123D 71                 4581 	ld	(hl),c
   123E 23                 4582 	inc	hl
   123F 70                 4583 	ld	(hl),b
                           4584 ;demo.c:578: cmd.dest_y = 1+ly+y*3;
   1240 21r94s41           4585 	ld	hl,#_cmd + 6
   1243 DD 75 F2           4586 	ld	-14 (ix),l
   1246 DD 74 F3           4587 	ld	-13 (ix),h
   1249 21rD9s41           4588 	ld	hl,#_ly + 0
   124C 4E                 4589 	ld	c,(hl)
   124D 06 00              4590 	ld	b,#0x00
   124F 03                 4591 	inc	bc
   1250 79                 4592 	ld	a,c
   1251 DD 86 F6           4593 	add	a,-10 (ix)
   1254 4F                 4594 	ld	c,a
   1255 78                 4595 	ld	a,b
   1256 DD 8E F7           4596 	adc	a,-9 (ix)
   1259 47                 4597 	ld	b,a
   125A DD 6E F2           4598 	ld	l,-14 (ix)
   125D DD 66 F3           4599 	ld	h,-13 (ix)
   1260 71                 4600 	ld	(hl),c
   1261 23                 4601 	inc	hl
   1262 70                 4602 	ld	(hl),b
                           4603 ;demo.c:579: vdp_copier(&cmd);
   1263 D5                 4604 	push	de
   1264 21r8Es41           4605 	ld	hl,#_cmd
   1267 E5                 4606 	push	hl
   1268 CDr00s00           4607 	call	_vdp_copier
   126B F1                 4608 	pop	af
   126C D1                 4609 	pop	de
                           4610 ;demo.c:580: cmd.dest_x = lx+x*3;
   126D 21r92s41           4611 	ld	hl,#_cmd + 4
   1270 DD 75 F2           4612 	ld	-14 (ix),l
   1273 DD 74 F3           4613 	ld	-13 (ix),h
   1276 21rD8s41           4614 	ld	hl,#_lx + 0
   1279 4E                 4615 	ld	c,(hl)
   127A 06 00              4616 	ld	b,#0x00
   127C 79                 4617 	ld	a,c
   127D DD 86 F4           4618 	add	a,-12 (ix)
   1280 4F                 4619 	ld	c,a
   1281 78                 4620 	ld	a,b
   1282 DD 8E F5           4621 	adc	a,-11 (ix)
   1285 47                 4622 	ld	b,a
   1286 DD 6E F2           4623 	ld	l,-14 (ix)
   1289 DD 66 F3           4624 	ld	h,-13 (ix)
   128C 71                 4625 	ld	(hl),c
   128D 23                 4626 	inc	hl
   128E 70                 4627 	ld	(hl),b
                           4628 ;demo.c:581: cmd.dest_y = 1+ly+y*3;
   128F 21r94s41           4629 	ld	hl,#_cmd + 6
   1292 DD 75 F2           4630 	ld	-14 (ix),l
   1295 DD 74 F3           4631 	ld	-13 (ix),h
   1298 21rD9s41           4632 	ld	hl,#_ly + 0
   129B 4E                 4633 	ld	c,(hl)
   129C 06 00              4634 	ld	b,#0x00
   129E 03                 4635 	inc	bc
   129F 79                 4636 	ld	a,c
   12A0 DD 86 F6           4637 	add	a,-10 (ix)
   12A3 4F                 4638 	ld	c,a
   12A4 78                 4639 	ld	a,b
   12A5 DD 8E F7           4640 	adc	a,-9 (ix)
   12A8 47                 4641 	ld	b,a
   12A9 DD 6E F2           4642 	ld	l,-14 (ix)
   12AC DD 66 F3           4643 	ld	h,-13 (ix)
   12AF 71                 4644 	ld	(hl),c
   12B0 23                 4645 	inc	hl
   12B1 70                 4646 	ld	(hl),b
                           4647 ;demo.c:582: vdp_copier(&cmd);
   12B2 D5                 4648 	push	de
   12B3 21r8Es41           4649 	ld	hl,#_cmd
   12B6 E5                 4650 	push	hl
   12B7 CDr00s00           4651 	call	_vdp_copier
   12BA F1                 4652 	pop	af
   12BB D1                 4653 	pop	de
                           4654 ;demo.c:555: for (x=0;x<font_w[cidx];x++) {
   12BC DD 7E F4           4655 	ld	a,-12 (ix)
   12BF C6 03              4656 	add	a,#0x03
   12C1 DD 77 F4           4657 	ld	-12 (ix),a
   12C4 DD 7E F5           4658 	ld	a,-11 (ix)
   12C7 CE 00              4659 	adc	a,#0x00
   12C9 DD 77 F5           4660 	ld	-11 (ix),a
   12CC DD 34 FC           4661 	inc	-4 (ix)
   12CF 20 03              4662 	jr	NZ,00117$
   12D1 DD 34 FD           4663 	inc	-3 (ix)
   12D4                    4664 00117$:
   12D4 C3rD4s10           4665 	jp	00101$
   12D7                    4666 00115$:
   12D7 DD 7E FC           4667 	ld	a,-4 (ix)
   12DA DD 77 F2           4668 	ld	-14 (ix),a
   12DD DD 7E FD           4669 	ld	a,-3 (ix)
   12E0 DD 77 F3           4670 	ld	-13 (ix),a
                           4671 ;demo.c:554: for (y=0;y<8;y++) {
   12E3 DD 7E F6           4672 	ld	a,-10 (ix)
   12E6 C6 03              4673 	add	a,#0x03
   12E8 DD 77 F6           4674 	ld	-10 (ix),a
   12EB DD 7E F7           4675 	ld	a,-9 (ix)
   12EE CE 00              4676 	adc	a,#0x00
   12F0 DD 77 F7           4677 	ld	-9 (ix),a
   12F3 DD 34 FA           4678 	inc	-6 (ix)
   12F6 20 03              4679 	jr	NZ,00118$
   12F8 DD 34 FB           4680 	inc	-5 (ix)
   12FB                    4681 00118$:
   12FB C3rB7s10           4682 	jp	00105$
   12FE                    4683 00108$:
                           4684 ;demo.c:589: lx+=font_w[cidx]-1+(x*4);
   12FE 3ErA6              4685 	ld	a,#<_font_w
   1300 DD 86 FE           4686 	add	a,-2 (ix)
   1303 4F                 4687 	ld	c,a
   1304 3Es13              4688 	ld	a,#>_font_w
   1306 DD 8E FF           4689 	adc	a,-1 (ix)
   1309 47                 4690 	ld	b,a
   130A 0A                 4691 	ld	a,(bc)
   130B 4F                 4692 	ld	c,a
   130C 0D                 4693 	dec	c
   130D DD 46 F2           4694 	ld	b,-14 (ix)
   1310 CB 20              4695 	sla	b
   1312 CB 20              4696 	sla	b
   1314 79                 4697 	ld	a,c
   1315 80                 4698 	add	a,b
   1316 4F                 4699 	ld	c,a
   1317 21rD8s41           4700 	ld	hl,#_lx + 0
   131A 46                 4701 	ld	b,(hl)
   131B 21rD8s41           4702 	ld	hl,#_lx
   131E 78                 4703 	ld	a,b
   131F 81                 4704 	add	a,c
   1320 77                 4705 	ld	(hl),a
   1321 DD F9              4706 	ld	sp,ix
   1323 DD E1              4707 	pop	ix
   1325 C9                 4708 	ret
   1326                    4709 _do_2xletter_end::
   1326                    4710 _font_x:
   1326 01                 4711 	.db #0x01
   1327 09                 4712 	.db #0x09
   1328 11                 4713 	.db #0x11
   1329 19                 4714 	.db #0x19
   132A 21                 4715 	.db #0x21
   132B 29                 4716 	.db #0x29
   132C 31                 4717 	.db #0x31
   132D 39                 4718 	.db #0x39
   132E 41                 4719 	.db #0x41
   132F 46                 4720 	.db #0x46
   1330 4E                 4721 	.db #0x4E
   1331 56                 4722 	.db #0x56
   1332 5E                 4723 	.db #0x5E
   1333 01                 4724 	.db #0x01
   1334 0A                 4725 	.db #0x0A
   1335 12                 4726 	.db #0x12
   1336 1A                 4727 	.db #0x1A
   1337 23                 4728 	.db #0x23
   1338 2B                 4729 	.db #0x2B
   1339 33                 4730 	.db #0x33
   133A 3C                 4731 	.db #0x3C
   133B 44                 4732 	.db #0x44
   133C 4C                 4733 	.db #0x4C
   133D 56                 4734 	.db #0x56
   133E 5E                 4735 	.db #0x5E
   133F 67                 4736 	.db #0x67
   1340 00                 4737 	.db #0x00
   1341 00                 4738 	.db #0x00
   1342 00                 4739 	.db #0x00
   1343 00                 4740 	.db #0x00
   1344 00                 4741 	.db #0x00
   1345 00                 4742 	.db #0x00
   1346 01                 4743 	.db #0x01
   1347 09                 4744 	.db #0x09
   1348 11                 4745 	.db #0x11
   1349 18                 4746 	.db #0x18
   134A 20                 4747 	.db #0x20
   134B 28                 4748 	.db #0x28
   134C 2F                 4749 	.db #0x2F
   134D 37                 4750 	.db #0x37
   134E 3F                 4751 	.db #0x3F
   134F 45                 4752 	.db #0x45
   1350 4C                 4753 	.db #0x4C
   1351 54                 4754 	.db #0x54
   1352 5A                 4755 	.db #0x5A
   1353 64                 4756 	.db #0x64
   1354 01                 4757 	.db #0x01
   1355 09                 4758 	.db #0x09
   1356 11                 4759 	.db #0x11
   1357 19                 4760 	.db #0x19
   1358 21                 4761 	.db #0x21
   1359 29                 4762 	.db #0x29
   135A 30                 4763 	.db #0x30
   135B 38                 4764 	.db #0x38
   135C 40                 4765 	.db #0x40
   135D 4A                 4766 	.db #0x4A
   135E 52                 4767 	.db #0x52
   135F 5A                 4768 	.db #0x5A
   1360 00                 4769 	.db 0x00
   1361 00                 4770 	.db 0x00
   1362 00                 4771 	.db 0x00
   1363 00                 4772 	.db 0x00
   1364 00                 4773 	.db 0x00
   1365 00                 4774 	.db 0x00
   1366                    4775 _font_y:
   1366 1C                 4776 	.db #0x1C
   1367 1C                 4777 	.db #0x1C
   1368 1C                 4778 	.db #0x1C
   1369 1C                 4779 	.db #0x1C
   136A 1C                 4780 	.db #0x1C
   136B 1C                 4781 	.db #0x1C
   136C 1C                 4782 	.db #0x1C
   136D 1C                 4783 	.db #0x1C
   136E 1C                 4784 	.db #0x1C
   136F 1C                 4785 	.db #0x1C
   1370 1C                 4786 	.db #0x1C
   1371 1C                 4787 	.db #0x1C
   1372 1C                 4788 	.db #0x1C
   1373 25                 4789 	.db #0x25
   1374 25                 4790 	.db #0x25
   1375 25                 4791 	.db #0x25
   1376 25                 4792 	.db #0x25
   1377 25                 4793 	.db #0x25
   1378 25                 4794 	.db #0x25
   1379 25                 4795 	.db #0x25
   137A 25                 4796 	.db #0x25
   137B 25                 4797 	.db #0x25
   137C 25                 4798 	.db #0x25
   137D 25                 4799 	.db #0x25
   137E 25                 4800 	.db #0x25
   137F 25                 4801 	.db #0x25
   1380 00                 4802 	.db #0x00
   1381 00                 4803 	.db #0x00
   1382 00                 4804 	.db #0x00
   1383 00                 4805 	.db #0x00
   1384 00                 4806 	.db #0x00
   1385 00                 4807 	.db #0x00
   1386 37                 4808 	.db #0x37
   1387 37                 4809 	.db #0x37
   1388 37                 4810 	.db #0x37
   1389 37                 4811 	.db #0x37
   138A 37                 4812 	.db #0x37
   138B 37                 4813 	.db #0x37
   138C 37                 4814 	.db #0x37
   138D 37                 4815 	.db #0x37
   138E 37                 4816 	.db #0x37
   138F 37                 4817 	.db #0x37
   1390 37                 4818 	.db #0x37
   1391 37                 4819 	.db #0x37
   1392 37                 4820 	.db #0x37
   1393 37                 4821 	.db #0x37
   1394 40                 4822 	.db #0x40
   1395 40                 4823 	.db #0x40
   1396 40                 4824 	.db #0x40
   1397 40                 4825 	.db #0x40
   1398 40                 4826 	.db #0x40
   1399 40                 4827 	.db #0x40
   139A 40                 4828 	.db #0x40
   139B 40                 4829 	.db #0x40
   139C 40                 4830 	.db #0x40
   139D 40                 4831 	.db #0x40
   139E 40                 4832 	.db #0x40
   139F 40                 4833 	.db #0x40
   13A0 00                 4834 	.db 0x00
   13A1 00                 4835 	.db 0x00
   13A2 00                 4836 	.db 0x00
   13A3 00                 4837 	.db 0x00
   13A4 00                 4838 	.db 0x00
   13A5 00                 4839 	.db 0x00
   13A6                    4840 _font_w:
   13A6 07                 4841 	.db #0x07
   13A7 07                 4842 	.db #0x07
   13A8 07                 4843 	.db #0x07
   13A9 07                 4844 	.db #0x07
   13AA 07                 4845 	.db #0x07
   13AB 07                 4846 	.db #0x07
   13AC 07                 4847 	.db #0x07
   13AD 07                 4848 	.db #0x07
   13AE 04                 4849 	.db #0x04
   13AF 07                 4850 	.db #0x07
   13B0 07                 4851 	.db #0x07
   13B1 07                 4852 	.db #0x07
   13B2 09                 4853 	.db #0x09
   13B3 08                 4854 	.db #0x08
   13B4 07                 4855 	.db #0x07
   13B5 07                 4856 	.db #0x07
   13B6 08                 4857 	.db #0x08
   13B7 07                 4858 	.db #0x07
   13B8 07                 4859 	.db #0x07
   13B9 08                 4860 	.db #0x08
   13BA 07                 4861 	.db #0x07
   13BB 07                 4862 	.db #0x07
   13BC 09                 4863 	.db #0x09
   13BD 07                 4864 	.db #0x07
   13BE 08                 4865 	.db #0x08
   13BF 07                 4866 	.db #0x07
   13C0 00                 4867 	.db #0x00
   13C1 00                 4868 	.db #0x00
   13C2 00                 4869 	.db #0x00
   13C3 00                 4870 	.db #0x00
   13C4 00                 4871 	.db #0x00
   13C5 00                 4872 	.db #0x00
   13C6 07                 4873 	.db #0x07
   13C7 07                 4874 	.db #0x07
   13C8 06                 4875 	.db #0x06
   13C9 07                 4876 	.db #0x07
   13CA 07                 4877 	.db #0x07
   13CB 07                 4878 	.db #0x07
   13CC 07                 4879 	.db #0x07
   13CD 07                 4880 	.db #0x07
   13CE 05                 4881 	.db #0x05
   13CF 06                 4882 	.db #0x06
   13D0 07                 4883 	.db #0x07
   13D1 05                 4884 	.db #0x05
   13D2 09                 4885 	.db #0x09
   13D3 07                 4886 	.db #0x07
   13D4 07                 4887 	.db #0x07
   13D5 07                 4888 	.db #0x07
   13D6 07                 4889 	.db #0x07
   13D7 07                 4890 	.db #0x07
   13D8 07                 4891 	.db #0x07
   13D9 06                 4892 	.db #0x06
   13DA 07                 4893 	.db #0x07
   13DB 07                 4894 	.db #0x07
   13DC 09                 4895 	.db #0x09
   13DD 07                 4896 	.db #0x07
   13DE 07                 4897 	.db #0x07
   13DF 07                 4898 	.db #0x07
   13E0 00                 4899 	.db 0x00
   13E1 00                 4900 	.db 0x00
   13E2 00                 4901 	.db 0x00
   13E3 00                 4902 	.db 0x00
   13E4 00                 4903 	.db 0x00
   13E5 00                 4904 	.db 0x00
                           4905 ;demo.c:593: void do_letter(char cc) {
                           4906 ;	---------------------------------
                           4907 ; Function do_letter
                           4908 ; ---------------------------------
   13E6                    4909 _do_letter_start::
   13E6                    4910 _do_letter:
   13E6 DD E5              4911 	push	ix
   13E8 DD 21 00 00        4912 	ld	ix,#0
   13EC DD 39              4913 	add	ix,sp
   13EE F5                 4914 	push	af
                           4915 ;demo.c:594: int cidx = cc - 65;
   13EF DD 4E 04           4916 	ld	c,4 (ix)
   13F2 DD 7E 04           4917 	ld	a,4 (ix)
   13F5 17                 4918 	rla	
   13F6 9F                 4919 	sbc	a,a
   13F7 47                 4920 	ld	b,a
   13F8 79                 4921 	ld	a,c
   13F9 C6 BF              4922 	add	a,#0xBF
   13FB DD 77 FE           4923 	ld	-2 (ix),a
   13FE 78                 4924 	ld	a,b
   13FF CE FF              4925 	adc	a,#0xFF
   1401 DD 77 FF           4926 	ld	-1 (ix),a
                           4927 ;demo.c:595: cmd.source_x = 127+font_x[cidx];
   1404 3Er26              4928 	ld	a,#<_font_x
   1406 DD 86 FE           4929 	add	a,-2 (ix)
   1409 5F                 4930 	ld	e,a
   140A 3Es13              4931 	ld	a,#>_font_x
   140C DD 8E FF           4932 	adc	a,-1 (ix)
   140F 57                 4933 	ld	d,a
   1410 1A                 4934 	ld	a,(de)
   1411 5F                 4935 	ld	e,a
   1412 16 00              4936 	ld	d,#0x00
   1414 21 7F 00           4937 	ld	hl,#0x007F
   1417 19                 4938 	add	hl,de
   1418 EB                 4939 	ex	de,hl
   1419 21r8Es41           4940 	ld	hl,#_cmd
   141C 73                 4941 	ld	(hl),e
   141D 23                 4942 	inc	hl
   141E 72                 4943 	ld	(hl),d
                           4944 ;demo.c:596: cmd.source_y = 512+font_y[cidx];
   141F 11r90s41           4945 	ld	de,#_cmd + 2
   1422 3Er66              4946 	ld	a,#<_font_y
   1424 DD 86 FE           4947 	add	a,-2 (ix)
   1427 4F                 4948 	ld	c,a
   1428 3Es13              4949 	ld	a,#>_font_y
   142A DD 8E FF           4950 	adc	a,-1 (ix)
   142D 47                 4951 	ld	b,a
   142E 0A                 4952 	ld	a,(bc)
   142F 4F                 4953 	ld	c,a
   1430 06 00              4954 	ld	b,#0x00
   1432 21 00 02           4955 	ld	hl,#0x0200
   1435 09                 4956 	add	hl,bc
   1436 4D                 4957 	ld	c,l
   1437 44                 4958 	ld	b,h
   1438 EB                 4959 	ex	de,hl
   1439 71                 4960 	ld	(hl),c
   143A 23                 4961 	inc	hl
   143B 70                 4962 	ld	(hl),b
                           4963 ;demo.c:597: cmd.dest_x = lx;
   143C 01r92s41           4964 	ld	bc,#_cmd + 4
   143F 21rD8s41           4965 	ld	hl,#_lx + 0
   1442 5E                 4966 	ld	e,(hl)
   1443 16 00              4967 	ld	d,#0x00
   1445 69                 4968 	ld	l,c
   1446 60                 4969 	ld	h,b
   1447 73                 4970 	ld	(hl),e
   1448 23                 4971 	inc	hl
   1449 72                 4972 	ld	(hl),d
                           4973 ;demo.c:598: cmd.dest_y = ly;
   144A 01r94s41           4974 	ld	bc,#_cmd + 6
   144D 21rD9s41           4975 	ld	hl,#_ly + 0
   1450 5E                 4976 	ld	e,(hl)
   1451 16 00              4977 	ld	d,#0x00
   1453 69                 4978 	ld	l,c
   1454 60                 4979 	ld	h,b
   1455 73                 4980 	ld	(hl),e
   1456 23                 4981 	inc	hl
   1457 72                 4982 	ld	(hl),d
                           4983 ;demo.c:599: cmd.size_x = font_w[cidx];
   1458 01r96s41           4984 	ld	bc,#_cmd + 8
   145B 3ErA6              4985 	ld	a,#<_font_w
   145D DD 86 FE           4986 	add	a,-2 (ix)
   1460 5F                 4987 	ld	e,a
   1461 3Es13              4988 	ld	a,#>_font_w
   1463 DD 8E FF           4989 	adc	a,-1 (ix)
   1466 57                 4990 	ld	d,a
   1467 1A                 4991 	ld	a,(de)
   1468 5F                 4992 	ld	e,a
   1469 16 00              4993 	ld	d,#0x00
   146B 69                 4994 	ld	l,c
   146C 60                 4995 	ld	h,b
   146D 73                 4996 	ld	(hl),e
   146E 23                 4997 	inc	hl
   146F 72                 4998 	ld	(hl),d
                           4999 ;demo.c:600: cmd.size_y = 8;
   1470 21r98s41           5000 	ld	hl, #_cmd + 10
   1473 36 08              5001 	ld	(hl),#0x08
   1475 23                 5002 	inc	hl
   1476 36 00              5003 	ld	(hl),#0x00
                           5004 ;demo.c:601: cmd.argument = 0x00;
   1478 3E 00              5005 	ld	a,#0x00
   147A 32r9Bs41           5006 	ld	(#_cmd + 13),a
                           5007 ;demo.c:602: cmd.command = 0x90; // logical vram to vram
   147D 3E 90              5008 	ld	a,#0x90
   147F 32r9Cs41           5009 	ld	(#_cmd + 14),a
                           5010 ;demo.c:603: vdp_copier(&cmd);
   1482 21r8Es41           5011 	ld	hl,#_cmd
   1485 E5                 5012 	push	hl
   1486 CDr00s00           5013 	call	_vdp_copier
   1489 F1                 5014 	pop	af
                           5015 ;demo.c:604: lx+=font_w[cidx]-1;
   148A 3ErA6              5016 	ld	a,#<_font_w
   148C DD 86 FE           5017 	add	a,-2 (ix)
   148F 4F                 5018 	ld	c,a
   1490 3Es13              5019 	ld	a,#>_font_w
   1492 DD 8E FF           5020 	adc	a,-1 (ix)
   1495 47                 5021 	ld	b,a
   1496 0A                 5022 	ld	a,(bc)
   1497 4F                 5023 	ld	c,a
   1498 0D                 5024 	dec	c
   1499 21rD8s41           5025 	ld	hl,#_lx
   149C 7E                 5026 	ld	a,(hl)
   149D 81                 5027 	add	a,c
   149E 77                 5028 	ld	(hl),a
   149F DD F9              5029 	ld	sp,ix
   14A1 DD E1              5030 	pop	ix
   14A3 C9                 5031 	ret
   14A4                    5032 _do_letter_end::
                           5033 ;demo.c:608: void do_letter_tall(char cc) {
                           5034 ;	---------------------------------
                           5035 ; Function do_letter_tall
                           5036 ; ---------------------------------
   14A4                    5037 _do_letter_tall_start::
   14A4                    5038 _do_letter_tall:
   14A4 DD E5              5039 	push	ix
   14A6 DD 21 00 00        5040 	ld	ix,#0
   14AA DD 39              5041 	add	ix,sp
   14AC F5                 5042 	push	af
                           5043 ;demo.c:609: int cidx = cc - 65;
   14AD DD 4E 04           5044 	ld	c,4 (ix)
   14B0 DD 7E 04           5045 	ld	a,4 (ix)
   14B3 17                 5046 	rla	
   14B4 9F                 5047 	sbc	a,a
   14B5 47                 5048 	ld	b,a
   14B6 79                 5049 	ld	a,c
   14B7 C6 BF              5050 	add	a,#0xBF
   14B9 DD 77 FE           5051 	ld	-2 (ix),a
   14BC 78                 5052 	ld	a,b
   14BD CE FF              5053 	adc	a,#0xFF
   14BF DD 77 FF           5054 	ld	-1 (ix),a
                           5055 ;demo.c:610: cmd.source_x = 127+font_x[cidx];
   14C2 3Er26              5056 	ld	a,#<_font_x
   14C4 DD 86 FE           5057 	add	a,-2 (ix)
   14C7 5F                 5058 	ld	e,a
   14C8 3Es13              5059 	ld	a,#>_font_x
   14CA DD 8E FF           5060 	adc	a,-1 (ix)
   14CD 57                 5061 	ld	d,a
   14CE 1A                 5062 	ld	a,(de)
   14CF 5F                 5063 	ld	e,a
   14D0 16 00              5064 	ld	d,#0x00
   14D2 21 7F 00           5065 	ld	hl,#0x007F
   14D5 19                 5066 	add	hl,de
   14D6 EB                 5067 	ex	de,hl
   14D7 21r8Es41           5068 	ld	hl,#_cmd
   14DA 73                 5069 	ld	(hl),e
   14DB 23                 5070 	inc	hl
   14DC 72                 5071 	ld	(hl),d
                           5072 ;demo.c:611: cmd.source_y = 512+font_y[cidx]-1;
   14DD 11r90s41           5073 	ld	de,#_cmd + 2
   14E0 3Er66              5074 	ld	a,#<_font_y
   14E2 DD 86 FE           5075 	add	a,-2 (ix)
   14E5 4F                 5076 	ld	c,a
   14E6 3Es13              5077 	ld	a,#>_font_y
   14E8 DD 8E FF           5078 	adc	a,-1 (ix)
   14EB 47                 5079 	ld	b,a
   14EC 0A                 5080 	ld	a,(bc)
   14ED 4F                 5081 	ld	c,a
   14EE 06 00              5082 	ld	b,#0x00
   14F0 21 FF 01           5083 	ld	hl,#0x01FF
   14F3 09                 5084 	add	hl,bc
   14F4 4D                 5085 	ld	c,l
   14F5 44                 5086 	ld	b,h
   14F6 EB                 5087 	ex	de,hl
   14F7 71                 5088 	ld	(hl),c
   14F8 23                 5089 	inc	hl
   14F9 70                 5090 	ld	(hl),b
                           5091 ;demo.c:612: cmd.dest_x = lx;
   14FA 01r92s41           5092 	ld	bc,#_cmd + 4
   14FD 21rD8s41           5093 	ld	hl,#_lx + 0
   1500 5E                 5094 	ld	e,(hl)
   1501 16 00              5095 	ld	d,#0x00
   1503 69                 5096 	ld	l,c
   1504 60                 5097 	ld	h,b
   1505 73                 5098 	ld	(hl),e
   1506 23                 5099 	inc	hl
   1507 72                 5100 	ld	(hl),d
                           5101 ;demo.c:613: cmd.dest_y = ly;
   1508 01r94s41           5102 	ld	bc,#_cmd + 6
   150B 21rD9s41           5103 	ld	hl,#_ly + 0
   150E 5E                 5104 	ld	e,(hl)
   150F 16 00              5105 	ld	d,#0x00
   1511 69                 5106 	ld	l,c
   1512 60                 5107 	ld	h,b
   1513 73                 5108 	ld	(hl),e
   1514 23                 5109 	inc	hl
   1515 72                 5110 	ld	(hl),d
                           5111 ;demo.c:614: cmd.size_x = font_w[cidx];
   1516 01r96s41           5112 	ld	bc,#_cmd + 8
   1519 3ErA6              5113 	ld	a,#<_font_w
   151B DD 86 FE           5114 	add	a,-2 (ix)
   151E 5F                 5115 	ld	e,a
   151F 3Es13              5116 	ld	a,#>_font_w
   1521 DD 8E FF           5117 	adc	a,-1 (ix)
   1524 57                 5118 	ld	d,a
   1525 1A                 5119 	ld	a,(de)
   1526 5F                 5120 	ld	e,a
   1527 16 00              5121 	ld	d,#0x00
   1529 69                 5122 	ld	l,c
   152A 60                 5123 	ld	h,b
   152B 73                 5124 	ld	(hl),e
   152C 23                 5125 	inc	hl
   152D 72                 5126 	ld	(hl),d
                           5127 ;demo.c:615: cmd.size_y = 10;
   152E 21r98s41           5128 	ld	hl, #_cmd + 10
   1531 36 0A              5129 	ld	(hl),#0x0A
   1533 23                 5130 	inc	hl
   1534 36 00              5131 	ld	(hl),#0x00
                           5132 ;demo.c:616: cmd.argument = 0x00;
   1536 3E 00              5133 	ld	a,#0x00
   1538 32r9Bs41           5134 	ld	(#_cmd + 13),a
                           5135 ;demo.c:617: cmd.command = 0x90; // logical vram to vram
   153B 3E 90              5136 	ld	a,#0x90
   153D 32r9Cs41           5137 	ld	(#_cmd + 14),a
                           5138 ;demo.c:618: vdp_copier(&cmd);
   1540 21r8Es41           5139 	ld	hl,#_cmd
   1543 E5                 5140 	push	hl
   1544 CDr00s00           5141 	call	_vdp_copier
   1547 F1                 5142 	pop	af
                           5143 ;demo.c:619: lx+=font_w[cidx]-1;
   1548 3ErA6              5144 	ld	a,#<_font_w
   154A DD 86 FE           5145 	add	a,-2 (ix)
   154D 4F                 5146 	ld	c,a
   154E 3Es13              5147 	ld	a,#>_font_w
   1550 DD 8E FF           5148 	adc	a,-1 (ix)
   1553 47                 5149 	ld	b,a
   1554 0A                 5150 	ld	a,(bc)
   1555 4F                 5151 	ld	c,a
   1556 0D                 5152 	dec	c
   1557 21rD8s41           5153 	ld	hl,#_lx
   155A 7E                 5154 	ld	a,(hl)
   155B 81                 5155 	add	a,c
   155C 77                 5156 	ld	(hl),a
   155D DD F9              5157 	ld	sp,ix
   155F DD E1              5158 	pop	ix
   1561 C9                 5159 	ret
   1562                    5160 _do_letter_tall_end::
                           5161 ;demo.c:622: void drawstr(char* str, uint8_t x, uint8_t y) {
                           5162 ;	---------------------------------
                           5163 ; Function drawstr
                           5164 ; ---------------------------------
   1562                    5165 _drawstr_start::
   1562                    5166 _drawstr:
   1562 DD E5              5167 	push	ix
   1564 DD 21 00 00        5168 	ld	ix,#0
   1568 DD 39              5169 	add	ix,sp
                           5170 ;demo.c:623: char* c = str;
   156A DD 4E 04           5171 	ld	c,4 (ix)
   156D DD 46 05           5172 	ld	b,5 (ix)
                           5173 ;demo.c:624: lx = x;
   1570 DD 5E 06           5174 	ld	e,6 (ix)
   1573 21rD8s41           5175 	ld	hl,#_lx + 0
   1576 73                 5176 	ld	(hl), e
                           5177 ;demo.c:625: ly = y;
   1577 DD 7E 07           5178 	ld	a,7 (ix)
   157A 21rD9s41           5179 	ld	hl,#_ly + 0
   157D 77                 5180 	ld	(hl), a
                           5181 ;demo.c:626: while (*c) {
   157E                    5182 00107$:
   157E 0A                 5183 	ld	a,(bc)
   157F 57                 5184 	ld	d,a
   1580 B7                 5185 	or	a,a
   1581 28 42              5186 	jr	Z,00110$
                           5187 ;demo.c:627: char ltr = *c++; 
   1583 03                 5188 	inc	bc
                           5189 ;demo.c:628: if (ltr == ' ') lx+=4;
   1584 7A                 5190 	ld	a,d
   1585 D6 20              5191 	sub	a,#0x20
   1587 20 1E              5192 	jr	NZ,00105$
   1589 FD 21rD8s41        5193 	ld	iy,#_lx
   158D FD 34 00           5194 	inc	0 (iy)
   1590 FD 21rD8s41        5195 	ld	iy,#_lx
   1594 FD 34 00           5196 	inc	0 (iy)
   1597 FD 21rD8s41        5197 	ld	iy,#_lx
   159B FD 34 00           5198 	inc	0 (iy)
   159E FD 21rD8s41        5199 	ld	iy,#_lx
   15A2 FD 34 00           5200 	inc	0 (iy)
   15A5 18 D7              5201 	jr	00107$
   15A7                    5202 00105$:
                           5203 ;demo.c:629: else if (ltr == '_') { ly+=9; lx = x; }
   15A7 7A                 5204 	ld	a,d
   15A8 D6 5F              5205 	sub	a,#0x5F
   15AA 20 0D              5206 	jr	NZ,00102$
   15AC 21rD9s41           5207 	ld	hl,#_ly
   15AF 7E                 5208 	ld	a,(hl)
   15B0 C6 09              5209 	add	a,#0x09
   15B2 77                 5210 	ld	(hl),a
   15B3 21rD8s41           5211 	ld	hl,#_lx + 0
   15B6 73                 5212 	ld	(hl), e
   15B7 18 C5              5213 	jr	00107$
   15B9                    5214 00102$:
                           5215 ;demo.c:630: else do_letter(ltr);
   15B9 C5                 5216 	push	bc
   15BA D5                 5217 	push	de
   15BB D5                 5218 	push	de
   15BC 33                 5219 	inc	sp
   15BD CDrE6s13           5220 	call	_do_letter
   15C0 33                 5221 	inc	sp
   15C1 D1                 5222 	pop	de
   15C2 C1                 5223 	pop	bc
   15C3 18 B9              5224 	jr	00107$
   15C5                    5225 00110$:
   15C5 DD E1              5226 	pop	ix
   15C7 C9                 5227 	ret
   15C8                    5228 _drawstr_end::
                           5229 ;demo.c:634: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           5230 ;	---------------------------------
                           5231 ; Function drawstr2x
                           5232 ; ---------------------------------
   15C8                    5233 _drawstr2x_start::
   15C8                    5234 _drawstr2x:
   15C8 DD E5              5235 	push	ix
   15CA DD 21 00 00        5236 	ld	ix,#0
   15CE DD 39              5237 	add	ix,sp
                           5238 ;demo.c:635: char* c = str;
   15D0 DD 4E 04           5239 	ld	c,4 (ix)
   15D3 DD 46 05           5240 	ld	b,5 (ix)
                           5241 ;demo.c:636: lx = x;
   15D6 DD 5E 06           5242 	ld	e,6 (ix)
   15D9 21rD8s41           5243 	ld	hl,#_lx + 0
   15DC 73                 5244 	ld	(hl), e
                           5245 ;demo.c:637: ly = y;
   15DD DD 7E 07           5246 	ld	a,7 (ix)
   15E0 21rD9s41           5247 	ld	hl,#_ly + 0
   15E3 77                 5248 	ld	(hl), a
                           5249 ;demo.c:638: while (*c) {
   15E4                    5250 00107$:
   15E4 0A                 5251 	ld	a,(bc)
   15E5 57                 5252 	ld	d,a
   15E6 B7                 5253 	or	a,a
   15E7 28 2D              5254 	jr	Z,00110$
                           5255 ;demo.c:639: char ltr = *c++; 
   15E9 03                 5256 	inc	bc
                           5257 ;demo.c:640: if (ltr == ' ') lx+=4*4;
   15EA 7A                 5258 	ld	a,d
   15EB D6 20              5259 	sub	a,#0x20
   15ED 20 09              5260 	jr	NZ,00105$
   15EF 21rD8s41           5261 	ld	hl,#_lx
   15F2 7E                 5262 	ld	a,(hl)
   15F3 C6 10              5263 	add	a,#0x10
   15F5 77                 5264 	ld	(hl),a
   15F6 18 EC              5265 	jr	00107$
   15F8                    5266 00105$:
                           5267 ;demo.c:641: else if (ltr == '_') { ly+=9*4; lx = x; }
   15F8 7A                 5268 	ld	a,d
   15F9 D6 5F              5269 	sub	a,#0x5F
   15FB 20 0D              5270 	jr	NZ,00102$
   15FD 21rD9s41           5271 	ld	hl,#_ly
   1600 7E                 5272 	ld	a,(hl)
   1601 C6 24              5273 	add	a,#0x24
   1603 77                 5274 	ld	(hl),a
   1604 21rD8s41           5275 	ld	hl,#_lx + 0
   1607 73                 5276 	ld	(hl), e
   1608 18 DA              5277 	jr	00107$
   160A                    5278 00102$:
                           5279 ;demo.c:642: else do_2xletter(ltr);
   160A C5                 5280 	push	bc
   160B D5                 5281 	push	de
   160C D5                 5282 	push	de
   160D 33                 5283 	inc	sp
   160E CDr79s10           5284 	call	_do_2xletter
   1611 33                 5285 	inc	sp
   1612 D1                 5286 	pop	de
   1613 C1                 5287 	pop	bc
   1614 18 CE              5288 	jr	00107$
   1616                    5289 00110$:
   1616 DD E1              5290 	pop	ix
   1618 C9                 5291 	ret
   1619                    5292 _drawstr2x_end::
                           5293 ;demo.c:646: void drawsine(char* str, uint8_t x, uint8_t y) {
                           5294 ;	---------------------------------
                           5295 ; Function drawsine
                           5296 ; ---------------------------------
   1619                    5297 _drawsine_start::
   1619                    5298 _drawsine:
   1619 DD E5              5299 	push	ix
   161B DD 21 00 00        5300 	ld	ix,#0
   161F DD 39              5301 	add	ix,sp
   1621 3B                 5302 	dec	sp
                           5303 ;demo.c:647: char* c = str;
   1622 DD 4E 04           5304 	ld	c,4 (ix)
   1625 DD 46 05           5305 	ld	b,5 (ix)
                           5306 ;demo.c:648: lx = x;
   1628 DD 7E 06           5307 	ld	a,6 (ix)
   162B 21rD8s41           5308 	ld	hl,#_lx + 0
   162E 77                 5309 	ld	(hl), a
                           5310 ;demo.c:650: while (*c) {
   162F                    5311 00104$:
   162F 0A                 5312 	ld	a,(bc)
   1630 5F                 5313 	ld	e,a
   1631 B7                 5314 	or	a,a
   1632 CAr98s16           5315 	jp	Z,00107$
                           5316 ;demo.c:651: char ltr = *c++; 
   1635 03                 5317 	inc	bc
   1636 DD 73 FF           5318 	ld	-1 (ix),e
                           5319 ;demo.c:652: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1639 21rD8s41           5320 	ld	hl,#_lx + 0
   163C 5E                 5321 	ld	e,(hl)
   163D 16 00              5322 	ld	d,#0x00
   163F 21r8As41           5323 	ld	hl,#_vbicount
   1642 7B                 5324 	ld	a,e
   1643 86                 5325 	add	a,(hl)
   1644 5F                 5326 	ld	e,a
   1645 7A                 5327 	ld	a,d
   1646 23                 5328 	inc	hl
   1647 8E                 5329 	adc	a,(hl)
   1648 57                 5330 	ld	d,a
   1649 CB 2A              5331 	sra	d
   164B CB 1B              5332 	rr	e
   164D 16 00              5333 	ld	d,#0x00
   164F 21r2Cs00           5334 	ld	hl,#_sintabx
   1652 19                 5335 	add	hl,de
   1653 5E                 5336 	ld	e,(hl)
   1654 CB 3B              5337 	srl	e
   1656 CB 3B              5338 	srl	e
   1658 CB 3B              5339 	srl	e
   165A CB 3B              5340 	srl	e
   165C 21rD9s41           5341 	ld	hl,#_ly
   165F DD 7E 07           5342 	ld	a,7 (ix)
   1662 83                 5343 	add	a,e
   1663 77                 5344 	ld	(hl),a
                           5345 ;demo.c:653: if (ltr == ' ') lx+=4;
   1664 DD 7E FF           5346 	ld	a,-1 (ix)
   1667 D6 20              5347 	sub	a,#0x20
   1669 20 1F              5348 	jr	NZ,00102$
   166B FD 21rD8s41        5349 	ld	iy,#_lx
   166F FD 34 00           5350 	inc	0 (iy)
   1672 FD 21rD8s41        5351 	ld	iy,#_lx
   1676 FD 34 00           5352 	inc	0 (iy)
   1679 FD 21rD8s41        5353 	ld	iy,#_lx
   167D FD 34 00           5354 	inc	0 (iy)
   1680 FD 21rD8s41        5355 	ld	iy,#_lx
   1684 FD 34 00           5356 	inc	0 (iy)
   1687 C3r2Fs16           5357 	jp	00104$
   168A                    5358 00102$:
                           5359 ;demo.c:654: else do_letter_tall(ltr);
   168A C5                 5360 	push	bc
   168B DD 7E FF           5361 	ld	a,-1 (ix)
   168E F5                 5362 	push	af
   168F 33                 5363 	inc	sp
   1690 CDrA4s14           5364 	call	_do_letter_tall
   1693 33                 5365 	inc	sp
   1694 C1                 5366 	pop	bc
   1695 C3r2Fs16           5367 	jp	00104$
   1698                    5368 00107$:
   1698 DD F9              5369 	ld	sp,ix
   169A DD E1              5370 	pop	ix
   169C C9                 5371 	ret
   169D                    5372 _drawsine_end::
                           5373 ;demo.c:658: void font() {
                           5374 ;	---------------------------------
                           5375 ; Function font
                           5376 ; ---------------------------------
   169D                    5377 _font_start::
   169D                    5378 _font:
                           5379 ;demo.c:660: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   169D 21 4A 3C           5380 	ld	hl,#0x3C4A
   16A0 E5                 5381 	push	hl
   16A1 21rABs16           5382 	ld	hl,#__str_8
   16A4 E5                 5383 	push	hl
   16A5 CDr62s15           5384 	call	_drawstr
   16A8 F1                 5385 	pop	af
   16A9 F1                 5386 	pop	af
   16AA C9                 5387 	ret
   16AB                    5388 _font_end::
   16AB                    5389 __str_8:
   16AB 44 49 47 49 54 41  5390 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   16E7 4F 4E 5F 5F 20 20  5391 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   170D 00                 5392 	.db 0x00
                           5393 ;demo.c:669: void twister() {
                           5394 ;	---------------------------------
                           5395 ; Function twister
                           5396 ; ---------------------------------
   170E                    5397 _twister_start::
   170E                    5398 _twister:
   170E DD E5              5399 	push	ix
   1710 DD 21 00 00        5400 	ld	ix,#0
   1714 DD 39              5401 	add	ix,sp
   1716 F5                 5402 	push	af
                           5403 ;demo.c:673: if (twinited == 0) {
   1717 3ArDCs41           5404 	ld	a,(#_twinited+0)
   171A FD 21rDCs41        5405 	ld	iy,#_twinited
   171E FD B6 01           5406 	or	a,1 (iy)
   1721 C2r9Es17           5407 	jp	NZ,00102$
                           5408 ;demo.c:674: cmd.size_x = 256;
   1724 21r96s41           5409 	ld	hl, #_cmd + 8
   1727 36 00              5410 	ld	(hl),#0x00
   1729 23                 5411 	inc	hl
   172A 36 01              5412 	ld	(hl),#0x01
                           5413 ;demo.c:675: cmd.size_y = 1;
   172C 21r98s41           5414 	ld	hl, #_cmd + 10
   172F 36 01              5415 	ld	(hl),#0x01
   1731 23                 5416 	inc	hl
   1732 36 00              5417 	ld	(hl),#0x00
                           5418 ;demo.c:676: cmd.data = 0;
                           5419 ;demo.c:677: cmd.argument = 0x00; // from 70xY to left
   1734 3E 00              5420 	ld	a,#0x00
   1736 32r9As41           5421 	ld	(#_cmd + 12),a
   1739 32r9Bs41           5422 	ld	(#_cmd + 13),a
                           5423 ;demo.c:678: cmd.command = 0xd0; // vram to vram, y only
   173C 01r9Cs41           5424 	ld	bc,#_cmd + 14
   173F 3E D0              5425 	ld	a,#0xD0
   1741 02                 5426 	ld	(bc),a
                           5427 ;demo.c:679: cmd.source_x = 0;
   1742 21r8Es41           5428 	ld	hl,#_cmd
   1745 36 00              5429 	ld	(hl),#0x00
   1747 23                 5430 	inc	hl
   1748 36 00              5431 	ld	(hl),#0x00
                           5432 ;demo.c:680: cmd.dest_x = 0;
   174A 21r92s41           5433 	ld	hl, #_cmd + 4
   174D 36 00              5434 	ld	(hl),#0x00
   174F 23                 5435 	inc	hl
   1750 36 00              5436 	ld	(hl),#0x00
                           5437 ;demo.c:682: for (y = 0; y < 212; y+=1) {
   1752 01 00 00           5438 	ld	bc,#0x0000
   1755                    5439 00103$:
   1755 79                 5440 	ld	a,c
   1756 D6 D4              5441 	sub	a,#0xD4
   1758 78                 5442 	ld	a,b
   1759 DE 00              5443 	sbc	a,#0x00
   175B F2r7Cs17           5444 	jp	P,00106$
                           5445 ;demo.c:683: waitVB();
   175E 76                 5446 		halt 
                           5447 ;demo.c:684: cmd.source_y = 0;
   175F 11r90s41           5448 	ld	de,#_cmd + 2
   1762 EB                 5449 	ex	de,hl
   1763 36 00              5450 	ld	(hl),#0x00
   1765 23                 5451 	inc	hl
   1766 36 00              5452 	ld	(hl),#0x00
                           5453 ;demo.c:685: cmd.dest_y = y;
   1768 11r94s41           5454 	ld	de,#_cmd + 6
   176B EB                 5455 	ex	de,hl
   176C 71                 5456 	ld	(hl),c
   176D 23                 5457 	inc	hl
   176E 70                 5458 	ld	(hl),b
                           5459 ;demo.c:686: vdp_copier(&cmd);
   176F C5                 5460 	push	bc
   1770 21r8Es41           5461 	ld	hl,#_cmd
   1773 E5                 5462 	push	hl
   1774 CDr00s00           5463 	call	_vdp_copier
   1777 F1                 5464 	pop	af
   1778 C1                 5465 	pop	bc
                           5466 ;demo.c:682: for (y = 0; y < 212; y+=1) {
   1779 03                 5467 	inc	bc
   177A 18 D9              5468 	jr	00103$
   177C                    5469 00106$:
                           5470 ;demo.c:690: twinited = 1;
   177C 21rDCs41           5471 	ld	hl,#_twinited + 0
   177F 36 01              5472 	ld	(hl), #0x01
   1781 21rDDs41           5473 	ld	hl,#_twinited + 1
   1784 36 00              5474 	ld	(hl), #0x00
                           5475 ;demo.c:691: vdp_load_palette(twister_palette);
   1786 21r2As41           5476 	ld	hl,#_twister_palette
   1789 E5                 5477 	push	hl
   178A CDr00s00           5478 	call	_vdp_load_palette
   178D F1                 5479 	pop	af
                           5480 ;demo.c:692: font();
   178E CDr9Ds16           5481 	call	_font
                           5482 ;demo.c:694: drawstr2x("DSS",80,15);
   1791 21 50 0F           5483 	ld	hl,#0x0F50
   1794 E5                 5484 	push	hl
   1795 21r87s18           5485 	ld	hl,#__str_9
   1798 E5                 5486 	push	hl
   1799 CDrC8s15           5487 	call	_drawstr2x
   179C F1                 5488 	pop	af
   179D F1                 5489 	pop	af
   179E                    5490 00102$:
                           5491 ;demo.c:699: cmd.size_x = 70;
   179E 21r96s41           5492 	ld	hl, #_cmd + 8
   17A1 36 46              5493 	ld	(hl),#0x46
   17A3 23                 5494 	inc	hl
   17A4 36 00              5495 	ld	(hl),#0x00
                           5496 ;demo.c:700: cmd.size_y = 2;
   17A6 21r98s41           5497 	ld	hl, #_cmd + 10
   17A9 36 02              5498 	ld	(hl),#0x02
   17AB 23                 5499 	inc	hl
   17AC 36 00              5500 	ld	(hl),#0x00
                           5501 ;demo.c:701: cmd.data = 0;
   17AE 3E 00              5502 	ld	a,#0x00
   17B0 32r9As41           5503 	ld	(#_cmd + 12),a
                           5504 ;demo.c:702: cmd.argument = 0x04; // from 70xY to left
   17B3 3E 04              5505 	ld	a,#0x04
   17B5 32r9Bs41           5506 	ld	(#_cmd + 13),a
                           5507 ;demo.c:703: cmd.command = 0xe0; // vram to vram, y only
   17B8 01r9Cs41           5508 	ld	bc,#_cmd + 14
   17BB 3E E0              5509 	ld	a,#0xE0
   17BD 02                 5510 	ld	(bc),a
                           5511 ;demo.c:704: cmd.source_x = 70;
   17BE 21r8Es41           5512 	ld	hl,#_cmd
   17C1 36 46              5513 	ld	(hl),#0x46
   17C3 23                 5514 	inc	hl
   17C4 36 00              5515 	ld	(hl),#0x00
                           5516 ;demo.c:705: cmd.dest_x = 70;
   17C6 21r92s41           5517 	ld	hl, #_cmd + 4
   17C9 36 46              5518 	ld	(hl),#0x46
   17CB 23                 5519 	inc	hl
   17CC 36 00              5520 	ld	(hl),#0x00
                           5521 ;demo.c:707: for (y = 0; y < 212; y+=2) {
   17CE DD 36 FE 00        5522 	ld	-2 (ix),#0x00
   17D2 DD 36 FF 00        5523 	ld	-1 (ix),#0x00
   17D6                    5524 00107$:
   17D6 DD 7E FE           5525 	ld	a,-2 (ix)
   17D9 D6 D4              5526 	sub	a,#0xD4
   17DB DD 7E FF           5527 	ld	a,-1 (ix)
   17DE DE 00              5528 	sbc	a,#0x00
   17E0 F2r39s18           5529 	jp	P,00110$
                           5530 ;demo.c:708: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   17E3 11r90s41           5531 	ld	de,#_cmd + 2
   17E6 DD 4E FE           5532 	ld	c,-2 (ix)
   17E9 DD 46 FF           5533 	ld	b,-1 (ix)
   17EC CB 28              5534 	sra	b
   17EE CB 19              5535 	rr	c
   17F0 3ArDAs41           5536 	ld	a,(#_ff+0)
   17F3 81                 5537 	add	a,c
   17F4 4F                 5538 	ld	c,a
   17F5 3ArDBs41           5539 	ld	a,(#_ff+1)
   17F8 88                 5540 	adc	a,b
   17F9 06 00              5541 	ld	b,#0x00
   17FB 21r00s00           5542 	ld	hl,#_sintab
   17FE 09                 5543 	add	hl,bc
   17FF 7E                 5544 	ld	a,(hl)
   1800 4F                 5545 	ld	c,a
   1801 CB 29              5546 	sra	c
   1803 79                 5547 	ld	a,c
   1804 17                 5548 	rla	
   1805 9F                 5549 	sbc	a,a
   1806 47                 5550 	ld	b,a
   1807 21 40 02           5551 	ld	hl,#0x0240
   180A 09                 5552 	add	hl,bc
   180B 4D                 5553 	ld	c,l
   180C 44                 5554 	ld	b,h
   180D 6B                 5555 	ld	l,e
   180E 62                 5556 	ld	h,d
   180F 71                 5557 	ld	(hl),c
   1810 23                 5558 	inc	hl
   1811 70                 5559 	ld	(hl),b
                           5560 ;demo.c:709: cmd.dest_y = y;
   1812 21r94s41           5561 	ld	hl, #_cmd + 6
   1815 DD 7E FE           5562 	ld	a,-2 (ix)
   1818 77                 5563 	ld	(hl),a
   1819 23                 5564 	inc	hl
   181A DD 7E FF           5565 	ld	a,-1 (ix)
   181D 77                 5566 	ld	(hl),a
                           5567 ;demo.c:710: vdp_copier(&cmd);
   181E 21r8Es41           5568 	ld	hl,#_cmd
   1821 E5                 5569 	push	hl
   1822 CDr00s00           5570 	call	_vdp_copier
   1825 F1                 5571 	pop	af
                           5572 ;demo.c:707: for (y = 0; y < 212; y+=2) {
   1826 DD 7E FE           5573 	ld	a,-2 (ix)
   1829 C6 02              5574 	add	a,#0x02
   182B DD 77 FE           5575 	ld	-2 (ix),a
   182E DD 7E FF           5576 	ld	a,-1 (ix)
   1831 CE 00              5577 	adc	a,#0x00
   1833 DD 77 FF           5578 	ld	-1 (ix),a
   1836 C3rD6s17           5579 	jp	00107$
   1839                    5580 00110$:
                           5581 ;demo.c:714: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1839 21rDAs41           5582 	ld	hl,#_ff + 0
   183C 4E                 5583 	ld	c,(hl)
   183D 21rDBs41           5584 	ld	hl,#_ff + 1
   1840 46                 5585 	ld	b,(hl)
   1841 CB 28              5586 	sra	b
   1843 CB 19              5587 	rr	c
   1845 CB 28              5588 	sra	b
   1847 CB 19              5589 	rr	c
   1849 21rDAs41           5590 	ld	hl,#_ff + 0
   184C 5E                 5591 	ld	e,(hl)
   184D 21rDBs41           5592 	ld	hl,#_ff + 1
   1850 56                 5593 	ld	d,(hl)
   1851 CB 2A              5594 	sra	d
   1853 CB 1B              5595 	rr	e
   1855 CB 2A              5596 	sra	d
   1857 CB 1B              5597 	rr	e
   1859 CB 2A              5598 	sra	d
   185B CB 1B              5599 	rr	e
   185D 43                 5600 	ld	b,e
   185E 79                 5601 	ld	a,c
   185F F5                 5602 	push	af
   1860 33                 5603 	inc	sp
   1861 C5                 5604 	push	bc
   1862 33                 5605 	inc	sp
   1863 41                 5606 	ld	b,c
   1864 0E 04              5607 	ld	c,#0x04
   1866 C5                 5608 	push	bc
   1867 CDr00s00           5609 	call	_msx2_palette
   186A F1                 5610 	pop	af
   186B F1                 5611 	pop	af
                           5612 ;demo.c:716: ff+=4;
   186C 21rDAs41           5613 	ld	hl,#_ff
   186F 7E                 5614 	ld	a,(hl)
   1870 C6 04              5615 	add	a,#0x04
   1872 23                 5616 	inc	hl
   1873 2B                 5617 	dec	hl
   1874 C5                 5618 	push	bc
   1875 4F                 5619 	ld	c, a
   1876 23                 5620 	inc	hl
   1877 7E                 5621 	ld	a, (hl)
   1878 47                 5622 	ld	b, a
   1879 79                 5623 	ld	a, c
   187A 2B                 5624 	dec	hl
   187B 77                 5625 	ld	(hl), a
   187C 78                 5626 	ld	a, b
   187D C1                 5627 	pop	bc
   187E CE 00              5628 	adc	a,#0x00
   1880 23                 5629 	inc	hl
   1881 77                 5630 	ld	(hl),a
   1882 DD F9              5631 	ld	sp,ix
   1884 DD E1              5632 	pop	ix
   1886 C9                 5633 	ret
   1887                    5634 _twister_end::
   1887                    5635 __str_9:
   1887 44 53 53           5636 	.ascii "DSS"
   188A 00                 5637 	.db 0x00
                           5638 ;demo.c:727: void bulbs() {
                           5639 ;	---------------------------------
                           5640 ; Function bulbs
                           5641 ; ---------------------------------
   188B                    5642 _bulbs_start::
   188B                    5643 _bulbs:
   188B DD E5              5644 	push	ix
   188D DD 21 00 00        5645 	ld	ix,#0
   1891 DD 39              5646 	add	ix,sp
   1893 21 FA FF           5647 	ld	hl,#-6
   1896 39                 5648 	add	hl,sp
   1897 F9                 5649 	ld	sp,hl
                           5650 ;demo.c:731: ender+=enderdir;
   1898 21rE6s41           5651 	ld	hl,#_enderdir
   189B D5                 5652 	push	de
   189C FD 21rE4s41        5653 	ld	iy,#_ender
   18A0 FD E5              5654 	push	iy
   18A2 D1                 5655 	pop	de
   18A3 1A                 5656 	ld	a,(de)
   18A4 86                 5657 	add	a,(hl)
   18A5 13                 5658 	inc	de
   18A6 1B                 5659 	dec	de
   18A7 C5                 5660 	push	bc
   18A8 4F                 5661 	ld	c, a
   18A9 13                 5662 	inc	de
   18AA 1A                 5663 	ld	a, (de)
   18AB 47                 5664 	ld	b, a
   18AC 79                 5665 	ld	a, c
   18AD 1B                 5666 	dec	de
   18AE 12                 5667 	ld	(de), a
   18AF 78                 5668 	ld	a, b
   18B0 C1                 5669 	pop	bc
   18B1 23                 5670 	inc	hl
   18B2 8E                 5671 	adc	a,(hl)
   18B3 13                 5672 	inc	de
   18B4 12                 5673 	ld	(de),a
   18B5 D1                 5674 	pop	de
                           5675 ;demo.c:732: if (ender < 2) { enderdir = -enderdir; }
   18B6 3ArE4s41           5676 	ld	a,(#_ender+0)
   18B9 D6 02              5677 	sub	a,#0x02
   18BB 3ArE5s41           5678 	ld	a,(#_ender+1)
   18BE DE 00              5679 	sbc	a,#0x00
   18C0 F2rE4s18           5680 	jp	P,00102$
   18C3 AF                 5681 	xor	a,a
   18C4 FD 21rE6s41        5682 	ld	iy,#_enderdir
   18C8 3E 00              5683 	ld	a,#0x00
   18CA FD 9E 00           5684 	sbc	a,0 (iy)
   18CD FD 21rE6s41        5685 	ld	iy,#_enderdir
   18D1 FD 77 00           5686 	ld	0 (iy),a
   18D4 FD 21rE6s41        5687 	ld	iy,#_enderdir
   18D8 3E 00              5688 	ld	a,#0x00
   18DA FD 9E 01           5689 	sbc	a,1 (iy)
   18DD FD 21rE6s41        5690 	ld	iy,#_enderdir
   18E1 FD 77 01           5691 	ld	1 (iy),a
   18E4                    5692 00102$:
                           5693 ;demo.c:733: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   18E4 3ArE4s41           5694 	ld	a,(#_ender+0)
   18E7 D6 D4              5695 	sub	a,#0xD4
   18E9 3ArE5s41           5696 	ld	a,(#_ender+1)
   18EC DE 00              5697 	sbc	a,#0x00
   18EE FAr14s19           5698 	jp	M,00104$
   18F1 AF                 5699 	xor	a,a
   18F2 FD 21rE6s41        5700 	ld	iy,#_enderdir
   18F6 3E 00              5701 	ld	a,#0x00
   18F8 FD 9E 00           5702 	sbc	a,0 (iy)
   18FB 21rE6s41           5703 	ld	hl,#_enderdir + 0
   18FE 77                 5704 	ld	(hl), a
   18FF FD 21rE6s41        5705 	ld	iy,#_enderdir
   1903 3E 00              5706 	ld	a,#0x00
   1905 FD 9E 01           5707 	sbc	a,1 (iy)
   1908 21rE7s41           5708 	ld	hl,#_enderdir + 1
   190B 77                 5709 	ld	(hl), a
   190C 2ArE8s41           5710 	ld	hl,(_sy)
   190F 2B                 5711 	dec	hl
   1910 2B                 5712 	dec	hl
   1911 22rE8s41           5713 	ld	(_sy),hl
   1914                    5714 00104$:
                           5715 ;demo.c:735: enderend = ender + 92;
   1914 3ArE4s41           5716 	ld	a,(#_ender+0)
   1917 C6 5C              5717 	add	a,#0x5C
   1919 DD 77 FE           5718 	ld	-2 (ix),a
   191C 3ArE5s41           5719 	ld	a,(#_ender+1)
   191F CE 00              5720 	adc	a,#0x00
   1921 DD 77 FF           5721 	ld	-1 (ix),a
                           5722 ;demo.c:737: if (enderend > 212) enderend = 212;
   1924 3E D4              5723 	ld	a,#0xD4
   1926 DD 96 FE           5724 	sub	a,-2 (ix)
   1929 3E 00              5725 	ld	a,#0x00
   192B DD 9E FF           5726 	sbc	a,-1 (ix)
   192E F2r39s19           5727 	jp	P,00106$
   1931 DD 36 FE D4        5728 	ld	-2 (ix),#0xD4
   1935 DD 36 FF 00        5729 	ld	-1 (ix),#0x00
   1939                    5730 00106$:
                           5731 ;demo.c:738: if (enderend > 212-16) sy = 16-(212-enderend);
   1939 3E C4              5732 	ld	a,#0xC4
   193B DD 96 FE           5733 	sub	a,-2 (ix)
   193E 3E 00              5734 	ld	a,#0x00
   1940 DD 9E FF           5735 	sbc	a,-1 (ix)
   1943 F2r5Es19           5736 	jp	P,00108$
   1946 3E D4              5737 	ld	a,#0xD4
   1948 DD 96 FE           5738 	sub	a,-2 (ix)
   194B 5F                 5739 	ld	e,a
   194C 3E 00              5740 	ld	a,#0x00
   194E DD 9E FF           5741 	sbc	a,-1 (ix)
   1951 57                 5742 	ld	d,a
   1952 21rE8s41           5743 	ld	hl,#_sy
   1955 3E 10              5744 	ld	a,#0x10
   1957 93                 5745 	sub	a,e
   1958 77                 5746 	ld	(hl),a
   1959 3E 00              5747 	ld	a,#0x00
   195B 9A                 5748 	sbc	a,d
   195C 23                 5749 	inc	hl
   195D 77                 5750 	ld	(hl),a
   195E                    5751 00108$:
                           5752 ;demo.c:740: if(bulbflipper == 1) {
   195E 3ArDEs41           5753 	ld	a,(#_bulbflipper+0)
   1961 D6 01              5754 	sub	a,#0x01
   1963 20 06              5755 	jr	NZ,00133$
   1965 3ArDFs41           5756 	ld	a,(#_bulbflipper+1)
   1968 B7                 5757 	or	a,a
   1969 28 03              5758 	jr	Z,00134$
   196B                    5759 00133$:
   196B C3r24s1A           5760 	jp	00110$
   196E                    5761 00134$:
                           5762 ;demo.c:741: cmd.size_x = 72;
   196E 11r96s41           5763 	ld	de,#_cmd + 8
   1971 EB                 5764 	ex	de,hl
   1972 36 48              5765 	ld	(hl),#0x48
   1974 23                 5766 	inc	hl
   1975 36 00              5767 	ld	(hl),#0x00
                           5768 ;demo.c:742: cmd.size_y = sy;
   1977 11r98s41           5769 	ld	de,#_cmd + 10
   197A ED 4BrE8s41        5770 	ld	bc,(_sy)
   197E 6B                 5771 	ld	l,e
   197F 62                 5772 	ld	h,d
   1980 71                 5773 	ld	(hl),c
   1981 23                 5774 	inc	hl
   1982 70                 5775 	ld	(hl),b
                           5776 ;demo.c:743: cmd.data = 0;
   1983 3E 00              5777 	ld	a,#0x00
   1985 32r9As41           5778 	ld	(#_cmd + 12),a
                           5779 ;demo.c:744: cmd.argument = 0x04; // from 72xY to left
   1988 3E 04              5780 	ld	a,#0x04
   198A 32r9Bs41           5781 	ld	(#_cmd + 13),a
                           5782 ;demo.c:745: cmd.command = 0xe0; // vram to vram, y only
   198D 01r9Cs41           5783 	ld	bc,#_cmd + 14
   1990 3E E0              5784 	ld	a,#0xE0
   1992 02                 5785 	ld	(bc),a
                           5786 ;demo.c:746: cmd.source_x = 72;
   1993 21r8Es41           5787 	ld	hl,#_cmd
   1996 36 48              5788 	ld	(hl),#0x48
   1998 23                 5789 	inc	hl
   1999 36 00              5790 	ld	(hl),#0x00
                           5791 ;demo.c:747: cmd.dest_x = 72;
   199B 21r92s41           5792 	ld	hl, #_cmd + 4
   199E 36 48              5793 	ld	(hl),#0x48
   19A0 23                 5794 	inc	hl
   19A1 36 00              5795 	ld	(hl),#0x00
                           5796 ;demo.c:749: for (y = ender; y < enderend; y+=16) {
   19A3 ED 4BrE4s41        5797 	ld	bc,(_ender)
   19A7 DD 71 FC           5798 	ld	-4 (ix),c
   19AA DD 70 FD           5799 	ld	-3 (ix),b
   19AD                    5800 00112$:
   19AD DD 7E FC           5801 	ld	a,-4 (ix)
   19B0 DD 96 FE           5802 	sub	a,-2 (ix)
   19B3 DD 7E FD           5803 	ld	a,-3 (ix)
   19B6 DD 9E FF           5804 	sbc	a,-1 (ix)
   19B9 F2r0Bs1A           5805 	jp	P,00115$
                           5806 ;demo.c:750: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   19BC 01r90s41           5807 	ld	bc,#_cmd + 2
   19BF 3ArE0s41           5808 	ld	a,(#_ff1+0)
   19C2 DD 86 FC           5809 	add	a,-4 (ix)
   19C5 5F                 5810 	ld	e,a
   19C6 3ArE1s41           5811 	ld	a,(#_ff1+1)
   19C9 DD 8E FD           5812 	adc	a,-3 (ix)
   19CC 16 00              5813 	ld	d,#0x00
   19CE 21r00s00           5814 	ld	hl,#_sintab
   19D1 19                 5815 	add	hl,de
   19D2 5E                 5816 	ld	e,(hl)
   19D3 CB 2B              5817 	sra	e
   19D5 7B                 5818 	ld	a,e
   19D6 17                 5819 	rla	
   19D7 9F                 5820 	sbc	a,a
   19D8 57                 5821 	ld	d,a
   19D9 21 40 01           5822 	ld	hl,#0x0140
   19DC 19                 5823 	add	hl,de
   19DD EB                 5824 	ex	de,hl
   19DE 69                 5825 	ld	l,c
   19DF 60                 5826 	ld	h,b
   19E0 73                 5827 	ld	(hl),e
   19E1 23                 5828 	inc	hl
   19E2 72                 5829 	ld	(hl),d
                           5830 ;demo.c:751: cmd.dest_y = y;
   19E3 11r94s41           5831 	ld	de,#_cmd + 6
   19E6 EB                 5832 	ex	de,hl
   19E7 DD 7E FC           5833 	ld	a,-4 (ix)
   19EA 77                 5834 	ld	(hl),a
   19EB 23                 5835 	inc	hl
   19EC DD 7E FD           5836 	ld	a,-3 (ix)
   19EF 77                 5837 	ld	(hl),a
                           5838 ;demo.c:752: vdp_copier(&cmd);
   19F0 21r8Es41           5839 	ld	hl,#_cmd
   19F3 E5                 5840 	push	hl
   19F4 CDr00s00           5841 	call	_vdp_copier
   19F7 F1                 5842 	pop	af
                           5843 ;demo.c:749: for (y = ender; y < enderend; y+=16) {
   19F8 DD 7E FC           5844 	ld	a,-4 (ix)
   19FB C6 10              5845 	add	a,#0x10
   19FD DD 77 FC           5846 	ld	-4 (ix),a
   1A00 DD 7E FD           5847 	ld	a,-3 (ix)
   1A03 CE 00              5848 	adc	a,#0x00
   1A05 DD 77 FD           5849 	ld	-3 (ix),a
   1A08 C3rADs19           5850 	jp	00112$
   1A0B                    5851 00115$:
                           5852 ;demo.c:754: ff1+=4;
   1A0B 21rE0s41           5853 	ld	hl,#_ff1
   1A0E 7E                 5854 	ld	a,(hl)
   1A0F C6 04              5855 	add	a,#0x04
   1A11 23                 5856 	inc	hl
   1A12 2B                 5857 	dec	hl
   1A13 C5                 5858 	push	bc
   1A14 4F                 5859 	ld	c, a
   1A15 23                 5860 	inc	hl
   1A16 7E                 5861 	ld	a, (hl)
   1A17 47                 5862 	ld	b, a
   1A18 79                 5863 	ld	a, c
   1A19 2B                 5864 	dec	hl
   1A1A 77                 5865 	ld	(hl), a
   1A1B 78                 5866 	ld	a, b
   1A1C C1                 5867 	pop	bc
   1A1D CE 00              5868 	adc	a,#0x00
   1A1F 23                 5869 	inc	hl
   1A20 77                 5870 	ld	(hl),a
   1A21 C3rC9s1A           5871 	jp	00111$
   1A24                    5872 00110$:
                           5873 ;demo.c:758: cmd.size_x = 72;
   1A24 11r96s41           5874 	ld	de,#_cmd + 8
   1A27 EB                 5875 	ex	de,hl
   1A28 36 48              5876 	ld	(hl),#0x48
   1A2A 23                 5877 	inc	hl
   1A2B 36 00              5878 	ld	(hl),#0x00
                           5879 ;demo.c:759: cmd.size_y = sy;
   1A2D 01r98s41           5880 	ld	bc,#_cmd + 10
   1A30 ED 5BrE8s41        5881 	ld	de,(_sy)
   1A34 69                 5882 	ld	l,c
   1A35 60                 5883 	ld	h,b
   1A36 73                 5884 	ld	(hl),e
   1A37 23                 5885 	inc	hl
   1A38 72                 5886 	ld	(hl),d
                           5887 ;demo.c:760: cmd.data = 0;
   1A39 11r9As41           5888 	ld	de,#_cmd + 12
   1A3C 3E 00              5889 	ld	a,#0x00
   1A3E 12                 5890 	ld	(de),a
                           5891 ;demo.c:761: cmd.argument = 0x00; // from 182xY to right
   1A3F 11r9Bs41           5892 	ld	de,#_cmd + 13
   1A42 3E 00              5893 	ld	a,#0x00
   1A44 12                 5894 	ld	(de),a
                           5895 ;demo.c:762: cmd.command = 0xe0; // vram to vram, y only
   1A45 11r9Cs41           5896 	ld	de,#_cmd + 14
   1A48 3E E0              5897 	ld	a,#0xE0
   1A4A 12                 5898 	ld	(de),a
                           5899 ;demo.c:763: cmd.source_x = 182;
   1A4B 21r8Es41           5900 	ld	hl,#_cmd
   1A4E 36 B6              5901 	ld	(hl),#0xB6
   1A50 23                 5902 	inc	hl
   1A51 36 00              5903 	ld	(hl),#0x00
                           5904 ;demo.c:764: cmd.dest_x = 182;
   1A53 11r92s41           5905 	ld	de,#_cmd + 4
   1A56 6B                 5906 	ld	l,e
   1A57 62                 5907 	ld	h,d
   1A58 36 B6              5908 	ld	(hl),#0xB6
   1A5A 23                 5909 	inc	hl
   1A5B 36 00              5910 	ld	(hl),#0x00
                           5911 ;demo.c:766: for (y = ender; y < enderend; y+=16) {
   1A5D ED 4BrE4s41        5912 	ld	bc,(_ender)
   1A61                    5913 00116$:
   1A61 79                 5914 	ld	a,c
   1A62 DD 96 FE           5915 	sub	a,-2 (ix)
   1A65 78                 5916 	ld	a,b
   1A66 DD 9E FF           5917 	sbc	a,-1 (ix)
   1A69 F2rB3s1A           5918 	jp	P,00119$
                           5919 ;demo.c:767: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1A6C 21r90s41           5920 	ld	hl,#_cmd + 2
   1A6F DD 75 FA           5921 	ld	-6 (ix),l
   1A72 DD 74 FB           5922 	ld	-5 (ix),h
   1A75 3ArE2s41           5923 	ld	a,(#_ff2+0)
   1A78 81                 5924 	add	a,c
   1A79 5F                 5925 	ld	e,a
   1A7A 3ArE3s41           5926 	ld	a,(#_ff2+1)
   1A7D 88                 5927 	adc	a,b
   1A7E 16 00              5928 	ld	d,#0x00
   1A80 21r00s00           5929 	ld	hl,#_sintab
   1A83 19                 5930 	add	hl,de
   1A84 5E                 5931 	ld	e,(hl)
   1A85 CB 2B              5932 	sra	e
   1A87 7B                 5933 	ld	a,e
   1A88 17                 5934 	rla	
   1A89 9F                 5935 	sbc	a,a
   1A8A 57                 5936 	ld	d,a
   1A8B 21 40 01           5937 	ld	hl,#0x0140
   1A8E 19                 5938 	add	hl,de
   1A8F EB                 5939 	ex	de,hl
   1A90 DD 6E FA           5940 	ld	l,-6 (ix)
   1A93 DD 66 FB           5941 	ld	h,-5 (ix)
   1A96 73                 5942 	ld	(hl),e
   1A97 23                 5943 	inc	hl
   1A98 72                 5944 	ld	(hl),d
                           5945 ;demo.c:768: cmd.dest_y = y;
   1A99 11r94s41           5946 	ld	de,#_cmd + 6
   1A9C EB                 5947 	ex	de,hl
   1A9D 71                 5948 	ld	(hl),c
   1A9E 23                 5949 	inc	hl
   1A9F 70                 5950 	ld	(hl),b
                           5951 ;demo.c:769: vdp_copier(&cmd);
   1AA0 C5                 5952 	push	bc
   1AA1 21r8Es41           5953 	ld	hl,#_cmd
   1AA4 E5                 5954 	push	hl
   1AA5 CDr00s00           5955 	call	_vdp_copier
   1AA8 F1                 5956 	pop	af
   1AA9 C1                 5957 	pop	bc
                           5958 ;demo.c:766: for (y = ender; y < enderend; y+=16) {
   1AAA 21 10 00           5959 	ld	hl,#0x0010
   1AAD 09                 5960 	add	hl,bc
   1AAE 4D                 5961 	ld	c,l
   1AAF 44                 5962 	ld	b,h
   1AB0 C3r61s1A           5963 	jp	00116$
   1AB3                    5964 00119$:
                           5965 ;demo.c:771: ff2+=4;
   1AB3 21rE2s41           5966 	ld	hl,#_ff2
   1AB6 7E                 5967 	ld	a,(hl)
   1AB7 C6 04              5968 	add	a,#0x04
   1AB9 23                 5969 	inc	hl
   1ABA 2B                 5970 	dec	hl
   1ABB C5                 5971 	push	bc
   1ABC 4F                 5972 	ld	c, a
   1ABD 23                 5973 	inc	hl
   1ABE 7E                 5974 	ld	a, (hl)
   1ABF 47                 5975 	ld	b, a
   1AC0 79                 5976 	ld	a, c
   1AC1 2B                 5977 	dec	hl
   1AC2 77                 5978 	ld	(hl), a
   1AC3 78                 5979 	ld	a, b
   1AC4 C1                 5980 	pop	bc
   1AC5 CE 00              5981 	adc	a,#0x00
   1AC7 23                 5982 	inc	hl
   1AC8 77                 5983 	ld	(hl),a
   1AC9                    5984 00111$:
                           5985 ;demo.c:774: bulbflipper = -bulbflipper;
   1AC9 AF                 5986 	xor	a,a
   1ACA FD 21rDEs41        5987 	ld	iy,#_bulbflipper
   1ACE 3E 00              5988 	ld	a,#0x00
   1AD0 FD 9E 00           5989 	sbc	a,0 (iy)
   1AD3 21rDEs41           5990 	ld	hl,#_bulbflipper + 0
   1AD6 77                 5991 	ld	(hl), a
   1AD7 FD 21rDEs41        5992 	ld	iy,#_bulbflipper
   1ADB 3E 00              5993 	ld	a,#0x00
   1ADD FD 9E 01           5994 	sbc	a,1 (iy)
   1AE0 21rDFs41           5995 	ld	hl,#_bulbflipper + 1
   1AE3 77                 5996 	ld	(hl), a
   1AE4 DD F9              5997 	ld	sp,ix
   1AE6 DD E1              5998 	pop	ix
   1AE8 C9                 5999 	ret
   1AE9                    6000 _bulbs_end::
                           6001 ;demo.c:788: void animplay() {
                           6002 ;	---------------------------------
                           6003 ; Function animplay
                           6004 ; ---------------------------------
   1AE9                    6005 _animplay_start::
   1AE9                    6006 _animplay:
   1AE9 DD E5              6007 	push	ix
   1AEB DD 21 00 00        6008 	ld	ix,#0
   1AEF DD 39              6009 	add	ix,sp
   1AF1 F5                 6010 	push	af
   1AF2 3B                 6011 	dec	sp
                           6012 ;demo.c:793: if (anim_init == 0) {
   1AF3 3ArF2s41           6013 	ld	a,(#_anim_init+0)
   1AF6 21rF3s41           6014 	ld	hl,#_anim_init + 1
   1AF9 B6                 6015 	or	a,(hl)
   1AFA C2r95s1C           6016 	jp	NZ,00120$
                           6017 ;demo.c:794: drawsine("L O A D I N G",8,180);
   1AFD 21 08 B4           6018 	ld	hl,#0xB408
   1B00 E5                 6019 	push	hl
   1B01 21r7Ds1D           6020 	ld	hl,#__str_10
   1B04 E5                 6021 	push	hl
   1B05 CDr19s16           6022 	call	_drawsine
   1B08 F1                 6023 	pop	af
   1B09 F1                 6024 	pop	af
                           6025 ;demo.c:797: uninstall_isr();
   1B0A CDr00s00           6026 	call	_uninstall_isr
                           6027 ;demo.c:798: PLY_Stop();
   1B0D CDr00s00           6028 	call	_PLY_Stop
                           6029 ;demo.c:799: PLY_SendRegisters();
   1B10 CDr00s00           6030 	call	_PLY_SendRegisters
                           6031 ;demo.c:801: pause();
   1B13 CDr82s0A           6032 	call	_pause
                           6033 ;demo.c:802: pause();
   1B16 CDr82s0A           6034 	call	_pause
                           6035 ;demo.c:804: scratch_clear();
   1B19 CDr90s09           6036 	call	_scratch_clear
                           6037 ;demo.c:805: vdp_load_palette(scratch);
   1B1C 21r4As40           6038 	ld	hl,#_scratch
   1B1F E5                 6039 	push	hl
   1B20 CDr00s00           6040 	call	_vdp_load_palette
   1B23 F1                 6041 	pop	af
                           6042 ;demo.c:807: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1B24 21 00 00           6043 	ld	hl,#0x0000
   1B27 E5                 6044 	push	hl
   1B28 2E 01              6045 	ld	l, #0x01
   1B2A E5                 6046 	push	hl
   1B2B 2E 00              6047 	ld	l, #0x00
   1B2D E5                 6048 	push	hl
   1B2E 21 09 37           6049 	ld	hl,#0x3709
   1B31 E5                 6050 	push	hl
   1B32 21r8Bs1D           6051 	ld	hl,#__str_11
   1B35 E5                 6052 	push	hl
   1B36 CDr99s0B           6053 	call	_pck_load
   1B39 FD 21 0A 00        6054 	ld	iy,#0x000A
   1B3D FD 39              6055 	add	iy,sp
   1B3F FD F9              6056 	ld	sp,iy
                           6057 ;demo.c:811: cmd.size_x = 256;
   1B41 21r96s41           6058 	ld	hl, #_cmd + 8
   1B44 36 00              6059 	ld	(hl),#0x00
   1B46 23                 6060 	inc	hl
   1B47 36 01              6061 	ld	(hl),#0x01
                           6062 ;demo.c:812: cmd.size_y = 212;
   1B49 21r98s41           6063 	ld	hl, #_cmd + 10
   1B4C 36 D4              6064 	ld	(hl),#0xD4
   1B4E 23                 6065 	inc	hl
   1B4F 36 00              6066 	ld	(hl),#0x00
                           6067 ;demo.c:813: cmd.data = 0;
                           6068 ;demo.c:814: cmd.argument = 0x00;
   1B51 3E 00              6069 	ld	a,#0x00
   1B53 32r9As41           6070 	ld	(#_cmd + 12),a
   1B56 32r9Bs41           6071 	ld	(#_cmd + 13),a
                           6072 ;demo.c:815: cmd.command = 0xd0; 
   1B59 01r9Cs41           6073 	ld	bc,#_cmd + 14
   1B5C 3E D0              6074 	ld	a,#0xD0
   1B5E 02                 6075 	ld	(bc),a
                           6076 ;demo.c:816: cmd.source_x = 0;
   1B5F 21r8Es41           6077 	ld	hl,#_cmd
   1B62 36 00              6078 	ld	(hl),#0x00
   1B64 23                 6079 	inc	hl
   1B65 36 00              6080 	ld	(hl),#0x00
                           6081 ;demo.c:817: cmd.source_y = 0;
   1B67 21r90s41           6082 	ld	hl, #_cmd + 2
   1B6A 36 00              6083 	ld	(hl),#0x00
   1B6C 23                 6084 	inc	hl
   1B6D 36 00              6085 	ld	(hl),#0x00
                           6086 ;demo.c:818: cmd.dest_x = 0;
   1B6F 21r92s41           6087 	ld	hl, #_cmd + 4
   1B72 36 00              6088 	ld	(hl),#0x00
   1B74 23                 6089 	inc	hl
   1B75 36 00              6090 	ld	(hl),#0x00
                           6091 ;demo.c:819: cmd.dest_y = 256;
   1B77 21r94s41           6092 	ld	hl, #_cmd + 6
   1B7A 36 00              6093 	ld	(hl),#0x00
   1B7C 23                 6094 	inc	hl
   1B7D 36 01              6095 	ld	(hl),#0x01
                           6096 ;demo.c:820: vdp_copier(&cmd);
   1B7F 21r8Es41           6097 	ld	hl,#_cmd
   1B82 E5                 6098 	push	hl
   1B83 CDr00s00           6099 	call	_vdp_copier
   1B86 F1                 6100 	pop	af
                           6101 ;demo.c:822: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1B87 21 00 00           6102 	ld	hl,#0x0000
   1B8A E5                 6103 	push	hl
   1B8B 2E 01              6104 	ld	l, #0x01
   1B8D E5                 6105 	push	hl
   1B8E 2E 00              6106 	ld	l, #0x00
   1B90 E5                 6107 	push	hl
   1B91 21 76 3E           6108 	ld	hl,#0x3E76
   1B94 E5                 6109 	push	hl
   1B95 21r97s1D           6110 	ld	hl,#__str_12
   1B98 E5                 6111 	push	hl
   1B99 CDr99s0B           6112 	call	_pck_load
   1B9C FD 21 0A 00        6113 	ld	iy,#0x000A
   1BA0 FD 39              6114 	add	iy,sp
   1BA2 FD F9              6115 	ld	sp,iy
                           6116 ;demo.c:824: cmd.size_x = 256;
   1BA4 21r96s41           6117 	ld	hl, #_cmd + 8
   1BA7 36 00              6118 	ld	(hl),#0x00
   1BA9 23                 6119 	inc	hl
   1BAA 36 01              6120 	ld	(hl),#0x01
                           6121 ;demo.c:825: cmd.size_y = 212;
   1BAC 21r98s41           6122 	ld	hl, #_cmd + 10
   1BAF 36 D4              6123 	ld	(hl),#0xD4
   1BB1 23                 6124 	inc	hl
   1BB2 36 00              6125 	ld	(hl),#0x00
                           6126 ;demo.c:826: cmd.data = 0;
                           6127 ;demo.c:827: cmd.argument = 0x00;
   1BB4 3E 00              6128 	ld	a,#0x00
   1BB6 32r9As41           6129 	ld	(#_cmd + 12),a
   1BB9 32r9Bs41           6130 	ld	(#_cmd + 13),a
                           6131 ;demo.c:828: cmd.command = 0xd0; 
   1BBC 01r9Cs41           6132 	ld	bc,#_cmd + 14
   1BBF 3E D0              6133 	ld	a,#0xD0
   1BC1 02                 6134 	ld	(bc),a
                           6135 ;demo.c:829: cmd.source_x = 0;
   1BC2 21r8Es41           6136 	ld	hl,#_cmd
   1BC5 36 00              6137 	ld	(hl),#0x00
   1BC7 23                 6138 	inc	hl
   1BC8 36 00              6139 	ld	(hl),#0x00
                           6140 ;demo.c:830: cmd.source_y = 0;
   1BCA 21r90s41           6141 	ld	hl, #_cmd + 2
   1BCD 36 00              6142 	ld	(hl),#0x00
   1BCF 23                 6143 	inc	hl
   1BD0 36 00              6144 	ld	(hl),#0x00
                           6145 ;demo.c:831: cmd.dest_x = 0;
   1BD2 21r92s41           6146 	ld	hl, #_cmd + 4
   1BD5 36 00              6147 	ld	(hl),#0x00
   1BD7 23                 6148 	inc	hl
   1BD8 36 00              6149 	ld	(hl),#0x00
                           6150 ;demo.c:832: cmd.dest_y = 512;
   1BDA 21r94s41           6151 	ld	hl, #_cmd + 6
   1BDD 36 00              6152 	ld	(hl),#0x00
   1BDF 23                 6153 	inc	hl
   1BE0 36 02              6154 	ld	(hl),#0x02
                           6155 ;demo.c:833: vdp_copier(&cmd);
   1BE2 21r8Es41           6156 	ld	hl,#_cmd
   1BE5 E5                 6157 	push	hl
   1BE6 CDr00s00           6158 	call	_vdp_copier
   1BE9 F1                 6159 	pop	af
                           6160 ;demo.c:836: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   1BEA 21 00 00           6161 	ld	hl,#0x0000
   1BED E5                 6162 	push	hl
   1BEE 2E 01              6163 	ld	l, #0x01
   1BF0 E5                 6164 	push	hl
   1BF1 2E 00              6165 	ld	l, #0x00
   1BF3 E5                 6166 	push	hl
   1BF4 21 9E 3A           6167 	ld	hl,#0x3A9E
   1BF7 E5                 6168 	push	hl
   1BF8 21rA3s1D           6169 	ld	hl,#__str_13
   1BFB E5                 6170 	push	hl
   1BFC CDr99s0B           6171 	call	_pck_load
   1BFF FD 21 0A 00        6172 	ld	iy,#0x000A
   1C03 FD 39              6173 	add	iy,sp
   1C05 FD F9              6174 	ld	sp,iy
                           6175 ;demo.c:838: cmd.size_x = 256;
   1C07 21r96s41           6176 	ld	hl, #_cmd + 8
   1C0A 36 00              6177 	ld	(hl),#0x00
   1C0C 23                 6178 	inc	hl
   1C0D 36 01              6179 	ld	(hl),#0x01
                           6180 ;demo.c:839: cmd.size_y = 212;
   1C0F 21r98s41           6181 	ld	hl, #_cmd + 10
   1C12 36 D4              6182 	ld	(hl),#0xD4
   1C14 23                 6183 	inc	hl
   1C15 36 00              6184 	ld	(hl),#0x00
                           6185 ;demo.c:840: cmd.data = 0;
                           6186 ;demo.c:841: cmd.argument = 0x00;
   1C17 3E 00              6187 	ld	a,#0x00
   1C19 32r9As41           6188 	ld	(#_cmd + 12),a
   1C1C 32r9Bs41           6189 	ld	(#_cmd + 13),a
                           6190 ;demo.c:842: cmd.command = 0xd0; 
   1C1F 01r9Cs41           6191 	ld	bc,#_cmd + 14
   1C22 3E D0              6192 	ld	a,#0xD0
   1C24 02                 6193 	ld	(bc),a
                           6194 ;demo.c:843: cmd.source_x = 0;
   1C25 21r8Es41           6195 	ld	hl,#_cmd
   1C28 36 00              6196 	ld	(hl),#0x00
   1C2A 23                 6197 	inc	hl
   1C2B 36 00              6198 	ld	(hl),#0x00
                           6199 ;demo.c:844: cmd.source_y = 0;
   1C2D 21r90s41           6200 	ld	hl, #_cmd + 2
   1C30 36 00              6201 	ld	(hl),#0x00
   1C32 23                 6202 	inc	hl
   1C33 36 00              6203 	ld	(hl),#0x00
                           6204 ;demo.c:845: cmd.dest_x = 0;
   1C35 21r92s41           6205 	ld	hl, #_cmd + 4
   1C38 36 00              6206 	ld	(hl),#0x00
   1C3A 23                 6207 	inc	hl
   1C3B 36 00              6208 	ld	(hl),#0x00
                           6209 ;demo.c:846: cmd.dest_y = 768;
   1C3D 21r94s41           6210 	ld	hl, #_cmd + 6
   1C40 36 00              6211 	ld	(hl),#0x00
   1C42 23                 6212 	inc	hl
   1C43 36 03              6213 	ld	(hl),#0x03
                           6214 ;demo.c:847: vdp_copier(&cmd);
   1C45 21r8Es41           6215 	ld	hl,#_cmd
   1C48 E5                 6216 	push	hl
   1C49 CDr00s00           6217 	call	_vdp_copier
   1C4C F1                 6218 	pop	af
                           6219 ;demo.c:849: vdp_register(9,130); // 50hz,212
   1C4D 21 09 82           6220 	ld	hl,#0x8209
   1C50 E5                 6221 	push	hl
   1C51 CDr00s00           6222 	call	_vdp_register
   1C54 F1                 6223 	pop	af
                           6224 ;demo.c:851: scratch_clear();
   1C55 CDr90s09           6225 	call	_scratch_clear
                           6226 ;demo.c:853: vdp_set_write_address(0, 0);
   1C58 21 00 00           6227 	ld	hl,#0x0000
   1C5B E5                 6228 	push	hl
   1C5C 3E 00              6229 	ld	a,#0x00
   1C5E F5                 6230 	push	af
   1C5F 33                 6231 	inc	sp
   1C60 CDr00s00           6232 	call	_vdp_set_write_address
   1C63 F1                 6233 	pop	af
   1C64 33                 6234 	inc	sp
                           6235 ;demo.c:855: for (y = 0; y < 212; y++) { 
   1C65 0E D4              6236 	ld	c,#0xD4
   1C67                    6237 00109$:
                           6238 ;demo.c:856: vdp_load_screen(scratch, 128);
   1C67 C5                 6239 	push	bc
   1C68 3E 80              6240 	ld	a,#0x80
   1C6A F5                 6241 	push	af
   1C6B 33                 6242 	inc	sp
   1C6C 21r4As40           6243 	ld	hl,#_scratch
   1C6F E5                 6244 	push	hl
   1C70 CDr00s00           6245 	call	_vdp_load_screen
   1C73 F1                 6246 	pop	af
   1C74 33                 6247 	inc	sp
   1C75 C1                 6248 	pop	bc
   1C76 0D                 6249 	dec	c
                           6250 ;demo.c:855: for (y = 0; y < 212; y++) { 
   1C77 AF                 6251 	xor	a,a
   1C78 B1                 6252 	or	a,c
   1C79 20 EC              6253 	jr	NZ,00109$
                           6254 ;demo.c:859: install_isr(my_isr);
   1C7B 21rECs07           6255 	ld	hl,#_my_isr
   1C7E E5                 6256 	push	hl
   1C7F CDr00s00           6257 	call	_install_isr
   1C82 F1                 6258 	pop	af
                           6259 ;demo.c:860: anim_init = 1;
   1C83 21rF2s41           6260 	ld	hl,#_anim_init + 0
   1C86 36 01              6261 	ld	(hl), #0x01
   1C88 21rF3s41           6262 	ld	hl,#_anim_init + 1
   1C8B 36 00              6263 	ld	(hl), #0x00
                           6264 ;demo.c:861: vdp_load_palette(tf_palette);
   1C8D 21r4As41           6265 	ld	hl,#_tf_palette
   1C90 E5                 6266 	push	hl
   1C91 CDr00s00           6267 	call	_vdp_load_palette
   1C94 F1                 6268 	pop	af
                           6269 ;demo.c:864: for (y = 0; y < 106; y+=1) {
   1C95                    6270 00120$:
   1C95 DD 36 FF 00        6271 	ld	-1 (ix),#0x00
   1C99                    6272 00110$:
   1C99 DD 7E FF           6273 	ld	a,-1 (ix)
   1C9C D6 6A              6274 	sub	a,#0x6A
   1C9E D2r1Es1D           6275 	jp	NC,00113$
                           6276 ;demo.c:865: cmd.source_x = 0;
   1CA1 21r8Es41           6277 	ld	hl,#_cmd
   1CA4 36 00              6278 	ld	(hl),#0x00
   1CA6 23                 6279 	inc	hl
   1CA7 36 00              6280 	ld	(hl),#0x00
                           6281 ;demo.c:866: cmd.source_y = 256+po+frames+(y>>1);
   1CA9 11r90s41           6282 	ld	de,#_cmd + 2
   1CAC 3ArEEs41           6283 	ld	a,(#_po+0)
   1CAF 4F                 6284 	ld	c,a
   1CB0 3ArEFs41           6285 	ld	a,(#_po+1)
   1CB3 C6 01              6286 	add	a,#0x01
   1CB5 47                 6287 	ld	b,a
   1CB6 21rF0s41           6288 	ld	hl,#_frames
   1CB9 79                 6289 	ld	a,c
   1CBA 86                 6290 	add	a,(hl)
   1CBB DD 77 FD           6291 	ld	-3 (ix),a
   1CBE 78                 6292 	ld	a,b
   1CBF 23                 6293 	inc	hl
   1CC0 8E                 6294 	adc	a,(hl)
   1CC1 DD 77 FE           6295 	ld	-2 (ix),a
   1CC4 DD 4E FF           6296 	ld	c,-1 (ix)
   1CC7 CB 39              6297 	srl	c
   1CC9 06 00              6298 	ld	b,#0x00
   1CCB DD 7E FD           6299 	ld	a,-3 (ix)
   1CCE 81                 6300 	add	a,c
   1CCF 4F                 6301 	ld	c,a
   1CD0 DD 7E FE           6302 	ld	a,-2 (ix)
   1CD3 88                 6303 	adc	a,b
   1CD4 47                 6304 	ld	b,a
   1CD5 6B                 6305 	ld	l,e
   1CD6 62                 6306 	ld	h,d
   1CD7 71                 6307 	ld	(hl),c
   1CD8 23                 6308 	inc	hl
   1CD9 70                 6309 	ld	(hl),b
                           6310 ;demo.c:867: cmd.dest_x = 0;
   1CDA 21r92s41           6311 	ld	hl, #_cmd + 4
   1CDD 36 00              6312 	ld	(hl),#0x00
   1CDF 23                 6313 	inc	hl
   1CE0 36 00              6314 	ld	(hl),#0x00
                           6315 ;demo.c:868: cmd.dest_y = (y<<1);
   1CE2 01r94s41           6316 	ld	bc,#_cmd + 6
   1CE5 DD 5E FF           6317 	ld	e,-1 (ix)
   1CE8 16 00              6318 	ld	d,#0x00
   1CEA CB 23              6319 	sla	e
   1CEC CB 12              6320 	rl	d
   1CEE 69                 6321 	ld	l,c
   1CEF 60                 6322 	ld	h,b
   1CF0 73                 6323 	ld	(hl),e
   1CF1 23                 6324 	inc	hl
   1CF2 72                 6325 	ld	(hl),d
                           6326 ;demo.c:869: cmd.size_x = 256;
   1CF3 21r96s41           6327 	ld	hl, #_cmd + 8
   1CF6 36 00              6328 	ld	(hl),#0x00
   1CF8 23                 6329 	inc	hl
   1CF9 36 01              6330 	ld	(hl),#0x01
                           6331 ;demo.c:870: cmd.size_y = 1;
   1CFB 21r98s41           6332 	ld	hl, #_cmd + 10
   1CFE 36 01              6333 	ld	(hl),#0x01
   1D00 23                 6334 	inc	hl
   1D01 36 00              6335 	ld	(hl),#0x00
                           6336 ;demo.c:871: cmd.data = 0;
                           6337 ;demo.c:872: cmd.argument = 0x00;
   1D03 3E 00              6338 	ld	a,#0x00
   1D05 32r9As41           6339 	ld	(#_cmd + 12),a
   1D08 32r9Bs41           6340 	ld	(#_cmd + 13),a
                           6341 ;demo.c:873: cmd.command = 0xD0;
   1D0B 3E D0              6342 	ld	a,#0xD0
   1D0D 32r9Cs41           6343 	ld	(#_cmd + 14),a
                           6344 ;demo.c:874: vdp_copier(&cmd);
   1D10 21r8Es41           6345 	ld	hl,#_cmd
   1D13 E5                 6346 	push	hl
   1D14 CDr00s00           6347 	call	_vdp_copier
   1D17 F1                 6348 	pop	af
                           6349 ;demo.c:864: for (y = 0; y < 106; y+=1) {
   1D18 DD 34 FF           6350 	inc	-1 (ix)
   1D1B C3r99s1C           6351 	jp	00110$
   1D1E                    6352 00113$:
                           6353 ;demo.c:877: frames+=53;
   1D1E 21rF0s41           6354 	ld	hl,#_frames
   1D21 7E                 6355 	ld	a,(hl)
   1D22 C6 35              6356 	add	a,#0x35
   1D24 23                 6357 	inc	hl
   1D25 2B                 6358 	dec	hl
   1D26 C5                 6359 	push	bc
   1D27 4F                 6360 	ld	c, a
   1D28 23                 6361 	inc	hl
   1D29 7E                 6362 	ld	a, (hl)
   1D2A 47                 6363 	ld	b, a
   1D2B 79                 6364 	ld	a, c
   1D2C 2B                 6365 	dec	hl
   1D2D 77                 6366 	ld	(hl), a
   1D2E 78                 6367 	ld	a, b
   1D2F C1                 6368 	pop	bc
   1D30 CE 00              6369 	adc	a,#0x00
   1D32 23                 6370 	inc	hl
   1D33 77                 6371 	ld	(hl),a
                           6372 ;demo.c:878: if (frames >= 212) { frames = 0; po+=256; }
   1D34 3ArF0s41           6373 	ld	a,(#_frames+0)
   1D37 D6 D4              6374 	sub	a,#0xD4
   1D39 3ArF1s41           6375 	ld	a,(#_frames+1)
   1D3C DE 00              6376 	sbc	a,#0x00
   1D3E FAr61s1D           6377 	jp	M,00104$
   1D41 21rF0s41           6378 	ld	hl,#_frames + 0
   1D44 36 00              6379 	ld	(hl), #0x00
   1D46 21rF1s41           6380 	ld	hl,#_frames + 1
   1D49 36 00              6381 	ld	(hl), #0x00
   1D4B 21rEEs41           6382 	ld	hl,#_po
   1D4E 7E                 6383 	ld	a,(hl)
   1D4F C6 00              6384 	add	a,#0x00
   1D51 23                 6385 	inc	hl
   1D52 2B                 6386 	dec	hl
   1D53 C5                 6387 	push	bc
   1D54 4F                 6388 	ld	c, a
   1D55 23                 6389 	inc	hl
   1D56 7E                 6390 	ld	a, (hl)
   1D57 47                 6391 	ld	b, a
   1D58 79                 6392 	ld	a, c
   1D59 2B                 6393 	dec	hl
   1D5A 77                 6394 	ld	(hl), a
   1D5B 78                 6395 	ld	a, b
   1D5C C1                 6396 	pop	bc
   1D5D CE 01              6397 	adc	a,#0x01
   1D5F 23                 6398 	inc	hl
   1D60 77                 6399 	ld	(hl),a
   1D61                    6400 00104$:
                           6401 ;demo.c:879: if (po >= 768) {
   1D61 3ArEEs41           6402 	ld	a,(#_po+0)
   1D64 D6 00              6403 	sub	a,#0x00
   1D66 3ArEFs41           6404 	ld	a,(#_po+1)
   1D69 DE 03              6405 	sbc	a,#0x03
   1D6B FAr78s1D           6406 	jp	M,00114$
                           6407 ;demo.c:880: po = 0;
   1D6E 21rEEs41           6408 	ld	hl,#_po + 0
   1D71 36 00              6409 	ld	(hl), #0x00
   1D73 21rEFs41           6410 	ld	hl,#_po + 1
   1D76 36 00              6411 	ld	(hl), #0x00
   1D78                    6412 00114$:
   1D78 DD F9              6413 	ld	sp,ix
   1D7A DD E1              6414 	pop	ix
   1D7C C9                 6415 	ret
   1D7D                    6416 _animplay_end::
   1D7D                    6417 __str_10:
   1D7D 4C 20 4F 20 41 20  6418 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1D8A 00                 6419 	.db 0x00
   1D8B                    6420 __str_11:
   1D8B 4C 46 31 20 20 20  6421 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1D96 00                 6422 	.db 0x00
   1D97                    6423 __str_12:
   1D97 4C 46 32 20 20 20  6424 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1DA2 00                 6425 	.db 0x00
   1DA3                    6426 __str_13:
   1DA3 4C 46 33 20 20 20  6427 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1DAE 00                 6428 	.db 0x00
                           6429 ;demo.c:896: void drawbox(uint8_t x, uint8_t y) {
                           6430 ;	---------------------------------
                           6431 ; Function drawbox
                           6432 ; ---------------------------------
   1DAF                    6433 _drawbox_start::
   1DAF                    6434 _drawbox:
   1DAF DD E5              6435 	push	ix
   1DB1 DD 21 00 00        6436 	ld	ix,#0
   1DB5 DD 39              6437 	add	ix,sp
                           6438 ;demo.c:897: cmd.source_x = boxes_x[boxi];
   1DB7 21r0As42           6439 	ld	hl,#_boxi
   1DBA 3ErFB              6440 	ld	a,#<_boxes_x
   1DBC 86                 6441 	add	a,(hl)
   1DBD 4F                 6442 	ld	c,a
   1DBE 3Es41              6443 	ld	a,#>_boxes_x
   1DC0 CE 00              6444 	adc	a,#0x00
   1DC2 47                 6445 	ld	b,a
   1DC3 0A                 6446 	ld	a,(bc)
   1DC4 4F                 6447 	ld	c,a
   1DC5 06 00              6448 	ld	b,#0x00
   1DC7 21r8Es41           6449 	ld	hl,#_cmd
   1DCA 71                 6450 	ld	(hl),c
   1DCB 23                 6451 	inc	hl
   1DCC 70                 6452 	ld	(hl),b
                           6453 ;demo.c:898: cmd.source_y = boxes_y[boxi];
   1DCD 01r90s41           6454 	ld	bc,#_cmd + 2
   1DD0 3Ar0As42           6455 	ld	a,(#_boxi+0)
   1DD3 87                 6456 	add	a,a
   1DD4 C6r00              6457 	add	a,#<_boxes_y
   1DD6 6F                 6458 	ld	l,a
   1DD7 3Es42              6459 	ld	a,#>_boxes_y
   1DD9 CE 00              6460 	adc	a,#0x00
   1DDB 67                 6461 	ld	h,a
   1DDC 5E                 6462 	ld	e,(hl)
   1DDD 23                 6463 	inc	hl
   1DDE 56                 6464 	ld	d,(hl)
   1DDF 69                 6465 	ld	l,c
   1DE0 60                 6466 	ld	h,b
   1DE1 73                 6467 	ld	(hl),e
   1DE2 23                 6468 	inc	hl
   1DE3 72                 6469 	ld	(hl),d
                           6470 ;demo.c:899: cmd.dest_x = x;
   1DE4 01r92s41           6471 	ld	bc,#_cmd + 4
   1DE7 DD 5E 04           6472 	ld	e,4 (ix)
   1DEA 16 00              6473 	ld	d,#0x00
   1DEC 69                 6474 	ld	l,c
   1DED 60                 6475 	ld	h,b
   1DEE 73                 6476 	ld	(hl),e
   1DEF 23                 6477 	inc	hl
   1DF0 72                 6478 	ld	(hl),d
                           6479 ;demo.c:900: cmd.dest_y = y;
   1DF1 01r94s41           6480 	ld	bc,#_cmd + 6
   1DF4 DD 5E 05           6481 	ld	e,5 (ix)
   1DF7 16 00              6482 	ld	d,#0x00
   1DF9 69                 6483 	ld	l,c
   1DFA 60                 6484 	ld	h,b
   1DFB 73                 6485 	ld	(hl),e
   1DFC 23                 6486 	inc	hl
   1DFD 72                 6487 	ld	(hl),d
                           6488 ;demo.c:901: cmd.size_x = 36;
   1DFE 21r96s41           6489 	ld	hl, #_cmd + 8
   1E01 36 24              6490 	ld	(hl),#0x24
   1E03 23                 6491 	inc	hl
   1E04 36 00              6492 	ld	(hl),#0x00
                           6493 ;demo.c:902: cmd.size_y = 36;
   1E06 21r98s41           6494 	ld	hl, #_cmd + 10
   1E09 36 24              6495 	ld	(hl),#0x24
   1E0B 23                 6496 	inc	hl
   1E0C 36 00              6497 	ld	(hl),#0x00
                           6498 ;demo.c:903: cmd.data = 0;
                           6499 ;demo.c:904: cmd.argument = 0x00;
   1E0E 3E 00              6500 	ld	a,#0x00
   1E10 32r9As41           6501 	ld	(#_cmd + 12),a
   1E13 32r9Bs41           6502 	ld	(#_cmd + 13),a
                           6503 ;demo.c:905: cmd.command = 0x98; // TIMP sprite
   1E16 3E 98              6504 	ld	a,#0x98
   1E18 32r9Cs41           6505 	ld	(#_cmd + 14),a
                           6506 ;demo.c:906: vdp_copier(&cmd);
   1E1B 21r8Es41           6507 	ld	hl,#_cmd
   1E1E E5                 6508 	push	hl
   1E1F CDr00s00           6509 	call	_vdp_copier
   1E22 F1                 6510 	pop	af
                           6511 ;demo.c:908: prevx = x;
   1E23 DD 7E 04           6512 	ld	a,4 (ix)
   1E26 21rF7s41           6513 	ld	hl,#_prevx + 0
   1E29 77                 6514 	ld	(hl), a
   1E2A 21rF8s41           6515 	ld	hl,#_prevx + 1
   1E2D 36 00              6516 	ld	(hl), #0x00
                           6517 ;demo.c:909: prevy = y;
   1E2F DD 7E 05           6518 	ld	a,5 (ix)
   1E32 21rF9s41           6519 	ld	hl,#_prevy + 0
   1E35 77                 6520 	ld	(hl), a
   1E36 21rFAs41           6521 	ld	hl,#_prevy + 1
   1E39 36 00              6522 	ld	(hl), #0x00
   1E3B DD E1              6523 	pop	ix
   1E3D C9                 6524 	ret
   1E3E                    6525 _drawbox_end::
                           6526 ;demo.c:923: void boxes() {
                           6527 ;	---------------------------------
                           6528 ; Function boxes
                           6529 ; ---------------------------------
   1E3E                    6530 _boxes_start::
   1E3E                    6531 _boxes:
   1E3E DD E5              6532 	push	ix
   1E40 DD 21 00 00        6533 	ld	ix,#0
   1E44 DD 39              6534 	add	ix,sp
   1E46 F5                 6535 	push	af
                           6536 ;demo.c:927: if (bx < 0) return;
   1E47 FD 21r0Bs42        6537 	ld	iy,#_bx
   1E4B FD CB 01 7E        6538 	bit	7,1 (iy)
   1E4F C2r65s22           6539 	jp	NZ,00149$
                           6540 ;demo.c:929: if (bonc == 1) {
   1E52 3Ar13s42           6541 	ld	a,(#_bonc+0)
   1E55 D6 01              6542 	sub	a,#0x01
   1E57 20 06              6543 	jr	NZ,00178$
   1E59 3Ar14s42           6544 	ld	a,(#_bonc+1)
   1E5C B7                 6545 	or	a,a
   1E5D 28 02              6546 	jr	Z,00179$
   1E5F                    6547 00178$:
   1E5F 18 4D              6548 	jr	00104$
   1E61                    6549 00179$:
                           6550 ;demo.c:931: cmd.source_x = 0;
   1E61 21r8Es41           6551 	ld	hl,#_cmd
   1E64 36 00              6552 	ld	(hl),#0x00
   1E66 23                 6553 	inc	hl
   1E67 36 00              6554 	ld	(hl),#0x00
                           6555 ;demo.c:932: cmd.source_y = 256;
   1E69 21r90s41           6556 	ld	hl, #_cmd + 2
   1E6C 36 00              6557 	ld	(hl),#0x00
   1E6E 23                 6558 	inc	hl
   1E6F 36 01              6559 	ld	(hl),#0x01
                           6560 ;demo.c:933: cmd.dest_x = pbx;
   1E71 01r92s41           6561 	ld	bc,#_cmd + 4
   1E74 ED 5Br15s42        6562 	ld	de,(_pbx)
   1E78 69                 6563 	ld	l,c
   1E79 60                 6564 	ld	h,b
   1E7A 73                 6565 	ld	(hl),e
   1E7B 23                 6566 	inc	hl
   1E7C 72                 6567 	ld	(hl),d
                           6568 ;demo.c:934: cmd.dest_y = pbt;
   1E7D 01r94s41           6569 	ld	bc,#_cmd + 6
   1E80 ED 5Br17s42        6570 	ld	de,(_pbt)
   1E84 69                 6571 	ld	l,c
   1E85 60                 6572 	ld	h,b
   1E86 73                 6573 	ld	(hl),e
   1E87 23                 6574 	inc	hl
   1E88 72                 6575 	ld	(hl),d
                           6576 ;demo.c:935: cmd.size_x = 36;
   1E89 21r96s41           6577 	ld	hl, #_cmd + 8
   1E8C 36 24              6578 	ld	(hl),#0x24
   1E8E 23                 6579 	inc	hl
   1E8F 36 00              6580 	ld	(hl),#0x00
                           6581 ;demo.c:936: cmd.size_y = 36;
   1E91 21r98s41           6582 	ld	hl, #_cmd + 10
   1E94 36 24              6583 	ld	(hl),#0x24
   1E96 23                 6584 	inc	hl
   1E97 36 00              6585 	ld	(hl),#0x00
                           6586 ;demo.c:937: cmd.data = 0;
                           6587 ;demo.c:938: cmd.argument = 0x00;
   1E99 3E 00              6588 	ld	a,#0x00
   1E9B 32r9As41           6589 	ld	(#_cmd + 12),a
   1E9E 32r9Bs41           6590 	ld	(#_cmd + 13),a
                           6591 ;demo.c:939: cmd.command = 0xD0; // HMMM
   1EA1 3E D0              6592 	ld	a,#0xD0
   1EA3 32r9Cs41           6593 	ld	(#_cmd + 14),a
                           6594 ;demo.c:940: vdp_copier(&cmd);
   1EA6 21r8Es41           6595 	ld	hl,#_cmd
   1EA9 E5                 6596 	push	hl
   1EAA CDr00s00           6597 	call	_vdp_copier
   1EAD F1                 6598 	pop	af
   1EAE                    6599 00104$:
                           6600 ;demo.c:943: if (boxes_init == 0) {
   1EAE AF                 6601 	xor	a,a
   1EAF 21rF4s41           6602 	ld	hl,#_boxes_init + 0
   1EB2 B6                 6603 	or	a,(hl)
   1EB3 C2rB5s1F           6604 	jp	NZ,00106$
                           6605 ;demo.c:944: boxes_init = 1;
   1EB6 FD 21rF4s41        6606 	ld	iy,#_boxes_init
   1EBA FD 36 00 01        6607 	ld	0 (iy),#0x01
                           6608 ;demo.c:946: cmd.size_x = 8;
   1EBE 21r96s41           6609 	ld	hl, #_cmd + 8
   1EC1 36 08              6610 	ld	(hl),#0x08
   1EC3 23                 6611 	inc	hl
   1EC4 36 00              6612 	ld	(hl),#0x00
                           6613 ;demo.c:947: cmd.size_y = 212;
   1EC6 21r98s41           6614 	ld	hl, #_cmd + 10
   1EC9 36 D4              6615 	ld	(hl),#0xD4
   1ECB 23                 6616 	inc	hl
   1ECC 36 00              6617 	ld	(hl),#0x00
                           6618 ;demo.c:948: cmd.data = 0;
                           6619 ;demo.c:949: cmd.argument = 0x00; // from 70xY to left
   1ECE 3E 00              6620 	ld	a,#0x00
   1ED0 32r9As41           6621 	ld	(#_cmd + 12),a
   1ED3 32r9Bs41           6622 	ld	(#_cmd + 13),a
                           6623 ;demo.c:950: cmd.command = 0xd0; // vram to vram, y only
   1ED6 01r9Cs41           6624 	ld	bc,#_cmd + 14
   1ED9 3E D0              6625 	ld	a,#0xD0
   1EDB 02                 6626 	ld	(bc),a
                           6627 ;demo.c:951: cmd.source_x = 248;
   1EDC 21r8Es41           6628 	ld	hl,#_cmd
   1EDF 36 F8              6629 	ld	(hl),#0xF8
   1EE1 23                 6630 	inc	hl
   1EE2 36 00              6631 	ld	(hl),#0x00
                           6632 ;demo.c:952: cmd.source_y = 0;
   1EE4 21r90s41           6633 	ld	hl, #_cmd + 2
   1EE7 36 00              6634 	ld	(hl),#0x00
   1EE9 23                 6635 	inc	hl
   1EEA 36 00              6636 	ld	(hl),#0x00
                           6637 ;demo.c:953: cmd.dest_y = 0;
   1EEC 21r94s41           6638 	ld	hl, #_cmd + 6
   1EEF 36 00              6639 	ld	(hl),#0x00
   1EF1 23                 6640 	inc	hl
   1EF2 36 00              6641 	ld	(hl),#0x00
                           6642 ;demo.c:955: for (x = 248; x >= 0; x-=8) {
   1EF4 01 F8 00           6643 	ld	bc,#0x00F8
   1EF7                    6644 00137$:
   1EF7 78                 6645 	ld	a,b
   1EF8 CB 7F              6646 	bit	7,a
   1EFA 20 38              6647 	jr	NZ,00140$
                           6648 ;demo.c:956: waitVB();
   1EFC 76                 6649 		halt 
                           6650 ;demo.c:957: cmd.dest_x = x;
   1EFD 11r92s41           6651 	ld	de,#_cmd + 4
   1F00 EB                 6652 	ex	de,hl
   1F01 71                 6653 	ld	(hl),c
   1F02 23                 6654 	inc	hl
   1F03 70                 6655 	ld	(hl),b
                           6656 ;demo.c:958: cmd.dest_y = 0;
   1F04 11r94s41           6657 	ld	de,#_cmd + 6
   1F07 EB                 6658 	ex	de,hl
   1F08 36 00              6659 	ld	(hl),#0x00
   1F0A 23                 6660 	inc	hl
   1F0B 36 00              6661 	ld	(hl),#0x00
                           6662 ;demo.c:959: vdp_copier(&cmd);
   1F0D C5                 6663 	push	bc
   1F0E 21r8Es41           6664 	ld	hl,#_cmd
   1F11 E5                 6665 	push	hl
   1F12 CDr00s00           6666 	call	_vdp_copier
   1F15 F1                 6667 	pop	af
   1F16 C1                 6668 	pop	bc
                           6669 ;demo.c:960: cmd.dest_y = 256;
   1F17 11r94s41           6670 	ld	de,#_cmd + 6
   1F1A EB                 6671 	ex	de,hl
   1F1B 36 00              6672 	ld	(hl),#0x00
   1F1D 23                 6673 	inc	hl
   1F1E 36 01              6674 	ld	(hl),#0x01
                           6675 ;demo.c:961: vdp_copier(&cmd);
   1F20 C5                 6676 	push	bc
   1F21 21r8Es41           6677 	ld	hl,#_cmd
   1F24 E5                 6678 	push	hl
   1F25 CDr00s00           6679 	call	_vdp_copier
   1F28 F1                 6680 	pop	af
   1F29 C1                 6681 	pop	bc
                           6682 ;demo.c:955: for (x = 248; x >= 0; x-=8) {
   1F2A 79                 6683 	ld	a,c
   1F2B C6 F8              6684 	add	a,#0xF8
   1F2D 4F                 6685 	ld	c,a
   1F2E 78                 6686 	ld	a,b
   1F2F CE FF              6687 	adc	a,#0xFF
   1F31 47                 6688 	ld	b,a
   1F32 18 C3              6689 	jr	00137$
   1F34                    6690 00140$:
                           6691 ;demo.c:964: vdp_load_palette(boxes_palette);
   1F34 21r6As41           6692 	ld	hl,#_boxes_palette
   1F37 E5                 6693 	push	hl
   1F38 CDr00s00           6694 	call	_vdp_load_palette
   1F3B F1                 6695 	pop	af
                           6696 ;demo.c:966: for (x=0;x < 8;x++) {
   1F3C DD 36 FE 00        6697 	ld	-2 (ix),#0x00
   1F40 DD 36 FF 00        6698 	ld	-1 (ix),#0x00
   1F44                    6699 00145$:
   1F44 DD 7E FE           6700 	ld	a,-2 (ix)
   1F47 D6 08              6701 	sub	a,#0x08
   1F49 DD 7E FF           6702 	ld	a,-1 (ix)
   1F4C DE 00              6703 	sbc	a,#0x00
   1F4E F2rA8s1F           6704 	jp	P,00148$
                           6705 ;demo.c:968: for (y=0;y < 9;y++) {
   1F51 11 00 00           6706 	ld	de,#0x0000
   1F54                    6707 00141$:
   1F54 7B                 6708 	ld	a,e
   1F55 D6 09              6709 	sub	a,#0x09
   1F57 7A                 6710 	ld	a,d
   1F58 DE 00              6711 	sbc	a,#0x00
   1F5A F2r9Ds1F           6712 	jp	P,00147$
                           6713 ;demo.c:969: boxes_x[4] = 0;
   1F5D 01rFFs41           6714 	ld	bc,#_boxes_x + 4
   1F60 3E 00              6715 	ld	a,#0x00
   1F62 02                 6716 	ld	(bc),a
                           6717 ;demo.c:970: boxes_y[4] = 768+2*36;
   1F63 21r08s42           6718 	ld	hl, #_boxes_y + 8
   1F66 36 48              6719 	ld	(hl),#0x48
   1F68 23                 6720 	inc	hl
   1F69 36 03              6721 	ld	(hl),#0x03
                           6722 ;demo.c:971: boxi = 4;
   1F6B 21r0As42           6723 	ld	hl,#_boxi + 0
   1F6E 36 04              6724 	ld	(hl), #0x04
                           6725 ;demo.c:972: drawbox((x*36),y*18);
   1F70 4B                 6726 	ld	c,e
   1F71 D5                 6727 	push	de
   1F72 79                 6728 	ld	a,c
   1F73 5F                 6729 	ld	e,a
   1F74 87                 6730 	add	a,a
   1F75 87                 6731 	add	a,a
   1F76 87                 6732 	add	a,a
   1F77 83                 6733 	add	a,e
   1F78 87                 6734 	add	a,a
   1F79 D1                 6735 	pop	de
   1F7A 4F                 6736 	ld	c,a
   1F7B DD 46 FE           6737 	ld	b,-2 (ix)
   1F7E D5                 6738 	push	de
   1F7F 78                 6739 	ld	a,b
   1F80 5F                 6740 	ld	e,a
   1F81 87                 6741 	add	a,a
   1F82 87                 6742 	add	a,a
   1F83 87                 6743 	add	a,a
   1F84 83                 6744 	add	a,e
   1F85 87                 6745 	add	a,a
   1F86 87                 6746 	add	a,a
   1F87 D1                 6747 	pop	de
   1F88 47                 6748 	ld	b,a
   1F89 D5                 6749 	push	de
   1F8A 79                 6750 	ld	a,c
   1F8B F5                 6751 	push	af
   1F8C 33                 6752 	inc	sp
   1F8D C5                 6753 	push	bc
   1F8E 33                 6754 	inc	sp
   1F8F CDrAFs1D           6755 	call	_drawbox
   1F92 F1                 6756 	pop	af
   1F93 D1                 6757 	pop	de
                           6758 ;demo.c:973: boxi = 0;
   1F94 21r0As42           6759 	ld	hl,#_boxi + 0
   1F97 36 00              6760 	ld	(hl), #0x00
                           6761 ;demo.c:968: for (y=0;y < 9;y++) {
   1F99 13                 6762 	inc	de
   1F9A C3r54s1F           6763 	jp	00141$
   1F9D                    6764 00147$:
                           6765 ;demo.c:966: for (x=0;x < 8;x++) {
   1F9D DD 34 FE           6766 	inc	-2 (ix)
   1FA0 20 03              6767 	jr	NZ,00180$
   1FA2 DD 34 FF           6768 	inc	-1 (ix)
   1FA5                    6769 00180$:
   1FA5 C3r44s1F           6770 	jp	00145$
   1FA8                    6771 00148$:
                           6772 ;demo.c:977: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   1FA8 21 08 B6           6773 	ld	hl,#0xB608
   1FAB E5                 6774 	push	hl
   1FAC 21r6As22           6775 	ld	hl,#__str_14
   1FAF E5                 6776 	push	hl
   1FB0 CDr19s16           6777 	call	_drawsine
   1FB3 F1                 6778 	pop	af
   1FB4 F1                 6779 	pop	af
   1FB5                    6780 00106$:
                           6781 ;demo.c:980: if (bt >= 80) bt+=8;
   1FB5 3Ar0Fs42           6782 	ld	a,(#_bt+0)
   1FB8 D6 50              6783 	sub	a,#0x50
   1FBA 3Ar10s42           6784 	ld	a,(#_bt+1)
   1FBD DE 00              6785 	sbc	a,#0x00
   1FBF FArD8s1F           6786 	jp	M,00108$
   1FC2 21r0Fs42           6787 	ld	hl,#_bt
   1FC5 7E                 6788 	ld	a,(hl)
   1FC6 C6 08              6789 	add	a,#0x08
   1FC8 23                 6790 	inc	hl
   1FC9 2B                 6791 	dec	hl
   1FCA C5                 6792 	push	bc
   1FCB 4F                 6793 	ld	c, a
   1FCC 23                 6794 	inc	hl
   1FCD 7E                 6795 	ld	a, (hl)
   1FCE 47                 6796 	ld	b, a
   1FCF 79                 6797 	ld	a, c
   1FD0 2B                 6798 	dec	hl
   1FD1 77                 6799 	ld	(hl), a
   1FD2 78                 6800 	ld	a, b
   1FD3 C1                 6801 	pop	bc
   1FD4 CE 00              6802 	adc	a,#0x00
   1FD6 23                 6803 	inc	hl
   1FD7 77                 6804 	ld	(hl),a
   1FD8                    6805 00108$:
                           6806 ;demo.c:981: if (bt < 80 && bt >= 60) bt+=7;
   1FD8 3Ar0Fs42           6807 	ld	a,(#_bt+0)
   1FDB D6 50              6808 	sub	a,#0x50
   1FDD 3Ar10s42           6809 	ld	a,(#_bt+1)
   1FE0 DE 00              6810 	sbc	a,#0x00
   1FE2 F2r08s20           6811 	jp	P,00110$
   1FE5 3Ar0Fs42           6812 	ld	a,(#_bt+0)
   1FE8 D6 3C              6813 	sub	a,#0x3C
   1FEA 3Ar10s42           6814 	ld	a,(#_bt+1)
   1FED DE 00              6815 	sbc	a,#0x00
   1FEF FAr08s20           6816 	jp	M,00110$
   1FF2 21r0Fs42           6817 	ld	hl,#_bt
   1FF5 7E                 6818 	ld	a,(hl)
   1FF6 C6 07              6819 	add	a,#0x07
   1FF8 23                 6820 	inc	hl
   1FF9 2B                 6821 	dec	hl
   1FFA C5                 6822 	push	bc
   1FFB 4F                 6823 	ld	c, a
   1FFC 23                 6824 	inc	hl
   1FFD 7E                 6825 	ld	a, (hl)
   1FFE 47                 6826 	ld	b, a
   1FFF 79                 6827 	ld	a, c
   2000 2B                 6828 	dec	hl
   2001 77                 6829 	ld	(hl), a
   2002 78                 6830 	ld	a, b
   2003 C1                 6831 	pop	bc
   2004 CE 00              6832 	adc	a,#0x00
   2006 23                 6833 	inc	hl
   2007 77                 6834 	ld	(hl),a
   2008                    6835 00110$:
                           6836 ;demo.c:982: if (bt < 60 && bt >= 40) bt+=6;
   2008 3Ar0Fs42           6837 	ld	a,(#_bt+0)
   200B D6 3C              6838 	sub	a,#0x3C
   200D 3Ar10s42           6839 	ld	a,(#_bt+1)
   2010 DE 00              6840 	sbc	a,#0x00
   2012 F2r38s20           6841 	jp	P,00113$
   2015 3Ar0Fs42           6842 	ld	a,(#_bt+0)
   2018 D6 28              6843 	sub	a,#0x28
   201A 3Ar10s42           6844 	ld	a,(#_bt+1)
   201D DE 00              6845 	sbc	a,#0x00
   201F FAr38s20           6846 	jp	M,00113$
   2022 21r0Fs42           6847 	ld	hl,#_bt
   2025 7E                 6848 	ld	a,(hl)
   2026 C6 06              6849 	add	a,#0x06
   2028 23                 6850 	inc	hl
   2029 2B                 6851 	dec	hl
   202A C5                 6852 	push	bc
   202B 4F                 6853 	ld	c, a
   202C 23                 6854 	inc	hl
   202D 7E                 6855 	ld	a, (hl)
   202E 47                 6856 	ld	b, a
   202F 79                 6857 	ld	a, c
   2030 2B                 6858 	dec	hl
   2031 77                 6859 	ld	(hl), a
   2032 78                 6860 	ld	a, b
   2033 C1                 6861 	pop	bc
   2034 CE 00              6862 	adc	a,#0x00
   2036 23                 6863 	inc	hl
   2037 77                 6864 	ld	(hl),a
   2038                    6865 00113$:
                           6866 ;demo.c:983: if (bt < 40 && bt >= 10) bt+=5;
   2038 3Ar0Fs42           6867 	ld	a,(#_bt+0)
   203B D6 28              6868 	sub	a,#0x28
   203D 3Ar10s42           6869 	ld	a,(#_bt+1)
   2040 DE 00              6870 	sbc	a,#0x00
   2042 F2r68s20           6871 	jp	P,00116$
   2045 3Ar0Fs42           6872 	ld	a,(#_bt+0)
   2048 D6 0A              6873 	sub	a,#0x0A
   204A 3Ar10s42           6874 	ld	a,(#_bt+1)
   204D DE 00              6875 	sbc	a,#0x00
   204F FAr68s20           6876 	jp	M,00116$
   2052 21r0Fs42           6877 	ld	hl,#_bt
   2055 7E                 6878 	ld	a,(hl)
   2056 C6 05              6879 	add	a,#0x05
   2058 23                 6880 	inc	hl
   2059 2B                 6881 	dec	hl
   205A C5                 6882 	push	bc
   205B 4F                 6883 	ld	c, a
   205C 23                 6884 	inc	hl
   205D 7E                 6885 	ld	a, (hl)
   205E 47                 6886 	ld	b, a
   205F 79                 6887 	ld	a, c
   2060 2B                 6888 	dec	hl
   2061 77                 6889 	ld	(hl), a
   2062 78                 6890 	ld	a, b
   2063 C1                 6891 	pop	bc
   2064 CE 00              6892 	adc	a,#0x00
   2066 23                 6893 	inc	hl
   2067 77                 6894 	ld	(hl),a
   2068                    6895 00116$:
                           6896 ;demo.c:984: if (bt < 10 ) bt+=4;
   2068 3Ar0Fs42           6897 	ld	a,(#_bt+0)
   206B D6 0A              6898 	sub	a,#0x0A
   206D 3Ar10s42           6899 	ld	a,(#_bt+1)
   2070 DE 00              6900 	sbc	a,#0x00
   2072 F2r8Bs20           6901 	jp	P,00119$
   2075 21r0Fs42           6902 	ld	hl,#_bt
   2078 7E                 6903 	ld	a,(hl)
   2079 C6 04              6904 	add	a,#0x04
   207B 23                 6905 	inc	hl
   207C 2B                 6906 	dec	hl
   207D C5                 6907 	push	bc
   207E 4F                 6908 	ld	c, a
   207F 23                 6909 	inc	hl
   2080 7E                 6910 	ld	a, (hl)
   2081 47                 6911 	ld	b, a
   2082 79                 6912 	ld	a, c
   2083 2B                 6913 	dec	hl
   2084 77                 6914 	ld	(hl), a
   2085 78                 6915 	ld	a, b
   2086 C1                 6916 	pop	bc
   2087 CE 00              6917 	adc	a,#0x00
   2089 23                 6918 	inc	hl
   208A 77                 6919 	ld	(hl),a
   208B                    6920 00119$:
                           6921 ;demo.c:987: cmd.source_x = bx;
   208B ED 4Br0Bs42        6922 	ld	bc,(_bx)
   208F 21r8Es41           6923 	ld	hl,#_cmd
   2092 71                 6924 	ld	(hl),c
   2093 23                 6925 	inc	hl
   2094 70                 6926 	ld	(hl),b
                           6927 ;demo.c:988: cmd.source_y = bt;
   2095 01r90s41           6928 	ld	bc,#_cmd + 2
   2098 ED 5Br0Fs42        6929 	ld	de,(_bt)
   209C 69                 6930 	ld	l,c
   209D 60                 6931 	ld	h,b
   209E 73                 6932 	ld	(hl),e
   209F 23                 6933 	inc	hl
   20A0 72                 6934 	ld	(hl),d
                           6935 ;demo.c:989: cmd.dest_x = 0;
   20A1 21r92s41           6936 	ld	hl, #_cmd + 4
   20A4 36 00              6937 	ld	(hl),#0x00
   20A6 23                 6938 	inc	hl
   20A7 36 00              6939 	ld	(hl),#0x00
                           6940 ;demo.c:990: cmd.dest_y = 256;
   20A9 21r94s41           6941 	ld	hl, #_cmd + 6
   20AC 36 00              6942 	ld	(hl),#0x00
   20AE 23                 6943 	inc	hl
   20AF 36 01              6944 	ld	(hl),#0x01
                           6945 ;demo.c:991: cmd.size_x = 36;
   20B1 21r96s41           6946 	ld	hl, #_cmd + 8
   20B4 36 24              6947 	ld	(hl),#0x24
   20B6 23                 6948 	inc	hl
   20B7 36 00              6949 	ld	(hl),#0x00
                           6950 ;demo.c:992: cmd.size_y = 36;
   20B9 21r98s41           6951 	ld	hl, #_cmd + 10
   20BC 36 24              6952 	ld	(hl),#0x24
   20BE 23                 6953 	inc	hl
   20BF 36 00              6954 	ld	(hl),#0x00
                           6955 ;demo.c:993: cmd.data = 0;
                           6956 ;demo.c:994: cmd.argument = 0x00;
   20C1 3E 00              6957 	ld	a,#0x00
   20C3 32r9As41           6958 	ld	(#_cmd + 12),a
   20C6 32r9Bs41           6959 	ld	(#_cmd + 13),a
                           6960 ;demo.c:995: cmd.command = 0xD0; // HMMM
   20C9 3E D0              6961 	ld	a,#0xD0
   20CB 32r9Cs41           6962 	ld	(#_cmd + 14),a
                           6963 ;demo.c:996: vdp_copier(&cmd);
   20CE 21r8Es41           6964 	ld	hl,#_cmd
   20D1 E5                 6965 	push	hl
   20D2 CDr00s00           6966 	call	_vdp_copier
   20D5 F1                 6967 	pop	af
                           6968 ;demo.c:998: pbx = bx;
   20D6 2Ar0Bs42           6969 	ld	hl,(_bx)
   20D9 FD 21r15s42        6970 	ld	iy,#_pbx
   20DD FD 75 00           6971 	ld	0 (iy),l
   20E0 FD 21r15s42        6972 	ld	iy,#_pbx
   20E4 FD 74 01           6973 	ld	1 (iy),h
                           6974 ;demo.c:999: pbt = bt;
   20E7 2Ar0Fs42           6975 	ld	hl,(_bt)
   20EA FD 21r17s42        6976 	ld	iy,#_pbt
   20EE FD 75 00           6977 	ld	0 (iy),l
   20F1 FD 21r17s42        6978 	ld	iy,#_pbt
   20F5 FD 74 01           6979 	ld	1 (iy),h
                           6980 ;demo.c:1004: bonc = 1;
   20F8 21r13s42           6981 	ld	hl,#_bonc + 0
   20FB 36 01              6982 	ld	(hl), #0x01
   20FD 21r14s42           6983 	ld	hl,#_bonc + 1
   2100 36 00              6984 	ld	(hl), #0x00
                           6985 ;demo.c:1005: if (bt > by) {
   2102 21r0Ds42           6986 	ld	hl,#_by
   2105 7E                 6987 	ld	a,(hl)
   2106 FD 21r0Fs42        6988 	ld	iy,#_bt
   210A FD 96 00           6989 	sub	a,0 (iy)
   210D 23                 6990 	inc	hl
   210E 7E                 6991 	ld	a,(hl)
   210F FD 21r0Fs42        6992 	ld	iy,#_bt
   2113 FD 9E 01           6993 	sbc	a,1 (iy)
   2116 F2r54s22           6994 	jp	P,00135$
                           6995 ;demo.c:1006: bt = by;
   2119 2Ar0Ds42           6996 	ld	hl,(_by)
   211C FD 21r0Fs42        6997 	ld	iy,#_bt
   2120 FD 75 00           6998 	ld	0 (iy),l
   2123 FD 21r0Fs42        6999 	ld	iy,#_bt
   2127 FD 74 01           7000 	ld	1 (iy),h
                           7001 ;demo.c:1007: drawbox(bx,bt);
   212A 21r0Fs42           7002 	ld	hl,#_bt + 0
   212D 4E                 7003 	ld	c,(hl)
   212E 21r0Bs42           7004 	ld	hl,#_bx + 0
   2131 46                 7005 	ld	b,(hl)
   2132 79                 7006 	ld	a,c
   2133 F5                 7007 	push	af
   2134 33                 7008 	inc	sp
   2135 C5                 7009 	push	bc
   2136 33                 7010 	inc	sp
   2137 CDrAFs1D           7011 	call	_drawbox
   213A F1                 7012 	pop	af
                           7013 ;demo.c:1008: bt = 0;
   213B 21r0Fs42           7014 	ld	hl,#_bt + 0
   213E 36 00              7015 	ld	(hl), #0x00
   2140 21r10s42           7016 	ld	hl,#_bt + 1
   2143 36 00              7017 	ld	(hl), #0x00
                           7018 ;demo.c:1009: if (by > 48) {
   2145 3E 30              7019 	ld	a,#0x30
   2147 FD 21r0Ds42        7020 	ld	iy,#_by
   214B FD 96 00           7021 	sub	a,0 (iy)
   214E 3E 00              7022 	ld	a,#0x00
   2150 FD 21r0Ds42        7023 	ld	iy,#_by
   2154 FD 9E 01           7024 	sbc	a,1 (iy)
   2157 F2rAFs21           7025 	jp	P,00123$
                           7026 ;demo.c:1010: bonc = 0;
   215A 21r13s42           7027 	ld	hl,#_bonc + 0
   215D 36 00              7028 	ld	(hl), #0x00
   215F 21r14s42           7029 	ld	hl,#_bonc + 1
   2162 36 00              7030 	ld	(hl), #0x00
                           7031 ;demo.c:1011: by-=16;
   2164 21r0Ds42           7032 	ld	hl,#_by
   2167 7E                 7033 	ld	a,(hl)
   2168 C6 F0              7034 	add	a,#0xF0
   216A 77                 7035 	ld	(hl),a
   216B 23                 7036 	inc	hl
   216C 7E                 7037 	ld	a,(hl)
   216D CE FF              7038 	adc	a,#0xFF
   216F 77                 7039 	ld	(hl),a
                           7040 ;demo.c:1012: prevbox_of = boxes_of[boxi];
   2170 3Ar0As42           7041 	ld	a,(#_boxi+0)
   2173 87                 7042 	add	a,a
   2174 C6r19              7043 	add	a,#<_boxes_of
   2176 6F                 7044 	ld	l,a
   2177 3Es42              7045 	ld	a,#>_boxes_of
   2179 CE 00              7046 	adc	a,#0x00
   217B 67                 7047 	ld	h,a
   217C 4E                 7048 	ld	c,(hl)
   217D 23                 7049 	inc	hl
   217E 21r23s42           7050 	ld	hl,#_prevbox_of + 0
   2181 71                 7051 	ld	(hl), c
                           7052 ;demo.c:1013: by+=prevbox_of;
   2182 21r23s42           7053 	ld	hl,#_prevbox_of + 0
   2185 4E                 7054 	ld	c,(hl)
   2186 06 00              7055 	ld	b,#0x00
   2188 21r0Ds42           7056 	ld	hl,#_by
   218B 7E                 7057 	ld	a,(hl)
   218C 81                 7058 	add	a,c
   218D 23                 7059 	inc	hl
   218E 2B                 7060 	dec	hl
   218F C5                 7061 	push	bc
   2190 4F                 7062 	ld	c, a
   2191 23                 7063 	inc	hl
   2192 7E                 7064 	ld	a, (hl)
   2193 47                 7065 	ld	b, a
   2194 79                 7066 	ld	a, c
   2195 2B                 7067 	dec	hl
   2196 77                 7068 	ld	(hl), a
   2197 78                 7069 	ld	a, b
   2198 C1                 7070 	pop	bc
   2199 88                 7071 	adc	a,b
   219A 23                 7072 	inc	hl
   219B 77                 7073 	ld	(hl),a
                           7074 ;demo.c:1014: boxi++;
   219C FD 21r0As42        7075 	ld	iy,#_boxi
   21A0 FD 34 00           7076 	inc	0 (iy)
                           7077 ;demo.c:1015: if (boxi >= 4) boxi = 0;
   21A3 3Ar0As42           7078 	ld	a,(#_boxi+0)
   21A6 D6 04              7079 	sub	a,#0x04
   21A8 38 05              7080 	jr	C,00123$
   21AA 21r0As42           7081 	ld	hl,#_boxi + 0
   21AD 36 00              7082 	ld	(hl), #0x00
   21AF                    7083 00123$:
                           7084 ;demo.c:1018: if (by <= 48) {
   21AF 3E 30              7085 	ld	a,#0x30
   21B1 FD 21r0Ds42        7086 	ld	iy,#_by
   21B5 FD 96 00           7087 	sub	a,0 (iy)
   21B8 3E 00              7088 	ld	a,#0x00
   21BA FD 21r0Ds42        7089 	ld	iy,#_by
   21BE FD 9E 01           7090 	sbc	a,1 (iy)
   21C1 FAr65s22           7091 	jp	M,00149$
                           7092 ;demo.c:1019: bx-=16;
   21C4 21r0Bs42           7093 	ld	hl,#_bx
   21C7 7E                 7094 	ld	a,(hl)
   21C8 C6 F0              7095 	add	a,#0xF0
   21CA 77                 7096 	ld	(hl),a
   21CB 23                 7097 	inc	hl
   21CC 7E                 7098 	ld	a,(hl)
   21CD CE FF              7099 	adc	a,#0xFF
   21CF 77                 7100 	ld	(hl),a
                           7101 ;demo.c:1021: if (bx>128)bo+=8;
   21D0 3E 80              7102 	ld	a,#0x80
   21D2 FD 21r0Bs42        7103 	ld	iy,#_bx
   21D6 FD 96 00           7104 	sub	a,0 (iy)
   21D9 3E 00              7105 	ld	a,#0x00
   21DB FD 21r0Bs42        7106 	ld	iy,#_bx
   21DF FD 9E 01           7107 	sbc	a,1 (iy)
   21E2 07                 7108 	rlca
   21E3 E6 01              7109 	and	a,#0x01
   21E5 4F                 7110 	ld	c,a
   21E6 B7                 7111 	or	a,a
   21E7 28 18              7112 	jr	Z,00125$
   21E9 21r11s42           7113 	ld	hl,#_bo
   21EC 7E                 7114 	ld	a,(hl)
   21ED C6 08              7115 	add	a,#0x08
   21EF 23                 7116 	inc	hl
   21F0 2B                 7117 	dec	hl
   21F1 C5                 7118 	push	bc
   21F2 4F                 7119 	ld	c, a
   21F3 23                 7120 	inc	hl
   21F4 7E                 7121 	ld	a, (hl)
   21F5 47                 7122 	ld	b, a
   21F6 79                 7123 	ld	a, c
   21F7 2B                 7124 	dec	hl
   21F8 77                 7125 	ld	(hl), a
   21F9 78                 7126 	ld	a, b
   21FA C1                 7127 	pop	bc
   21FB CE 00              7128 	adc	a,#0x00
   21FD 23                 7129 	inc	hl
   21FE 77                 7130 	ld	(hl),a
   21FF 18 0C              7131 	jr	00126$
   2201                    7132 00125$:
                           7133 ;demo.c:1022: else bo-=8;
   2201 21r11s42           7134 	ld	hl,#_bo
   2204 7E                 7135 	ld	a,(hl)
   2205 C6 F8              7136 	add	a,#0xF8
   2207 77                 7137 	ld	(hl),a
   2208 23                 7138 	inc	hl
   2209 7E                 7139 	ld	a,(hl)
   220A CE FF              7140 	adc	a,#0xFF
   220C 77                 7141 	ld	(hl),a
   220D                    7142 00126$:
                           7143 ;demo.c:1023: if (bo > 192) bo = 0;
   220D 3E C0              7144 	ld	a,#0xC0
   220F FD 21r11s42        7145 	ld	iy,#_bo
   2213 FD 96 00           7146 	sub	a,0 (iy)
   2216 3E 00              7147 	ld	a,#0x00
   2218 FD 21r11s42        7148 	ld	iy,#_bo
   221C FD 9E 01           7149 	sbc	a,1 (iy)
   221F F2r2Cs22           7150 	jp	P,00128$
   2222 21r11s42           7151 	ld	hl,#_bo + 0
   2225 36 00              7152 	ld	(hl), #0x00
   2227 21r12s42           7153 	ld	hl,#_bo + 1
   222A 36 00              7154 	ld	(hl), #0x00
   222C                    7155 00128$:
                           7156 ;demo.c:1024: if (bx>128)by=84+bo;
   222C AF                 7157 	xor	a,a
   222D B1                 7158 	or	a,c
   222E 28 12              7159 	jr	Z,00130$
   2230 21r0Ds42           7160 	ld	hl,#_by
   2233 3Ar11s42           7161 	ld	a,(#_bo+0)
   2236 C6 54              7162 	add	a,#0x54
   2238 77                 7163 	ld	(hl),a
   2239 3Ar12s42           7164 	ld	a,(#_bo+1)
   223C CE 00              7165 	adc	a,#0x00
   223E 23                 7166 	inc	hl
   223F 77                 7167 	ld	(hl),a
   2240 18 23              7168 	jr	00149$
   2242                    7169 00130$:
                           7170 ;demo.c:1025: else by=36+36+84+bo;
   2242 21r0Ds42           7171 	ld	hl,#_by
   2245 3Ar11s42           7172 	ld	a,(#_bo+0)
   2248 C6 9C              7173 	add	a,#0x9C
   224A 77                 7174 	ld	(hl),a
   224B 3Ar12s42           7175 	ld	a,(#_bo+1)
   224E CE 00              7176 	adc	a,#0x00
   2250 23                 7177 	inc	hl
   2251 77                 7178 	ld	(hl),a
   2252 18 11              7179 	jr	00149$
   2254                    7180 00135$:
                           7181 ;demo.c:1028: drawbox(bx,bt);
   2254 21r0Fs42           7182 	ld	hl,#_bt + 0
   2257 4E                 7183 	ld	c,(hl)
   2258 21r0Bs42           7184 	ld	hl,#_bx + 0
   225B 46                 7185 	ld	b,(hl)
   225C 79                 7186 	ld	a,c
   225D F5                 7187 	push	af
   225E 33                 7188 	inc	sp
   225F C5                 7189 	push	bc
   2260 33                 7190 	inc	sp
   2261 CDrAFs1D           7191 	call	_drawbox
   2264 F1                 7192 	pop	af
   2265                    7193 00149$:
   2265 DD F9              7194 	ld	sp,ix
   2267 DD E1              7195 	pop	ix
   2269 C9                 7196 	ret
   226A                    7197 _boxes_end::
   226A                    7198 __str_14:
   226A 4C 45 54 20 55 53  7199 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   2295 00                 7200 	.db 0x00
                           7201 ;demo.c:1039: void thewave() {
                           7202 ;	---------------------------------
                           7203 ; Function thewave
                           7204 ; ---------------------------------
   2296                    7205 _thewave_start::
   2296                    7206 _thewave:
   2296 DD E5              7207 	push	ix
   2298 DD 21 00 00        7208 	ld	ix,#0
   229C DD 39              7209 	add	ix,sp
   229E 21 F7 FF           7210 	ld	hl,#-9
   22A1 39                 7211 	add	hl,sp
   22A2 F9                 7212 	ld	sp,hl
                           7213 ;demo.c:1047: if (initwave == 0) {
   22A3 AF                 7214 	xor	a,a
   22A4 21r24s42           7215 	ld	hl,#_initwave + 0
   22A7 B6                 7216 	or	a,(hl)
   22A8 C2r30s25           7217 	jp	NZ,00113$
                           7218 ;demo.c:1048: initwave = 1;
   22AB 21r24s42           7219 	ld	hl,#_initwave + 0
   22AE 36 01              7220 	ld	(hl), #0x01
                           7221 ;demo.c:1049: for (y = 0; y < 212; y++) {
   22B0 DD 36 FE 00        7222 	ld	-2 (ix),#0x00
   22B4                    7223 00128$:
   22B4 DD 7E FE           7224 	ld	a,-2 (ix)
   22B7 D6 D4              7225 	sub	a,#0xD4
   22B9 D2r2Cs23           7226 	jp	NC,00131$
                           7227 ;demo.c:1050: cmd.size_x = 256;
   22BC 11r96s41           7228 	ld	de,#_cmd + 8
   22BF EB                 7229 	ex	de,hl
   22C0 36 00              7230 	ld	(hl),#0x00
   22C2 23                 7231 	inc	hl
   22C3 36 01              7232 	ld	(hl),#0x01
                           7233 ;demo.c:1051: cmd.size_y = 2;
   22C5 11r98s41           7234 	ld	de,#_cmd + 10
   22C8 EB                 7235 	ex	de,hl
   22C9 36 02              7236 	ld	(hl),#0x02
   22CB 23                 7237 	inc	hl
   22CC 36 00              7238 	ld	(hl),#0x00
                           7239 ;demo.c:1052: cmd.data = 0;
   22CE 11r9As41           7240 	ld	de,#_cmd + 12
   22D1 3E 00              7241 	ld	a,#0x00
   22D3 12                 7242 	ld	(de),a
                           7243 ;demo.c:1053: cmd.argument = 0x00; // from 70xY to left
   22D4 11r9Bs41           7244 	ld	de,#_cmd + 13
   22D7 3E 00              7245 	ld	a,#0x00
   22D9 12                 7246 	ld	(de),a
                           7247 ;demo.c:1054: cmd.command = 0xd0; // vram to vram, y only
   22DA 11r9Cs41           7248 	ld	de,#_cmd + 14
   22DD 3E D0              7249 	ld	a,#0xD0
   22DF 12                 7250 	ld	(de),a
                           7251 ;demo.c:1056: cmd.source_x = 0;
   22E0 21r8Es41           7252 	ld	hl,#_cmd
   22E3 36 00              7253 	ld	(hl),#0x00
   22E5 23                 7254 	inc	hl
   22E6 36 00              7255 	ld	(hl),#0x00
                           7256 ;demo.c:1057: cmd.source_y = 0;
   22E8 11r90s41           7257 	ld	de,#_cmd + 2
   22EB EB                 7258 	ex	de,hl
   22EC 36 00              7259 	ld	(hl),#0x00
   22EE 23                 7260 	inc	hl
   22EF 36 00              7261 	ld	(hl),#0x00
                           7262 ;demo.c:1058: cmd.dest_x = 0;
   22F1 11r92s41           7263 	ld	de,#_cmd + 4
   22F4 EB                 7264 	ex	de,hl
   22F5 36 00              7265 	ld	(hl),#0x00
   22F7 23                 7266 	inc	hl
   22F8 36 00              7267 	ld	(hl),#0x00
                           7268 ;demo.c:1059: cmd.dest_y = 0+y;
   22FA 11r94s41           7269 	ld	de,#_cmd + 6
   22FD DD 4E FE           7270 	ld	c,-2 (ix)
   2300 06 00              7271 	ld	b,#0x00
   2302 EB                 7272 	ex	de,hl
   2303 71                 7273 	ld	(hl),c
   2304 23                 7274 	inc	hl
   2305 70                 7275 	ld	(hl),b
                           7276 ;demo.c:1060: vdp_copier(&cmd);
   2306 C5                 7277 	push	bc
   2307 21r8Es41           7278 	ld	hl,#_cmd
   230A E5                 7279 	push	hl
   230B CDr00s00           7280 	call	_vdp_copier
   230E F1                 7281 	pop	af
   230F C1                 7282 	pop	bc
                           7283 ;demo.c:1061: cmd.dest_y = 256+y;
   2310 11r94s41           7284 	ld	de,#_cmd + 6
   2313 21 00 01           7285 	ld	hl,#0x0100
   2316 09                 7286 	add	hl,bc
   2317 4D                 7287 	ld	c,l
   2318 44                 7288 	ld	b,h
   2319 EB                 7289 	ex	de,hl
   231A 71                 7290 	ld	(hl),c
   231B 23                 7291 	inc	hl
   231C 70                 7292 	ld	(hl),b
                           7293 ;demo.c:1062: vdp_copier(&cmd);
   231D 21r8Es41           7294 	ld	hl,#_cmd
   2320 E5                 7295 	push	hl
   2321 CDr00s00           7296 	call	_vdp_copier
   2324 F1                 7297 	pop	af
                           7298 ;demo.c:1063: waitVB();
   2325 76                 7299 		halt 
                           7300 ;demo.c:1049: for (y = 0; y < 212; y++) {
   2326 DD 34 FE           7301 	inc	-2 (ix)
   2329 C3rB4s22           7302 	jp	00128$
   232C                    7303 00131$:
                           7304 ;demo.c:1067: for (y = 9; y < 15; y+=1) {
   232C DD 36 FE 09        7305 	ld	-2 (ix),#0x09
   2330                    7306 00132$:
   2330 DD 7E FE           7307 	ld	a,-2 (ix)
   2333 D6 0F              7308 	sub	a,#0x0F
   2335 D2r30s25           7309 	jp	NC,00113$
                           7310 ;demo.c:1068: for (x = 0; x < 21; x+=1) {
   2338 DD 7E FE           7311 	ld	a,-2 (ix)
   233B 87                 7312 	add	a,a
   233C DD 77 F9           7313 	ld	-7 (ix),a
   233F DD 36 FF 00        7314 	ld	-1 (ix),#0x00
   2343                    7315 00108$:
   2343 DD 7E FF           7316 	ld	a,-1 (ix)
   2346 D6 15              7317 	sub	a,#0x15
   2348 D2r2As25           7318 	jp	NC,00134$
                           7319 ;demo.c:1069: if (x > 6 && x < 13) continue; 
   234B 3E 06              7320 	ld	a,#0x06
   234D DD 96 FF           7321 	sub	a,-1 (ix)
   2350 30 08              7322 	jr	NC,00102$
   2352 DD 7E FF           7323 	ld	a,-1 (ix)
   2355 D6 0D              7324 	sub	a,#0x0D
   2357 DAr24s25           7325 	jp	C,00110$
   235A                    7326 00102$:
                           7327 ;demo.c:1071: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   235A 3E 06              7328 	ld	a,#0x06
   235C DD 96 FF           7329 	sub	a,-1 (ix)
   235F DArB5s23           7330 	jp	C,00105$
   2362 DD 56 FF           7331 	ld	d,-1 (ix)
   2365 0E 00              7332 	ld	c,#0x00
   2367 CB 22              7333 	sla	d
   2369 CB 11              7334 	rl	c
   236B CB 22              7335 	sla	d
   236D CB 11              7336 	rl	c
   236F CB 22              7337 	sla	d
   2371 CB 11              7338 	rl	c
   2373 7A                 7339 	ld	a,d
   2374 C6 69              7340 	add	a,#0x69
   2376 57                 7341 	ld	d,a
   2377 79                 7342 	ld	a,c
   2378 CE 00              7343 	adc	a,#0x00
   237A 47                 7344 	ld	b,a
   237B DD 5E FE           7345 	ld	e,-2 (ix)
   237E 0E 00              7346 	ld	c,#0x00
   2380 CB 23              7347 	sla	e
   2382 CB 11              7348 	rl	c
   2384 CB 23              7349 	sla	e
   2386 CB 11              7350 	rl	c
   2388 CB 23              7351 	sla	e
   238A CB 11              7352 	rl	c
   238C 7A                 7353 	ld	a,d
   238D 83                 7354 	add	a,e
   238E 5F                 7355 	ld	e,a
   238F 78                 7356 	ld	a,b
   2390 89                 7357 	adc	a,c
   2391 0E 00              7358 	ld	c,#0x00
   2393 3Er00              7359 	ld	a,#<_sintab
   2395 83                 7360 	add	a,e
   2396 5F                 7361 	ld	e,a
   2397 3Es00              7362 	ld	a,#>_sintab
   2399 89                 7363 	adc	a,c
   239A 6B                 7364 	ld	l,e
   239B 67                 7365 	ld	h,a
   239C 5E                 7366 	ld	e,(hl)
   239D CB 2B              7367 	sra	e
   239F CB 2B              7368 	sra	e
   23A1 CB 2B              7369 	sra	e
   23A3 CB 2B              7370 	sra	e
   23A5 7B                 7371 	ld	a,e
   23A6 17                 7372 	rla	
   23A7 9F                 7373 	sbc	a,a
   23A8 4F                 7374 	ld	c,a
   23A9 7B                 7375 	ld	a,e
   23AA C6 07              7376 	add	a,#0x07
   23AC DD 77 FC           7377 	ld	-4 (ix),a
   23AF 79                 7378 	ld	a,c
   23B0 CE 00              7379 	adc	a,#0x00
   23B2 DD 77 FD           7380 	ld	-3 (ix),a
   23B5                    7381 00105$:
                           7382 ;demo.c:1072: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   23B5 DD 7E FF           7383 	ld	a,-1 (ix)
   23B8 D6 0D              7384 	sub	a,#0x0D
   23BA DAr1Bs24           7385 	jp	C,00107$
   23BD DD 5E FF           7386 	ld	e,-1 (ix)
   23C0 16 00              7387 	ld	d,#0x00
   23C2 21 17 00           7388 	ld	hl,#0x0017
   23C5 19                 7389 	add	hl,de
   23C6 EB                 7390 	ex	de,hl
   23C7 CB 23              7391 	sla	e
   23C9 CB 12              7392 	rl	d
   23CB CB 23              7393 	sla	e
   23CD CB 12              7394 	rl	d
   23CF CB 23              7395 	sla	e
   23D1 CB 12              7396 	rl	d
   23D3 21 69 00           7397 	ld	hl,#0x0069
   23D6 19                 7398 	add	hl,de
   23D7 45                 7399 	ld	b,l
   23D8 54                 7400 	ld	d,h
   23D9 DD 4E FE           7401 	ld	c,-2 (ix)
   23DC 1E 00              7402 	ld	e,#0x00
   23DE 79                 7403 	ld	a,c
   23DF C6 13              7404 	add	a,#0x13
   23E1 4F                 7405 	ld	c,a
   23E2 7B                 7406 	ld	a,e
   23E3 CE 00              7407 	adc	a,#0x00
   23E5 5F                 7408 	ld	e,a
   23E6 CB 21              7409 	sla	c
   23E8 CB 13              7410 	rl	e
   23EA CB 21              7411 	sla	c
   23EC CB 13              7412 	rl	e
   23EE CB 21              7413 	sla	c
   23F0 CB 13              7414 	rl	e
   23F2 78                 7415 	ld	a,b
   23F3 81                 7416 	add	a,c
   23F4 4F                 7417 	ld	c,a
   23F5 7A                 7418 	ld	a,d
   23F6 8B                 7419 	adc	a,e
   23F7 1E 00              7420 	ld	e,#0x00
   23F9 3Er00              7421 	ld	a,#<_sintab
   23FB 81                 7422 	add	a,c
   23FC 4F                 7423 	ld	c,a
   23FD 3Es00              7424 	ld	a,#>_sintab
   23FF 8B                 7425 	adc	a,e
   2400 69                 7426 	ld	l,c
   2401 67                 7427 	ld	h,a
   2402 4E                 7428 	ld	c,(hl)
   2403 CB 29              7429 	sra	c
   2405 CB 29              7430 	sra	c
   2407 CB 29              7431 	sra	c
   2409 CB 29              7432 	sra	c
   240B 79                 7433 	ld	a,c
   240C 17                 7434 	rla	
   240D 9F                 7435 	sbc	a,a
   240E 5F                 7436 	ld	e,a
   240F 79                 7437 	ld	a,c
   2410 C6 07              7438 	add	a,#0x07
   2412 DD 77 FC           7439 	ld	-4 (ix),a
   2415 7B                 7440 	ld	a,e
   2416 CE 00              7441 	adc	a,#0x00
   2418 DD 77 FD           7442 	ld	-3 (ix),a
   241B                    7443 00107$:
                           7444 ;demo.c:1074: cmd.size_x = 11;
   241B 11r96s41           7445 	ld	de,#_cmd + 8
   241E EB                 7446 	ex	de,hl
   241F 36 0B              7447 	ld	(hl),#0x0B
   2421 23                 7448 	inc	hl
   2422 36 00              7449 	ld	(hl),#0x00
                           7450 ;demo.c:1075: cmd.size_y = 28-(14-px);
   2424 21r98s41           7451 	ld	hl,#_cmd + 10
   2427 DD 75 FA           7452 	ld	-6 (ix),l
   242A DD 74 FB           7453 	ld	-5 (ix),h
   242D 3E 0E              7454 	ld	a,#0x0E
   242F DD 96 FC           7455 	sub	a,-4 (ix)
   2432 4F                 7456 	ld	c,a
   2433 3E 00              7457 	ld	a,#0x00
   2435 DD 9E FD           7458 	sbc	a,-3 (ix)
   2438 5F                 7459 	ld	e,a
   2439 3E 1C              7460 	ld	a,#0x1C
   243B 91                 7461 	sub	a,c
   243C 57                 7462 	ld	d,a
   243D 3E 00              7463 	ld	a,#0x00
   243F 9B                 7464 	sbc	a,e
   2440 47                 7465 	ld	b,a
   2441 DD 6E FA           7466 	ld	l,-6 (ix)
   2444 DD 66 FB           7467 	ld	h,-5 (ix)
   2447 72                 7468 	ld	(hl),d
   2448 23                 7469 	inc	hl
   2449 70                 7470 	ld	(hl),b
                           7471 ;demo.c:1076: cmd.data = 0;
   244A 21r9As41           7472 	ld	hl,#_cmd + 12
   244D 36 00              7473 	ld	(hl),#0x00
                           7474 ;demo.c:1077: cmd.argument = 0x00; // from 70xY to left
   244F 21r9Bs41           7475 	ld	hl,#_cmd + 13
   2452 36 00              7476 	ld	(hl),#0x00
                           7477 ;demo.c:1078: cmd.command = 0x98; // vram to vram, y only
   2454 21r9Cs41           7478 	ld	hl,#_cmd + 14
   2457 36 98              7479 	ld	(hl),#0x98
                           7480 ;demo.c:1080: cmd.source_x = twelvetimes[px];
   2459 DD 46 FC           7481 	ld	b,-4 (ix)
   245C DD 56 FD           7482 	ld	d,-3 (ix)
   245F CB 20              7483 	sla	b
   2461 CB 12              7484 	rl	d
   2463 3Er22              7485 	ld	a,#<_twelvetimes
   2465 80                 7486 	add	a,b
   2466 47                 7487 	ld	b,a
   2467 3Es01              7488 	ld	a,#>_twelvetimes
   2469 8A                 7489 	adc	a,d
   246A 68                 7490 	ld	l,b
   246B 67                 7491 	ld	h,a
   246C 46                 7492 	ld	b,(hl)
   246D 23                 7493 	inc	hl
   246E 56                 7494 	ld	d,(hl)
   246F 21r8Es41           7495 	ld	hl,#_cmd
   2472 70                 7496 	ld	(hl),b
   2473 23                 7497 	inc	hl
   2474 72                 7498 	ld	(hl),d
                           7499 ;demo.c:1081: cmd.source_y = 768+183+(15-px);
   2475 23                 7500 	inc	hl
   2476 DD 75 FA           7501 	ld	-6 (ix),l
   2479 DD 74 FB           7502 	ld	-5 (ix),h
   247C 3E C6              7503 	ld	a,#0xC6
   247E DD 96 FC           7504 	sub	a,-4 (ix)
   2481 47                 7505 	ld	b,a
   2482 3E 03              7506 	ld	a,#0x03
   2484 DD 9E FD           7507 	sbc	a,-3 (ix)
   2487 57                 7508 	ld	d,a
   2488 DD 6E FA           7509 	ld	l,-6 (ix)
   248B DD 66 FB           7510 	ld	h,-5 (ix)
   248E 70                 7511 	ld	(hl),b
   248F 23                 7512 	inc	hl
   2490 72                 7513 	ld	(hl),d
                           7514 ;demo.c:1082: cmd.dest_x = 0+twelvetimes[x];
   2491 21r92s41           7515 	ld	hl,#_cmd + 4
   2494 DD 75 FA           7516 	ld	-6 (ix),l
   2497 DD 74 FB           7517 	ld	-5 (ix),h
   249A DD 7E FF           7518 	ld	a,-1 (ix)
   249D 87                 7519 	add	a,a
   249E C6r22              7520 	add	a,#<_twelvetimes
   24A0 6F                 7521 	ld	l,a
   24A1 3Es01              7522 	ld	a,#>_twelvetimes
   24A3 CE 00              7523 	adc	a,#0x00
   24A5 67                 7524 	ld	h,a
   24A6 46                 7525 	ld	b,(hl)
   24A7 23                 7526 	inc	hl
   24A8 56                 7527 	ld	d,(hl)
   24A9 DD 6E FA           7528 	ld	l,-6 (ix)
   24AC DD 66 FB           7529 	ld	h,-5 (ix)
   24AF 70                 7530 	ld	(hl),b
   24B0 23                 7531 	inc	hl
   24B1 72                 7532 	ld	(hl),d
                           7533 ;demo.c:1083: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   24B2 21r94s41           7534 	ld	hl,#_cmd + 6
   24B5 DD 75 FA           7535 	ld	-6 (ix),l
   24B8 DD 74 FB           7536 	ld	-5 (ix),h
   24BB 3Er56              7537 	ld	a,#<_eighttimes
   24BD DD 86 F9           7538 	add	a,-7 (ix)
   24C0 6F                 7539 	ld	l,a
   24C1 3Es01              7540 	ld	a,#>_eighttimes
   24C3 CE 00              7541 	adc	a,#0x00
   24C5 67                 7542 	ld	h,a
   24C6 46                 7543 	ld	b,(hl)
   24C7 23                 7544 	inc	hl
   24C8 56                 7545 	ld	d,(hl)
   24C9 78                 7546 	ld	a,b
   24CA C6 04              7547 	add	a,#0x04
   24CC 47                 7548 	ld	b,a
   24CD 7A                 7549 	ld	a,d
   24CE CE 00              7550 	adc	a,#0x00
   24D0 57                 7551 	ld	d,a
   24D1 78                 7552 	ld	a,b
   24D2 81                 7553 	add	a,c
   24D3 47                 7554 	ld	b,a
   24D4 7A                 7555 	ld	a,d
   24D5 8B                 7556 	adc	a,e
   24D6 57                 7557 	ld	d,a
   24D7 DD 6E FA           7558 	ld	l,-6 (ix)
   24DA DD 66 FB           7559 	ld	h,-5 (ix)
   24DD 70                 7560 	ld	(hl),b
   24DE 23                 7561 	inc	hl
   24DF 72                 7562 	ld	(hl),d
                           7563 ;demo.c:1084: vdp_copier(&cmd);
   24E0 C5                 7564 	push	bc
   24E1 D5                 7565 	push	de
   24E2 21r8Es41           7566 	ld	hl,#_cmd
   24E5 E5                 7567 	push	hl
   24E6 CDr00s00           7568 	call	_vdp_copier
   24E9 F1                 7569 	pop	af
   24EA D1                 7570 	pop	de
   24EB C1                 7571 	pop	bc
                           7572 ;demo.c:1085: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   24EC 21r94s41           7573 	ld	hl,#_cmd + 6
   24EF DD 75 FA           7574 	ld	-6 (ix),l
   24F2 DD 74 FB           7575 	ld	-5 (ix),h
   24F5 3Er56              7576 	ld	a,#<_eighttimes
   24F7 DD 86 F9           7577 	add	a,-7 (ix)
   24FA 6F                 7578 	ld	l,a
   24FB 3Es01              7579 	ld	a,#>_eighttimes
   24FD CE 00              7580 	adc	a,#0x00
   24FF 67                 7581 	ld	h,a
   2500 46                 7582 	ld	b,(hl)
   2501 23                 7583 	inc	hl
   2502 56                 7584 	ld	d,(hl)
   2503 78                 7585 	ld	a,b
   2504 C6 04              7586 	add	a,#0x04
   2506 47                 7587 	ld	b,a
   2507 7A                 7588 	ld	a,d
   2508 CE 00              7589 	adc	a,#0x00
   250A C6 01              7590 	add	a,#0x01
   250C 57                 7591 	ld	d,a
   250D 78                 7592 	ld	a,b
   250E 81                 7593 	add	a,c
   250F 4F                 7594 	ld	c,a
   2510 7A                 7595 	ld	a,d
   2511 8B                 7596 	adc	a,e
   2512 5F                 7597 	ld	e,a
   2513 DD 6E FA           7598 	ld	l,-6 (ix)
   2516 DD 66 FB           7599 	ld	h,-5 (ix)
   2519 71                 7600 	ld	(hl),c
   251A 23                 7601 	inc	hl
   251B 73                 7602 	ld	(hl),e
                           7603 ;demo.c:1086: vdp_copier(&cmd);
   251C 21r8Es41           7604 	ld	hl,#_cmd
   251F E5                 7605 	push	hl
   2520 CDr00s00           7606 	call	_vdp_copier
   2523 F1                 7607 	pop	af
   2524                    7608 00110$:
                           7609 ;demo.c:1068: for (x = 0; x < 21; x+=1) {
   2524 DD 34 FF           7610 	inc	-1 (ix)
   2527 C3r43s23           7611 	jp	00108$
   252A                    7612 00134$:
                           7613 ;demo.c:1067: for (y = 9; y < 15; y+=1) {
   252A DD 34 FE           7614 	inc	-2 (ix)
   252D C3r30s23           7615 	jp	00132$
   2530                    7616 00113$:
                           7617 ;demo.c:1092: if (buf == -1) { bo = 0; ya = 0; }
   2530 3Ar25s42           7618 	ld	a,(#_buf+0)
   2533 3C                 7619 	inc	a
   2534 20 06              7620 	jr	NZ,00188$
   2536 3Ar26s42           7621 	ld	a,(#_buf+1)
   2539 3C                 7622 	inc	a
   253A 28 02              7623 	jr	Z,00189$
   253C                    7624 00188$:
   253C 18 05              7625 	jr	00115$
   253E                    7626 00189$:
   253E 01 00 00           7627 	ld	bc,#0x0000
   2541 18 03              7628 	jr	00116$
   2543                    7629 00115$:
                           7630 ;demo.c:1093: else { bo = 256; ya = 6;}
   2543 01 00 01           7631 	ld	bc,#0x0100
   2546                    7632 00116$:
                           7633 ;demo.c:1095: cmd.size_x = 72;
   2546 11r96s41           7634 	ld	de,#_cmd + 8
   2549 EB                 7635 	ex	de,hl
   254A 36 48              7636 	ld	(hl),#0x48
   254C 23                 7637 	inc	hl
   254D 36 00              7638 	ld	(hl),#0x00
                           7639 ;demo.c:1096: cmd.size_y = 80;
   254F 11r98s41           7640 	ld	de,#_cmd + 10
   2552 EB                 7641 	ex	de,hl
   2553 36 50              7642 	ld	(hl),#0x50
   2555 23                 7643 	inc	hl
   2556 36 00              7644 	ld	(hl),#0x00
                           7645 ;demo.c:1097: cmd.data = 0;
   2558 11r9As41           7646 	ld	de,#_cmd + 12
   255B 3E 00              7647 	ld	a,#0x00
   255D 12                 7648 	ld	(de),a
                           7649 ;demo.c:1098: cmd.argument = 0x00; // from 70xY to left
   255E 11r9Bs41           7650 	ld	de,#_cmd + 13
   2561 3E 00              7651 	ld	a,#0x00
   2563 12                 7652 	ld	(de),a
                           7653 ;demo.c:1099: cmd.command = 0xd0; // vram to vram, y only
   2564 11r9Cs41           7654 	ld	de,#_cmd + 14
   2567 3E D0              7655 	ld	a,#0xD0
   2569 12                 7656 	ld	(de),a
                           7657 ;demo.c:1100: cmd.source_x = 178;
   256A 21r8Es41           7658 	ld	hl,#_cmd
   256D 36 B2              7659 	ld	(hl),#0xB2
   256F 23                 7660 	inc	hl
   2570 36 00              7661 	ld	(hl),#0x00
                           7662 ;demo.c:1101: cmd.source_y = 0;
   2572 11r90s41           7663 	ld	de,#_cmd + 2
   2575 EB                 7664 	ex	de,hl
   2576 36 00              7665 	ld	(hl),#0x00
   2578 23                 7666 	inc	hl
   2579 36 00              7667 	ld	(hl),#0x00
                           7668 ;demo.c:1102: cmd.dest_x = 84;
   257B 11r92s41           7669 	ld	de,#_cmd + 4
   257E EB                 7670 	ex	de,hl
   257F 36 54              7671 	ld	(hl),#0x54
   2581 23                 7672 	inc	hl
   2582 36 00              7673 	ld	(hl),#0x00
                           7674 ;demo.c:1103: cmd.dest_y = 72+bo;
   2584 11r94s41           7675 	ld	de,#_cmd + 6
   2587 21 48 00           7676 	ld	hl,#0x0048
   258A 09                 7677 	add	hl,bc
   258B 4D                 7678 	ld	c,l
   258C 44                 7679 	ld	b,h
   258D EB                 7680 	ex	de,hl
   258E 71                 7681 	ld	(hl),c
   258F 23                 7682 	inc	hl
   2590 70                 7683 	ld	(hl),b
                           7684 ;demo.c:1104: vdp_copier(&cmd);
   2591 C5                 7685 	push	bc
   2592 21r8Es41           7686 	ld	hl,#_cmd
   2595 E5                 7687 	push	hl
   2596 CDr00s00           7688 	call	_vdp_copier
   2599 F1                 7689 	pop	af
   259A C1                 7690 	pop	bc
                           7691 ;demo.c:1106: for (y = 0; y < 5; y+=1) {
   259B DD 36 FE 00        7692 	ld	-2 (ix),#0x00
   259F                    7693 00140$:
   259F DD 7E FE           7694 	ld	a,-2 (ix)
   25A2 D6 05              7695 	sub	a,#0x05
   25A4 D2r05s27           7696 	jp	NC,00143$
                           7697 ;demo.c:1107: for (x = 0; x < 6; x+=1) {
   25A7 DD 7E FE           7698 	ld	a,-2 (ix)
   25AA 87                 7699 	add	a,a
   25AB DD 77 F9           7700 	ld	-7 (ix),a
   25AE DD 36 FF 00        7701 	ld	-1 (ix),#0x00
   25B2                    7702 00136$:
   25B2 DD 7E FF           7703 	ld	a,-1 (ix)
   25B5 D6 06              7704 	sub	a,#0x06
   25B7 D2rFFs26           7705 	jp	NC,00142$
                           7706 ;demo.c:1109: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   25BA DD 5E FF           7707 	ld	e,-1 (ix)
   25BD 16 00              7708 	ld	d,#0x00
   25BF CB 23              7709 	sla	e
   25C1 CB 12              7710 	rl	d
   25C3 CB 23              7711 	sla	e
   25C5 CB 12              7712 	rl	d
   25C7 3Ar27s42           7713 	ld	a,(#_ffa+0)
   25CA 83                 7714 	add	a,e
   25CB DD 77 FA           7715 	ld	-6 (ix),a
   25CE FD 21r27s42        7716 	ld	iy,#_ffa
   25D2 FD 7E 01           7717 	ld	a,1 (iy)
   25D5 8A                 7718 	adc	a,d
   25D6 DD 77 FB           7719 	ld	-5 (ix),a
   25D9 DD 5E FE           7720 	ld	e,-2 (ix)
   25DC 16 00              7721 	ld	d,#0x00
   25DE CB 23              7722 	sla	e
   25E0 CB 12              7723 	rl	d
   25E2 CB 23              7724 	sla	e
   25E4 CB 12              7725 	rl	d
   25E6 DD 7E FA           7726 	ld	a,-6 (ix)
   25E9 83                 7727 	add	a,e
   25EA 5F                 7728 	ld	e,a
   25EB DD 7E FB           7729 	ld	a,-5 (ix)
   25EE 8A                 7730 	adc	a,d
   25EF 16 00              7731 	ld	d,#0x00
   25F1 21r00s00           7732 	ld	hl,#_sintab
   25F4 19                 7733 	add	hl,de
   25F5 5E                 7734 	ld	e,(hl)
   25F6 CB 2B              7735 	sra	e
   25F8 CB 2B              7736 	sra	e
   25FA CB 2B              7737 	sra	e
   25FC CB 2B              7738 	sra	e
   25FE 7B                 7739 	ld	a,e
   25FF 17                 7740 	rla	
   2600 9F                 7741 	sbc	a,a
   2601 57                 7742 	ld	d,a
   2602 21 07 00           7743 	ld	hl,#0x0007
   2605 19                 7744 	add	hl,de
   2606 DD 75 FC           7745 	ld	-4 (ix),l
                           7746 ;demo.c:1110: if (px < 0) px = 0; 
   2609 DD 74 FD           7747 	ld	-3 (ix),h
   260C 7C                 7748 	ld	a, h
   260D CB 7F              7749 	bit	7,a
   260F 28 08              7750 	jr	Z,00118$
   2611 DD 36 FC 00        7751 	ld	-4 (ix),#0x00
   2615 DD 36 FD 00        7752 	ld	-3 (ix),#0x00
   2619                    7753 00118$:
                           7754 ;demo.c:1111: if (px > 14) px = 14; 
   2619 3E 0E              7755 	ld	a,#0x0E
   261B DD 96 FC           7756 	sub	a,-4 (ix)
   261E 3E 00              7757 	ld	a,#0x00
   2620 DD 9E FD           7758 	sbc	a,-3 (ix)
   2623 F2r2Es26           7759 	jp	P,00120$
   2626 DD 36 FC 0E        7760 	ld	-4 (ix),#0x0E
   262A DD 36 FD 00        7761 	ld	-3 (ix),#0x00
   262E                    7762 00120$:
                           7763 ;demo.c:1113: cmd.size_x = 12;
   262E 11r96s41           7764 	ld	de,#_cmd + 8
   2631 EB                 7765 	ex	de,hl
   2632 36 0C              7766 	ld	(hl),#0x0C
   2634 23                 7767 	inc	hl
   2635 36 00              7768 	ld	(hl),#0x00
                           7769 ;demo.c:1114: cmd.size_y = 11;
   2637 11r98s41           7770 	ld	de,#_cmd + 10
   263A EB                 7771 	ex	de,hl
   263B 36 0B              7772 	ld	(hl),#0x0B
   263D 23                 7773 	inc	hl
   263E 36 00              7774 	ld	(hl),#0x00
                           7775 ;demo.c:1115: cmd.data = 0;
   2640 11r9As41           7776 	ld	de,#_cmd + 12
   2643 3E 00              7777 	ld	a,#0x00
   2645 12                 7778 	ld	(de),a
                           7779 ;demo.c:1116: cmd.argument = 0x00; // from 70xY to left
   2646 11r9Bs41           7780 	ld	de,#_cmd + 13
   2649 3E 00              7781 	ld	a,#0x00
   264B 12                 7782 	ld	(de),a
                           7783 ;demo.c:1117: cmd.command = 0x98; // vram to vram, y only
   264C 11r9Cs41           7784 	ld	de,#_cmd + 14
   264F 3E 98              7785 	ld	a,#0x98
   2651 12                 7786 	ld	(de),a
                           7787 ;demo.c:1119: cmd.source_x = twelvetimes[px];
   2652 DD 5E FC           7788 	ld	e,-4 (ix)
   2655 DD 56 FD           7789 	ld	d,-3 (ix)
   2658 CB 23              7790 	sla	e
   265A CB 12              7791 	rl	d
   265C 21r22s01           7792 	ld	hl,#_twelvetimes
   265F 19                 7793 	add	hl,de
   2660 5E                 7794 	ld	e,(hl)
   2661 23                 7795 	inc	hl
   2662 56                 7796 	ld	d,(hl)
   2663 21r8Es41           7797 	ld	hl,#_cmd
   2666 73                 7798 	ld	(hl),e
   2667 23                 7799 	inc	hl
   2668 72                 7800 	ld	(hl),d
                           7801 ;demo.c:1120: cmd.source_y = 768+183+16-px;
   2669 23                 7802 	inc	hl
   266A DD 75 FA           7803 	ld	-6 (ix),l
   266D DD 74 FB           7804 	ld	-5 (ix),h
   2670 3E C7              7805 	ld	a,#0xC7
   2672 DD 96 FC           7806 	sub	a,-4 (ix)
   2675 5F                 7807 	ld	e,a
   2676 3E 03              7808 	ld	a,#0x03
   2678 DD 9E FD           7809 	sbc	a,-3 (ix)
   267B 57                 7810 	ld	d,a
   267C DD 6E FA           7811 	ld	l,-6 (ix)
   267F DD 66 FB           7812 	ld	h,-5 (ix)
   2682 73                 7813 	ld	(hl),e
   2683 23                 7814 	inc	hl
   2684 72                 7815 	ld	(hl),d
                           7816 ;demo.c:1121: cmd.dest_x = 84+twelvetimes[x];
   2685 21r92s41           7817 	ld	hl,#_cmd + 4
   2688 DD 75 FA           7818 	ld	-6 (ix),l
   268B DD 74 FB           7819 	ld	-5 (ix),h
   268E DD 7E FF           7820 	ld	a,-1 (ix)
   2691 87                 7821 	add	a,a
   2692 C6r22              7822 	add	a,#<_twelvetimes
   2694 6F                 7823 	ld	l,a
   2695 3Es01              7824 	ld	a,#>_twelvetimes
   2697 CE 00              7825 	adc	a,#0x00
   2699 67                 7826 	ld	h,a
   269A 5E                 7827 	ld	e,(hl)
   269B 23                 7828 	inc	hl
   269C 56                 7829 	ld	d,(hl)
   269D 21 54 00           7830 	ld	hl,#0x0054
   26A0 19                 7831 	add	hl,de
   26A1 EB                 7832 	ex	de,hl
   26A2 DD 6E FA           7833 	ld	l,-6 (ix)
   26A5 DD 66 FB           7834 	ld	h,-5 (ix)
   26A8 73                 7835 	ld	(hl),e
   26A9 23                 7836 	inc	hl
   26AA 72                 7837 	ld	(hl),d
                           7838 ;demo.c:1122: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   26AB 21r94s41           7839 	ld	hl,#_cmd + 6
   26AE DD 75 FA           7840 	ld	-6 (ix),l
   26B1 DD 74 FB           7841 	ld	-5 (ix),h
   26B4 3Er56              7842 	ld	a,#<_eighttimes
   26B6 DD 86 F9           7843 	add	a,-7 (ix)
   26B9 6F                 7844 	ld	l,a
   26BA 3Es01              7845 	ld	a,#>_eighttimes
   26BC CE 00              7846 	adc	a,#0x00
   26BE 67                 7847 	ld	h,a
   26BF 5E                 7848 	ld	e,(hl)
   26C0 23                 7849 	inc	hl
   26C1 56                 7850 	ld	d,(hl)
   26C2 13                 7851 	inc	de
   26C3 13                 7852 	inc	de
   26C4 13                 7853 	inc	de
   26C5 13                 7854 	inc	de
   26C6 79                 7855 	ld	a,c
   26C7 83                 7856 	add	a,e
   26C8 DD 77 F7           7857 	ld	-9 (ix),a
   26CB 78                 7858 	ld	a,b
   26CC 8A                 7859 	adc	a,d
   26CD DD 77 F8           7860 	ld	-8 (ix),a
   26D0 3E 0E              7861 	ld	a,#0x0E
   26D2 DD 96 FC           7862 	sub	a,-4 (ix)
   26D5 5F                 7863 	ld	e,a
   26D6 3E 00              7864 	ld	a,#0x00
   26D8 DD 9E FD           7865 	sbc	a,-3 (ix)
   26DB 57                 7866 	ld	d,a
   26DC DD 7E F7           7867 	ld	a,-9 (ix)
   26DF 83                 7868 	add	a,e
   26E0 5F                 7869 	ld	e,a
   26E1 DD 7E F8           7870 	ld	a,-8 (ix)
   26E4 8A                 7871 	adc	a,d
   26E5 57                 7872 	ld	d,a
   26E6 DD 6E FA           7873 	ld	l,-6 (ix)
   26E9 DD 66 FB           7874 	ld	h,-5 (ix)
   26EC 73                 7875 	ld	(hl),e
   26ED 23                 7876 	inc	hl
   26EE 72                 7877 	ld	(hl),d
                           7878 ;demo.c:1123: vdp_copier(&cmd);
   26EF C5                 7879 	push	bc
   26F0 21r8Es41           7880 	ld	hl,#_cmd
   26F3 E5                 7881 	push	hl
   26F4 CDr00s00           7882 	call	_vdp_copier
   26F7 F1                 7883 	pop	af
   26F8 C1                 7884 	pop	bc
                           7885 ;demo.c:1107: for (x = 0; x < 6; x+=1) {
   26F9 DD 34 FF           7886 	inc	-1 (ix)
   26FC C3rB2s25           7887 	jp	00136$
   26FF                    7888 00142$:
                           7889 ;demo.c:1106: for (y = 0; y < 5; y+=1) {
   26FF DD 34 FE           7890 	inc	-2 (ix)
   2702 C3r9Fs25           7891 	jp	00140$
   2705                    7892 00143$:
                           7893 ;demo.c:1128: for (x = 0; x < 6; x+=1) {
   2705 DD 36 FF 00        7894 	ld	-1 (ix),#0x00
   2709                    7895 00144$:
   2709 DD 7E FF           7896 	ld	a,-1 (ix)
   270C D6 06              7897 	sub	a,#0x06
   270E D2r4Fs28           7898 	jp	NC,00147$
                           7899 ;demo.c:1129: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   2711 DD 5E FF           7900 	ld	e,-1 (ix)
   2714 16 00              7901 	ld	d,#0x00
   2716 CB 23              7902 	sla	e
   2718 CB 12              7903 	rl	d
   271A CB 23              7904 	sla	e
   271C CB 12              7905 	rl	d
   271E 3Ar27s42           7906 	ld	a,(#_ffa+0)
   2721 83                 7907 	add	a,e
   2722 5F                 7908 	ld	e,a
   2723 FD 21r27s42        7909 	ld	iy,#_ffa
   2727 FD 7E 01           7910 	ld	a,1 (iy)
   272A 8A                 7911 	adc	a,d
   272B 57                 7912 	ld	d,a
   272C 21 14 00           7913 	ld	hl,#0x0014
   272F 19                 7914 	add	hl,de
   2730 5D                 7915 	ld	e,l
   2731 16 00              7916 	ld	d,#0x00
   2733 21r00s00           7917 	ld	hl,#_sintab
   2736 19                 7918 	add	hl,de
   2737 5E                 7919 	ld	e,(hl)
   2738 CB 2B              7920 	sra	e
   273A CB 2B              7921 	sra	e
   273C CB 2B              7922 	sra	e
   273E CB 2B              7923 	sra	e
   2740 7B                 7924 	ld	a,e
   2741 17                 7925 	rla	
   2742 9F                 7926 	sbc	a,a
   2743 57                 7927 	ld	d,a
   2744 21 07 00           7928 	ld	hl,#0x0007
   2747 19                 7929 	add	hl,de
   2748 DD 75 FC           7930 	ld	-4 (ix),l
                           7931 ;demo.c:1130: if (px < 0) px = 0; 
   274B DD 74 FD           7932 	ld	-3 (ix),h
   274E 7C                 7933 	ld	a, h
   274F CB 7F              7934 	bit	7,a
   2751 28 08              7935 	jr	Z,00122$
   2753 DD 36 FC 00        7936 	ld	-4 (ix),#0x00
   2757 DD 36 FD 00        7937 	ld	-3 (ix),#0x00
   275B                    7938 00122$:
                           7939 ;demo.c:1131: if (px > 14) px = 14; 
   275B 3E 0E              7940 	ld	a,#0x0E
   275D DD 96 FC           7941 	sub	a,-4 (ix)
   2760 3E 00              7942 	ld	a,#0x00
   2762 DD 9E FD           7943 	sbc	a,-3 (ix)
   2765 F2r70s27           7944 	jp	P,00124$
   2768 DD 36 FC 0E        7945 	ld	-4 (ix),#0x0E
   276C DD 36 FD 00        7946 	ld	-3 (ix),#0x00
   2770                    7947 00124$:
                           7948 ;demo.c:1133: cmd.size_x = 12;
   2770 11r96s41           7949 	ld	de,#_cmd + 8
   2773 EB                 7950 	ex	de,hl
   2774 36 0C              7951 	ld	(hl),#0x0C
   2776 23                 7952 	inc	hl
   2777 36 00              7953 	ld	(hl),#0x00
                           7954 ;demo.c:1134: cmd.size_y = 27-(14-px);
   2779 21r98s41           7955 	ld	hl,#_cmd + 10
   277C DD 75 F7           7956 	ld	-9 (ix),l
   277F DD 74 F8           7957 	ld	-8 (ix),h
   2782 3E 0E              7958 	ld	a,#0x0E
   2784 DD 96 FC           7959 	sub	a,-4 (ix)
   2787 DD 77 FA           7960 	ld	-6 (ix),a
   278A 3E 00              7961 	ld	a,#0x00
   278C DD 9E FD           7962 	sbc	a,-3 (ix)
   278F DD 77 FB           7963 	ld	-5 (ix),a
   2792 3E 1B              7964 	ld	a,#0x1B
   2794 DD 96 FA           7965 	sub	a,-6 (ix)
   2797 5F                 7966 	ld	e,a
   2798 3E 00              7967 	ld	a,#0x00
   279A DD 9E FB           7968 	sbc	a,-5 (ix)
   279D 57                 7969 	ld	d,a
   279E DD 6E F7           7970 	ld	l,-9 (ix)
   27A1 DD 66 F8           7971 	ld	h,-8 (ix)
   27A4 73                 7972 	ld	(hl),e
   27A5 23                 7973 	inc	hl
   27A6 72                 7974 	ld	(hl),d
                           7975 ;demo.c:1135: cmd.data = 0;
   27A7 11r9As41           7976 	ld	de,#_cmd + 12
   27AA 3E 00              7977 	ld	a,#0x00
   27AC 12                 7978 	ld	(de),a
                           7979 ;demo.c:1136: cmd.argument = 0x00; // from 70xY to left
   27AD 11r9Bs41           7980 	ld	de,#_cmd + 13
   27B0 3E 00              7981 	ld	a,#0x00
   27B2 12                 7982 	ld	(de),a
                           7983 ;demo.c:1137: cmd.command = 0x98; // vram to vram, y only
   27B3 11r9Cs41           7984 	ld	de,#_cmd + 14
   27B6 3E 98              7985 	ld	a,#0x98
   27B8 12                 7986 	ld	(de),a
                           7987 ;demo.c:1139: cmd.source_x = twelvetimes[px];
   27B9 DD 5E FC           7988 	ld	e,-4 (ix)
   27BC DD 56 FD           7989 	ld	d,-3 (ix)
   27BF CB 23              7990 	sla	e
   27C1 CB 12              7991 	rl	d
   27C3 21r22s01           7992 	ld	hl,#_twelvetimes
   27C6 19                 7993 	add	hl,de
   27C7 5E                 7994 	ld	e,(hl)
   27C8 23                 7995 	inc	hl
   27C9 56                 7996 	ld	d,(hl)
   27CA 21r8Es41           7997 	ld	hl,#_cmd
   27CD 73                 7998 	ld	(hl),e
   27CE 23                 7999 	inc	hl
   27CF 72                 8000 	ld	(hl),d
                           8001 ;demo.c:1140: cmd.source_y = 768+183+ 16-px;
   27D0 23                 8002 	inc	hl
   27D1 DD 75 F7           8003 	ld	-9 (ix),l
   27D4 DD 74 F8           8004 	ld	-8 (ix),h
   27D7 3E C7              8005 	ld	a,#0xC7
   27D9 DD 96 FC           8006 	sub	a,-4 (ix)
   27DC 5F                 8007 	ld	e,a
   27DD 3E 03              8008 	ld	a,#0x03
   27DF DD 9E FD           8009 	sbc	a,-3 (ix)
   27E2 57                 8010 	ld	d,a
   27E3 DD 6E F7           8011 	ld	l,-9 (ix)
   27E6 DD 66 F8           8012 	ld	h,-8 (ix)
   27E9 73                 8013 	ld	(hl),e
   27EA 23                 8014 	inc	hl
   27EB 72                 8015 	ld	(hl),d
                           8016 ;demo.c:1141: cmd.dest_x = 84+twelvetimes[x];
   27EC 21r92s41           8017 	ld	hl,#_cmd + 4
   27EF DD 75 F7           8018 	ld	-9 (ix),l
   27F2 DD 74 F8           8019 	ld	-8 (ix),h
   27F5 DD 7E FF           8020 	ld	a,-1 (ix)
   27F8 87                 8021 	add	a,a
   27F9 C6r22              8022 	add	a,#<_twelvetimes
   27FB 6F                 8023 	ld	l,a
   27FC 3Es01              8024 	ld	a,#>_twelvetimes
   27FE CE 00              8025 	adc	a,#0x00
   2800 67                 8026 	ld	h,a
   2801 5E                 8027 	ld	e,(hl)
   2802 23                 8028 	inc	hl
   2803 56                 8029 	ld	d,(hl)
   2804 21 54 00           8030 	ld	hl,#0x0054
   2807 19                 8031 	add	hl,de
   2808 EB                 8032 	ex	de,hl
   2809 DD 6E F7           8033 	ld	l,-9 (ix)
   280C DD 66 F8           8034 	ld	h,-8 (ix)
   280F 73                 8035 	ld	(hl),e
   2810 23                 8036 	inc	hl
   2811 72                 8037 	ld	(hl),d
                           8038 ;demo.c:1142: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2812 21r94s41           8039 	ld	hl,#_cmd + 6
   2815 DD 75 F7           8040 	ld	-9 (ix),l
   2818 DD 74 F8           8041 	ld	-8 (ix),h
   281B 11r60s01           8042 	ld	de,#_eighttimes + 10
   281E EB                 8043 	ex	de,hl
   281F 5E                 8044 	ld	e,(hl)
   2820 23                 8045 	inc	hl
   2821 56                 8046 	ld	d,(hl)
   2822 13                 8047 	inc	de
   2823 13                 8048 	inc	de
   2824 13                 8049 	inc	de
   2825 13                 8050 	inc	de
   2826 79                 8051 	ld	a,c
   2827 83                 8052 	add	a,e
   2828 5F                 8053 	ld	e,a
   2829 78                 8054 	ld	a,b
   282A 8A                 8055 	adc	a,d
   282B 57                 8056 	ld	d,a
   282C 7B                 8057 	ld	a,e
   282D DD 86 FA           8058 	add	a,-6 (ix)
   2830 5F                 8059 	ld	e,a
   2831 7A                 8060 	ld	a,d
   2832 DD 8E FB           8061 	adc	a,-5 (ix)
   2835 57                 8062 	ld	d,a
   2836 DD 6E F7           8063 	ld	l,-9 (ix)
   2839 DD 66 F8           8064 	ld	h,-8 (ix)
   283C 73                 8065 	ld	(hl),e
   283D 23                 8066 	inc	hl
   283E 72                 8067 	ld	(hl),d
                           8068 ;demo.c:1143: vdp_copier(&cmd);
   283F C5                 8069 	push	bc
   2840 21r8Es41           8070 	ld	hl,#_cmd
   2843 E5                 8071 	push	hl
   2844 CDr00s00           8072 	call	_vdp_copier
   2847 F1                 8073 	pop	af
   2848 C1                 8074 	pop	bc
                           8075 ;demo.c:1128: for (x = 0; x < 6; x+=1) {
   2849 DD 34 FF           8076 	inc	-1 (ix)
   284C C3r09s27           8077 	jp	00144$
   284F                    8078 00147$:
                           8079 ;demo.c:1147: if (buf == -1) vdp_register(2, 0x1F);
   284F 3Ar25s42           8080 	ld	a,(#_buf+0)
   2852 3C                 8081 	inc	a
   2853 20 06              8082 	jr	NZ,00200$
   2855 3Ar26s42           8083 	ld	a,(#_buf+1)
   2858 3C                 8084 	inc	a
   2859 28 02              8085 	jr	Z,00201$
   285B                    8086 00200$:
   285B 18 0A              8087 	jr	00126$
   285D                    8088 00201$:
   285D 21 02 1F           8089 	ld	hl,#0x1F02
   2860 E5                 8090 	push	hl
   2861 CDr00s00           8091 	call	_vdp_register
   2864 F1                 8092 	pop	af
   2865 18 08              8093 	jr	00127$
   2867                    8094 00126$:
                           8095 ;demo.c:1148: else vdp_register(2, 0x3F);
   2867 21 02 3F           8096 	ld	hl,#0x3F02
   286A E5                 8097 	push	hl
   286B CDr00s00           8098 	call	_vdp_register
   286E F1                 8099 	pop	af
   286F                    8100 00127$:
                           8101 ;demo.c:1151: buf = -buf;
   286F AF                 8102 	xor	a,a
   2870 FD 21r25s42        8103 	ld	iy,#_buf
   2874 3E 00              8104 	ld	a,#0x00
   2876 FD 9E 00           8105 	sbc	a,0 (iy)
   2879 21r25s42           8106 	ld	hl,#_buf + 0
   287C 77                 8107 	ld	(hl), a
   287D FD 21r25s42        8108 	ld	iy,#_buf
   2881 3E 00              8109 	ld	a,#0x00
   2883 FD 9E 01           8110 	sbc	a,1 (iy)
   2886 21r26s42           8111 	ld	hl,#_buf + 1
   2889 77                 8112 	ld	(hl), a
                           8113 ;demo.c:1153: ffa+=8;
   288A 21r27s42           8114 	ld	hl,#_ffa
   288D 7E                 8115 	ld	a,(hl)
   288E C6 08              8116 	add	a,#0x08
   2890 23                 8117 	inc	hl
   2891 2B                 8118 	dec	hl
   2892 C5                 8119 	push	bc
   2893 4F                 8120 	ld	c, a
   2894 23                 8121 	inc	hl
   2895 7E                 8122 	ld	a, (hl)
   2896 47                 8123 	ld	b, a
   2897 79                 8124 	ld	a, c
   2898 2B                 8125 	dec	hl
   2899 77                 8126 	ld	(hl), a
   289A 78                 8127 	ld	a, b
   289B C1                 8128 	pop	bc
   289C CE 00              8129 	adc	a,#0x00
   289E 23                 8130 	inc	hl
   289F 77                 8131 	ld	(hl),a
   28A0 DD F9              8132 	ld	sp,ix
   28A2 DD E1              8133 	pop	ix
   28A4 C9                 8134 	ret
   28A5                    8135 _thewave_end::
                           8136 ;demo.c:1159: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           8137 ;	---------------------------------
                           8138 ; Function drawtritile
                           8139 ; ---------------------------------
   28A5                    8140 _drawtritile_start::
   28A5                    8141 _drawtritile:
   28A5 DD E5              8142 	push	ix
   28A7 DD 21 00 00        8143 	ld	ix,#0
   28AB DD 39              8144 	add	ix,sp
                           8145 ;demo.c:1160: cmd.source_x = tx;
   28AD DD 4E 04           8146 	ld	c,4 (ix)
   28B0 06 00              8147 	ld	b,#0x00
   28B2 21r8Es41           8148 	ld	hl,#_cmd
   28B5 71                 8149 	ld	(hl),c
   28B6 23                 8150 	inc	hl
   28B7 70                 8151 	ld	(hl),b
                           8152 ;demo.c:1161: cmd.source_y = ty-1;
   28B8 01r90s41           8153 	ld	bc,#_cmd + 2
   28BB DD 5E 05           8154 	ld	e,5 (ix)
   28BE DD 56 06           8155 	ld	d,6 (ix)
   28C1 1B                 8156 	dec	de
   28C2 69                 8157 	ld	l,c
   28C3 60                 8158 	ld	h,b
   28C4 73                 8159 	ld	(hl),e
   28C5 23                 8160 	inc	hl
   28C6 72                 8161 	ld	(hl),d
                           8162 ;demo.c:1162: cmd.dest_x = x;
   28C7 01r92s41           8163 	ld	bc,#_cmd + 4
   28CA DD 5E 07           8164 	ld	e,7 (ix)
   28CD 16 00              8165 	ld	d,#0x00
   28CF 69                 8166 	ld	l,c
   28D0 60                 8167 	ld	h,b
   28D1 73                 8168 	ld	(hl),e
   28D2 23                 8169 	inc	hl
   28D3 72                 8170 	ld	(hl),d
                           8171 ;demo.c:1163: cmd.dest_y = y;
   28D4 01r94s41           8172 	ld	bc,#_cmd + 6
   28D7 DD 5E 08           8173 	ld	e,8 (ix)
   28DA 16 00              8174 	ld	d,#0x00
   28DC 69                 8175 	ld	l,c
   28DD 60                 8176 	ld	h,b
   28DE 73                 8177 	ld	(hl),e
   28DF 23                 8178 	inc	hl
   28E0 72                 8179 	ld	(hl),d
                           8180 ;demo.c:1164: cmd.size_x = 16;
   28E1 21r96s41           8181 	ld	hl, #_cmd + 8
   28E4 36 10              8182 	ld	(hl),#0x10
   28E6 23                 8183 	inc	hl
   28E7 36 00              8184 	ld	(hl),#0x00
                           8185 ;demo.c:1165: cmd.size_y = 16;
   28E9 21r98s41           8186 	ld	hl, #_cmd + 10
   28EC 36 10              8187 	ld	(hl),#0x10
   28EE 23                 8188 	inc	hl
   28EF 36 00              8189 	ld	(hl),#0x00
                           8190 ;demo.c:1166: cmd.data = 0;
                           8191 ;demo.c:1167: cmd.argument = 0x00;
   28F1 3E 00              8192 	ld	a,#0x00
   28F3 32r9As41           8193 	ld	(#_cmd + 12),a
   28F6 32r9Bs41           8194 	ld	(#_cmd + 13),a
                           8195 ;demo.c:1168: cmd.command = 0xd0; // HMMM
   28F9 3E D0              8196 	ld	a,#0xD0
   28FB 32r9Cs41           8197 	ld	(#_cmd + 14),a
                           8198 ;demo.c:1169: vdp_copier(&cmd);
   28FE 21r8Es41           8199 	ld	hl,#_cmd
   2901 E5                 8200 	push	hl
   2902 CDr00s00           8201 	call	_vdp_copier
   2905 F1                 8202 	pop	af
   2906 DD E1              8203 	pop	ix
   2908 C9                 8204 	ret
   2909                    8205 _drawtritile_end::
                           8206 ;demo.c:1176: void drawtilescreen(char* tripic) {
                           8207 ;	---------------------------------
                           8208 ; Function drawtilescreen
                           8209 ; ---------------------------------
   2909                    8210 _drawtilescreen_start::
   2909                    8211 _drawtilescreen:
   2909 DD E5              8212 	push	ix
   290B DD 21 00 00        8213 	ld	ix,#0
   290F DD 39              8214 	add	ix,sp
   2911 F5                 8215 	push	af
   2912 3B                 8216 	dec	sp
                           8217 ;demo.c:1178: if(tilei >= 192) return;
   2913 3Ar2As42           8218 	ld	a,(#_tilei+0)
   2916 D6 C0              8219 	sub	a,#0xC0
   2918 3Ar2Bs42           8220 	ld	a,(#_tilei+1)
   291B DE 00              8221 	sbc	a,#0x00
   291D FAr23s29           8222 	jp	M,00102$
   2920 C3rEEs29           8223 	jp	00112$
   2923                    8224 00102$:
                           8225 ;demo.c:1180: tiletick++;
   2923 FD 21r30s42        8226 	ld	iy,#_tiletick
   2927 FD 34 00           8227 	inc	0 (iy)
                           8228 ;demo.c:1181: if (tiletick > 6) { tiletick = 0;}
   292A 3E 06              8229 	ld	a,#0x06
   292C FD 21r30s42        8230 	ld	iy,#_tiletick
   2930 FD 96 00           8231 	sub	a,0 (iy)
   2933 30 0A              8232 	jr	NC,00104$
   2935 FD 21r30s42        8233 	ld	iy,#_tiletick
   2939 FD 36 00 00        8234 	ld	0 (iy),#0x00
   293D 18 03              8235 	jr	00118$
   293F                    8236 00104$:
                           8237 ;demo.c:1182: else return;
   293F C3rEEs29           8238 	jp	00112$
                           8239 ;demo.c:1183: for (i=0;i<20;i++) {
   2942                    8240 00118$:
   2942 DD 36 FF 00        8241 	ld	-1 (ix),#0x00
   2946                    8242 00108$:
   2946 DD 7E FF           8243 	ld	a,-1 (ix)
   2949 D6 14              8244 	sub	a,#0x14
   294B D2rEEs29           8245 	jp	NC,00112$
                           8246 ;demo.c:1184: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   294E 3Ar2Es42           8247 	ld	a,(#_tiley+0)
   2951 DD 77 FD           8248 	ld	-3 (ix),a
   2954 3Ar2Cs42           8249 	ld	a,(#_tilex+0)
   2957 DD 77 FE           8250 	ld	-2 (ix),a
   295A 21r2As42           8251 	ld	hl,#_tilei
   295D DD 7E 04           8252 	ld	a,4 (ix)
   2960 86                 8253 	add	a,(hl)
   2961 57                 8254 	ld	d,a
   2962 DD 7E 05           8255 	ld	a,5 (ix)
   2965 23                 8256 	inc	hl
   2966 8E                 8257 	adc	a,(hl)
   2967 6A                 8258 	ld	l,d
   2968 67                 8259 	ld	h,a
   2969 56                 8260 	ld	d,(hl)
   296A 7A                 8261 	ld	a,d
   296B 87                 8262 	add	a,a
   296C C6r8A              8263 	add	a,#<_tri_lookup_y
   296E 6F                 8264 	ld	l,a
   296F 3Es01              8265 	ld	a,#>_tri_lookup_y
   2971 CE 00              8266 	adc	a,#0x00
   2973 67                 8267 	ld	h,a
   2974 4E                 8268 	ld	c,(hl)
   2975 23                 8269 	inc	hl
   2976 5E                 8270 	ld	e,(hl)
   2977 3Er02              8271 	ld	a,#<_tri_lookup_x
   2979 82                 8272 	add	a,d
   297A 6F                 8273 	ld	l,a
   297B 3Es01              8274 	ld	a,#>_tri_lookup_x
   297D CE 00              8275 	adc	a,#0x00
   297F 67                 8276 	ld	h,a
   2980 56                 8277 	ld	d,(hl)
   2981 DD 66 FD           8278 	ld	h,-3 (ix)
   2984 DD 6E FE           8279 	ld	l,-2 (ix)
   2987 E5                 8280 	push	hl
   2988 69                 8281 	ld	l,c
   2989 63                 8282 	ld	h,e
   298A E5                 8283 	push	hl
   298B D5                 8284 	push	de
   298C 33                 8285 	inc	sp
   298D CDrA5s28           8286 	call	_drawtritile
   2990 F1                 8287 	pop	af
   2991 F1                 8288 	pop	af
   2992 33                 8289 	inc	sp
                           8290 ;demo.c:1185: tilex+=16;
   2993 21r2Cs42           8291 	ld	hl,#_tilex
   2996 7E                 8292 	ld	a,(hl)
   2997 C6 10              8293 	add	a,#0x10
   2999 23                 8294 	inc	hl
   299A 2B                 8295 	dec	hl
   299B C5                 8296 	push	bc
   299C 4F                 8297 	ld	c, a
   299D 23                 8298 	inc	hl
   299E 7E                 8299 	ld	a, (hl)
   299F 47                 8300 	ld	b, a
   29A0 79                 8301 	ld	a, c
   29A1 2B                 8302 	dec	hl
   29A2 77                 8303 	ld	(hl), a
   29A3 78                 8304 	ld	a, b
   29A4 C1                 8305 	pop	bc
   29A5 CE 00              8306 	adc	a,#0x00
   29A7 23                 8307 	inc	hl
   29A8 77                 8308 	ld	(hl),a
                           8309 ;demo.c:1186: tilei++;
   29A9 FD 21r2As42        8310 	ld	iy,#_tilei
   29AD FD 34 00           8311 	inc	0 (iy)
   29B0 20 07              8312 	jr	NZ,00119$
   29B2 FD 21r2As42        8313 	ld	iy,#_tilei
   29B6 FD 34 01           8314 	inc	1 (iy)
   29B9                    8315 00119$:
                           8316 ;demo.c:1187: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   29B9 3Ar2Cs42           8317 	ld	a,(#_tilex+0)
   29BC D6 00              8318 	sub	a,#0x00
   29BE 3Ar2Ds42           8319 	ld	a,(#_tilex+1)
   29C1 DE 01              8320 	sbc	a,#0x01
   29C3 FArE8s29           8321 	jp	M,00110$
   29C6 21r2Cs42           8322 	ld	hl,#_tilex + 0
   29C9 36 00              8323 	ld	(hl), #0x00
   29CB 21r2Ds42           8324 	ld	hl,#_tilex + 1
   29CE 36 00              8325 	ld	(hl), #0x00
   29D0 21r2Es42           8326 	ld	hl,#_tiley
   29D3 7E                 8327 	ld	a,(hl)
   29D4 C6 10              8328 	add	a,#0x10
   29D6 23                 8329 	inc	hl
   29D7 2B                 8330 	dec	hl
   29D8 C5                 8331 	push	bc
   29D9 4F                 8332 	ld	c, a
   29DA 23                 8333 	inc	hl
   29DB 7E                 8334 	ld	a, (hl)
   29DC 47                 8335 	ld	b, a
   29DD 79                 8336 	ld	a, c
   29DE 2B                 8337 	dec	hl
   29DF 77                 8338 	ld	(hl), a
   29E0 78                 8339 	ld	a, b
   29E1 C1                 8340 	pop	bc
   29E2 CE 00              8341 	adc	a,#0x00
   29E4 23                 8342 	inc	hl
   29E5 77                 8343 	ld	(hl),a
   29E6 18 06              8344 	jr	00112$
   29E8                    8345 00110$:
                           8346 ;demo.c:1183: for (i=0;i<20;i++) {
   29E8 DD 34 FF           8347 	inc	-1 (ix)
   29EB C3r46s29           8348 	jp	00108$
   29EE                    8349 00112$:
   29EE DD F9              8350 	ld	sp,ix
   29F0 DD E1              8351 	pop	ix
   29F2 C9                 8352 	ret
   29F3                    8353 _drawtilescreen_end::
                           8354 ;demo.c:1192: void drawtilescreen_full(char* tripic) {
                           8355 ;	---------------------------------
                           8356 ; Function drawtilescreen_full
                           8357 ; ---------------------------------
   29F3                    8358 _drawtilescreen_full_start::
   29F3                    8359 _drawtilescreen_full:
   29F3 DD E5              8360 	push	ix
   29F5 DD 21 00 00        8361 	ld	ix,#0
   29F9 DD 39              8362 	add	ix,sp
   29FB 21 F8 FF           8363 	ld	hl,#-8
   29FE 39                 8364 	add	hl,sp
   29FF F9                 8365 	ld	sp,hl
                           8366 ;demo.c:1193: int x = 0;
   2A00 DD 36 FE 00        8367 	ld	-2 (ix),#0x00
   2A04 DD 36 FF 00        8368 	ld	-1 (ix),#0x00
                           8369 ;demo.c:1196: while(i < 192) {
   2A08 DD 36 FC 00        8370 	ld	-4 (ix),#0x00
   2A0C DD 36 FD 00        8371 	ld	-3 (ix),#0x00
   2A10 DD 36 FA 00        8372 	ld	-6 (ix),#0x00
   2A14 DD 36 FB 00        8373 	ld	-5 (ix),#0x00
   2A18                    8374 00103$:
   2A18 DD 7E FA           8375 	ld	a,-6 (ix)
   2A1B D6 C0              8376 	sub	a,#0xC0
   2A1D DD 7E FB           8377 	ld	a,-5 (ix)
   2A20 DE 00              8378 	sbc	a,#0x00
   2A22 F2rA9s2A           8379 	jp	P,00106$
                           8380 ;demo.c:1197: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2A25 DD 7E FC           8381 	ld	a,-4 (ix)
   2A28 DD 77 F8           8382 	ld	-8 (ix),a
   2A2B DD 7E FE           8383 	ld	a,-2 (ix)
   2A2E DD 77 F9           8384 	ld	-7 (ix),a
   2A31 DD 7E 04           8385 	ld	a,4 (ix)
   2A34 DD 86 FA           8386 	add	a,-6 (ix)
   2A37 4F                 8387 	ld	c,a
   2A38 DD 7E 05           8388 	ld	a,5 (ix)
   2A3B DD 8E FB           8389 	adc	a,-5 (ix)
   2A3E 47                 8390 	ld	b,a
   2A3F 0A                 8391 	ld	a,(bc)
   2A40 4F                 8392 	ld	c,a
   2A41 87                 8393 	add	a,a
   2A42 C6r8A              8394 	add	a,#<_tri_lookup_y
   2A44 6F                 8395 	ld	l,a
   2A45 3Es01              8396 	ld	a,#>_tri_lookup_y
   2A47 CE 00              8397 	adc	a,#0x00
   2A49 67                 8398 	ld	h,a
   2A4A 46                 8399 	ld	b,(hl)
   2A4B 23                 8400 	inc	hl
   2A4C 56                 8401 	ld	d,(hl)
   2A4D 3Er02              8402 	ld	a,#<_tri_lookup_x
   2A4F 81                 8403 	add	a,c
   2A50 6F                 8404 	ld	l,a
   2A51 3Es01              8405 	ld	a,#>_tri_lookup_x
   2A53 CE 00              8406 	adc	a,#0x00
   2A55 67                 8407 	ld	h,a
   2A56 4E                 8408 	ld	c,(hl)
   2A57 DD 66 F8           8409 	ld	h,-8 (ix)
   2A5A DD 6E F9           8410 	ld	l,-7 (ix)
   2A5D E5                 8411 	push	hl
   2A5E 58                 8412 	ld	e,b
   2A5F D5                 8413 	push	de
   2A60 79                 8414 	ld	a,c
   2A61 F5                 8415 	push	af
   2A62 33                 8416 	inc	sp
   2A63 CDrA5s28           8417 	call	_drawtritile
   2A66 F1                 8418 	pop	af
   2A67 F1                 8419 	pop	af
   2A68 33                 8420 	inc	sp
                           8421 ;demo.c:1198: x+=16;
   2A69 DD 7E FE           8422 	ld	a,-2 (ix)
   2A6C C6 10              8423 	add	a,#0x10
   2A6E DD 77 FE           8424 	ld	-2 (ix),a
   2A71 DD 7E FF           8425 	ld	a,-1 (ix)
   2A74 CE 00              8426 	adc	a,#0x00
   2A76 DD 77 FF           8427 	ld	-1 (ix),a
                           8428 ;demo.c:1199: if (x >= 256) {x = 0; y+=16;}
   2A79 DD 7E FE           8429 	ld	a,-2 (ix)
   2A7C D6 00              8430 	sub	a,#0x00
   2A7E DD 7E FF           8431 	ld	a,-1 (ix)
   2A81 DE 01              8432 	sbc	a,#0x01
   2A83 FAr9Es2A           8433 	jp	M,00102$
   2A86 DD 36 FE 00        8434 	ld	-2 (ix),#0x00
   2A8A DD 36 FF 00        8435 	ld	-1 (ix),#0x00
   2A8E DD 7E FC           8436 	ld	a,-4 (ix)
   2A91 C6 10              8437 	add	a,#0x10
   2A93 DD 77 FC           8438 	ld	-4 (ix),a
   2A96 DD 7E FD           8439 	ld	a,-3 (ix)
   2A99 CE 00              8440 	adc	a,#0x00
   2A9B DD 77 FD           8441 	ld	-3 (ix),a
   2A9E                    8442 00102$:
                           8443 ;demo.c:1200: i++;
   2A9E DD 34 FA           8444 	inc	-6 (ix)
   2AA1 20 03              8445 	jr	NZ,00112$
   2AA3 DD 34 FB           8446 	inc	-5 (ix)
   2AA6                    8447 00112$:
   2AA6 C3r18s2A           8448 	jp	00103$
   2AA9                    8449 00106$:
   2AA9 DD F9              8450 	ld	sp,ix
   2AAB DD E1              8451 	pop	ix
   2AAD C9                 8452 	ret
   2AAE                    8453 _drawtilescreen_full_end::
                           8454 ;demo.c:1216: void tritiles() {
                           8455 ;	---------------------------------
                           8456 ; Function tritiles
                           8457 ; ---------------------------------
   2AAE                    8458 _tritiles_start::
   2AAE                    8459 _tritiles:
   2AAE DD E5              8460 	push	ix
   2AB0 DD 21 00 00        8461 	ld	ix,#0
   2AB4 DD 39              8462 	add	ix,sp
   2AB6 21 FB FF           8463 	ld	hl,#-5
   2AB9 39                 8464 	add	hl,sp
   2ABA F9                 8465 	ld	sp,hl
                           8466 ;demo.c:1223: if (tri_inited == 0) {
   2ABB AF                 8467 	xor	a,a
   2ABC 21r29s42           8468 	ld	hl,#_tri_inited + 0
   2ABF B6                 8469 	or	a,(hl)
   2AC0 C2r87s2B           8470 	jp	NZ,00102$
                           8471 ;demo.c:1224: tri_inited = 1;
   2AC3 FD 21r29s42        8472 	ld	iy,#_tri_inited
   2AC7 FD 36 00 01        8473 	ld	0 (iy),#0x01
                           8474 ;demo.c:1226: cmd.size_x = 256;
   2ACB 21r96s41           8475 	ld	hl, #_cmd + 8
   2ACE 36 00              8476 	ld	(hl),#0x00
   2AD0 23                 8477 	inc	hl
   2AD1 36 01              8478 	ld	(hl),#0x01
                           8479 ;demo.c:1227: cmd.size_y = 1;
   2AD3 21r98s41           8480 	ld	hl, #_cmd + 10
   2AD6 36 01              8481 	ld	(hl),#0x01
   2AD8 23                 8482 	inc	hl
   2AD9 36 00              8483 	ld	(hl),#0x00
                           8484 ;demo.c:1228: cmd.data = 0;
                           8485 ;demo.c:1229: cmd.argument = 0x00; // from 70xY to left
   2ADB 3E 00              8486 	ld	a,#0x00
   2ADD 32r9As41           8487 	ld	(#_cmd + 12),a
   2AE0 32r9Bs41           8488 	ld	(#_cmd + 13),a
                           8489 ;demo.c:1230: cmd.command = 0xd0; // vram to vram, y only
   2AE3 01r9Cs41           8490 	ld	bc,#_cmd + 14
   2AE6 3E D0              8491 	ld	a,#0xD0
   2AE8 02                 8492 	ld	(bc),a
                           8493 ;demo.c:1231: cmd.source_x = 0;
   2AE9 21r8Es41           8494 	ld	hl,#_cmd
   2AEC 36 00              8495 	ld	(hl),#0x00
   2AEE 23                 8496 	inc	hl
   2AEF 36 00              8497 	ld	(hl),#0x00
                           8498 ;demo.c:1232: cmd.source_y = 212;
   2AF1 21r90s41           8499 	ld	hl, #_cmd + 2
   2AF4 36 D4              8500 	ld	(hl),#0xD4
   2AF6 23                 8501 	inc	hl
   2AF7 36 00              8502 	ld	(hl),#0x00
                           8503 ;demo.c:1233: cmd.dest_y = 0;
   2AF9 01r94s41           8504 	ld	bc,#_cmd + 6
   2AFC 69                 8505 	ld	l,c
   2AFD 60                 8506 	ld	h,b
   2AFE 36 00              8507 	ld	(hl),#0x00
   2B00 23                 8508 	inc	hl
   2B01 36 00              8509 	ld	(hl),#0x00
                           8510 ;demo.c:1235: for (x = 0; x < 212; x++) {
   2B03 DD 36 FE 00        8511 	ld	-2 (ix),#0x00
   2B07 DD 36 FF 00        8512 	ld	-1 (ix),#0x00
   2B0B                    8513 00154$:
   2B0B DD 7E FE           8514 	ld	a,-2 (ix)
   2B0E D6 D4              8515 	sub	a,#0xD4
   2B10 DD 7E FF           8516 	ld	a,-1 (ix)
   2B13 DE 00              8517 	sbc	a,#0x00
   2B15 F2r5Bs2B           8518 	jp	P,00157$
                           8519 ;demo.c:1236: waitVB();
   2B18 76                 8520 		halt 
                           8521 ;demo.c:1237: cmd.dest_x = 0;
   2B19 11r92s41           8522 	ld	de,#_cmd + 4
   2B1C EB                 8523 	ex	de,hl
   2B1D 36 00              8524 	ld	(hl),#0x00
   2B1F 23                 8525 	inc	hl
   2B20 36 00              8526 	ld	(hl),#0x00
                           8527 ;demo.c:1238: cmd.dest_y = 256+x;
   2B22 11r94s41           8528 	ld	de,#_cmd + 6
   2B25 DD 7E FE           8529 	ld	a,-2 (ix)
   2B28 C6 00              8530 	add	a,#0x00
   2B2A 4F                 8531 	ld	c,a
   2B2B DD 7E FF           8532 	ld	a,-1 (ix)
   2B2E CE 01              8533 	adc	a,#0x01
   2B30 47                 8534 	ld	b,a
   2B31 EB                 8535 	ex	de,hl
   2B32 71                 8536 	ld	(hl),c
   2B33 23                 8537 	inc	hl
   2B34 70                 8538 	ld	(hl),b
                           8539 ;demo.c:1239: vdp_copier(&cmd);
   2B35 21r8Es41           8540 	ld	hl,#_cmd
   2B38 E5                 8541 	push	hl
   2B39 CDr00s00           8542 	call	_vdp_copier
   2B3C F1                 8543 	pop	af
                           8544 ;demo.c:1240: cmd.dest_y = 0+x;
   2B3D 21r94s41           8545 	ld	hl, #_cmd + 6
   2B40 DD 7E FE           8546 	ld	a,-2 (ix)
   2B43 77                 8547 	ld	(hl),a
   2B44 23                 8548 	inc	hl
   2B45 DD 7E FF           8549 	ld	a,-1 (ix)
   2B48 77                 8550 	ld	(hl),a
                           8551 ;demo.c:1241: vdp_copier(&cmd);
   2B49 21r8Es41           8552 	ld	hl,#_cmd
   2B4C E5                 8553 	push	hl
   2B4D CDr00s00           8554 	call	_vdp_copier
   2B50 F1                 8555 	pop	af
                           8556 ;demo.c:1235: for (x = 0; x < 212; x++) {
   2B51 DD 34 FE           8557 	inc	-2 (ix)
   2B54 20 03              8558 	jr	NZ,00201$
   2B56 DD 34 FF           8559 	inc	-1 (ix)
   2B59                    8560 00201$:
   2B59 18 B0              8561 	jr	00154$
   2B5B                    8562 00157$:
                           8563 ;demo.c:1244: vdp_load_palette(boxes_palette);
   2B5B 21r6As41           8564 	ld	hl,#_boxes_palette
   2B5E E5                 8565 	push	hl
   2B5F CDr00s00           8566 	call	_vdp_load_palette
   2B62 F1                 8567 	pop	af
                           8568 ;demo.c:1246: vdp_register(9,2); // 50hz,192
   2B63 21 09 02           8569 	ld	hl,#0x0209
   2B66 E5                 8570 	push	hl
   2B67 CDr00s00           8571 	call	_vdp_register
   2B6A F1                 8572 	pop	af
                           8573 ;demo.c:1248: msx2_palette(15,0,0,0);
   2B6B 21 00 00           8574 	ld	hl,#0x0000
   2B6E E5                 8575 	push	hl
   2B6F 2E 0F              8576 	ld	l, #0x0F
   2B71 E5                 8577 	push	hl
   2B72 CDr00s00           8578 	call	_msx2_palette
   2B75 F1                 8579 	pop	af
   2B76 F1                 8580 	pop	af
                           8581 ;demo.c:1250: drawtilescreen_full(tri_center);
   2B77 21r2Cs01           8582 	ld	hl,#_tri_center
   2B7A E5                 8583 	push	hl
   2B7B CDrF3s29           8584 	call	_drawtilescreen_full
   2B7E F1                 8585 	pop	af
                           8586 ;demo.c:1251: vdp_register(2, 0x1f);
   2B7F 21 02 1F           8587 	ld	hl,#0x1F02
   2B82 E5                 8588 	push	hl
   2B83 CDr00s00           8589 	call	_vdp_register
   2B86 F1                 8590 	pop	af
   2B87                    8591 00102$:
                           8592 ;demo.c:1256: triframes++;
   2B87 FD 21r3Cs42        8593 	ld	iy,#_triframes
   2B8B FD 34 00           8594 	inc	0 (iy)
   2B8E 20 07              8595 	jr	NZ,00202$
   2B90 FD 21r3Cs42        8596 	ld	iy,#_triframes
   2B94 FD 34 01           8597 	inc	1 (iy)
   2B97                    8598 00202$:
                           8599 ;demo.c:1258: if (triframes == 200) { tilei = 0; tilex = 0; tiley = 0; }
   2B97 3Ar3Cs42           8600 	ld	a,(#_triframes+0)
   2B9A D6 C8              8601 	sub	a,#0xC8
   2B9C 20 06              8602 	jr	NZ,00203$
   2B9E 3Ar3Ds42           8603 	ld	a,(#_triframes+1)
   2BA1 B7                 8604 	or	a,a
   2BA2 28 02              8605 	jr	Z,00204$
   2BA4                    8606 00203$:
   2BA4 18 1E              8607 	jr	00104$
   2BA6                    8608 00204$:
   2BA6 21r2As42           8609 	ld	hl,#_tilei + 0
   2BA9 36 00              8610 	ld	(hl), #0x00
   2BAB 21r2Bs42           8611 	ld	hl,#_tilei + 1
   2BAE 36 00              8612 	ld	(hl), #0x00
   2BB0 21r2Cs42           8613 	ld	hl,#_tilex + 0
   2BB3 36 00              8614 	ld	(hl), #0x00
   2BB5 21r2Ds42           8615 	ld	hl,#_tilex + 1
   2BB8 36 00              8616 	ld	(hl), #0x00
   2BBA 21r2Es42           8617 	ld	hl,#_tiley + 0
   2BBD 36 00              8618 	ld	(hl), #0x00
   2BBF 21r2Fs42           8619 	ld	hl,#_tiley + 1
   2BC2 36 00              8620 	ld	(hl), #0x00
   2BC4                    8621 00104$:
                           8622 ;demo.c:1259: if (triframes >= 200 && triframes < 400) {
   2BC4 3Ar3Cs42           8623 	ld	a,(#_triframes+0)
   2BC7 D6 C8              8624 	sub	a,#0xC8
   2BC9 3Ar3Ds42           8625 	ld	a,(#_triframes+1)
   2BCC DE 00              8626 	sbc	a,#0x00
   2BCE FArE6s2B           8627 	jp	M,00106$
   2BD1 3Ar3Cs42           8628 	ld	a,(#_triframes+0)
   2BD4 D6 90              8629 	sub	a,#0x90
   2BD6 3Ar3Ds42           8630 	ld	a,(#_triframes+1)
   2BD9 DE 01              8631 	sbc	a,#0x01
   2BDB F2rE6s2B           8632 	jp	P,00106$
                           8633 ;demo.c:1260: drawtilescreen(tri_up);
   2BDE 21rECs01           8634 	ld	hl,#_tri_up
   2BE1 E5                 8635 	push	hl
   2BE2 CDr09s29           8636 	call	_drawtilescreen
   2BE5 F1                 8637 	pop	af
   2BE6                    8638 00106$:
                           8639 ;demo.c:1263: if (triframes == 400) { tilei = 0; tilex = 0; tiley = 0; }
   2BE6 3Ar3Cs42           8640 	ld	a,(#_triframes+0)
   2BE9 D6 90              8641 	sub	a,#0x90
   2BEB 20 07              8642 	jr	NZ,00205$
   2BED 3Ar3Ds42           8643 	ld	a,(#_triframes+1)
   2BF0 D6 01              8644 	sub	a,#0x01
   2BF2 28 02              8645 	jr	Z,00206$
   2BF4                    8646 00205$:
   2BF4 18 1E              8647 	jr	00109$
   2BF6                    8648 00206$:
   2BF6 21r2As42           8649 	ld	hl,#_tilei + 0
   2BF9 36 00              8650 	ld	(hl), #0x00
   2BFB 21r2Bs42           8651 	ld	hl,#_tilei + 1
   2BFE 36 00              8652 	ld	(hl), #0x00
   2C00 21r2Cs42           8653 	ld	hl,#_tilex + 0
   2C03 36 00              8654 	ld	(hl), #0x00
   2C05 21r2Ds42           8655 	ld	hl,#_tilex + 1
   2C08 36 00              8656 	ld	(hl), #0x00
   2C0A 21r2Es42           8657 	ld	hl,#_tiley + 0
   2C0D 36 00              8658 	ld	(hl), #0x00
   2C0F 21r2Fs42           8659 	ld	hl,#_tiley + 1
   2C12 36 00              8660 	ld	(hl), #0x00
   2C14                    8661 00109$:
                           8662 ;demo.c:1264: if (triframes >= 400 && triframes < 600) {
   2C14 3Ar3Cs42           8663 	ld	a,(#_triframes+0)
   2C17 D6 90              8664 	sub	a,#0x90
   2C19 3Ar3Ds42           8665 	ld	a,(#_triframes+1)
   2C1C DE 01              8666 	sbc	a,#0x01
   2C1E FAr36s2C           8667 	jp	M,00111$
   2C21 3Ar3Cs42           8668 	ld	a,(#_triframes+0)
   2C24 D6 58              8669 	sub	a,#0x58
   2C26 3Ar3Ds42           8670 	ld	a,(#_triframes+1)
   2C29 DE 02              8671 	sbc	a,#0x02
   2C2B F2r36s2C           8672 	jp	P,00111$
                           8673 ;demo.c:1265: drawtilescreen(tri_dia);
   2C2E 21rACs02           8674 	ld	hl,#_tri_dia
   2C31 E5                 8675 	push	hl
   2C32 CDr09s29           8676 	call	_drawtilescreen
   2C35 F1                 8677 	pop	af
   2C36                    8678 00111$:
                           8679 ;demo.c:1268: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2C36 3Ar3Cs42           8680 	ld	a,(#_triframes+0)
   2C39 D6 58              8681 	sub	a,#0x58
   2C3B 20 07              8682 	jr	NZ,00207$
   2C3D 3Ar3Ds42           8683 	ld	a,(#_triframes+1)
   2C40 D6 02              8684 	sub	a,#0x02
   2C42 28 02              8685 	jr	Z,00208$
   2C44                    8686 00207$:
   2C44 18 1E              8687 	jr	00114$
   2C46                    8688 00208$:
   2C46 21r2As42           8689 	ld	hl,#_tilei + 0
   2C49 36 00              8690 	ld	(hl), #0x00
   2C4B 21r2Bs42           8691 	ld	hl,#_tilei + 1
   2C4E 36 00              8692 	ld	(hl), #0x00
   2C50 21r2Cs42           8693 	ld	hl,#_tilex + 0
   2C53 36 00              8694 	ld	(hl), #0x00
   2C55 21r2Ds42           8695 	ld	hl,#_tilex + 1
   2C58 36 00              8696 	ld	(hl), #0x00
   2C5A 21r2Es42           8697 	ld	hl,#_tiley + 0
   2C5D 36 00              8698 	ld	(hl), #0x00
   2C5F 21r2Fs42           8699 	ld	hl,#_tiley + 1
   2C62 36 00              8700 	ld	(hl), #0x00
   2C64                    8701 00114$:
                           8702 ;demo.c:1269: if (triframes >= 600 && triframes < 700) {
   2C64 3Ar3Cs42           8703 	ld	a,(#_triframes+0)
   2C67 D6 58              8704 	sub	a,#0x58
   2C69 3Ar3Ds42           8705 	ld	a,(#_triframes+1)
   2C6C DE 02              8706 	sbc	a,#0x02
   2C6E FAr86s2C           8707 	jp	M,00116$
   2C71 3Ar3Cs42           8708 	ld	a,(#_triframes+0)
   2C74 D6 BC              8709 	sub	a,#0xBC
   2C76 3Ar3Ds42           8710 	ld	a,(#_triframes+1)
   2C79 DE 02              8711 	sbc	a,#0x02
   2C7B F2r86s2C           8712 	jp	P,00116$
                           8713 ;demo.c:1270: drawtilescreen(tri_side1);
   2C7E 21r6Cs03           8714 	ld	hl,#_tri_side1
   2C81 E5                 8715 	push	hl
   2C82 CDr09s29           8716 	call	_drawtilescreen
   2C85 F1                 8717 	pop	af
   2C86                    8718 00116$:
                           8719 ;demo.c:1273: if (triframes == 800) { tilei = 0; tilex = 0; tiley = 0; }
   2C86 3Ar3Cs42           8720 	ld	a,(#_triframes+0)
   2C89 D6 20              8721 	sub	a,#0x20
   2C8B 20 07              8722 	jr	NZ,00209$
   2C8D 3Ar3Ds42           8723 	ld	a,(#_triframes+1)
   2C90 D6 03              8724 	sub	a,#0x03
   2C92 28 02              8725 	jr	Z,00210$
   2C94                    8726 00209$:
   2C94 18 1E              8727 	jr	00119$
   2C96                    8728 00210$:
   2C96 21r2As42           8729 	ld	hl,#_tilei + 0
   2C99 36 00              8730 	ld	(hl), #0x00
   2C9B 21r2Bs42           8731 	ld	hl,#_tilei + 1
   2C9E 36 00              8732 	ld	(hl), #0x00
   2CA0 21r2Cs42           8733 	ld	hl,#_tilex + 0
   2CA3 36 00              8734 	ld	(hl), #0x00
   2CA5 21r2Ds42           8735 	ld	hl,#_tilex + 1
   2CA8 36 00              8736 	ld	(hl), #0x00
   2CAA 21r2Es42           8737 	ld	hl,#_tiley + 0
   2CAD 36 00              8738 	ld	(hl), #0x00
   2CAF 21r2Fs42           8739 	ld	hl,#_tiley + 1
   2CB2 36 00              8740 	ld	(hl), #0x00
   2CB4                    8741 00119$:
                           8742 ;demo.c:1274: if (triframes >= 800 && triframes < 1000) {
   2CB4 3Ar3Cs42           8743 	ld	a,(#_triframes+0)
   2CB7 D6 20              8744 	sub	a,#0x20
   2CB9 3Ar3Ds42           8745 	ld	a,(#_triframes+1)
   2CBC DE 03              8746 	sbc	a,#0x03
   2CBE FArD6s2C           8747 	jp	M,00121$
   2CC1 3Ar3Cs42           8748 	ld	a,(#_triframes+0)
   2CC4 D6 E8              8749 	sub	a,#0xE8
   2CC6 3Ar3Ds42           8750 	ld	a,(#_triframes+1)
   2CC9 DE 03              8751 	sbc	a,#0x03
   2CCB F2rD6s2C           8752 	jp	P,00121$
                           8753 ;demo.c:1275: drawtilescreen(tri_side2);
   2CCE 21r2Cs04           8754 	ld	hl,#_tri_side2
   2CD1 E5                 8755 	push	hl
   2CD2 CDr09s29           8756 	call	_drawtilescreen
   2CD5 F1                 8757 	pop	af
   2CD6                    8758 00121$:
                           8759 ;demo.c:1278: if (triframes == 1000) { tilei = 0; tilex = 0; tiley = 0; }
   2CD6 3Ar3Cs42           8760 	ld	a,(#_triframes+0)
   2CD9 D6 E8              8761 	sub	a,#0xE8
   2CDB 20 07              8762 	jr	NZ,00211$
   2CDD 3Ar3Ds42           8763 	ld	a,(#_triframes+1)
   2CE0 D6 03              8764 	sub	a,#0x03
   2CE2 28 02              8765 	jr	Z,00212$
   2CE4                    8766 00211$:
   2CE4 18 1E              8767 	jr	00124$
   2CE6                    8768 00212$:
   2CE6 21r2As42           8769 	ld	hl,#_tilei + 0
   2CE9 36 00              8770 	ld	(hl), #0x00
   2CEB 21r2Bs42           8771 	ld	hl,#_tilei + 1
   2CEE 36 00              8772 	ld	(hl), #0x00
   2CF0 21r2Cs42           8773 	ld	hl,#_tilex + 0
   2CF3 36 00              8774 	ld	(hl), #0x00
   2CF5 21r2Ds42           8775 	ld	hl,#_tilex + 1
   2CF8 36 00              8776 	ld	(hl), #0x00
   2CFA 21r2Es42           8777 	ld	hl,#_tiley + 0
   2CFD 36 00              8778 	ld	(hl), #0x00
   2CFF 21r2Fs42           8779 	ld	hl,#_tiley + 1
   2D02 36 00              8780 	ld	(hl), #0x00
   2D04                    8781 00124$:
                           8782 ;demo.c:1279: if (triframes >= 1000 && triframes < 1200) {
   2D04 3Ar3Cs42           8783 	ld	a,(#_triframes+0)
   2D07 D6 E8              8784 	sub	a,#0xE8
   2D09 3Ar3Ds42           8785 	ld	a,(#_triframes+1)
   2D0C DE 03              8786 	sbc	a,#0x03
   2D0E FAr26s2D           8787 	jp	M,00126$
   2D11 3Ar3Cs42           8788 	ld	a,(#_triframes+0)
   2D14 D6 B0              8789 	sub	a,#0xB0
   2D16 3Ar3Ds42           8790 	ld	a,(#_triframes+1)
   2D19 DE 04              8791 	sbc	a,#0x04
   2D1B F2r26s2D           8792 	jp	P,00126$
                           8793 ;demo.c:1280: drawtilescreen(tri_inva1);
   2D1E 21rECs04           8794 	ld	hl,#_tri_inva1
   2D21 E5                 8795 	push	hl
   2D22 CDr09s29           8796 	call	_drawtilescreen
   2D25 F1                 8797 	pop	af
   2D26                    8798 00126$:
                           8799 ;demo.c:1283: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2D26 3Ar3Cs42           8800 	ld	a,(#_triframes+0)
   2D29 D6 B0              8801 	sub	a,#0xB0
   2D2B 20 07              8802 	jr	NZ,00213$
   2D2D 3Ar3Ds42           8803 	ld	a,(#_triframes+1)
   2D30 D6 04              8804 	sub	a,#0x04
   2D32 28 02              8805 	jr	Z,00214$
   2D34                    8806 00213$:
   2D34 18 1E              8807 	jr	00129$
   2D36                    8808 00214$:
   2D36 21r2As42           8809 	ld	hl,#_tilei + 0
   2D39 36 00              8810 	ld	(hl), #0x00
   2D3B 21r2Bs42           8811 	ld	hl,#_tilei + 1
   2D3E 36 00              8812 	ld	(hl), #0x00
   2D40 21r2Cs42           8813 	ld	hl,#_tilex + 0
   2D43 36 00              8814 	ld	(hl), #0x00
   2D45 21r2Ds42           8815 	ld	hl,#_tilex + 1
   2D48 36 00              8816 	ld	(hl), #0x00
   2D4A 21r2Es42           8817 	ld	hl,#_tiley + 0
   2D4D 36 00              8818 	ld	(hl), #0x00
   2D4F 21r2Fs42           8819 	ld	hl,#_tiley + 1
   2D52 36 00              8820 	ld	(hl), #0x00
   2D54                    8821 00129$:
                           8822 ;demo.c:1284: if (triframes >= 1200 && triframes < 1400) {
   2D54 3Ar3Cs42           8823 	ld	a,(#_triframes+0)
   2D57 D6 B0              8824 	sub	a,#0xB0
   2D59 3Ar3Ds42           8825 	ld	a,(#_triframes+1)
   2D5C DE 04              8826 	sbc	a,#0x04
   2D5E FAr76s2D           8827 	jp	M,00131$
   2D61 3Ar3Cs42           8828 	ld	a,(#_triframes+0)
   2D64 D6 78              8829 	sub	a,#0x78
   2D66 3Ar3Ds42           8830 	ld	a,(#_triframes+1)
   2D69 DE 05              8831 	sbc	a,#0x05
   2D6B F2r76s2D           8832 	jp	P,00131$
                           8833 ;demo.c:1285: drawtilescreen(tri_inva2);
   2D6E 21rACs05           8834 	ld	hl,#_tri_inva2
   2D71 E5                 8835 	push	hl
   2D72 CDr09s29           8836 	call	_drawtilescreen
   2D75 F1                 8837 	pop	af
   2D76                    8838 00131$:
                           8839 ;demo.c:1288: if (triframes == 1400) { tilei = 0; tilex = 0; tiley = 0; }
   2D76 3Ar3Cs42           8840 	ld	a,(#_triframes+0)
   2D79 D6 78              8841 	sub	a,#0x78
   2D7B 20 07              8842 	jr	NZ,00215$
   2D7D 3Ar3Ds42           8843 	ld	a,(#_triframes+1)
   2D80 D6 05              8844 	sub	a,#0x05
   2D82 28 02              8845 	jr	Z,00216$
   2D84                    8846 00215$:
   2D84 18 1E              8847 	jr	00134$
   2D86                    8848 00216$:
   2D86 21r2As42           8849 	ld	hl,#_tilei + 0
   2D89 36 00              8850 	ld	(hl), #0x00
   2D8B 21r2Bs42           8851 	ld	hl,#_tilei + 1
   2D8E 36 00              8852 	ld	(hl), #0x00
   2D90 21r2Cs42           8853 	ld	hl,#_tilex + 0
   2D93 36 00              8854 	ld	(hl), #0x00
   2D95 21r2Ds42           8855 	ld	hl,#_tilex + 1
   2D98 36 00              8856 	ld	(hl), #0x00
   2D9A 21r2Es42           8857 	ld	hl,#_tiley + 0
   2D9D 36 00              8858 	ld	(hl), #0x00
   2D9F 21r2Fs42           8859 	ld	hl,#_tiley + 1
   2DA2 36 00              8860 	ld	(hl), #0x00
   2DA4                    8861 00134$:
                           8862 ;demo.c:1289: if (triframes >= 1400 && triframes < 1600) {
   2DA4 3Ar3Cs42           8863 	ld	a,(#_triframes+0)
   2DA7 D6 78              8864 	sub	a,#0x78
   2DA9 3Ar3Ds42           8865 	ld	a,(#_triframes+1)
   2DAC DE 05              8866 	sbc	a,#0x05
   2DAE FArC6s2D           8867 	jp	M,00136$
   2DB1 3Ar3Cs42           8868 	ld	a,(#_triframes+0)
   2DB4 D6 40              8869 	sub	a,#0x40
   2DB6 3Ar3Ds42           8870 	ld	a,(#_triframes+1)
   2DB9 DE 06              8871 	sbc	a,#0x06
   2DBB F2rC6s2D           8872 	jp	P,00136$
                           8873 ;demo.c:1290: drawtilescreen(tri_inva3);
   2DBE 21r6Cs06           8874 	ld	hl,#_tri_inva3
   2DC1 E5                 8875 	push	hl
   2DC2 CDr09s29           8876 	call	_drawtilescreen
   2DC5 F1                 8877 	pop	af
   2DC6                    8878 00136$:
                           8879 ;demo.c:1293: if (triframes == 1600) { tilei = 0; tilex = 0; tiley = 0; }
   2DC6 3Ar3Cs42           8880 	ld	a,(#_triframes+0)
   2DC9 D6 40              8881 	sub	a,#0x40
   2DCB 20 07              8882 	jr	NZ,00217$
   2DCD 3Ar3Ds42           8883 	ld	a,(#_triframes+1)
   2DD0 D6 06              8884 	sub	a,#0x06
   2DD2 28 02              8885 	jr	Z,00218$
   2DD4                    8886 00217$:
   2DD4 18 1E              8887 	jr	00139$
   2DD6                    8888 00218$:
   2DD6 21r2As42           8889 	ld	hl,#_tilei + 0
   2DD9 36 00              8890 	ld	(hl), #0x00
   2DDB 21r2Bs42           8891 	ld	hl,#_tilei + 1
   2DDE 36 00              8892 	ld	(hl), #0x00
   2DE0 21r2Cs42           8893 	ld	hl,#_tilex + 0
   2DE3 36 00              8894 	ld	(hl), #0x00
   2DE5 21r2Ds42           8895 	ld	hl,#_tilex + 1
   2DE8 36 00              8896 	ld	(hl), #0x00
   2DEA 21r2Es42           8897 	ld	hl,#_tiley + 0
   2DED 36 00              8898 	ld	(hl), #0x00
   2DEF 21r2Fs42           8899 	ld	hl,#_tiley + 1
   2DF2 36 00              8900 	ld	(hl), #0x00
   2DF4                    8901 00139$:
                           8902 ;demo.c:1294: if (triframes >= 1600 && triframes < 1800) {
   2DF4 3Ar3Cs42           8903 	ld	a,(#_triframes+0)
   2DF7 D6 40              8904 	sub	a,#0x40
   2DF9 3Ar3Ds42           8905 	ld	a,(#_triframes+1)
   2DFC DE 06              8906 	sbc	a,#0x06
   2DFE FAr16s2E           8907 	jp	M,00141$
   2E01 3Ar3Cs42           8908 	ld	a,(#_triframes+0)
   2E04 D6 08              8909 	sub	a,#0x08
   2E06 3Ar3Ds42           8910 	ld	a,(#_triframes+1)
   2E09 DE 07              8911 	sbc	a,#0x07
   2E0B F2r16s2E           8912 	jp	P,00141$
                           8913 ;demo.c:1295: drawtilescreen(tri_inva4);
   2E0E 21r2Cs07           8914 	ld	hl,#_tri_inva4
   2E11 E5                 8915 	push	hl
   2E12 CDr09s29           8916 	call	_drawtilescreen
   2E15 F1                 8917 	pop	af
   2E16                    8918 00141$:
                           8919 ;demo.c:1298: if (triframes == 1800) { tilei = 0; tilex = 0; tiley = 0; }
   2E16 3Ar3Cs42           8920 	ld	a,(#_triframes+0)
   2E19 D6 08              8921 	sub	a,#0x08
   2E1B 20 07              8922 	jr	NZ,00219$
   2E1D 3Ar3Ds42           8923 	ld	a,(#_triframes+1)
   2E20 D6 07              8924 	sub	a,#0x07
   2E22 28 02              8925 	jr	Z,00220$
   2E24                    8926 00219$:
   2E24 18 1E              8927 	jr	00144$
   2E26                    8928 00220$:
   2E26 21r2As42           8929 	ld	hl,#_tilei + 0
   2E29 36 00              8930 	ld	(hl), #0x00
   2E2B 21r2Bs42           8931 	ld	hl,#_tilei + 1
   2E2E 36 00              8932 	ld	(hl), #0x00
   2E30 21r2Cs42           8933 	ld	hl,#_tilex + 0
   2E33 36 00              8934 	ld	(hl), #0x00
   2E35 21r2Ds42           8935 	ld	hl,#_tilex + 1
   2E38 36 00              8936 	ld	(hl), #0x00
   2E3A 21r2Es42           8937 	ld	hl,#_tiley + 0
   2E3D 36 00              8938 	ld	(hl), #0x00
   2E3F 21r2Fs42           8939 	ld	hl,#_tiley + 1
   2E42 36 00              8940 	ld	(hl), #0x00
   2E44                    8941 00144$:
                           8942 ;demo.c:1299: if (triframes >= 1800 && triframes < 2000) {
   2E44 3Ar3Cs42           8943 	ld	a,(#_triframes+0)
   2E47 D6 08              8944 	sub	a,#0x08
   2E49 3Ar3Ds42           8945 	ld	a,(#_triframes+1)
   2E4C DE 07              8946 	sbc	a,#0x07
   2E4E FAr66s2E           8947 	jp	M,00146$
   2E51 3Ar3Cs42           8948 	ld	a,(#_triframes+0)
   2E54 D6 D0              8949 	sub	a,#0xD0
   2E56 3Ar3Ds42           8950 	ld	a,(#_triframes+1)
   2E59 DE 07              8951 	sbc	a,#0x07
   2E5B F2r66s2E           8952 	jp	P,00146$
                           8953 ;demo.c:1300: drawtilescreen(tri_center);
   2E5E 21r2Cs01           8954 	ld	hl,#_tri_center
   2E61 E5                 8955 	push	hl
   2E62 CDr09s29           8956 	call	_drawtilescreen
   2E65 F1                 8957 	pop	af
   2E66                    8958 00146$:
                           8959 ;demo.c:1303: if (triframes > 2000) triframes = 199;
   2E66 3E D0              8960 	ld	a,#0xD0
   2E68 FD 21r3Cs42        8961 	ld	iy,#_triframes
   2E6C FD 96 00           8962 	sub	a,0 (iy)
   2E6F 3E 07              8963 	ld	a,#0x07
   2E71 FD 21r3Cs42        8964 	ld	iy,#_triframes
   2E75 FD 9E 01           8965 	sbc	a,1 (iy)
   2E78 F2r85s2E           8966 	jp	P,00149$
   2E7B 21r3Cs42           8967 	ld	hl,#_triframes + 0
   2E7E 36 C7              8968 	ld	(hl), #0xC7
   2E80 21r3Ds42           8969 	ld	hl,#_triframes + 1
   2E83 36 00              8970 	ld	(hl), #0x00
   2E85                    8971 00149$:
                           8972 ;demo.c:1306: msx2_palette(2,0,0,0);
   2E85 21 00 00           8973 	ld	hl,#0x0000
   2E88 E5                 8974 	push	hl
   2E89 2E 02              8975 	ld	l, #0x02
   2E8B E5                 8976 	push	hl
   2E8C CDr00s00           8977 	call	_msx2_palette
   2E8F F1                 8978 	pop	af
   2E90 F1                 8979 	pop	af
                           8980 ;demo.c:1307: msx2_palette(11,0,0,0);
   2E91 21 00 00           8981 	ld	hl,#0x0000
   2E94 E5                 8982 	push	hl
   2E95 2E 0B              8983 	ld	l, #0x0B
   2E97 E5                 8984 	push	hl
   2E98 CDr00s00           8985 	call	_msx2_palette
   2E9B F1                 8986 	pop	af
   2E9C F1                 8987 	pop	af
                           8988 ;demo.c:1310: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2E9D 21r33s42           8989 	ld	hl,#_tripal + 2
   2EA0 4E                 8990 	ld	c,(hl)
   2EA1 11r32s42           8991 	ld	de,#_tripal + 1
   2EA4 1A                 8992 	ld	a,(de)
   2EA5 47                 8993 	ld	b,a
   2EA6 21r31s42           8994 	ld	hl,#_tripal
   2EA9 5E                 8995 	ld	e,(hl)
   2EAA 79                 8996 	ld	a,c
   2EAB F5                 8997 	push	af
   2EAC 33                 8998 	inc	sp
   2EAD C5                 8999 	push	bc
   2EAE 33                 9000 	inc	sp
   2EAF 53                 9001 	ld	d,e
   2EB0 1E 03              9002 	ld	e,#0x03
   2EB2 D5                 9003 	push	de
   2EB3 CDr00s00           9004 	call	_msx2_palette
   2EB6 F1                 9005 	pop	af
   2EB7 F1                 9006 	pop	af
                           9007 ;demo.c:1311: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2EB8 21r36s42           9008 	ld	hl,#_tripal + 5
   2EBB 4E                 9009 	ld	c,(hl)
   2EBC 11r35s42           9010 	ld	de,#_tripal + 4
   2EBF 1A                 9011 	ld	a,(de)
   2EC0 47                 9012 	ld	b,a
   2EC1 21r34s42           9013 	ld	hl,#_tripal + 3
   2EC4 5E                 9014 	ld	e,(hl)
   2EC5 79                 9015 	ld	a,c
   2EC6 F5                 9016 	push	af
   2EC7 33                 9017 	inc	sp
   2EC8 C5                 9018 	push	bc
   2EC9 33                 9019 	inc	sp
   2ECA 53                 9020 	ld	d,e
   2ECB 1E 0E              9021 	ld	e,#0x0E
   2ECD D5                 9022 	push	de
   2ECE CDr00s00           9023 	call	_msx2_palette
   2ED1 F1                 9024 	pop	af
   2ED2 F1                 9025 	pop	af
                           9026 ;demo.c:1312: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2ED3 21r39s42           9027 	ld	hl,#_tripal + 8
   2ED6 4E                 9028 	ld	c,(hl)
   2ED7 11r38s42           9029 	ld	de,#_tripal + 7
   2EDA 1A                 9030 	ld	a,(de)
   2EDB 47                 9031 	ld	b,a
   2EDC 21r37s42           9032 	ld	hl,#_tripal + 6
   2EDF 5E                 9033 	ld	e,(hl)
   2EE0 79                 9034 	ld	a,c
   2EE1 F5                 9035 	push	af
   2EE2 33                 9036 	inc	sp
   2EE3 C5                 9037 	push	bc
   2EE4 33                 9038 	inc	sp
   2EE5 53                 9039 	ld	d,e
   2EE6 1E 06              9040 	ld	e,#0x06
   2EE8 D5                 9041 	push	de
   2EE9 CDr00s00           9042 	call	_msx2_palette
   2EEC F1                 9043 	pop	af
   2EED F1                 9044 	pop	af
                           9045 ;demo.c:1315: tripaltick++;
   2EEE FD 21r3As42        9046 	ld	iy,#_tripaltick
   2EF2 FD 34 00           9047 	inc	0 (iy)
                           9048 ;demo.c:1316: if (tripaltick > 6) {
   2EF5 3E 06              9049 	ld	a,#0x06
   2EF7 FD 21r3As42        9050 	ld	iy,#_tripaltick
   2EFB FD 96 00           9051 	sub	a,0 (iy)
   2EFE D2r83s2F           9052 	jp	NC,00162$
                           9053 ;demo.c:1317: tripaltick2++;
   2F01 FD 21r3Bs42        9054 	ld	iy,#_tripaltick2
   2F05 FD 34 00           9055 	inc	0 (iy)
                           9056 ;demo.c:1318: if (tripaltick2 > 6) tripaltick2 = 0;
   2F08 3E 06              9057 	ld	a,#0x06
   2F0A FD 21r3Bs42        9058 	ld	iy,#_tripaltick2
   2F0E FD 96 00           9059 	sub	a,0 (iy)
   2F11 30 05              9060 	jr	NC,00151$
   2F13 21r3Bs42           9061 	ld	hl,#_tripaltick2 + 0
   2F16 36 00              9062 	ld	(hl), #0x00
   2F18                    9063 00151$:
                           9064 ;demo.c:1320: r = tripal[0];
   2F18 21r31s42           9065 	ld	hl,#_tripal
   2F1B 4E                 9066 	ld	c,(hl)
   2F1C DD 71 FD           9067 	ld	-3 (ix),c
                           9068 ;demo.c:1321: g = tripal[1];
   2F1F 11r32s42           9069 	ld	de,#_tripal + 1
   2F22 1A                 9070 	ld	a,(de)
   2F23 DD 77 FC           9071 	ld	-4 (ix),a
                           9072 ;demo.c:1322: b = tripal[2];
   2F26 21r33s42           9073 	ld	hl,#_tripal + 2
   2F29 5E                 9074 	ld	e,(hl)
   2F2A DD 73 FB           9075 	ld	-5 (ix),e
                           9076 ;demo.c:1324: for (x = 0; x < 6; x++) {
   2F2D DD 36 FE 00        9077 	ld	-2 (ix),#0x00
   2F31 DD 36 FF 00        9078 	ld	-1 (ix),#0x00
   2F35                    9079 00158$:
   2F35 DD 7E FE           9080 	ld	a,-2 (ix)
   2F38 D6 06              9081 	sub	a,#0x06
   2F3A DD 7E FF           9082 	ld	a,-1 (ix)
   2F3D DE 00              9083 	sbc	a,#0x00
   2F3F F2r69s2F           9084 	jp	P,00161$
                           9085 ;demo.c:1325: tripal[x] = tripal[x+3];
   2F42 3Er31              9086 	ld	a,#<_tripal
   2F44 DD 86 FE           9087 	add	a,-2 (ix)
   2F47 4F                 9088 	ld	c,a
   2F48 3Es42              9089 	ld	a,#>_tripal
   2F4A DD 8E FF           9090 	adc	a,-1 (ix)
   2F4D 47                 9091 	ld	b,a
   2F4E DD 5E FE           9092 	ld	e,-2 (ix)
   2F51 1C                 9093 	inc	e
   2F52 1C                 9094 	inc	e
   2F53 1C                 9095 	inc	e
   2F54 3Er31              9096 	ld	a,#<_tripal
   2F56 83                 9097 	add	a,e
   2F57 5F                 9098 	ld	e,a
   2F58 3Es42              9099 	ld	a,#>_tripal
   2F5A CE 00              9100 	adc	a,#0x00
   2F5C 57                 9101 	ld	d,a
   2F5D 1A                 9102 	ld	a,(de)
   2F5E 02                 9103 	ld	(bc),a
                           9104 ;demo.c:1324: for (x = 0; x < 6; x++) {
   2F5F DD 34 FE           9105 	inc	-2 (ix)
   2F62 20 03              9106 	jr	NZ,00221$
   2F64 DD 34 FF           9107 	inc	-1 (ix)
   2F67                    9108 00221$:
   2F67 18 CC              9109 	jr	00158$
   2F69                    9110 00161$:
                           9111 ;demo.c:1328: tripal[6] = r;
   2F69 01r37s42           9112 	ld	bc,#_tripal + 6
   2F6C DD 7E FD           9113 	ld	a,-3 (ix)
   2F6F 02                 9114 	ld	(bc),a
                           9115 ;demo.c:1329: tripal[7] = g;
   2F70 01r38s42           9116 	ld	bc,#_tripal + 7
   2F73 DD 7E FC           9117 	ld	a,-4 (ix)
   2F76 02                 9118 	ld	(bc),a
                           9119 ;demo.c:1330: tripal[8] = b;
   2F77 01r39s42           9120 	ld	bc,#_tripal + 8
   2F7A DD 7E FB           9121 	ld	a,-5 (ix)
   2F7D 02                 9122 	ld	(bc),a
                           9123 ;demo.c:1331: tripaltick = 0;
   2F7E 21r3As42           9124 	ld	hl,#_tripaltick + 0
   2F81 36 00              9125 	ld	(hl), #0x00
   2F83                    9126 00162$:
   2F83 DD F9              9127 	ld	sp,ix
   2F85 DD E1              9128 	pop	ix
   2F87 C9                 9129 	ret
   2F88                    9130 _tritiles_end::
                           9131 ;demo.c:1336: int abs (int n) {
                           9132 ;	---------------------------------
                           9133 ; Function abs
                           9134 ; ---------------------------------
   2F88                    9135 _abs_start::
   2F88                    9136 _abs:
   2F88 DD E5              9137 	push	ix
   2F8A DD 21 00 00        9138 	ld	ix,#0
   2F8E DD 39              9139 	add	ix,sp
   2F90 21 FA FF           9140 	ld	hl,#-6
   2F93 39                 9141 	add	hl,sp
   2F94 F9                 9142 	ld	sp,hl
                           9143 ;demo.c:1337: const int ret[2] = { n, -n };
   2F95 21 02 00           9144 	ld	hl,#0x0002
   2F98 39                 9145 	add	hl,sp
   2F99 4D                 9146 	ld	c,l
   2F9A 44                 9147 	ld	b,h
   2F9B DD 7E 04           9148 	ld	a,4 (ix)
   2F9E 77                 9149 	ld	(hl),a
   2F9F 23                 9150 	inc	hl
   2FA0 DD 7E 05           9151 	ld	a,5 (ix)
   2FA3 77                 9152 	ld	(hl),a
   2FA4 21 02 00           9153 	ld	hl,#0x0002
   2FA7 09                 9154 	add	hl,bc
   2FA8 DD 75 FA           9155 	ld	-6 (ix),l
   2FAB DD 74 FB           9156 	ld	-5 (ix),h
   2FAE AF                 9157 	xor	a,a
   2FAF DD 9E 04           9158 	sbc	a,4 (ix)
   2FB2 5F                 9159 	ld	e,a
   2FB3 3E 00              9160 	ld	a,#0x00
   2FB5 DD 9E 05           9161 	sbc	a,5 (ix)
   2FB8 57                 9162 	ld	d,a
   2FB9 DD 6E FA           9163 	ld	l,-6 (ix)
   2FBC DD 66 FB           9164 	ld	h,-5 (ix)
   2FBF 73                 9165 	ld	(hl),e
   2FC0 23                 9166 	inc	hl
   2FC1 72                 9167 	ld	(hl),d
                           9168 ;demo.c:1338: return ret [n<0];
   2FC2 DD 7E 05           9169 	ld	a,5 (ix)
   2FC5 07                 9170 	rlca
   2FC6 E6 01              9171 	and	a,#0x01
   2FC8 5F                 9172 	ld	e,a
   2FC9 CB 23              9173 	sla	e
   2FCB 79                 9174 	ld	a,c
   2FCC 83                 9175 	add	a,e
   2FCD 6F                 9176 	ld	l,a
   2FCE 78                 9177 	ld	a,b
   2FCF CE 00              9178 	adc	a,#0x00
   2FD1 67                 9179 	ld	h,a
   2FD2 5E                 9180 	ld	e,(hl)
   2FD3 23                 9181 	inc	hl
   2FD4 4E                 9182 	ld	c,(hl)
   2FD5 6B                 9183 	ld	l,e
   2FD6 61                 9184 	ld	h,c
   2FD7 DD F9              9185 	ld	sp,ix
   2FD9 DD E1              9186 	pop	ix
   2FDB C9                 9187 	ret
   2FDC                    9188 _abs_end::
                           9189 ;demo.c:1344: void logoeffu() {
                           9190 ;	---------------------------------
                           9191 ; Function logoeffu
                           9192 ; ---------------------------------
   2FDC                    9193 _logoeffu_start::
   2FDC                    9194 _logoeffu:
   2FDC DD E5              9195 	push	ix
   2FDE DD 21 00 00        9196 	ld	ix,#0
   2FE2 DD 39              9197 	add	ix,sp
   2FE4 F5                 9198 	push	af
   2FE5 F5                 9199 	push	af
                           9200 ;demo.c:1348: fadein();
   2FE6 CDr27s0C           9201 	call	_fadein
                           9202 ;demo.c:1350: v = abs(sintabx[(vbicount) & 255]>>4);
   2FE9 21r8As41           9203 	ld	hl,#_vbicount + 0
   2FEC 4E                 9204 	ld	c,(hl)
   2FED 06 00              9205 	ld	b,#0x00
   2FEF 21r2Cs00           9206 	ld	hl,#_sintabx
   2FF2 09                 9207 	add	hl,bc
   2FF3 7E                 9208 	ld	a,(hl)
   2FF4 4F                 9209 	ld	c,a
   2FF5 CB 39              9210 	srl	c
   2FF7 CB 39              9211 	srl	c
   2FF9 CB 39              9212 	srl	c
   2FFB CB 39              9213 	srl	c
   2FFD 06 00              9214 	ld	b,#0x00
   2FFF C5                 9215 	push	bc
   3000 CDr88s2F           9216 	call	_abs
   3003 F1                 9217 	pop	af
   3004 44                 9218 	ld	b,h
   3005 4D                 9219 	ld	c,l
   3006 DD 71 FC           9220 	ld	-4 (ix),c
   3009 DD 70 FD           9221 	ld	-3 (ix),b
                           9222 ;demo.c:1352: for (y = 0; y < 116; y+=2) {
   300C DD 36 FE 00        9223 	ld	-2 (ix),#0x00
   3010 DD 36 FF 00        9224 	ld	-1 (ix),#0x00
   3014                    9225 00108$:
   3014 DD 7E FE           9226 	ld	a,-2 (ix)
   3017 D6 74              9227 	sub	a,#0x74
   3019 DD 7E FF           9228 	ld	a,-1 (ix)
   301C DE 00              9229 	sbc	a,#0x00
   301E F2rE9s30           9230 	jp	P,00111$
                           9231 ;demo.c:1353: cmd.size_x = 108;
   3021 11r96s41           9232 	ld	de,#_cmd + 8
   3024 EB                 9233 	ex	de,hl
   3025 36 6C              9234 	ld	(hl),#0x6C
   3027 23                 9235 	inc	hl
   3028 36 00              9236 	ld	(hl),#0x00
                           9237 ;demo.c:1354: cmd.size_y = 2;
   302A 11r98s41           9238 	ld	de,#_cmd + 10
   302D EB                 9239 	ex	de,hl
   302E 36 02              9240 	ld	(hl),#0x02
   3030 23                 9241 	inc	hl
   3031 36 00              9242 	ld	(hl),#0x00
                           9243 ;demo.c:1355: cmd.data = 0;
   3033 11r9As41           9244 	ld	de,#_cmd + 12
   3036 3E 00              9245 	ld	a,#0x00
   3038 12                 9246 	ld	(de),a
                           9247 ;demo.c:1356: cmd.argument = 0x00;
   3039 11r9Bs41           9248 	ld	de,#_cmd + 13
   303C 3E 00              9249 	ld	a,#0x00
   303E 12                 9250 	ld	(de),a
                           9251 ;demo.c:1357: cmd.command = 0xd0; 
   303F 11r9Cs41           9252 	ld	de,#_cmd + 14
   3042 3E D0              9253 	ld	a,#0xD0
   3044 12                 9254 	ld	(de),a
                           9255 ;demo.c:1358: cmd.source_x = 74;
   3045 21r8Es41           9256 	ld	hl,#_cmd
   3048 36 4A              9257 	ld	(hl),#0x4A
   304A 23                 9258 	inc	hl
   304B 36 00              9259 	ld	(hl),#0x00
                           9260 ;demo.c:1359: cmd.source_y = 256+y;
   304D 11r90s41           9261 	ld	de,#_cmd + 2
   3050 DD 7E FE           9262 	ld	a,-2 (ix)
   3053 C6 00              9263 	add	a,#0x00
   3055 4F                 9264 	ld	c,a
   3056 DD 7E FF           9265 	ld	a,-1 (ix)
   3059 CE 01              9266 	adc	a,#0x01
   305B 47                 9267 	ld	b,a
   305C 6B                 9268 	ld	l,e
   305D 62                 9269 	ld	h,d
   305E 71                 9270 	ld	(hl),c
   305F 23                 9271 	inc	hl
   3060 70                 9272 	ld	(hl),b
                           9273 ;demo.c:1360: v+=y;
   3061 DD 7E FC           9274 	ld	a,-4 (ix)
   3064 DD 86 FE           9275 	add	a,-2 (ix)
   3067 DD 77 FC           9276 	ld	-4 (ix),a
   306A DD 7E FD           9277 	ld	a,-3 (ix)
   306D DD 8E FF           9278 	adc	a,-1 (ix)
   3070 DD 77 FD           9279 	ld	-3 (ix),a
                           9280 ;demo.c:1361: v -= powa;
   3073 21r40s42           9281 	ld	hl,#_powa
   3076 DD 7E FC           9282 	ld	a,-4 (ix)
   3079 96                 9283 	sub	a,(hl)
   307A DD 77 FC           9284 	ld	-4 (ix),a
   307D DD 7E FD           9285 	ld	a,-3 (ix)
   3080 23                 9286 	inc	hl
   3081 9E                 9287 	sbc	a,(hl)
                           9288 ;demo.c:1362: if (v<0) v = 0;
   3082 DD 77 FD           9289 	ld	-3 (ix),a
   3085 CB 7F              9290 	bit	7,a
   3087 28 08              9291 	jr	Z,00102$
   3089 DD 36 FC 00        9292 	ld	-4 (ix),#0x00
   308D DD 36 FD 00        9293 	ld	-3 (ix),#0x00
   3091                    9294 00102$:
                           9295 ;demo.c:1363: if (v>150) v = 150;
   3091 3E 96              9296 	ld	a,#0x96
   3093 DD 96 FC           9297 	sub	a,-4 (ix)
   3096 3E 00              9298 	ld	a,#0x00
   3098 DD 9E FD           9299 	sbc	a,-3 (ix)
   309B F2rA6s30           9300 	jp	P,00104$
   309E DD 36 FC 96        9301 	ld	-4 (ix),#0x96
   30A2 DD 36 FD 00        9302 	ld	-3 (ix),#0x00
   30A6                    9303 00104$:
                           9304 ;demo.c:1364: cmd.dest_x = 74+v;
   30A6 01r92s41           9305 	ld	bc,#_cmd + 4
   30A9 DD 7E FC           9306 	ld	a,-4 (ix)
   30AC C6 4A              9307 	add	a,#0x4A
   30AE 5F                 9308 	ld	e,a
   30AF DD 7E FD           9309 	ld	a,-3 (ix)
   30B2 CE 00              9310 	adc	a,#0x00
   30B4 57                 9311 	ld	d,a
   30B5 69                 9312 	ld	l,c
   30B6 60                 9313 	ld	h,b
   30B7 73                 9314 	ld	(hl),e
   30B8 23                 9315 	inc	hl
   30B9 72                 9316 	ld	(hl),d
                           9317 ;demo.c:1365: cmd.dest_y = 50+y+1;
   30BA 01r94s41           9318 	ld	bc,#_cmd + 6
   30BD DD 7E FE           9319 	ld	a,-2 (ix)
   30C0 C6 33              9320 	add	a,#0x33
   30C2 5F                 9321 	ld	e,a
   30C3 DD 7E FF           9322 	ld	a,-1 (ix)
   30C6 CE 00              9323 	adc	a,#0x00
   30C8 57                 9324 	ld	d,a
   30C9 69                 9325 	ld	l,c
   30CA 60                 9326 	ld	h,b
   30CB 73                 9327 	ld	(hl),e
   30CC 23                 9328 	inc	hl
   30CD 72                 9329 	ld	(hl),d
                           9330 ;demo.c:1366: vdp_copier(&cmd);
   30CE 21r8Es41           9331 	ld	hl,#_cmd
   30D1 E5                 9332 	push	hl
   30D2 CDr00s00           9333 	call	_vdp_copier
   30D5 F1                 9334 	pop	af
                           9335 ;demo.c:1352: for (y = 0; y < 116; y+=2) {
   30D6 DD 7E FE           9336 	ld	a,-2 (ix)
   30D9 C6 02              9337 	add	a,#0x02
   30DB DD 77 FE           9338 	ld	-2 (ix),a
   30DE DD 7E FF           9339 	ld	a,-1 (ix)
   30E1 CE 00              9340 	adc	a,#0x00
   30E3 DD 77 FF           9341 	ld	-1 (ix),a
   30E6 C3r14s30           9342 	jp	00108$
   30E9                    9343 00111$:
                           9344 ;demo.c:1369: if (vbicount > 84 && onceclear > 182) {
   30E9 3E 54              9345 	ld	a,#0x54
   30EB FD 21r8As41        9346 	ld	iy,#_vbicount
   30EF FD 96 00           9347 	sub	a,0 (iy)
   30F2 3E 00              9348 	ld	a,#0x00
   30F4 FD 21r8As41        9349 	ld	iy,#_vbicount
   30F8 FD 9E 01           9350 	sbc	a,1 (iy)
   30FB F2r5Ds31           9351 	jp	P,00106$
   30FE 3E B6              9352 	ld	a,#0xB6
   3100 FD 21r42s42        9353 	ld	iy,#_onceclear
   3104 FD 96 00           9354 	sub	a,0 (iy)
   3107 D2r5Ds31           9355 	jp	NC,00106$
                           9356 ;demo.c:1370: cmd.size_x = 4;
   310A 21r96s41           9357 	ld	hl, #_cmd + 8
   310D 36 04              9358 	ld	(hl),#0x04
   310F 23                 9359 	inc	hl
   3110 36 00              9360 	ld	(hl),#0x00
                           9361 ;demo.c:1371: cmd.size_y = 116;
   3112 21r98s41           9362 	ld	hl, #_cmd + 10
   3115 36 74              9363 	ld	(hl),#0x74
   3117 23                 9364 	inc	hl
   3118 36 00              9365 	ld	(hl),#0x00
                           9366 ;demo.c:1372: cmd.data = 0;
                           9367 ;demo.c:1373: cmd.argument = 0x00;
   311A 3E 00              9368 	ld	a,#0x00
   311C 32r9As41           9369 	ld	(#_cmd + 12),a
   311F 32r9Bs41           9370 	ld	(#_cmd + 13),a
                           9371 ;demo.c:1374: cmd.command = 0xd0; 
   3122 01r9Cs41           9372 	ld	bc,#_cmd + 14
   3125 3E D0              9373 	ld	a,#0xD0
   3127 02                 9374 	ld	(bc),a
                           9375 ;demo.c:1375: cmd.source_x = 20;
   3128 21r8Es41           9376 	ld	hl,#_cmd
   312B 36 14              9377 	ld	(hl),#0x14
   312D 23                 9378 	inc	hl
   312E 36 00              9379 	ld	(hl),#0x00
                           9380 ;demo.c:1376: cmd.source_y = 0;
   3130 21r90s41           9381 	ld	hl, #_cmd + 2
   3133 36 00              9382 	ld	(hl),#0x00
   3135 23                 9383 	inc	hl
   3136 36 00              9384 	ld	(hl),#0x00
                           9385 ;demo.c:1377: cmd.dest_x = onceclear;
   3138 01r92s41           9386 	ld	bc,#_cmd + 4
   313B 21r42s42           9387 	ld	hl,#_onceclear + 0
   313E 5E                 9388 	ld	e,(hl)
   313F 16 00              9389 	ld	d,#0x00
   3141 69                 9390 	ld	l,c
   3142 60                 9391 	ld	h,b
   3143 73                 9392 	ld	(hl),e
   3144 23                 9393 	inc	hl
   3145 72                 9394 	ld	(hl),d
                           9395 ;demo.c:1378: cmd.dest_y = 68;
   3146 21r94s41           9396 	ld	hl, #_cmd + 6
   3149 36 44              9397 	ld	(hl),#0x44
   314B 23                 9398 	inc	hl
   314C 36 00              9399 	ld	(hl),#0x00
                           9400 ;demo.c:1379: vdp_copier(&cmd);
   314E 21r8Es41           9401 	ld	hl,#_cmd
   3151 E5                 9402 	push	hl
   3152 CDr00s00           9403 	call	_vdp_copier
   3155 F1                 9404 	pop	af
                           9405 ;demo.c:1380: onceclear-=4;
   3156 21r42s42           9406 	ld	hl,#_onceclear
   3159 7E                 9407 	ld	a,(hl)
   315A C6 FC              9408 	add	a,#0xFC
   315C 77                 9409 	ld	(hl),a
   315D                    9410 00106$:
                           9411 ;demo.c:1384: powa+=2;
   315D 21r40s42           9412 	ld	hl,#_powa
   3160 7E                 9413 	ld	a,(hl)
   3161 C6 02              9414 	add	a,#0x02
   3163 23                 9415 	inc	hl
   3164 2B                 9416 	dec	hl
   3165 C5                 9417 	push	bc
   3166 4F                 9418 	ld	c, a
   3167 23                 9419 	inc	hl
   3168 7E                 9420 	ld	a, (hl)
   3169 47                 9421 	ld	b, a
   316A 79                 9422 	ld	a, c
   316B 2B                 9423 	dec	hl
   316C 77                 9424 	ld	(hl), a
   316D 78                 9425 	ld	a, b
   316E C1                 9426 	pop	bc
   316F CE 00              9427 	adc	a,#0x00
   3171 23                 9428 	inc	hl
   3172 77                 9429 	ld	(hl),a
                           9430 ;demo.c:1385: powatick = 0;
   3173 21r3Es42           9431 	ld	hl,#_powatick + 0
   3176 36 00              9432 	ld	(hl), #0x00
   3178 21r3Fs42           9433 	ld	hl,#_powatick + 1
   317B 36 00              9434 	ld	(hl), #0x00
   317D DD F9              9435 	ld	sp,ix
   317F DD E1              9436 	pop	ix
   3181 C9                 9437 	ret
   3182                    9438 _logoeffu_end::
                           9439 ;demo.c:1390: void points() {
                           9440 ;	---------------------------------
                           9441 ; Function points
                           9442 ; ---------------------------------
   3182                    9443 _points_start::
   3182                    9444 _points:
   3182 DD E5              9445 	push	ix
   3184 DD 21 00 00        9446 	ld	ix,#0
   3188 DD 39              9447 	add	ix,sp
   318A F5                 9448 	push	af
   318B 3B                 9449 	dec	sp
                           9450 ;demo.c:1394: if (initpoints == 0) {
   318C AF                 9451 	xor	a,a
   318D FD 21r43s42        9452 	ld	iy,#_initpoints
   3191 FD B6 00           9453 	or	a,0 (iy)
   3194 C2r9Bs32           9454 	jp	NZ,00102$
                           9455 ;demo.c:1395: cmd.size_x = 256;
   3197 21r96s41           9456 	ld	hl, #_cmd + 8
   319A 36 00              9457 	ld	(hl),#0x00
   319C 23                 9458 	inc	hl
   319D 36 01              9459 	ld	(hl),#0x01
                           9460 ;demo.c:1396: cmd.size_y = 4;
   319F 21r98s41           9461 	ld	hl, #_cmd + 10
   31A2 36 04              9462 	ld	(hl),#0x04
   31A4 23                 9463 	inc	hl
   31A5 36 00              9464 	ld	(hl),#0x00
                           9465 ;demo.c:1397: cmd.data = 0;
                           9466 ;demo.c:1398: cmd.argument = 0x00; // from 70xY to left
   31A7 3E 00              9467 	ld	a,#0x00
   31A9 32r9As41           9468 	ld	(#_cmd + 12),a
   31AC 32r9Bs41           9469 	ld	(#_cmd + 13),a
                           9470 ;demo.c:1399: cmd.command = 0xd0; // vram to vram, y only
   31AF 3E D0              9471 	ld	a,#0xD0
   31B1 32r9Cs41           9472 	ld	(#_cmd + 14),a
                           9473 ;demo.c:1400: cmd.source_x = 0;
   31B4 21r8Es41           9474 	ld	hl,#_cmd
   31B7 36 00              9475 	ld	(hl),#0x00
   31B9 23                 9476 	inc	hl
   31BA 36 00              9477 	ld	(hl),#0x00
                           9478 ;demo.c:1401: cmd.dest_x = 0;
   31BC 01r92s41           9479 	ld	bc,#_cmd + 4
   31BF 69                 9480 	ld	l,c
   31C0 60                 9481 	ld	h,b
   31C1 36 00              9482 	ld	(hl),#0x00
   31C3 23                 9483 	inc	hl
   31C4 36 00              9484 	ld	(hl),#0x00
                           9485 ;demo.c:1403: for (y = 0; y < 212; y+=4) {
   31C6 DD 36 FF 00        9486 	ld	-1 (ix),#0x00
   31CA                    9487 00103$:
   31CA DD 7E FF           9488 	ld	a,-1 (ix)
   31CD D6 D4              9489 	sub	a,#0xD4
   31CF 30 2C              9490 	jr	NC,00106$
                           9491 ;demo.c:1404: waitVB();
   31D1 76                 9492 		halt 
                           9493 ;demo.c:1405: cmd.source_y = 193;
   31D2 11r90s41           9494 	ld	de,#_cmd + 2
   31D5 EB                 9495 	ex	de,hl
   31D6 36 C1              9496 	ld	(hl),#0xC1
   31D8 23                 9497 	inc	hl
   31D9 36 00              9498 	ld	(hl),#0x00
                           9499 ;demo.c:1406: cmd.dest_y = y;
   31DB 11r94s41           9500 	ld	de,#_cmd + 6
   31DE DD 4E FF           9501 	ld	c,-1 (ix)
   31E1 06 00              9502 	ld	b,#0x00
   31E3 EB                 9503 	ex	de,hl
   31E4 71                 9504 	ld	(hl),c
   31E5 23                 9505 	inc	hl
   31E6 70                 9506 	ld	(hl),b
                           9507 ;demo.c:1407: vdp_copier(&cmd);
   31E7 21r8Es41           9508 	ld	hl,#_cmd
   31EA E5                 9509 	push	hl
   31EB CDr00s00           9510 	call	_vdp_copier
   31EE F1                 9511 	pop	af
                           9512 ;demo.c:1403: for (y = 0; y < 212; y+=4) {
   31EF DD 34 FF           9513 	inc	-1 (ix)
   31F2 DD 34 FF           9514 	inc	-1 (ix)
   31F5 DD 34 FF           9515 	inc	-1 (ix)
   31F8 DD 34 FF           9516 	inc	-1 (ix)
   31FB 18 CD              9517 	jr	00103$
   31FD                    9518 00106$:
                           9519 ;demo.c:1411: vdp_load_palette(bulbs_palette);
   31FD 21rEAs40           9520 	ld	hl,#_bulbs_palette
   3200 E5                 9521 	push	hl
   3201 CDr00s00           9522 	call	_vdp_load_palette
   3204 F1                 9523 	pop	af
                           9524 ;demo.c:1413: for (x = 0; x < 256; x+=1) {
   3205 DD 36 FD 00        9525 	ld	-3 (ix),#0x00
   3209 DD 36 FE 00        9526 	ld	-2 (ix),#0x00
   320D                    9527 00107$:
   320D DD 7E FD           9528 	ld	a,-3 (ix)
   3210 D6 00              9529 	sub	a,#0x00
   3212 DD 7E FE           9530 	ld	a,-2 (ix)
   3215 DE 01              9531 	sbc	a,#0x01
   3217 F2r96s32           9532 	jp	P,00110$
                           9533 ;demo.c:1415: cmd.data = 1+((pointframe>>2) & 0xe);
   321A 11r9As41           9534 	ld	de,#_cmd + 12
   321D 21r44s42           9535 	ld	hl,#_pointframe + 0
   3220 4E                 9536 	ld	c,(hl)
   3221 21r45s42           9537 	ld	hl,#_pointframe + 1
   3224 46                 9538 	ld	b,(hl)
   3225 CB 28              9539 	sra	b
   3227 CB 19              9540 	rr	c
   3229 CB 28              9541 	sra	b
   322B CB 19              9542 	rr	c
   322D 79                 9543 	ld	a,c
   322E E6 0E              9544 	and	a,#0x0E
   3230 3C                 9545 	inc	a
   3231 12                 9546 	ld	(de),a
                           9547 ;demo.c:1416: cmd.dest_x = x;
   3232 21r92s41           9548 	ld	hl, #_cmd + 4
   3235 DD 7E FD           9549 	ld	a,-3 (ix)
   3238 77                 9550 	ld	(hl),a
   3239 23                 9551 	inc	hl
   323A DD 7E FE           9552 	ld	a,-2 (ix)
   323D 77                 9553 	ld	(hl),a
                           9554 ;demo.c:1417: cmd.dest_y = y;
   323E 21r94s41           9555 	ld	hl, #_cmd + 6
   3241 36 1D              9556 	ld	(hl),#0x1D
   3243 23                 9557 	inc	hl
   3244 36 00              9558 	ld	(hl),#0x00
                           9559 ;demo.c:1418: cmd.command = 0x50;
   3246 3E 50              9560 	ld	a,#0x50
   3248 32r9Cs41           9561 	ld	(#_cmd + 14),a
                           9562 ;demo.c:1419: vdp_copier(&cmd);
   324B 21r8Es41           9563 	ld	hl,#_cmd
   324E E5                 9564 	push	hl
   324F CDr00s00           9565 	call	_vdp_copier
   3252 F1                 9566 	pop	af
                           9567 ;demo.c:1422: cmd.data = 1+((pointframe>>2) & 0xe);
   3253 01r9As41           9568 	ld	bc,#_cmd + 12
   3256 21r44s42           9569 	ld	hl,#_pointframe + 0
   3259 5E                 9570 	ld	e,(hl)
   325A 21r45s42           9571 	ld	hl,#_pointframe + 1
   325D 56                 9572 	ld	d,(hl)
   325E CB 2A              9573 	sra	d
   3260 CB 1B              9574 	rr	e
   3262 CB 2A              9575 	sra	d
   3264 CB 1B              9576 	rr	e
   3266 7B                 9577 	ld	a,e
   3267 E6 0E              9578 	and	a,#0x0E
   3269 3C                 9579 	inc	a
   326A 02                 9580 	ld	(bc),a
                           9581 ;demo.c:1423: cmd.dest_y = y;
   326B 21r94s41           9582 	ld	hl, #_cmd + 6
   326E 36 A2              9583 	ld	(hl),#0xA2
   3270 23                 9584 	inc	hl
   3271 36 00              9585 	ld	(hl),#0x00
                           9586 ;demo.c:1424: vdp_copier(&cmd);
   3273 21r8Es41           9587 	ld	hl,#_cmd
   3276 E5                 9588 	push	hl
   3277 CDr00s00           9589 	call	_vdp_copier
   327A F1                 9590 	pop	af
                           9591 ;demo.c:1426: pointframe+=1;
   327B FD 21r44s42        9592 	ld	iy,#_pointframe
   327F FD 34 00           9593 	inc	0 (iy)
   3282 20 07              9594 	jr	NZ,00129$
   3284 FD 21r44s42        9595 	ld	iy,#_pointframe
   3288 FD 34 01           9596 	inc	1 (iy)
   328B                    9597 00129$:
                           9598 ;demo.c:1413: for (x = 0; x < 256; x+=1) {
   328B DD 34 FD           9599 	inc	-3 (ix)
   328E 20 03              9600 	jr	NZ,00130$
   3290 DD 34 FE           9601 	inc	-2 (ix)
   3293                    9602 00130$:
   3293 C3r0Ds32           9603 	jp	00107$
   3296                    9604 00110$:
                           9605 ;demo.c:1429: initpoints = 1;
   3296 21r43s42           9606 	ld	hl,#_initpoints + 0
   3299 36 01              9607 	ld	(hl), #0x01
   329B                    9608 00102$:
                           9609 ;demo.c:1432: cmd.argument = 0x0;
   329B 3E 00              9610 	ld	a,#0x00
   329D 32r9Bs41           9611 	ld	(#_cmd + 13),a
                           9612 ;demo.c:1434: cmd.data = 1+((pointframe>>2) & 0xe);
   32A0 01r9As41           9613 	ld	bc,#_cmd + 12
   32A3 21r44s42           9614 	ld	hl,#_pointframe + 0
   32A6 5E                 9615 	ld	e,(hl)
   32A7 21r45s42           9616 	ld	hl,#_pointframe + 1
   32AA 56                 9617 	ld	d,(hl)
   32AB CB 2A              9618 	sra	d
   32AD CB 1B              9619 	rr	e
   32AF CB 2A              9620 	sra	d
   32B1 CB 1B              9621 	rr	e
   32B3 7B                 9622 	ld	a,e
   32B4 E6 0E              9623 	and	a,#0x0E
   32B6 3C                 9624 	inc	a
   32B7 02                 9625 	ld	(bc),a
                           9626 ;demo.c:1436: for (x = 30; x < 162; x+=1) {
   32B8 DD 36 FD 1E        9627 	ld	-3 (ix),#0x1E
   32BC DD 36 FE 00        9628 	ld	-2 (ix),#0x00
   32C0                    9629 00111$:
   32C0 DD 7E FD           9630 	ld	a,-3 (ix)
   32C3 D6 A2              9631 	sub	a,#0xA2
   32C5 DD 7E FE           9632 	ld	a,-2 (ix)
   32C8 DE 00              9633 	sbc	a,#0x00
   32CA F2r13s33           9634 	jp	P,00114$
                           9635 ;demo.c:1437: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   32CD 21r44s42           9636 	ld	hl,#_pointframe
   32D0 DD 7E FD           9637 	ld	a,-3 (ix)
   32D3 86                 9638 	add	a,(hl)
   32D4 5F                 9639 	ld	e,a
   32D5 DD 7E FE           9640 	ld	a,-2 (ix)
   32D8 23                 9641 	inc	hl
   32D9 8E                 9642 	adc	a,(hl)
   32DA 16 00              9643 	ld	d,#0x00
   32DC 21r2Cs00           9644 	ld	hl,#_sintabx
   32DF 19                 9645 	add	hl,de
   32E0 7E                 9646 	ld	a,(hl)
   32E1 CB 3F              9647 	srl	a
   32E3 C6 40              9648 	add	a,#0x40
   32E5 4F                 9649 	ld	c,a
                           9650 ;demo.c:1438: cmd.dest_x = y;
   32E6 11r92s41           9651 	ld	de,#_cmd + 4
   32E9 06 00              9652 	ld	b,#0x00
   32EB 6B                 9653 	ld	l,e
   32EC 62                 9654 	ld	h,d
   32ED 71                 9655 	ld	(hl),c
   32EE 23                 9656 	inc	hl
   32EF 70                 9657 	ld	(hl),b
                           9658 ;demo.c:1439: cmd.dest_y = x;
   32F0 21r94s41           9659 	ld	hl, #_cmd + 6
   32F3 DD 7E FD           9660 	ld	a,-3 (ix)
   32F6 77                 9661 	ld	(hl),a
   32F7 23                 9662 	inc	hl
   32F8 DD 7E FE           9663 	ld	a,-2 (ix)
   32FB 77                 9664 	ld	(hl),a
                           9665 ;demo.c:1440: cmd.command = 0x53;
   32FC 3E 53              9666 	ld	a,#0x53
   32FE 32r9Cs41           9667 	ld	(#_cmd + 14),a
                           9668 ;demo.c:1441: vdp_copier(&cmd);
   3301 21r8Es41           9669 	ld	hl,#_cmd
   3304 E5                 9670 	push	hl
   3305 CDr00s00           9671 	call	_vdp_copier
   3308 F1                 9672 	pop	af
                           9673 ;demo.c:1436: for (x = 30; x < 162; x+=1) {
   3309 DD 34 FD           9674 	inc	-3 (ix)
   330C 20 03              9675 	jr	NZ,00132$
   330E DD 34 FE           9676 	inc	-2 (ix)
   3311                    9677 00132$:
   3311 18 AD              9678 	jr	00111$
   3313                    9679 00114$:
                           9680 ;demo.c:1443: pointframe+=2;
   3313 21r44s42           9681 	ld	hl,#_pointframe
   3316 7E                 9682 	ld	a,(hl)
   3317 C6 02              9683 	add	a,#0x02
   3319 23                 9684 	inc	hl
   331A 2B                 9685 	dec	hl
   331B C5                 9686 	push	bc
   331C 4F                 9687 	ld	c, a
   331D 23                 9688 	inc	hl
   331E 7E                 9689 	ld	a, (hl)
   331F 47                 9690 	ld	b, a
   3320 79                 9691 	ld	a, c
   3321 2B                 9692 	dec	hl
   3322 77                 9693 	ld	(hl), a
   3323 78                 9694 	ld	a, b
   3324 C1                 9695 	pop	bc
   3325 CE 00              9696 	adc	a,#0x00
   3327 23                 9697 	inc	hl
   3328 77                 9698 	ld	(hl),a
   3329 DD F9              9699 	ld	sp,ix
   332B DD E1              9700 	pop	ix
   332D C9                 9701 	ret
   332E                    9702 _points_end::
                           9703 ;demo.c:1452: void do_quit() {
                           9704 ;	---------------------------------
                           9705 ; Function do_quit
                           9706 ; ---------------------------------
   332E                    9707 _do_quit_start::
   332E                    9708 _do_quit:
                           9709 ;demo.c:1453: waitVB();
   332E 76                 9710 		halt 
                           9711 ;demo.c:1454: uninstall_isr();
   332F CDr00s00           9712 	call	_uninstall_isr
                           9713 ;demo.c:1455: PLY_Stop();
   3332 CDr00s00           9714 	call	_PLY_Stop
                           9715 ;demo.c:1456: PLY_SendRegisters();
   3335 CDr00s00           9716 	call	_PLY_SendRegisters
                           9717 ;demo.c:1458: screen(0);
   3338 3E 00              9718 	ld	a,#0x00
   333A F5                 9719 	push	af
   333B 33                 9720 	inc	sp
   333C CDr00s00           9721 	call	_screen
   333F 33                 9722 	inc	sp
                           9723 ;demo.c:1460: puts("demo quit\r\n\r\n");
   3340 21r51s33           9724 	ld	hl,#__str_15
   3343 E5                 9725 	push	hl
   3344 CDr00s00           9726 	call	_puts
   3347 F1                 9727 	pop	af
                           9728 ;demo.c:1462: exit(0);	
   3348 3E 00              9729 	ld	a,#0x00
   334A F5                 9730 	push	af
   334B 33                 9731 	inc	sp
   334C CDr00s00           9732 	call	_exit
   334F 33                 9733 	inc	sp
   3350 C9                 9734 	ret
   3351                    9735 _do_quit_end::
   3351                    9736 __str_15:
   3351 64 65 6D 6F 20 71  9737 	.ascii "demo quit"
        75 69 74
   335A 0D                 9738 	.db 0x0D
   335B 0A                 9739 	.db 0x0A
   335C 0D                 9740 	.db 0x0D
   335D 0A                 9741 	.db 0x0A
   335E 00                 9742 	.db 0x00
                           9743 ;demo.c:1490: void main() {
                           9744 ;	---------------------------------
                           9745 ; Function main
                           9746 ; ---------------------------------
   335F                    9747 _main_start::
   335F                    9748 _main:
   335F DD E5              9749 	push	ix
   3361 DD 21 00 00        9750 	ld	ix,#0
   3365 DD 39              9751 	add	ix,sp
   3367 21 F9 FF           9752 	ld	hl,#-7
   336A 39                 9753 	add	hl,sp
   336B F9                 9754 	ld	sp,hl
                           9755 ;demo.c:1491: unsigned char quit=0;
   336C DD 36 FF 00        9756 	ld	-1 (ix),#0x00
                           9757 ;demo.c:1497: spindown();
   3370 CDr00s00           9758 	call	_spindown
                           9759 ;demo.c:1499: puts("demo init\r\n\r\n");
   3373 21r3Bs38           9760 	ld	hl,#__str_16
   3376 E5                 9761 	push	hl
   3377 CDr00s00           9762 	call	_puts
   337A F1                 9763 	pop	af
                           9764 ;demo.c:1501: for (y = 0; y < 2; y++) {
   337B DD 36 FB 00        9765 	ld	-5 (ix),#0x00
   337F DD 36 FC 00        9766 	ld	-4 (ix),#0x00
   3383                    9767 00118$:
   3383 DD 7E FB           9768 	ld	a,-5 (ix)
   3386 D6 02              9769 	sub	a,#0x02
   3388 DD 7E FC           9770 	ld	a,-4 (ix)
   338B DE 00              9771 	sbc	a,#0x00
   338D F2r0Fs34           9772 	jp	P,00121$
                           9773 ;demo.c:1502: for (x = 0; x < 16; x++) {
   3390 DD 4E FB           9774 	ld	c,-5 (ix)
   3393 DD 46 FC           9775 	ld	b,-4 (ix)
   3396 CB 21              9776 	sla	c
   3398 CB 10              9777 	rl	b
   339A CB 21              9778 	sla	c
   339C CB 10              9779 	rl	b
   339E CB 21              9780 	sla	c
   33A0 CB 10              9781 	rl	b
   33A2 CB 21              9782 	sla	c
   33A4 CB 10              9783 	rl	b
   33A6 21 81 03           9784 	ld	hl,#0x0381
   33A9 09                 9785 	add	hl,bc
   33AA DD 75 F9           9786 	ld	-7 (ix),l
   33AD DD 74 FA           9787 	ld	-6 (ix),h
   33B0 DD 36 FD 00        9788 	ld	-3 (ix),#0x00
   33B4 DD 36 FE 00        9789 	ld	-2 (ix),#0x00
   33B8                    9790 00114$:
   33B8 DD 7E FD           9791 	ld	a,-3 (ix)
   33BB D6 10              9792 	sub	a,#0x10
   33BD DD 7E FE           9793 	ld	a,-2 (ix)
   33C0 DE 00              9794 	sbc	a,#0x00
   33C2 F2r04s34           9795 	jp	P,00120$
                           9796 ;demo.c:1503: tri_lookup_x[(y*16)+x] = x * 16;
   33C5 DD 7E FB           9797 	ld	a,-5 (ix)
   33C8 07                 9798 	rlca
   33C9 07                 9799 	rlca
   33CA 07                 9800 	rlca
   33CB 07                 9801 	rlca
   33CC E6 F0              9802 	and	a,#0xF0
   33CE 5F                 9803 	ld	e,a
   33CF DD 56 FD           9804 	ld	d,-3 (ix)
   33D2 7B                 9805 	ld	a,e
   33D3 82                 9806 	add	a,d
   33D4 5F                 9807 	ld	e, a
   33D5 C6r02              9808 	add	a,#<_tri_lookup_x
   33D7 4F                 9809 	ld	c,a
   33D8 3Es01              9810 	ld	a,#>_tri_lookup_x
   33DA CE 00              9811 	adc	a,#0x00
   33DC 47                 9812 	ld	b,a
   33DD 7A                 9813 	ld	a,d
   33DE 07                 9814 	rlca
   33DF 07                 9815 	rlca
   33E0 07                 9816 	rlca
   33E1 07                 9817 	rlca
   33E2 E6 F0              9818 	and	a,#0xF0
   33E4 02                 9819 	ld	(bc),a
                           9820 ;demo.c:1504: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   33E5 CB 23              9821 	sla	e
   33E7 3Er8A              9822 	ld	a,#<_tri_lookup_y
   33E9 83                 9823 	add	a,e
   33EA 6F                 9824 	ld	l,a
   33EB 3Es01              9825 	ld	a,#>_tri_lookup_y
   33ED CE 00              9826 	adc	a,#0x00
   33EF 67                 9827 	ld	h,a
   33F0 DD 7E F9           9828 	ld	a,-7 (ix)
   33F3 77                 9829 	ld	(hl),a
   33F4 23                 9830 	inc	hl
   33F5 DD 7E FA           9831 	ld	a,-6 (ix)
   33F8 77                 9832 	ld	(hl),a
                           9833 ;demo.c:1502: for (x = 0; x < 16; x++) {
   33F9 DD 34 FD           9834 	inc	-3 (ix)
   33FC 20 03              9835 	jr	NZ,00146$
   33FE DD 34 FE           9836 	inc	-2 (ix)
   3401                    9837 00146$:
   3401 C3rB8s33           9838 	jp	00114$
   3404                    9839 00120$:
                           9840 ;demo.c:1501: for (y = 0; y < 2; y++) {
   3404 DD 34 FB           9841 	inc	-5 (ix)
   3407 20 03              9842 	jr	NZ,00147$
   3409 DD 34 FC           9843 	inc	-4 (ix)
   340C                    9844 00147$:
   340C C3r83s33           9845 	jp	00118$
   340F                    9846 00121$:
                           9847 ;demo.c:1508: for (x = 0; x < 26; x++) {
   340F DD 36 FD 00        9848 	ld	-3 (ix),#0x00
   3413 DD 36 FE 00        9849 	ld	-2 (ix),#0x00
   3417 DD 36 F9 00        9850 	ld	-7 (ix),#0x00
   341B DD 36 FA 00        9851 	ld	-6 (ix),#0x00
   341F                    9852 00122$:
   341F DD 7E FD           9853 	ld	a,-3 (ix)
   3422 D6 1A              9854 	sub	a,#0x1A
   3424 DD 7E FE           9855 	ld	a,-2 (ix)
   3427 DE 00              9856 	sbc	a,#0x00
   3429 F2r7Bs34           9857 	jp	P,00125$
                           9858 ;demo.c:1509: twelvetimes[x] = x * 12;
   342C DD 4E FD           9859 	ld	c,-3 (ix)
   342F DD 46 FE           9860 	ld	b,-2 (ix)
   3432 CB 21              9861 	sla	c
   3434 CB 10              9862 	rl	b
   3436 21r22s01           9863 	ld	hl,#_twelvetimes
   3439 09                 9864 	add	hl,bc
   343A DD 7E F9           9865 	ld	a,-7 (ix)
   343D 77                 9866 	ld	(hl),a
   343E 23                 9867 	inc	hl
   343F DD 7E FA           9868 	ld	a,-6 (ix)
   3442 77                 9869 	ld	(hl),a
                           9870 ;demo.c:1510: eighttimes[x] = x * 8;
   3443 21r56s01           9871 	ld	hl,#_eighttimes
   3446 09                 9872 	add	hl,bc
   3447 4D                 9873 	ld	c,l
   3448 44                 9874 	ld	b,h
   3449 DD 5E FD           9875 	ld	e,-3 (ix)
   344C DD 56 FE           9876 	ld	d,-2 (ix)
   344F CB 23              9877 	sla	e
   3451 CB 12              9878 	rl	d
   3453 CB 23              9879 	sla	e
   3455 CB 12              9880 	rl	d
   3457 CB 23              9881 	sla	e
   3459 CB 12              9882 	rl	d
   345B 69                 9883 	ld	l,c
   345C 60                 9884 	ld	h,b
   345D 73                 9885 	ld	(hl),e
   345E 23                 9886 	inc	hl
   345F 72                 9887 	ld	(hl),d
                           9888 ;demo.c:1508: for (x = 0; x < 26; x++) {
   3460 DD 7E F9           9889 	ld	a,-7 (ix)
   3463 C6 0C              9890 	add	a,#0x0C
   3465 DD 77 F9           9891 	ld	-7 (ix),a
   3468 DD 7E FA           9892 	ld	a,-6 (ix)
   346B CE 00              9893 	adc	a,#0x00
   346D DD 77 FA           9894 	ld	-6 (ix),a
   3470 DD 34 FD           9895 	inc	-3 (ix)
   3473 20 03              9896 	jr	NZ,00152$
   3475 DD 34 FE           9897 	inc	-2 (ix)
   3478                    9898 00152$:
   3478 C3r1Fs34           9899 	jp	00122$
   347B                    9900 00125$:
                           9901 ;demo.c:1513: puts("music init...");
   347B 21r49s38           9902 	ld	hl,#__str_17
   347E E5                 9903 	push	hl
   347F CDr00s00           9904 	call	_puts
   3482 F1                 9905 	pop	af
                           9906 ;demo.c:1515: PLY_SongPtr = (char *)0x0103;
   3483 21r00s00           9907 	ld	hl,#_PLY_SongPtr + 0
   3486 36 03              9908 	ld	(hl), #0x03
   3488 21r01s00           9909 	ld	hl,#_PLY_SongPtr + 1
   348B 36 01              9910 	ld	(hl), #0x01
                           9911 ;demo.c:1516: PLY_Init();
   348D CDr00s00           9912 	call	_PLY_Init
                           9913 ;demo.c:1517: puts("done.\r\n");
   3490 21r57s38           9914 	ld	hl,#__str_18
   3493 E5                 9915 	push	hl
   3494 CDr00s00           9916 	call	_puts
   3497 F1                 9917 	pop	af
                           9918 ;demo.c:1519: puts("detecting vdp type...\r\n\r\n");
   3498 21r5Fs38           9919 	ld	hl,#__str_19
   349B E5                 9920 	push	hl
   349C CDr00s00           9921 	call	_puts
   349F F1                 9922 	pop	af
                           9923 ;demo.c:1520: if(isvdp2())
   34A0 CDr00s00           9924 	call	_isvdp2
   34A3 AF                 9925 	xor	a,a
   34A4 B5                 9926 	or	a,l
   34A5 28 0A              9927 	jr	Z,00102$
                           9928 ;demo.c:1522: puts("vdp2 found! setting 50hz...\r\n\r\n");
   34A7 21r79s38           9929 	ld	hl,#__str_20
   34AA E5                 9930 	push	hl
   34AB CDr00s00           9931 	call	_puts
   34AE F1                 9932 	pop	af
   34AF 18 0B              9933 	jr	00103$
   34B1                    9934 00102$:
                           9935 ;demo.c:1525: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   34B1 21r99s38           9936 	ld	hl,#__str_21
   34B4 E5                 9937 	push	hl
   34B5 CDr00s00           9938 	call	_puts
   34B8 F1                 9939 	pop	af
                           9940 ;demo.c:1526: do_quit();
   34B9 CDr2Es33           9941 	call	_do_quit
   34BC                    9942 00103$:
                           9943 ;demo.c:1529: pal_load("TWISTER PL5",32,1);
   34BC 21 01 00           9944 	ld	hl,#0x0001
   34BF E5                 9945 	push	hl
   34C0 3E 20              9946 	ld	a,#0x20
   34C2 F5                 9947 	push	af
   34C3 33                 9948 	inc	sp
   34C4 21rE0s38           9949 	ld	hl,#__str_22
   34C7 E5                 9950 	push	hl
   34C8 CDrA3s09           9951 	call	_pal_load
   34CB F1                 9952 	pop	af
   34CC F1                 9953 	pop	af
   34CD 33                 9954 	inc	sp
                           9955 ;demo.c:1530: memcpy(twister_palette, cur_palette, 32);
   34CE 21 20 00           9956 	ld	hl,#0x0020
   34D1 E5                 9957 	push	hl
   34D2 21rCAs40           9958 	ld	hl,#_cur_palette
   34D5 E5                 9959 	push	hl
   34D6 21r2As41           9960 	ld	hl,#_twister_palette
   34D9 E5                 9961 	push	hl
   34DA CDr00s00           9962 	call	_memcpy
   34DD F1                 9963 	pop	af
   34DE F1                 9964 	pop	af
   34DF F1                 9965 	pop	af
                           9966 ;demo.c:1531: pal_load("LF      PL5",32,1);
   34E0 21 01 00           9967 	ld	hl,#0x0001
   34E3 E5                 9968 	push	hl
   34E4 3E 20              9969 	ld	a,#0x20
   34E6 F5                 9970 	push	af
   34E7 33                 9971 	inc	sp
   34E8 21rECs38           9972 	ld	hl,#__str_23
   34EB E5                 9973 	push	hl
   34EC CDrA3s09           9974 	call	_pal_load
   34EF F1                 9975 	pop	af
   34F0 F1                 9976 	pop	af
   34F1 33                 9977 	inc	sp
                           9978 ;demo.c:1532: memcpy(tf_palette, cur_palette, 32);
   34F2 21 20 00           9979 	ld	hl,#0x0020
   34F5 E5                 9980 	push	hl
   34F6 21rCAs40           9981 	ld	hl,#_cur_palette
   34F9 E5                 9982 	push	hl
   34FA 21r4As41           9983 	ld	hl,#_tf_palette
   34FD E5                 9984 	push	hl
   34FE CDr00s00           9985 	call	_memcpy
   3501 F1                 9986 	pop	af
   3502 F1                 9987 	pop	af
   3503 F1                 9988 	pop	af
                           9989 ;demo.c:1533: pal_load("BOXES   PL5",32,1);
   3504 21 01 00           9990 	ld	hl,#0x0001
   3507 E5                 9991 	push	hl
   3508 3E 20              9992 	ld	a,#0x20
   350A F5                 9993 	push	af
   350B 33                 9994 	inc	sp
   350C 21rF8s38           9995 	ld	hl,#__str_24
   350F E5                 9996 	push	hl
   3510 CDrA3s09           9997 	call	_pal_load
   3513 F1                 9998 	pop	af
   3514 F1                 9999 	pop	af
   3515 33                10000 	inc	sp
                          10001 ;demo.c:1534: memcpy(boxes_palette, cur_palette, 32);
   3516 21 20 00          10002 	ld	hl,#0x0020
   3519 E5                10003 	push	hl
   351A 21rCAs40          10004 	ld	hl,#_cur_palette
   351D E5                10005 	push	hl
   351E 21r6As41          10006 	ld	hl,#_boxes_palette
   3521 E5                10007 	push	hl
   3522 CDr00s00          10008 	call	_memcpy
   3525 F1                10009 	pop	af
   3526 F1                10010 	pop	af
   3527 F1                10011 	pop	af
                          10012 ;demo.c:1535: pal_load("BULBS   PL5",32,1);
   3528 21 01 00          10013 	ld	hl,#0x0001
   352B E5                10014 	push	hl
   352C 3E 20             10015 	ld	a,#0x20
   352E F5                10016 	push	af
   352F 33                10017 	inc	sp
   3530 21r04s39          10018 	ld	hl,#__str_25
   3533 E5                10019 	push	hl
   3534 CDrA3s09          10020 	call	_pal_load
   3537 F1                10021 	pop	af
   3538 F1                10022 	pop	af
   3539 33                10023 	inc	sp
                          10024 ;demo.c:1536: memcpy(bulbs_palette, cur_palette, 32);
   353A 21 20 00          10025 	ld	hl,#0x0020
   353D E5                10026 	push	hl
   353E 21rCAs40          10027 	ld	hl,#_cur_palette
   3541 E5                10028 	push	hl
   3542 21rEAs40          10029 	ld	hl,#_bulbs_palette
   3545 E5                10030 	push	hl
   3546 CDr00s00          10031 	call	_memcpy
   3549 F1                10032 	pop	af
   354A F1                10033 	pop	af
   354B F1                10034 	pop	af
                          10035 ;demo.c:1538: scratch_clear();
   354C CDr90s09          10036 	call	_scratch_clear
                          10037 ;demo.c:1539: vdp_load_palette(scratch);
   354F 21r4As40          10038 	ld	hl,#_scratch
   3552 E5                10039 	push	hl
   3553 CDr00s00          10040 	call	_vdp_load_palette
   3556 F1                10041 	pop	af
                          10042 ;demo.c:1541: vdp_set_screen5();
   3557 CDr00s00          10043 	call	_vdp_set_screen5
                          10044 ;demo.c:1543: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   355A 21 00 00          10045 	ld	hl,#0x0000
   355D E5                10046 	push	hl
   355E 2E 01             10047 	ld	l, #0x01
   3560 E5                10048 	push	hl
   3561 2E 00             10049 	ld	l, #0x00
   3563 E5                10050 	push	hl
   3564 21 7F 09          10051 	ld	hl,#0x097F
   3567 E5                10052 	push	hl
   3568 21r10s39          10053 	ld	hl,#__str_26
   356B E5                10054 	push	hl
   356C CDr99s0B          10055 	call	_pck_load
   356F FD 21 0A 00       10056 	ld	iy,#0x000A
   3573 FD 39             10057 	add	iy,sp
   3575 FD F9             10058 	ld	sp,iy
                          10059 ;demo.c:1545: cmd.size_x = 256;
   3577 21r96s41          10060 	ld	hl, #_cmd + 8
   357A 36 00             10061 	ld	(hl),#0x00
   357C 23                10062 	inc	hl
   357D 36 01             10063 	ld	(hl),#0x01
                          10064 ;demo.c:1546: cmd.size_y = 212;
   357F 21r98s41          10065 	ld	hl, #_cmd + 10
   3582 36 D4             10066 	ld	(hl),#0xD4
   3584 23                10067 	inc	hl
   3585 36 00             10068 	ld	(hl),#0x00
                          10069 ;demo.c:1547: cmd.data = 0;
                          10070 ;demo.c:1548: cmd.argument = 0x00;
   3587 3E 00             10071 	ld	a,#0x00
   3589 32r9As41          10072 	ld	(#_cmd + 12),a
   358C 32r9Bs41          10073 	ld	(#_cmd + 13),a
                          10074 ;demo.c:1549: cmd.command = 0xd0; 
   358F 01r9Cs41          10075 	ld	bc,#_cmd + 14
   3592 3E D0             10076 	ld	a,#0xD0
   3594 02                10077 	ld	(bc),a
                          10078 ;demo.c:1550: cmd.source_x = 0;
   3595 21r8Es41          10079 	ld	hl,#_cmd
   3598 36 00             10080 	ld	(hl),#0x00
   359A 23                10081 	inc	hl
   359B 36 00             10082 	ld	(hl),#0x00
                          10083 ;demo.c:1551: cmd.source_y = 0;
   359D 21r90s41          10084 	ld	hl, #_cmd + 2
   35A0 36 00             10085 	ld	(hl),#0x00
   35A2 23                10086 	inc	hl
   35A3 36 00             10087 	ld	(hl),#0x00
                          10088 ;demo.c:1552: cmd.dest_x = 0;
   35A5 21r92s41          10089 	ld	hl, #_cmd + 4
   35A8 36 00             10090 	ld	(hl),#0x00
   35AA 23                10091 	inc	hl
   35AB 36 00             10092 	ld	(hl),#0x00
                          10093 ;demo.c:1553: cmd.dest_y = 256;
   35AD 21r94s41          10094 	ld	hl, #_cmd + 6
   35B0 36 00             10095 	ld	(hl),#0x00
   35B2 23                10096 	inc	hl
   35B3 36 01             10097 	ld	(hl),#0x01
                          10098 ;demo.c:1554: vdp_copier(&cmd);
   35B5 21r8Es41          10099 	ld	hl,#_cmd
   35B8 E5                10100 	push	hl
   35B9 CDr00s00          10101 	call	_vdp_copier
   35BC F1                10102 	pop	af
                          10103 ;demo.c:1556: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   35BD 21 00 00          10104 	ld	hl,#0x0000
   35C0 E5                10105 	push	hl
   35C1 2E 01             10106 	ld	l, #0x01
   35C3 E5                10107 	push	hl
   35C4 2E 00             10108 	ld	l, #0x00
   35C6 E5                10109 	push	hl
   35C7 21 C0 0F          10110 	ld	hl,#0x0FC0
   35CA E5                10111 	push	hl
   35CB 21r1Cs39          10112 	ld	hl,#__str_27
   35CE E5                10113 	push	hl
   35CF CDr99s0B          10114 	call	_pck_load
   35D2 FD 21 0A 00       10115 	ld	iy,#0x000A
   35D6 FD 39             10116 	add	iy,sp
   35D8 FD F9             10117 	ld	sp,iy
                          10118 ;demo.c:1558: cmd.size_x = 256;
   35DA 21r96s41          10119 	ld	hl, #_cmd + 8
   35DD 36 00             10120 	ld	(hl),#0x00
   35DF 23                10121 	inc	hl
   35E0 36 01             10122 	ld	(hl),#0x01
                          10123 ;demo.c:1559: cmd.size_y = 212;
   35E2 21r98s41          10124 	ld	hl, #_cmd + 10
   35E5 36 D4             10125 	ld	(hl),#0xD4
   35E7 23                10126 	inc	hl
   35E8 36 00             10127 	ld	(hl),#0x00
                          10128 ;demo.c:1560: cmd.data = 0;
                          10129 ;demo.c:1561: cmd.argument = 0x00;
   35EA 3E 00             10130 	ld	a,#0x00
   35EC 32r9As41          10131 	ld	(#_cmd + 12),a
   35EF 32r9Bs41          10132 	ld	(#_cmd + 13),a
                          10133 ;demo.c:1562: cmd.command = 0xd0; 
   35F2 01r9Cs41          10134 	ld	bc,#_cmd + 14
   35F5 3E D0             10135 	ld	a,#0xD0
   35F7 02                10136 	ld	(bc),a
                          10137 ;demo.c:1563: cmd.source_x = 0;
   35F8 21r8Es41          10138 	ld	hl,#_cmd
   35FB 36 00             10139 	ld	(hl),#0x00
   35FD 23                10140 	inc	hl
   35FE 36 00             10141 	ld	(hl),#0x00
                          10142 ;demo.c:1564: cmd.source_y = 0;
   3600 21r90s41          10143 	ld	hl, #_cmd + 2
   3603 36 00             10144 	ld	(hl),#0x00
   3605 23                10145 	inc	hl
   3606 36 00             10146 	ld	(hl),#0x00
                          10147 ;demo.c:1565: cmd.dest_x = 0;
   3608 21r92s41          10148 	ld	hl, #_cmd + 4
   360B 36 00             10149 	ld	(hl),#0x00
   360D 23                10150 	inc	hl
   360E 36 00             10151 	ld	(hl),#0x00
                          10152 ;demo.c:1566: cmd.dest_y = 512;
   3610 21r94s41          10153 	ld	hl, #_cmd + 6
   3613 36 00             10154 	ld	(hl),#0x00
   3615 23                10155 	inc	hl
   3616 36 02             10156 	ld	(hl),#0x02
                          10157 ;demo.c:1567: vdp_copier(&cmd);
   3618 21r8Es41          10158 	ld	hl,#_cmd
   361B E5                10159 	push	hl
   361C CDr00s00          10160 	call	_vdp_copier
   361F F1                10161 	pop	af
                          10162 ;demo.c:1570: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   3620 21 00 00          10163 	ld	hl,#0x0000
   3623 E5                10164 	push	hl
   3624 2E 01             10165 	ld	l, #0x01
   3626 E5                10166 	push	hl
   3627 2E 00             10167 	ld	l, #0x00
   3629 E5                10168 	push	hl
   362A 21 AB 0A          10169 	ld	hl,#0x0AAB
   362D E5                10170 	push	hl
   362E 21r28s39          10171 	ld	hl,#__str_28
   3631 E5                10172 	push	hl
   3632 CDr99s0B          10173 	call	_pck_load
   3635 FD 21 0A 00       10174 	ld	iy,#0x000A
   3639 FD 39             10175 	add	iy,sp
   363B FD F9             10176 	ld	sp,iy
                          10177 ;demo.c:1571: cmd.size_x = 256;
   363D 21r96s41          10178 	ld	hl, #_cmd + 8
   3640 36 00             10179 	ld	(hl),#0x00
   3642 23                10180 	inc	hl
   3643 36 01             10181 	ld	(hl),#0x01
                          10182 ;demo.c:1572: cmd.size_y = 212;
   3645 21r98s41          10183 	ld	hl, #_cmd + 10
   3648 36 D4             10184 	ld	(hl),#0xD4
   364A 23                10185 	inc	hl
   364B 36 00             10186 	ld	(hl),#0x00
                          10187 ;demo.c:1573: cmd.data = 0;
                          10188 ;demo.c:1574: cmd.argument = 0x00;
   364D 3E 00             10189 	ld	a,#0x00
   364F 32r9As41          10190 	ld	(#_cmd + 12),a
   3652 32r9Bs41          10191 	ld	(#_cmd + 13),a
                          10192 ;demo.c:1575: cmd.command = 0xd0; 
   3655 01r9Cs41          10193 	ld	bc,#_cmd + 14
   3658 3E D0             10194 	ld	a,#0xD0
   365A 02                10195 	ld	(bc),a
                          10196 ;demo.c:1576: cmd.source_x = 0;
   365B 21r8Es41          10197 	ld	hl,#_cmd
   365E 36 00             10198 	ld	(hl),#0x00
   3660 23                10199 	inc	hl
   3661 36 00             10200 	ld	(hl),#0x00
                          10201 ;demo.c:1577: cmd.source_y = 0;
   3663 21r90s41          10202 	ld	hl, #_cmd + 2
   3666 36 00             10203 	ld	(hl),#0x00
   3668 23                10204 	inc	hl
   3669 36 00             10205 	ld	(hl),#0x00
                          10206 ;demo.c:1578: cmd.dest_x = 0;
   366B 21r92s41          10207 	ld	hl, #_cmd + 4
   366E 36 00             10208 	ld	(hl),#0x00
   3670 23                10209 	inc	hl
   3671 36 00             10210 	ld	(hl),#0x00
                          10211 ;demo.c:1579: cmd.dest_y = 768;
   3673 21r94s41          10212 	ld	hl, #_cmd + 6
   3676 36 00             10213 	ld	(hl),#0x00
   3678 23                10214 	inc	hl
   3679 36 03             10215 	ld	(hl),#0x03
                          10216 ;demo.c:1580: vdp_copier(&cmd);
   367B 21r8Es41          10217 	ld	hl,#_cmd
   367E E5                10218 	push	hl
   367F CDr00s00          10219 	call	_vdp_copier
   3682 F1                10220 	pop	af
                          10221 ;demo.c:1582: scratch_clear();
   3683 CDr90s09          10222 	call	_scratch_clear
                          10223 ;demo.c:1583: vdp_load_palette(scratch);
   3686 21r4As40          10224 	ld	hl,#_scratch
   3689 E5                10225 	push	hl
   368A CDr00s00          10226 	call	_vdp_load_palette
   368D F1                10227 	pop	af
                          10228 ;demo.c:1585: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   368E 21 00 00          10229 	ld	hl,#0x0000
   3691 E5                10230 	push	hl
   3692 2E 01             10231 	ld	l, #0x01
   3694 E5                10232 	push	hl
   3695 2E 00             10233 	ld	l, #0x00
   3697 E5                10234 	push	hl
   3698 21 6A 08          10235 	ld	hl,#0x086A
   369B E5                10236 	push	hl
   369C 21r34s39          10237 	ld	hl,#__str_29
   369F E5                10238 	push	hl
   36A0 CDr99s0B          10239 	call	_pck_load
   36A3 FD 21 0A 00       10240 	ld	iy,#0x000A
   36A7 FD 39             10241 	add	iy,sp
   36A9 FD F9             10242 	ld	sp,iy
                          10243 ;demo.c:1587: cmd.size_x = 108;
   36AB 21r96s41          10244 	ld	hl, #_cmd + 8
   36AE 36 6C             10245 	ld	(hl),#0x6C
   36B0 23                10246 	inc	hl
   36B1 36 00             10247 	ld	(hl),#0x00
                          10248 ;demo.c:1588: cmd.size_y = 116;
   36B3 21r98s41          10249 	ld	hl, #_cmd + 10
   36B6 36 74             10250 	ld	(hl),#0x74
   36B8 23                10251 	inc	hl
   36B9 36 00             10252 	ld	(hl),#0x00
                          10253 ;demo.c:1589: cmd.data = 0;
                          10254 ;demo.c:1590: cmd.argument = 0x00;
   36BB 3E 00             10255 	ld	a,#0x00
   36BD 32r9As41          10256 	ld	(#_cmd + 12),a
   36C0 32r9Bs41          10257 	ld	(#_cmd + 13),a
                          10258 ;demo.c:1591: cmd.command = 0xd0; 
   36C3 01r9Cs41          10259 	ld	bc,#_cmd + 14
   36C6 3E D0             10260 	ld	a,#0xD0
   36C8 02                10261 	ld	(bc),a
                          10262 ;demo.c:1592: cmd.source_x = 75;
   36C9 21r8Es41          10263 	ld	hl,#_cmd
   36CC 36 4B             10264 	ld	(hl),#0x4B
   36CE 23                10265 	inc	hl
   36CF 36 00             10266 	ld	(hl),#0x00
                          10267 ;demo.c:1593: cmd.source_y = 50;
   36D1 21r90s41          10268 	ld	hl, #_cmd + 2
   36D4 36 32             10269 	ld	(hl),#0x32
   36D6 23                10270 	inc	hl
   36D7 36 00             10271 	ld	(hl),#0x00
                          10272 ;demo.c:1594: cmd.dest_x = 75;
   36D9 21r92s41          10273 	ld	hl, #_cmd + 4
   36DC 36 4B             10274 	ld	(hl),#0x4B
   36DE 23                10275 	inc	hl
   36DF 36 00             10276 	ld	(hl),#0x00
                          10277 ;demo.c:1595: cmd.dest_y = 256;
   36E1 21r94s41          10278 	ld	hl, #_cmd + 6
   36E4 36 00             10279 	ld	(hl),#0x00
   36E6 23                10280 	inc	hl
   36E7 36 01             10281 	ld	(hl),#0x01
                          10282 ;demo.c:1596: vdp_copier(&cmd);
   36E9 21r8Es41          10283 	ld	hl,#_cmd
   36EC E5                10284 	push	hl
   36ED CDr00s00          10285 	call	_vdp_copier
   36F0 F1                10286 	pop	af
                          10287 ;demo.c:1598: cmd.size_x = 108;
   36F1 21r96s41          10288 	ld	hl, #_cmd + 8
   36F4 36 6C             10289 	ld	(hl),#0x6C
   36F6 23                10290 	inc	hl
   36F7 36 00             10291 	ld	(hl),#0x00
                          10292 ;demo.c:1599: cmd.size_y = 60;
   36F9 21r98s41          10293 	ld	hl, #_cmd + 10
   36FC 36 3C             10294 	ld	(hl),#0x3C
   36FE 23                10295 	inc	hl
   36FF 36 00             10296 	ld	(hl),#0x00
                          10297 ;demo.c:1600: cmd.data = 0;
                          10298 ;demo.c:1601: cmd.argument = 0x00;
   3701 3E 00             10299 	ld	a,#0x00
   3703 32r9As41          10300 	ld	(#_cmd + 12),a
   3706 32r9Bs41          10301 	ld	(#_cmd + 13),a
                          10302 ;demo.c:1602: cmd.command = 0xd0; 
   3709 01r9Cs41          10303 	ld	bc,#_cmd + 14
   370C 3E D0             10304 	ld	a,#0xD0
   370E 02                10305 	ld	(bc),a
                          10306 ;demo.c:1603: cmd.source_x = 75;
   370F 21r8Es41          10307 	ld	hl,#_cmd
   3712 36 4B             10308 	ld	(hl),#0x4B
   3714 23                10309 	inc	hl
   3715 36 00             10310 	ld	(hl),#0x00
                          10311 ;demo.c:1604: cmd.source_y = 256+110;
   3717 21r90s41          10312 	ld	hl, #_cmd + 2
   371A 36 6E             10313 	ld	(hl),#0x6E
   371C 23                10314 	inc	hl
   371D 36 01             10315 	ld	(hl),#0x01
                          10316 ;demo.c:1605: cmd.dest_x = 75;
   371F 21r92s41          10317 	ld	hl, #_cmd + 4
   3722 36 4B             10318 	ld	(hl),#0x4B
   3724 23                10319 	inc	hl
   3725 36 00             10320 	ld	(hl),#0x00
                          10321 ;demo.c:1606: cmd.dest_y = 40;
   3727 21r94s41          10322 	ld	hl, #_cmd + 6
   372A 36 28             10323 	ld	(hl),#0x28
   372C 23                10324 	inc	hl
   372D 36 00             10325 	ld	(hl),#0x00
                          10326 ;demo.c:1607: vdp_copier(&cmd);
   372F 21r8Es41          10327 	ld	hl,#_cmd
   3732 E5                10328 	push	hl
   3733 CDr00s00          10329 	call	_vdp_copier
   3736 F1                10330 	pop	af
                          10331 ;demo.c:1608: cmd.dest_x = 75;
   3737 21r92s41          10332 	ld	hl, #_cmd + 4
   373A 36 4B             10333 	ld	(hl),#0x4B
   373C 23                10334 	inc	hl
   373D 36 00             10335 	ld	(hl),#0x00
                          10336 ;demo.c:1609: cmd.dest_y = 100;
   373F 21r94s41          10337 	ld	hl, #_cmd + 6
   3742 36 64             10338 	ld	(hl),#0x64
   3744 23                10339 	inc	hl
   3745 36 00             10340 	ld	(hl),#0x00
                          10341 ;demo.c:1610: vdp_copier(&cmd);
   3747 21r8Es41          10342 	ld	hl,#_cmd
   374A E5                10343 	push	hl
   374B CDr00s00          10344 	call	_vdp_copier
   374E F1                10345 	pop	af
                          10346 ;demo.c:1612: pal_load("DSSLOGO PL5",32,0);
   374F 21 00 00          10347 	ld	hl,#0x0000
   3752 E5                10348 	push	hl
   3753 3E 20             10349 	ld	a,#0x20
   3755 F5                10350 	push	af
   3756 33                10351 	inc	sp
   3757 21r40s39          10352 	ld	hl,#__str_30
   375A E5                10353 	push	hl
   375B CDrA3s09          10354 	call	_pal_load
   375E F1                10355 	pop	af
   375F F1                10356 	pop	af
   3760 33                10357 	inc	sp
                          10358 ;demo.c:1614: scratch_clear();
   3761 CDr90s09          10359 	call	_scratch_clear
                          10360 ;demo.c:1616: vdp_register(9,130); // 50hz,212
   3764 21 09 82          10361 	ld	hl,#0x8209
   3767 E5                10362 	push	hl
   3768 CDr00s00          10363 	call	_vdp_register
   376B F1                10364 	pop	af
                          10365 ;demo.c:1618: install_isr(my_isr);
   376C 21rECs07          10366 	ld	hl,#_my_isr
   376F E5                10367 	push	hl
   3770 CDr00s00          10368 	call	_install_isr
   3773 F1                10369 	pop	af
                          10370 ;demo.c:1622: while (!quit) {
   3774                   10371 00111$:
   3774 AF                10372 	xor	a,a
   3775 DD B6 FF          10373 	or	a,-1 (ix)
   3778 C2r33s38          10374 	jp	NZ,00113$
                          10375 ;demo.c:1624: if (vbicount >= scenetimings[timeindex+1]) {
   377B 21r48s42          10376 	ld	hl,#_timeindex + 0
   377E 4E                10377 	ld	c,(hl)
   377F 0C                10378 	inc	c
   3780 CB 21             10379 	sla	c
   3782 3Er5A             10380 	ld	a,#<_scenetimings
   3784 81                10381 	add	a,c
   3785 6F                10382 	ld	l,a
   3786 3Es42             10383 	ld	a,#>_scenetimings
   3788 CE 00             10384 	adc	a,#0x00
   378A 67                10385 	ld	h,a
   378B 4E                10386 	ld	c,(hl)
   378C 23                10387 	inc	hl
   378D 46                10388 	ld	b,(hl)
   378E 3Ar8As41          10389 	ld	a,(#_vbicount+0)
   3791 91                10390 	sub	a,c
   3792 3Ar8Bs41          10391 	ld	a,(#_vbicount+1)
   3795 98                10392 	sbc	a,b
   3796 FArBFs37          10393 	jp	M,00105$
                          10394 ;demo.c:1625: sceneindex++;
   3799 FD 21r46s42       10395 	ld	iy,#_sceneindex
   379D FD 34 00          10396 	inc	0 (iy)
   37A0 20 07             10397 	jr	NZ,00153$
   37A2 FD 21r46s42       10398 	ld	iy,#_sceneindex
   37A6 FD 34 01          10399 	inc	1 (iy)
   37A9                   10400 00153$:
                          10401 ;demo.c:1626: timeindex+=2;
   37A9 21r48s42          10402 	ld	hl,#_timeindex
   37AC 7E                10403 	ld	a,(hl)
   37AD C6 02             10404 	add	a,#0x02
   37AF 23                10405 	inc	hl
   37B0 2B                10406 	dec	hl
   37B1 C5                10407 	push	bc
   37B2 4F                10408 	ld	c, a
   37B3 23                10409 	inc	hl
   37B4 7E                10410 	ld	a, (hl)
   37B5 47                10411 	ld	b, a
   37B6 79                10412 	ld	a, c
   37B7 2B                10413 	dec	hl
   37B8 77                10414 	ld	(hl), a
   37B9 78                10415 	ld	a, b
   37BA C1                10416 	pop	bc
   37BB CE 00             10417 	adc	a,#0x00
   37BD 23                10418 	inc	hl
   37BE 77                10419 	ld	(hl),a
   37BF                   10420 00105$:
                          10421 ;demo.c:1629: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   37BF 21r48s42          10422 	ld	hl,#_timeindex + 0
   37C2 4E                10423 	ld	c,(hl)
   37C3 21r49s42          10424 	ld	hl,#_timeindex + 1
   37C6 46                10425 	ld	b,(hl)
   37C7 CB 21             10426 	sla	c
   37C9 CB 10             10427 	rl	b
   37CB 21r5As42          10428 	ld	hl,#_scenetimings
   37CE 09                10429 	add	hl,bc
   37CF 4E                10430 	ld	c,(hl)
   37D0 23                10431 	inc	hl
   37D1 46                10432 	ld	b,(hl)
   37D2 3Ar8As41          10433 	ld	a,(#_vbicount+0)
   37D5 91                10434 	sub	a,c
   37D6 3Ar8Bs41          10435 	ld	a,(#_vbicount+1)
   37D9 98                10436 	sbc	a,b
   37DA FAr1Fs38          10437 	jp	M,00107$
   37DD 21r48s42          10438 	ld	hl,#_timeindex + 0
   37E0 4E                10439 	ld	c,(hl)
   37E1 0C                10440 	inc	c
   37E2 CB 21             10441 	sla	c
   37E4 3Er5A             10442 	ld	a,#<_scenetimings
   37E6 81                10443 	add	a,c
   37E7 6F                10444 	ld	l,a
   37E8 3Es42             10445 	ld	a,#>_scenetimings
   37EA CE 00             10446 	adc	a,#0x00
   37EC 67                10447 	ld	h,a
   37ED 4E                10448 	ld	c,(hl)
   37EE 23                10449 	inc	hl
   37EF 46                10450 	ld	b,(hl)
   37F0 3Ar8As41          10451 	ld	a,(#_vbicount+0)
   37F3 91                10452 	sub	a,c
   37F4 FD 21r8As41       10453 	ld	iy,#_vbicount
   37F8 FD 7E 01          10454 	ld	a,1 (iy)
   37FB 98                10455 	sbc	a,b
   37FC F2r1Fs38          10456 	jp	P,00107$
                          10457 ;demo.c:1630: waitVB();
   37FF 76                10458 		halt 
                          10459 ;demo.c:1631: scenepointers[sceneindex]();
   3800 21r46s42          10460 	ld	hl,#_sceneindex + 0
   3803 4E                10461 	ld	c,(hl)
   3804 FD 21r46s42       10462 	ld	iy,#_sceneindex
   3808 FD 46 01          10463 	ld	b,1 (iy)
   380B CB 21             10464 	sla	c
   380D CB 10             10465 	rl	b
   380F 21r4As42          10466 	ld	hl,#_scenepointers
   3812 09                10467 	add	hl,bc
   3813 4E                10468 	ld	c,(hl)
   3814 23                10469 	inc	hl
   3815 46                10470 	ld	b,(hl)
   3816 C5                10471 	push	bc
   3817 21r1Es38          10472 	ld	hl,#00158$
   381A E5                10473 	push	hl
   381B 69                10474 	ld	l,c
   381C 60                10475 	ld	h,b
   381D E9                10476 	jp	(hl)
   381E                   10477 00158$:
   381E C1                10478 	pop	bc
   381F                   10479 00107$:
                          10480 ;demo.c:1635: if(space())
   381F 21 08 01          10481 	ld	hl,#0x0108
   3822 E5                10482 	push	hl
   3823 CDr00s00          10483 	call	_ispressed
   3826 F1                10484 	pop	af
   3827 AF                10485 	xor	a,a
   3828 B5                10486 	or	a,l
   3829 CAr74s37          10487 	jp	Z,00111$
                          10488 ;demo.c:1636: quit=1;
   382C DD 36 FF 01       10489 	ld	-1 (ix),#0x01
   3830 C3r74s37          10490 	jp	00111$
   3833                   10491 00113$:
                          10492 ;demo.c:1639: do_quit();
   3833 CDr2Es33          10493 	call	_do_quit
   3836 DD F9             10494 	ld	sp,ix
   3838 DD E1             10495 	pop	ix
   383A C9                10496 	ret
   383B                   10497 _main_end::
   383B                   10498 __str_16:
   383B 64 65 6D 6F 20 69 10499 	.ascii "demo init"
        6E 69 74
   3844 0D                10500 	.db 0x0D
   3845 0A                10501 	.db 0x0A
   3846 0D                10502 	.db 0x0D
   3847 0A                10503 	.db 0x0A
   3848 00                10504 	.db 0x00
   3849                   10505 __str_17:
   3849 6D 75 73 69 63 20 10506 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   3856 00                10507 	.db 0x00
   3857                   10508 __str_18:
   3857 64 6F 6E 65 2E    10509 	.ascii "done."
   385C 0D                10510 	.db 0x0D
   385D 0A                10511 	.db 0x0A
   385E 00                10512 	.db 0x00
   385F                   10513 __str_19:
   385F 64 65 74 65 63 74 10514 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   3874 0D                10515 	.db 0x0D
   3875 0A                10516 	.db 0x0A
   3876 0D                10517 	.db 0x0D
   3877 0A                10518 	.db 0x0A
   3878 00                10519 	.db 0x00
   3879                   10520 __str_20:
   3879 76 64 70 32 20 66 10521 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   3894 0D                10522 	.db 0x0D
   3895 0A                10523 	.db 0x0A
   3896 0D                10524 	.db 0x0D
   3897 0A                10525 	.db 0x0A
   3898 00                10526 	.db 0x00
   3899                   10527 __str_21:
   3899 20 76 64 70 31 20 10528 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   38A5 0D                10529 	.db 0x0D
   38A6 0A                10530 	.db 0x0A
   38A7 53 6F 72 72 79 2C 10531 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   38D5 20 56 52 41 4D 2E 10532 	.ascii " VRAM."
   38DB 0D                10533 	.db 0x0D
   38DC 0A                10534 	.db 0x0A
   38DD 0D                10535 	.db 0x0D
   38DE 0A                10536 	.db 0x0A
   38DF 00                10537 	.db 0x00
   38E0                   10538 __str_22:
   38E0 54 57 49 53 54 45 10539 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   38EB 00                10540 	.db 0x00
   38EC                   10541 __str_23:
   38EC 4C 46 20 20 20 20 10542 	.ascii "LF      PL5"
        20 20 50 4C 35
   38F7 00                10543 	.db 0x00
   38F8                   10544 __str_24:
   38F8 42 4F 58 45 53 20 10545 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   3903 00                10546 	.db 0x00
   3904                   10547 __str_25:
   3904 42 55 4C 42 53 20 10548 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   390F 00                10549 	.db 0x00
   3910                   10550 __str_26:
   3910 42 55 4C 42 53 20 10551 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   391B 00                10552 	.db 0x00
   391C                   10553 __str_27:
   391C 54 57 49 53 54 45 10554 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   3927 00                10555 	.db 0x00
   3928                   10556 __str_28:
   3928 42 4F 58 45 53 20 10557 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   3933 00                10558 	.db 0x00
   3934                   10559 __str_29:
   3934 44 53 53 4C 4F 47 10560 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   393F 00                10561 	.db 0x00
   3940                   10562 __str_30:
   3940 44 53 53 4C 4F 47 10563 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   394B 00                10564 	.db 0x00
                          10565 	.area _CODE
   394C                   10566 __str_31:
   394C 64 65 6D 6F 20 63 10567 	.ascii "demo code by visy_        tjoppen__music by lynn__graphics b"
        6F 64 65 20 62 79
        20 76 69 73 79 5F
        20 20 20 20 20 20
        20 20 74 6A 6F 70
        70 65 6E 5F 5F 6D
        75 73 69 63 20 62
        79 20 6C 79 6E 6E
        5F 5F 67 72 61 70
        68 69 63 73 20 62
   3988 79 20 6C 79 6E 6E 10568 	.ascii "y lynn_            siikikala_            visy__msxlib by mar"
        5F 20 20 20 20 20
        20 20 20 20 20 20
        20 73 69 69 6B 69
        6B 61 6C 61 5F 20
        20 20 20 20 20 20
        20 20 20 20 20 76
        69 73 79 5F 5F 6D
        73 78 6C 69 62 20
        62 79 20 6D 61 72
   39C4 71 5F 5F 62 61 73 10569 	.ascii "q__basecode by Konamiman__depacker_help by_         GuyveR"
        65 63 6F 64 65 20
        62 79 20 4B 6F 6E
        61 6D 69 6D 61 6E
        5F 5F 64 65 70 61
        63 6B 65 72 5F 68
        65 6C 70 20 62 79
        5F 20 20 20 20 20
        20 20 20 20 47 75
        79 76 65 52
   39FE 00                10570 	.db 0x00
                          10571 	.area _CABS
