                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (Mac OS X x86_64)
                              4 ;--------------------------------------------------------
                              5 	.module mem
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memcpy
                             12 	.globl _memset
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;mem.c:7: void memcpy(uint8_t *dest, uint8_t *src, uint16_t n) {
                             45 ;	---------------------------------
                             46 ; Function memcpy
                             47 ; ---------------------------------
   0000                      48 _memcpy::
   0000 DD E5         [15]   49 	push	ix
   0002 DD 21 00 00   [14]   50 	ld	ix,#0
   0006 DD 39         [15]   51 	add	ix,sp
   0008 F5            [11]   52 	push	af
                             53 ;mem.c:8: while (n > 0) {
   0009 DD 4E 04      [19]   54 	ld	c,4 (ix)
   000C DD 46 05      [19]   55 	ld	b,5 (ix)
   000F DD 7E 06      [19]   56 	ld	a,6 (ix)
   0012 DD 77 FE      [19]   57 	ld	-2 (ix),a
   0015 DD 7E 07      [19]   58 	ld	a,7 (ix)
   0018 DD 77 FF      [19]   59 	ld	-1 (ix),a
   001B DD 5E 08      [19]   60 	ld	e,8 (ix)
   001E DD 56 09      [19]   61 	ld	d,9 (ix)
   0021                      62 00101$:
   0021 7A            [ 4]   63 	ld	a,d
   0022 B3            [ 4]   64 	or	a,e
   0023 28 10         [12]   65 	jr	Z,00104$
                             66 ;mem.c:9: *dest = *src;
   0025 E1            [10]   67 	pop	hl
   0026 E5            [11]   68 	push	hl
   0027 7E            [ 7]   69 	ld	a,(hl)
   0028 02            [ 7]   70 	ld	(bc),a
                             71 ;mem.c:10: dest++;
   0029 03            [ 6]   72 	inc	bc
                             73 ;mem.c:11: src++;
   002A DD 34 FE      [23]   74 	inc	-2 (ix)
   002D 20 03         [12]   75 	jr	NZ,00115$
   002F DD 34 FF      [23]   76 	inc	-1 (ix)
   0032                      77 00115$:
                             78 ;mem.c:12: n--;
   0032 1B            [ 6]   79 	dec	de
   0033 18 EC         [12]   80 	jr	00101$
   0035                      81 00104$:
   0035 DD F9         [10]   82 	ld	sp, ix
   0037 DD E1         [14]   83 	pop	ix
   0039 C9            [10]   84 	ret
                             85 ;mem.c:17: void memset(uint8_t *s, uint8_t c, uint16_t n) {
                             86 ;	---------------------------------
                             87 ; Function memset
                             88 ; ---------------------------------
   003A                      89 _memset::
                             90 ;mem.c:18: while (n > 0) {
   003A D1            [10]   91 	pop	de
   003B C1            [10]   92 	pop	bc
   003C C5            [11]   93 	push	bc
   003D D5            [11]   94 	push	de
   003E 21 05 00      [10]   95 	ld	hl, #5
   0041 39            [11]   96 	add	hl, sp
   0042 5E            [ 7]   97 	ld	e, (hl)
   0043 23            [ 6]   98 	inc	hl
   0044 56            [ 7]   99 	ld	d, (hl)
   0045                     100 00101$:
   0045 7A            [ 4]  101 	ld	a,d
   0046 B3            [ 4]  102 	or	a,e
   0047 C8            [11]  103 	ret	Z
                            104 ;mem.c:19: *s = c;
   0048 21 04 00      [10]  105 	ld	hl, #4+0
   004B 39            [11]  106 	add	hl, sp
   004C 7E            [ 7]  107 	ld	a, (hl)
   004D 02            [ 7]  108 	ld	(bc),a
                            109 ;mem.c:20: s++;
   004E 03            [ 6]  110 	inc	bc
                            111 ;mem.c:21: n--;
   004F 1B            [ 6]  112 	dec	de
   0050 18 F3         [12]  113 	jr	00101$
                            114 	.area _CODE
                            115 	.area _INITIALIZER
                            116 	.area _CABS (ABS)
