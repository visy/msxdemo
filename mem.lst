                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Wed Feb  7 19:01:00 2018
                              5 ;--------------------------------------------------------
                              6 	.module mem
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memcpy
                             13 	.globl _memset
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ;  ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; overlayable items in  ram 
                             23 ;--------------------------------------------------------
                             24 	.area _OVERLAY
                             25 ;--------------------------------------------------------
                             26 ; external initialized ram data
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;mem.c:7: void memcpy(uint8_t *dest, uint8_t *src, uint16_t n) {
                             45 ;	---------------------------------
                             46 ; Function memcpy
                             47 ; ---------------------------------
   0000                      48 _memcpy_start::
   0000                      49 _memcpy:
   0000 DD E5                50 	push	ix
   0002 DD 21 00 00          51 	ld	ix,#0
   0006 DD 39                52 	add	ix,sp
   0008 F5                   53 	push	af
                             54 ;mem.c:8: while (n > 0) {
   0009 DD 4E 04             55 	ld	c,4 (ix)
   000C DD 46 05             56 	ld	b,5 (ix)
   000F DD 5E 06             57 	ld	e,6 (ix)
   0012 DD 56 07             58 	ld	d,7 (ix)
   0015 DD 7E 08             59 	ld	a,8 (ix)
   0018 DD 77 FE             60 	ld	-2 (ix),a
   001B DD 7E 09             61 	ld	a,9 (ix)
   001E DD 77 FF             62 	ld	-1 (ix),a
   0021                      63 00101$:
   0021 DD 7E FE             64 	ld	a,-2 (ix)
   0024 DD B6 FF             65 	or	a,-1 (ix)
   0027 28 13                66 	jr	Z,00104$
                             67 ;mem.c:9: *dest = *src;
   0029 1A                   68 	ld	a,(de)
   002A 02                   69 	ld	(bc),a
                             70 ;mem.c:10: dest++;
   002B 03                   71 	inc	bc
                             72 ;mem.c:11: src++;
   002C 13                   73 	inc	de
                             74 ;mem.c:12: n--;
   002D DD 6E FE             75 	ld	l,-2 (ix)
   0030 DD 66 FF             76 	ld	h,-1 (ix)
   0033 2B                   77 	dec	hl
   0034 DD 75 FE             78 	ld	-2 (ix),l
   0037 DD 74 FF             79 	ld	-1 (ix),h
   003A 18 E5                80 	jr	00101$
   003C                      81 00104$:
   003C DD F9                82 	ld	sp,ix
   003E DD E1                83 	pop	ix
   0040 C9                   84 	ret
   0041                      85 _memcpy_end::
                             86 ;mem.c:17: void memset(uint8_t *s, uint8_t c, uint16_t n) {
                             87 ;	---------------------------------
                             88 ; Function memset
                             89 ; ---------------------------------
   0041                      90 _memset_start::
   0041                      91 _memset:
   0041 DD E5                92 	push	ix
   0043 DD 21 00 00          93 	ld	ix,#0
   0047 DD 39                94 	add	ix,sp
                             95 ;mem.c:18: while (n > 0) {
   0049 DD 4E 04             96 	ld	c,4 (ix)
   004C DD 46 05             97 	ld	b,5 (ix)
   004F DD 5E 07             98 	ld	e,7 (ix)
   0052 DD 56 08             99 	ld	d,8 (ix)
   0055                     100 00101$:
   0055 7B                  101 	ld	a,e
   0056 B2                  102 	or	a,d
   0057 28 08               103 	jr	Z,00104$
                            104 ;mem.c:19: *s = c;
   0059 DD 7E 06            105 	ld	a,6 (ix)
   005C 02                  106 	ld	(bc),a
                            107 ;mem.c:20: s++;
   005D 03                  108 	inc	bc
                            109 ;mem.c:21: n--;
   005E 1B                  110 	dec	de
   005F 18 F4               111 	jr	00101$
   0061                     112 00104$:
   0061 DD E1               113 	pop	ix
   0063 C9                  114 	ret
   0064                     115 _memset_end::
                            116 	.area _CODE
                            117 	.area _CABS
